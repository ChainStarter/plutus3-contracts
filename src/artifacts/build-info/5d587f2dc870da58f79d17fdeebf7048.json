{
	"id": "5d587f2dc870da58f79d17fdeebf7048",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/DollarCostAveraging.sol": {
				"content": "pragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\";\r\n\r\ncontract DollarCostAveraging {\r\n\r\n  event PlanCreated(address indexed user, uint256 frequency, uint256 amount);\r\n  event PlanUpdated(address indexed user, uint256 frequency, uint256 amount);\r\n  event PlanStoped(address indexed user);\r\n  event PlanStarted(address indexed user);\r\n  event PlanTriggered(address indexed user, uint256 amount, uint256 ethReceived);\r\n\r\n  uint256 public nonce;\r\n\r\n  struct Plan {\r\n    uint256 index;\r\n    uint256 frequency;\r\n    uint256 amount;\r\n    uint status;\r\n    uint256 lastTriggeredAt;\r\n  }\r\n\r\n  mapping(address => Plan) public plans;\r\n\r\n  ERC20 public usdt;\r\n  IUniswapV2Router02 public uniswapRouter;\r\n\r\n  constructor(address _usdt, address _uniswapRouter) {\r\n    usdt = ERC20(_usdt);\r\n    uniswapRouter = IUniswapV2Router02(_uniswapRouter);\r\n    nonce = 1;\r\n  }\r\n\r\n  function getAllowance(address user) public view returns (uint256) {\r\n    return usdt.allowance(user, address(this));\r\n  }\r\n\r\n  function createPlan(uint256 frequency, uint256 amount) public {\r\n    require(plans[msg.sender].index == 0, \"Plan is exist\");\r\n    require(frequency > 0, \"Frequency must be greater than 0\");\r\n    require(amount > 0, \"Amount must be greater than 0\");\r\n\r\n    plans[msg.sender] = Plan({\r\n      index: nonce++,\r\n      frequency: frequency,\r\n      amount: amount,\r\n      status: 0,\r\n      lastTriggeredAt: 0\r\n    });\r\n    emit PlanCreated(msg.sender, frequency, amount);\r\n \r\n    startPlan();\r\n  }\r\n\r\n  function updatePlan(uint256 frequency, uint256 amount) public {\r\n    require(plans[msg.sender].index > 0, \"Plan is exist\");\r\n    require(frequency > 0, \"Frequency must be greater than 0\");\r\n    require(amount > 0, \"Amount must be greater than 0\");\r\n\r\n    plans[msg.sender].amount = amount;\r\n    plans[msg.sender].frequency = frequency;\r\n\r\n    emit PlanUpdated(msg.sender, frequency, amount);\r\n  }\r\n\r\n  function startPlan() public {    \r\n    require(plans[msg.sender].index > 0, \"Plan is not exist\");\r\n    require(plans[msg.sender].amount > 0, \"Amount must be greater than 0\");\r\n    require(getAllowance(msg.sender) > plans[msg.sender].amount, \"Total must be greater than amount\");\r\n    \r\n    plans[msg.sender].status = 1;\r\n    emit PlanStarted(msg.sender);\r\n  }\r\n\r\n  function stopPlan() public {\r\n    require(plans[msg.sender].index > 0, \"Plan is not exist\");\r\n\r\n    plans[msg.sender].status = 0;\r\n    emit PlanStoped(msg.sender);\r\n  }\r\n\r\n  function triggerPlan(address user) public {\r\n    require(plans[user].status == 1, \"Plan is not active\");\r\n    require(getAllowance(msg.sender) > plans[user].amount, \"Cannot trigger more than remaining amount\");\r\n    require(block.timestamp >= plans[user].lastTriggeredAt + plans[user].frequency * 24 hours, \"Can only trigger plan once per day\");\r\n\r\n    uint256 amount = plans[user].amount;\r\n\r\n    // 将用户amount数量的USDT转移到合约地址\r\n    SafeERC20.safeTransferFrom(usdt, user, address(this), amount);\r\n\r\n    // 授权 Uniswap V2 Router02 花费 USDT\r\n    SafeERC20.safeIncreaseAllowance(usdt, address(uniswapRouter), amount);\r\n\r\n    // 定义交易路径\r\n    address[] memory path = new address[](2);\r\n    path[0] = address(usdt); // USDT地址\r\n    path[1] = uniswapRouter.WETH(); // WETH地址\r\n    // 从 Uniswap V2 上购买 eth\r\n    (uint[] memory amounts) = uniswapRouter.swapExactTokensForETH(amount, 0, path, address(this), block.timestamp + 1 hours);\r\n\r\n    uint256 ethReceived = amounts[1];  // 获取接收到的ETH数量\r\n\r\n    plans[user].lastTriggeredAt = block.timestamp;\r\n\r\n    emit PlanTriggered(user, amount, ethReceived);\r\n\r\n    // 将 eth 发送给用户\r\n\r\n    SafeERC20.safeTransfer(usdt, user, ethReceived);\r\n  }\r\n}"
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"content": "pragma solidity >=0.6.2;\n\nimport './IUniswapV2Router01.sol';\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"content": "pragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xD84D22D1835A3CA1124D5EF32EE0684F33800771 DUP1 0xC5 0xEA PUSH32 0xE8765448DE492764736F6C634300081600330000000000000000000000000000 ",
							"sourceMap": "751:5018:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xD84D22D1835A3CA1124D5EF32EE0684F33800771 DUP1 0xC5 0xEA PUSH32 0xE8765448DE492764736F6C634300081600330000000000000000000000000000 ",
							"sourceMap": "751:5018:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
								"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
								"src/DollarCostAveraging.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xC4 0xE3 MSTORE SELFBALANCE MSTORE 0xC 0xDD DUP6 0xD4 POP SELFBALANCE CALLCODE DUP8 PUSH32 0x29A37F5EEC48FFFAA17CB54307A6A87D8464736F6C6343000816003300000000 ",
							"sourceMap": "195:6066:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xC4 0xE3 MSTORE SELFBALANCE MSTORE 0xC 0xDD DUP6 0xD4 POP SELFBALANCE CALLCODE DUP8 PUSH32 0x29A37F5EEC48FFFAA17CB54307A6A87D8464736F6C6343000816003300000000 ",
							"sourceMap": "195:6066:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
								"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
								"src/DollarCostAveraging.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/DollarCostAveraging.sol": {
				"DollarCostAveraging": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_usdt",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_uniswapRouter",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "frequency",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PlanCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "PlanStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "PlanStoped",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ethReceived",
									"type": "uint256"
								}
							],
							"name": "PlanTriggered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "frequency",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PlanUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "frequency",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "createPlan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getAllowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "plans",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "frequency",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "status",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastTriggeredAt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startPlan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopPlan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "triggerPlan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapRouter",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "frequency",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "updatePlan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdt",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/DollarCostAveraging.sol\":231:3855  contract DollarCostAveraging {... */\n  mstore(0x40, 0x80)\n    /* \"src/DollarCostAveraging.sol\":873:1029  constructor(address _usdt, address _uniswapRouter) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/DollarCostAveraging.sol\":944:949  _usdt */\n  dup2\n    /* \"src/DollarCostAveraging.sol\":931:935  usdt */\n  0x02\n  0x00\n    /* \"src/DollarCostAveraging.sol\":931:950  usdt = ERC20(_usdt) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/DollarCostAveraging.sol\":992:1006  _uniswapRouter */\n  dup1\n    /* \"src/DollarCostAveraging.sol\":957:970  uniswapRouter */\n  0x03\n  0x00\n    /* \"src/DollarCostAveraging.sol\":957:1007  uniswapRouter = IUniswapV2Router02(_uniswapRouter) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/DollarCostAveraging.sol\":1022:1023  1 */\n  0x01\n    /* \"src/DollarCostAveraging.sol\":1014:1019  nonce */\n  0x00\n    /* \"src/DollarCostAveraging.sol\":1014:1023  nonce = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/DollarCostAveraging.sol\":873:1029  constructor(address _usdt, address _uniswapRouter) {... */\n  pop\n  pop\n    /* \"src/DollarCostAveraging.sol\":231:3855  contract DollarCostAveraging {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":949:1068   */\ntag_27:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_29\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_30\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"src/DollarCostAveraging.sol\":231:3855  contract DollarCostAveraging {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/DollarCostAveraging.sol\":231:3855  contract DollarCostAveraging {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xaffed0e0\n      gt\n      tag_13\n      jumpi\n      dup1\n      0xaffed0e0\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb197df54\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xc440fa0f\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd930da60\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xeb5a662e\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0xe1801c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2f48ab7d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x735de9f7\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x86d86d84\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xa63661a5\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/DollarCostAveraging.sol\":1658:2054  function updatePlan(uint256 frequency, uint256 amount) public {... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      stop\n        /* \"src/DollarCostAveraging.sol\":805:822  ERC20 public usdt */\n    tag_4:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DollarCostAveraging.sol\":827:866  IUniswapV2Router02 public uniswapRouter */\n    tag_5:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DollarCostAveraging.sol\":761:798  mapping(address => Plan) public plans */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DollarCostAveraging.sol\":2060:2419  function startPlan() public {    ... */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      stop\n        /* \"src/DollarCostAveraging.sol\":597:617  uint256 public nonce */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DollarCostAveraging.sol\":1162:1652  function createPlan(uint256 frequency, uint256 amount) public {... */\n    tag_9:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      stop\n        /* \"src/DollarCostAveraging.sol\":2599:3852  function triggerPlan(address user) public {... */\n    tag_10:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"src/DollarCostAveraging.sol\":2425:2593  function stopPlan() public {... */\n    tag_11:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"src/DollarCostAveraging.sol\":1035:1156  function getAllowance(address user) public view returns (uint256) {... */\n    tag_12:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DollarCostAveraging.sol\":1658:2054  function updatePlan(uint256 frequency, uint256 amount) public {... */\n    tag_17:\n        /* \"src/DollarCostAveraging.sol\":1761:1762  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":1735:1740  plans */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":1735:1752  plans[msg.sender] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":1741:1751  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":1735:1752  plans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":1735:1758  plans[msg.sender].index */\n      0x00\n      add\n      sload\n        /* \"src/DollarCostAveraging.sol\":1735:1762  plans[msg.sender].index > 0 */\n      gt\n        /* \"src/DollarCostAveraging.sol\":1727:1780  require(plans[msg.sender].index > 0, \"Plan is exist\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n        /* \"src/DollarCostAveraging.sol\":1807:1808  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":1795:1804  frequency */\n      dup3\n        /* \"src/DollarCostAveraging.sol\":1795:1808  frequency > 0 */\n      gt\n        /* \"src/DollarCostAveraging.sol\":1787:1845  require(frequency > 0, \"Frequency must be greater than 0\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"src/DollarCostAveraging.sol\":1869:1870  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":1860:1866  amount */\n      dup2\n        /* \"src/DollarCostAveraging.sol\":1860:1870  amount > 0 */\n      gt\n        /* \"src/DollarCostAveraging.sol\":1852:1904  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_57\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_57:\n        /* \"src/DollarCostAveraging.sol\":1940:1946  amount */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":1913:1918  plans */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":1913:1930  plans[msg.sender] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":1919:1929  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":1913:1930  plans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":1913:1937  plans[msg.sender].amount */\n      0x02\n      add\n        /* \"src/DollarCostAveraging.sol\":1913:1946  plans[msg.sender].amount = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/DollarCostAveraging.sol\":1983:1992  frequency */\n      dup2\n        /* \"src/DollarCostAveraging.sol\":1953:1958  plans */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":1953:1970  plans[msg.sender] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":1959:1969  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":1953:1970  plans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":1953:1980  plans[msg.sender].frequency */\n      0x01\n      add\n        /* \"src/DollarCostAveraging.sol\":1953:1992  plans[msg.sender].frequency = frequency */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/DollarCostAveraging.sol\":2018:2028  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":2006:2048  PlanUpdated(msg.sender, frequency, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc8108639f5e0627bac90449607e60d516a5082452e397808a067b57f755515fc\n        /* \"src/DollarCostAveraging.sol\":2030:2039  frequency */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":2041:2047  amount */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":2006:2048  PlanUpdated(msg.sender, frequency, amount) */\n      mload(0x40)\n      tag_60\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/DollarCostAveraging.sol\":1658:2054  function updatePlan(uint256 frequency, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":805:822  ERC20 public usdt */\n    tag_19:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":827:866  IUniswapV2Router02 public uniswapRouter */\n    tag_23:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":761:798  mapping(address => Plan) public plans */\n    tag_29:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":2060:2419  function startPlan() public {    ... */\n    tag_33:\n        /* \"src/DollarCostAveraging.sol\":2133:2134  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2107:2112  plans */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":2107:2124  plans[msg.sender] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2113:2123  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":2107:2124  plans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":2107:2130  plans[msg.sender].index */\n      0x00\n      add\n      sload\n        /* \"src/DollarCostAveraging.sol\":2107:2134  plans[msg.sender].index > 0 */\n      gt\n        /* \"src/DollarCostAveraging.sol\":2099:2156  require(plans[msg.sender].index > 0, \"Plan is not exist\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n        /* \"src/DollarCostAveraging.sol\":2198:2199  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2171:2176  plans */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":2171:2188  plans[msg.sender] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2177:2187  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":2171:2188  plans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":2171:2195  plans[msg.sender].amount */\n      0x02\n      add\n      sload\n        /* \"src/DollarCostAveraging.sol\":2171:2199  plans[msg.sender].amount > 0 */\n      gt\n        /* \"src/DollarCostAveraging.sol\":2163:2233  require(plans[msg.sender].amount > 0, \"Amount must be greater than 0\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_59\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"src/DollarCostAveraging.sol\":2275:2280  plans */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":2275:2292  plans[msg.sender] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2281:2291  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":2275:2292  plans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":2275:2299  plans[msg.sender].amount */\n      0x02\n      add\n      sload\n        /* \"src/DollarCostAveraging.sol\":2248:2272  getAllowance(msg.sender) */\n      tag_68\n        /* \"src/DollarCostAveraging.sol\":2261:2271  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":2248:2260  getAllowance */\n      tag_48\n        /* \"src/DollarCostAveraging.sol\":2248:2272  getAllowance(msg.sender) */\n      jump\t// in\n    tag_68:\n        /* \"src/DollarCostAveraging.sol\":2248:2299  getAllowance(msg.sender) > plans[msg.sender].amount */\n      gt\n        /* \"src/DollarCostAveraging.sol\":2240:2337  require(getAllowance(msg.sender) > plans[msg.sender].amount, \"Total must be greater than amount\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"src/DollarCostAveraging.sol\":2377:2378  1 */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":2350:2355  plans */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":2350:2367  plans[msg.sender] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2356:2366  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":2350:2367  plans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":2350:2374  plans[msg.sender].status */\n      0x03\n      add\n        /* \"src/DollarCostAveraging.sol\":2350:2378  plans[msg.sender].status = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/DollarCostAveraging.sol\":2402:2412  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":2390:2413  PlanStarted(msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa806cf17be1fb3cff26c4a6a46b735ddbf2ac07c138bdedb6d2ace798a2cfd40\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/DollarCostAveraging.sol\":2060:2419  function startPlan() public {    ... */\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":597:617  uint256 public nonce */\n    tag_35:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":1162:1652  function createPlan(uint256 frequency, uint256 amount) public {... */\n    tag_40:\n        /* \"src/DollarCostAveraging.sol\":1266:1267  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":1239:1244  plans */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":1239:1256  plans[msg.sender] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":1245:1255  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":1239:1256  plans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":1239:1262  plans[msg.sender].index */\n      0x00\n      add\n      sload\n        /* \"src/DollarCostAveraging.sol\":1239:1267  plans[msg.sender].index == 0 */\n      eq\n        /* \"src/DollarCostAveraging.sol\":1231:1285  require(plans[msg.sender].index == 0, \"Plan is exist\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap1\n      tag_53\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_73:\n        /* \"src/DollarCostAveraging.sol\":1312:1313  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":1300:1309  frequency */\n      dup3\n        /* \"src/DollarCostAveraging.sol\":1300:1313  frequency > 0 */\n      gt\n        /* \"src/DollarCostAveraging.sol\":1292:1350  require(frequency > 0, \"Frequency must be greater than 0\") */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_56\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"src/DollarCostAveraging.sol\":1374:1375  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":1365:1371  amount */\n      dup2\n        /* \"src/DollarCostAveraging.sol\":1365:1375  amount > 0 */\n      gt\n        /* \"src/DollarCostAveraging.sol\":1357:1409  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_59\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"src/DollarCostAveraging.sol\":1438:1571  Plan({... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"src/DollarCostAveraging.sol\":1459:1464  nonce */\n      0x00\n      dup1\n        /* \"src/DollarCostAveraging.sol\":1459:1466  nonce++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"src/DollarCostAveraging.sol\":1438:1571  Plan({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/DollarCostAveraging.sol\":1486:1495  frequency */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":1438:1571  Plan({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/DollarCostAveraging.sol\":1512:1518  amount */\n      dup3\n        /* \"src/DollarCostAveraging.sol\":1438:1571  Plan({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/DollarCostAveraging.sol\":1535:1536  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":1438:1571  Plan({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/DollarCostAveraging.sol\":1562:1563  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":1438:1571  Plan({... */\n      dup2\n      mstore\n      pop\n        /* \"src/DollarCostAveraging.sol\":1418:1423  plans */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":1418:1435  plans[msg.sender] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":1424:1434  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":1418:1435  plans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":1418:1571  plans[msg.sender] = Plan({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"src/DollarCostAveraging.sol\":1595:1605  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":1583:1625  PlanCreated(msg.sender, frequency, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x89d3f1cdfad4e5c26535ac23dc61cf9e975667801747518f01b1b653545d736a\n        /* \"src/DollarCostAveraging.sol\":1607:1616  frequency */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":1618:1624  amount */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":1583:1625  PlanCreated(msg.sender, frequency, amount) */\n      mload(0x40)\n      tag_81\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/DollarCostAveraging.sol\":1635:1646  startPlan() */\n      tag_82\n        /* \"src/DollarCostAveraging.sol\":1635:1644  startPlan */\n      tag_33\n        /* \"src/DollarCostAveraging.sol\":1635:1646  startPlan() */\n      jump\t// in\n    tag_82:\n        /* \"src/DollarCostAveraging.sol\":1162:1652  function createPlan(uint256 frequency, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":2599:3852  function triggerPlan(address user) public {... */\n    tag_43:\n        /* \"src/DollarCostAveraging.sol\":2678:2679  1 */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":2656:2661  plans */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":2656:2667  plans[user] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2662:2666  user */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":2656:2667  plans[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":2656:2674  plans[user].status */\n      0x03\n      add\n      sload\n        /* \"src/DollarCostAveraging.sol\":2656:2679  plans[user].status == 1 */\n      eq\n        /* \"src/DollarCostAveraging.sol\":2648:2702  require(plans[user].status == 1, \"Plan is not active\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"src/DollarCostAveraging.sol\":2744:2749  plans */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":2744:2755  plans[user] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2750:2754  user */\n      dup3\n        /* \"src/DollarCostAveraging.sol\":2744:2755  plans[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":2744:2762  plans[user].amount */\n      0x02\n      add\n      sload\n        /* \"src/DollarCostAveraging.sol\":2717:2741  getAllowance(msg.sender) */\n      tag_87\n        /* \"src/DollarCostAveraging.sol\":2730:2740  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":2717:2729  getAllowance */\n      tag_48\n        /* \"src/DollarCostAveraging.sol\":2717:2741  getAllowance(msg.sender) */\n      jump\t// in\n    tag_87:\n        /* \"src/DollarCostAveraging.sol\":2717:2762  getAllowance(msg.sender) > plans[user].amount */\n      gt\n        /* \"src/DollarCostAveraging.sol\":2709:2808  require(getAllowance(msg.sender) > plans[user].amount, \"Cannot trigger more than remaining amount\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"src/DollarCostAveraging.sol\":2896:2904  24 hours */\n      0x015180\n        /* \"src/DollarCostAveraging.sol\":2872:2877  plans */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":2872:2883  plans[user] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2878:2882  user */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":2872:2883  plans[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":2872:2893  plans[user].frequency */\n      0x01\n      add\n      sload\n        /* \"src/DollarCostAveraging.sol\":2872:2904  plans[user].frequency * 24 hours */\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"src/DollarCostAveraging.sol\":2842:2847  plans */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":2842:2853  plans[user] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2848:2852  user */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":2842:2853  plans[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":2842:2869  plans[user].lastTriggeredAt */\n      0x04\n      add\n      sload\n        /* \"src/DollarCostAveraging.sol\":2842:2904  plans[user].lastTriggeredAt + plans[user].frequency * 24 hours */\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"src/DollarCostAveraging.sol\":2823:2838  block.timestamp */\n      timestamp\n        /* \"src/DollarCostAveraging.sol\":2823:2904  block.timestamp >= plans[user].lastTriggeredAt + plans[user].frequency * 24 hours */\n      lt\n      iszero\n        /* \"src/DollarCostAveraging.sol\":2815:2943  require(block.timestamp >= plans[user].lastTriggeredAt + plans[user].frequency * 24 hours, \"Can only trigger plan once per day\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"src/DollarCostAveraging.sol\":2952:2966  uint256 amount */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2969:2974  plans */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":2969:2980  plans[user] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2975:2979  user */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":2969:2980  plans[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":2969:2987  plans[user].amount */\n      0x02\n      add\n      sload\n        /* \"src/DollarCostAveraging.sol\":2952:2987  uint256 amount = plans[user].amount */\n      swap1\n      pop\n        /* \"src/DollarCostAveraging.sol\":3054:3115  SafeERC20.safeTransferFrom(usdt, user, address(this), amount) */\n      tag_98\n        /* \"src/DollarCostAveraging.sol\":3081:3085  usdt */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DollarCostAveraging.sol\":3087:3091  user */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":3101:3105  this */\n      address\n        /* \"src/DollarCostAveraging.sol\":3108:3114  amount */\n      dup5\n        /* \"src/DollarCostAveraging.sol\":3054:3080  SafeERC20.safeTransferFrom */\n      tag_99\n        /* \"src/DollarCostAveraging.sol\":3054:3115  SafeERC20.safeTransferFrom(usdt, user, address(this), amount) */\n      jump\t// in\n    tag_98:\n        /* \"src/DollarCostAveraging.sol\":3171:3240  SafeERC20.safeIncreaseAllowance(usdt, address(uniswapRouter), amount) */\n      tag_100\n        /* \"src/DollarCostAveraging.sol\":3203:3207  usdt */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DollarCostAveraging.sol\":3217:3230  uniswapRouter */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DollarCostAveraging.sol\":3233:3239  amount */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":3171:3202  SafeERC20.safeIncreaseAllowance */\n      tag_101\n        /* \"src/DollarCostAveraging.sol\":3171:3240  SafeERC20.safeIncreaseAllowance(usdt, address(uniswapRouter), amount) */\n      jump\t// in\n    tag_100:\n        /* \"src/DollarCostAveraging.sol\":3276:3297  address[] memory path */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":3314:3315  2 */\n      0x02\n        /* \"src/DollarCostAveraging.sol\":3300:3316  new address[](2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_102\n      jumpi\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n    tag_102:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_105\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_105:\n      pop\n        /* \"src/DollarCostAveraging.sol\":3276:3316  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"src/DollarCostAveraging.sol\":3341:3345  usdt */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DollarCostAveraging.sol\":3323:3327  path */\n      dup2\n        /* \"src/DollarCostAveraging.sol\":3328:3329  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":3323:3330  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_106\n      jumpi\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n    tag_106:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"src/DollarCostAveraging.sol\":3323:3346  path[0] = address(usdt) */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"src/DollarCostAveraging.sol\":3377:3390  uniswapRouter */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DollarCostAveraging.sol\":3377:3395  uniswapRouter.WETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xad5c4648\n        /* \"src/DollarCostAveraging.sol\":3377:3397  uniswapRouter.WETH() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"src/DollarCostAveraging.sol\":3367:3371  path */\n      dup2\n        /* \"src/DollarCostAveraging.sol\":3372:3373  1 */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":3367:3374  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_113\n      jumpi\n      tag_114\n      tag_108\n      jump\t// in\n    tag_114:\n    tag_113:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"src/DollarCostAveraging.sol\":3367:3397  path[1] = uniswapRouter.WETH() */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"src/DollarCostAveraging.sol\":3456:3477  uint[] memory amounts */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":3481:3494  uniswapRouter */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DollarCostAveraging.sol\":3481:3516  uniswapRouter.swapExactTokensForETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18cbafe5\n        /* \"src/DollarCostAveraging.sol\":3517:3523  amount */\n      dup5\n        /* \"src/DollarCostAveraging.sol\":3525:3526  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":3528:3532  path */\n      dup6\n        /* \"src/DollarCostAveraging.sol\":3542:3546  this */\n      address\n        /* \"src/DollarCostAveraging.sol\":3567:3574  1 hours */\n      0x0e10\n        /* \"src/DollarCostAveraging.sol\":3549:3564  block.timestamp */\n      timestamp\n        /* \"src/DollarCostAveraging.sol\":3549:3574  block.timestamp + 1 hours */\n      tag_115\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_115:\n        /* \"src/DollarCostAveraging.sol\":3481:3575  uniswapRouter.swapExactTokensForETH(amount, 0, path, address(this), block.timestamp + 1 hours) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"src/DollarCostAveraging.sol\":3455:3575  (uint[] memory amounts) = uniswapRouter.swapExactTokensForETH(amount, 0, path, address(this), block.timestamp + 1 hours) */\n      swap1\n      pop\n        /* \"src/DollarCostAveraging.sol\":3584:3603  uint256 ethReceived */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":3606:3613  amounts */\n      dup2\n        /* \"src/DollarCostAveraging.sol\":3614:3615  1 */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":3606:3616  amounts[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_122\n      jumpi\n      tag_123\n      tag_108\n      jump\t// in\n    tag_123:\n    tag_122:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"src/DollarCostAveraging.sol\":3584:3616  uint256 ethReceived = amounts[1] */\n      swap1\n      pop\n        /* \"src/DollarCostAveraging.sol\":3687:3702  block.timestamp */\n      timestamp\n        /* \"src/DollarCostAveraging.sol\":3657:3662  plans */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":3657:3668  plans[user] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":3663:3667  user */\n      dup8\n        /* \"src/DollarCostAveraging.sol\":3657:3668  plans[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":3657:3684  plans[user].lastTriggeredAt */\n      0x04\n      add\n        /* \"src/DollarCostAveraging.sol\":3657:3702  plans[user].lastTriggeredAt = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/DollarCostAveraging.sol\":3730:3734  user */\n      dup5\n        /* \"src/DollarCostAveraging.sol\":3716:3756  PlanTriggered(user, amount, ethReceived) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1a3abf7e0a472651ebe2c79a31a5f4660c7ea65e3086ee1742d7502999bbf5b5\n        /* \"src/DollarCostAveraging.sol\":3736:3742  amount */\n      dup6\n        /* \"src/DollarCostAveraging.sol\":3744:3755  ethReceived */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":3716:3756  PlanTriggered(user, amount, ethReceived) */\n      mload(0x40)\n      tag_124\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/DollarCostAveraging.sol\":3799:3846  SafeERC20.safeTransfer(usdt, user, ethReceived) */\n      tag_125\n        /* \"src/DollarCostAveraging.sol\":3822:3826  usdt */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DollarCostAveraging.sol\":3828:3832  user */\n      dup7\n        /* \"src/DollarCostAveraging.sol\":3834:3845  ethReceived */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":3799:3821  SafeERC20.safeTransfer */\n      tag_126\n        /* \"src/DollarCostAveraging.sol\":3799:3846  SafeERC20.safeTransfer(usdt, user, ethReceived) */\n      jump\t// in\n    tag_125:\n        /* \"src/DollarCostAveraging.sol\":2641:3852  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"src/DollarCostAveraging.sol\":2599:3852  function triggerPlan(address user) public {... */\n      pop\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":2425:2593  function stopPlan() public {... */\n    tag_45:\n        /* \"src/DollarCostAveraging.sol\":2493:2494  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2467:2472  plans */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":2467:2484  plans[msg.sender] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2473:2483  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":2467:2484  plans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":2467:2490  plans[msg.sender].index */\n      0x00\n      add\n      sload\n        /* \"src/DollarCostAveraging.sol\":2467:2494  plans[msg.sender].index > 0 */\n      gt\n        /* \"src/DollarCostAveraging.sol\":2459:2516  require(plans[msg.sender].index > 0, \"Plan is not exist\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_65\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"src/DollarCostAveraging.sol\":2552:2553  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2525:2530  plans */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":2525:2542  plans[msg.sender] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2531:2541  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":2525:2542  plans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":2525:2549  plans[msg.sender].status */\n      0x03\n      add\n        /* \"src/DollarCostAveraging.sol\":2525:2553  plans[msg.sender].status = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/DollarCostAveraging.sol\":2576:2586  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":2565:2587  PlanStoped(msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf222abd4ee7afb02f9450183b95d07aaab2ea2f2d6748f55525c7e875fdd58a1\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/DollarCostAveraging.sol\":2425:2593  function stopPlan() public {... */\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":1035:1156  function getAllowance(address user) public view returns (uint256) {... */\n    tag_48:\n        /* \"src/DollarCostAveraging.sol\":1092:1099  uint256 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":1115:1119  usdt */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DollarCostAveraging.sol\":1115:1129  usdt.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"src/DollarCostAveraging.sol\":1130:1134  user */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":1144:1148  this */\n      address\n        /* \"src/DollarCostAveraging.sol\":1115:1150  usdt.allowance(user, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap3\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"src/DollarCostAveraging.sol\":1108:1150  return usdt.allowance(user, address(this)) */\n      swap1\n      pop\n        /* \"src/DollarCostAveraging.sol\":1035:1156  function getAllowance(address user) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_139\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2081:2306  function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2177:2197  uint256 oldAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2200:2205  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2200:2215  token.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2224:2228  this */\n      address\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2231:2238  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2200:2239  token.allowance(address(this), spender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap3\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_143:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2177:2239  uint256 oldAllowance = token.allowance(address(this), spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2249:2299  forceApprove(token, spender, oldAllowance + value) */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2262:2267  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2269:2276  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2293:2298  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2278:2290  oldAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2278:2298  oldAllowance + value */\n      tag_148\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2249:2261  forceApprove */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2249:2299  forceApprove(token, spender, oldAllowance + value) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2167:2306  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2081:2306  function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_152\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_156\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_157\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3296:3676  function forceApprove(IERC20 token, address spender, uint256 value) internal {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3383:3408  bytes memory approvalCall */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3426:3431  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3426:3439  token.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3442:3449  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3451:3456  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3411:3458  abi.encodeCall(token.approve, (spender, value)) */\n      add(0x24, mload(0x40))\n      tag_164\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3383:3458  bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3474:3518  _callOptionalReturnBool(token, approvalCall) */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3498:3503  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3505:3517  approvalCall */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3474:3497  _callOptionalReturnBool */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3474:3518  _callOptionalReturnBool(token, approvalCall) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3469:3670  if (!_callOptionalReturnBool(token, approvalCall)) {... */\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3534:3605  _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0))) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3554:3559  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3576:3581  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3576:3589  token.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3592:3599  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3601:3602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3561:3604  abi.encodeCall(token.approve, (spender, 0)) */\n      add(0x24, mload(0x40))\n      tag_169\n      swap3\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3534:3553  _callOptionalReturn */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3534:3605  _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0))) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3619:3659  _callOptionalReturn(token, approvalCall) */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3639:3644  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3646:3658  approvalCall */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3619:3638  _callOptionalReturn */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3619:3659  _callOptionalReturn(token, approvalCall) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3469:3670  if (!_callOptionalReturnBool(token, approvalCall)) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3373:3676  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3296:3676  function forceApprove(IERC20 token, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_173\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_174\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5189:5767  function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5272:5276  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5574:5586  bool success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5588:5611  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5623:5628  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5615:5634  address(token).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5635:5639  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5615:5640  address(token).call(data) */\n      mload(0x40)\n      tag_176\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_180\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_179)\n    tag_180:\n      0x60\n      swap2\n      pop\n    tag_179:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5573:5640  (bool success, bytes memory returndata) = address(token).call(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5657:5664  success */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5657:5726  success && (returndata.length == 0 || abi.decode(returndata, (bool))) */\n      dup1\n      iszero\n      tag_181\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5690:5691  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5669:5679  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5669:5686  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5669:5691  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5669:5725  returndata.length == 0 || abi.decode(returndata, (bool)) */\n      dup1\n      tag_182\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5706:5716  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5695:5725  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_183\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5669:5725  returndata.length == 0 || abi.decode(returndata, (bool)) */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5657:5726  success && (returndata.length == 0 || abi.decode(returndata, (bool))) */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5657:5760  success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0 */\n      dup1\n      iszero\n      tag_184\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5759:5760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5738:5743  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5730:5756  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5730:5760  address(token).code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5657:5760  success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0 */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5650:5760  return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5189:5767  function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_186\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_188\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_188:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_191\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_190)\n    tag_191:\n      0x60\n      swap2\n      pop\n    tag_190:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_192\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_193\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_193:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_196\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_197\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_198)\n    tag_195:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_199\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_199:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_194)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_194:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:82   */\n    tag_205:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_206:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_207:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_208:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_209:\n        /* \"#utility.yul\":490:514   */\n      tag_275\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_208\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_276\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_276:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_210:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_278\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_209\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1164   */\n    tag_16:\n        /* \"#utility.yul\":758:764   */\n      0x00\n        /* \"#utility.yul\":766:772   */\n      dup1\n        /* \"#utility.yul\":815:817   */\n      0x40\n        /* \"#utility.yul\":803:812   */\n      dup4\n        /* \"#utility.yul\":794:801   */\n      dup6\n        /* \"#utility.yul\":790:813   */\n      sub\n        /* \"#utility.yul\":786:818   */\n      slt\n        /* \"#utility.yul\":783:902   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":821:900   */\n      tag_281\n      tag_206\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":783:902   */\n    tag_280:\n        /* \"#utility.yul\":941:942   */\n      0x00\n        /* \"#utility.yul\":966:1019   */\n      tag_282\n        /* \"#utility.yul\":1011:1018   */\n      dup6\n        /* \"#utility.yul\":1002:1008   */\n      dup3\n        /* \"#utility.yul\":991:1000   */\n      dup7\n        /* \"#utility.yul\":987:1009   */\n      add\n        /* \"#utility.yul\":966:1019   */\n      tag_210\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":956:1019   */\n      swap3\n      pop\n        /* \"#utility.yul\":912:1029   */\n      pop\n        /* \"#utility.yul\":1068:1070   */\n      0x20\n        /* \"#utility.yul\":1094:1147   */\n      tag_283\n        /* \"#utility.yul\":1139:1146   */\n      dup6\n        /* \"#utility.yul\":1130:1136   */\n      dup3\n        /* \"#utility.yul\":1119:1128   */\n      dup7\n        /* \"#utility.yul\":1115:1137   */\n      add\n        /* \"#utility.yul\":1094:1147   */\n      tag_210\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":1084:1147   */\n      swap2\n      pop\n        /* \"#utility.yul\":1039:1157   */\n      pop\n        /* \"#utility.yul\":690:1164   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1170:1296   */\n    tag_211:\n        /* \"#utility.yul\":1207:1214   */\n      0x00\n        /* \"#utility.yul\":1247:1289   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1240:1245   */\n      dup3\n        /* \"#utility.yul\":1236:1290   */\n      and\n        /* \"#utility.yul\":1225:1290   */\n      swap1\n      pop\n        /* \"#utility.yul\":1170:1296   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1362   */\n    tag_212:\n        /* \"#utility.yul\":1330:1333   */\n      0x00\n        /* \"#utility.yul\":1351:1356   */\n      dup2\n        /* \"#utility.yul\":1344:1356   */\n      swap1\n      pop\n        /* \"#utility.yul\":1302:1362   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1368:1510   */\n    tag_213:\n        /* \"#utility.yul\":1418:1427   */\n      0x00\n        /* \"#utility.yul\":1451:1504   */\n      tag_287\n        /* \"#utility.yul\":1469:1503   */\n      tag_288\n        /* \"#utility.yul\":1478:1502   */\n      tag_289\n        /* \"#utility.yul\":1496:1501   */\n      dup5\n        /* \"#utility.yul\":1478:1502   */\n      tag_211\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":1469:1503   */\n      tag_212\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":1451:1504   */\n      tag_211\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":1438:1504   */\n      swap1\n      pop\n        /* \"#utility.yul\":1368:1510   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1516:1642   */\n    tag_214:\n        /* \"#utility.yul\":1566:1575   */\n      0x00\n        /* \"#utility.yul\":1599:1636   */\n      tag_291\n        /* \"#utility.yul\":1630:1635   */\n      dup3\n        /* \"#utility.yul\":1599:1636   */\n      tag_213\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":1586:1636   */\n      swap1\n      pop\n        /* \"#utility.yul\":1516:1642   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1648:1787   */\n    tag_215:\n        /* \"#utility.yul\":1711:1720   */\n      0x00\n        /* \"#utility.yul\":1744:1781   */\n      tag_293\n        /* \"#utility.yul\":1775:1780   */\n      dup3\n        /* \"#utility.yul\":1744:1781   */\n      tag_214\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":1731:1781   */\n      swap1\n      pop\n        /* \"#utility.yul\":1648:1787   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1793:1950   */\n    tag_216:\n        /* \"#utility.yul\":1893:1943   */\n      tag_295\n        /* \"#utility.yul\":1937:1942   */\n      dup2\n        /* \"#utility.yul\":1893:1943   */\n      tag_215\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":1888:1891   */\n      dup3\n        /* \"#utility.yul\":1881:1944   */\n      mstore\n        /* \"#utility.yul\":1793:1950   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1956:2204   */\n    tag_21:\n        /* \"#utility.yul\":2062:2066   */\n      0x00\n        /* \"#utility.yul\":2100:2102   */\n      0x20\n        /* \"#utility.yul\":2089:2098   */\n      dup3\n        /* \"#utility.yul\":2085:2103   */\n      add\n        /* \"#utility.yul\":2077:2103   */\n      swap1\n      pop\n        /* \"#utility.yul\":2113:2197   */\n      tag_297\n        /* \"#utility.yul\":2194:2195   */\n      0x00\n        /* \"#utility.yul\":2183:2192   */\n      dup4\n        /* \"#utility.yul\":2179:2196   */\n      add\n        /* \"#utility.yul\":2170:2176   */\n      dup5\n        /* \"#utility.yul\":2113:2197   */\n      tag_216\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":1956:2204   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2210:2363   */\n    tag_217:\n        /* \"#utility.yul\":2287:2296   */\n      0x00\n        /* \"#utility.yul\":2320:2357   */\n      tag_299\n        /* \"#utility.yul\":2351:2356   */\n      dup3\n        /* \"#utility.yul\":2320:2357   */\n      tag_214\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":2307:2357   */\n      swap1\n      pop\n        /* \"#utility.yul\":2210:2363   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2369:2554   */\n    tag_218:\n        /* \"#utility.yul\":2483:2547   */\n      tag_301\n        /* \"#utility.yul\":2541:2546   */\n      dup2\n        /* \"#utility.yul\":2483:2547   */\n      tag_217\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":2478:2481   */\n      dup3\n        /* \"#utility.yul\":2471:2548   */\n      mstore\n        /* \"#utility.yul\":2369:2554   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2560:2836   */\n    tag_25:\n        /* \"#utility.yul\":2680:2684   */\n      0x00\n        /* \"#utility.yul\":2718:2720   */\n      0x20\n        /* \"#utility.yul\":2707:2716   */\n      dup3\n        /* \"#utility.yul\":2703:2721   */\n      add\n        /* \"#utility.yul\":2695:2721   */\n      swap1\n      pop\n        /* \"#utility.yul\":2731:2829   */\n      tag_303\n        /* \"#utility.yul\":2826:2827   */\n      0x00\n        /* \"#utility.yul\":2815:2824   */\n      dup4\n        /* \"#utility.yul\":2811:2828   */\n      add\n        /* \"#utility.yul\":2802:2808   */\n      dup5\n        /* \"#utility.yul\":2731:2829   */\n      tag_218\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":2560:2836   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2842:2938   */\n    tag_219:\n        /* \"#utility.yul\":2879:2886   */\n      0x00\n        /* \"#utility.yul\":2908:2932   */\n      tag_305\n        /* \"#utility.yul\":2926:2931   */\n      dup3\n        /* \"#utility.yul\":2908:2932   */\n      tag_211\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":2897:2932   */\n      swap1\n      pop\n        /* \"#utility.yul\":2842:2938   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2944:3066   */\n    tag_220:\n        /* \"#utility.yul\":3017:3041   */\n      tag_307\n        /* \"#utility.yul\":3035:3040   */\n      dup2\n        /* \"#utility.yul\":3017:3041   */\n      tag_219\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":3010:3015   */\n      dup2\n        /* \"#utility.yul\":3007:3042   */\n      eq\n        /* \"#utility.yul\":2997:3060   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":3056:3057   */\n      0x00\n        /* \"#utility.yul\":3053:3054   */\n      dup1\n        /* \"#utility.yul\":3046:3058   */\n      revert\n        /* \"#utility.yul\":2997:3060   */\n    tag_308:\n        /* \"#utility.yul\":2944:3066   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3072:3211   */\n    tag_221:\n        /* \"#utility.yul\":3118:3123   */\n      0x00\n        /* \"#utility.yul\":3156:3162   */\n      dup2\n        /* \"#utility.yul\":3143:3163   */\n      calldataload\n        /* \"#utility.yul\":3134:3163   */\n      swap1\n      pop\n        /* \"#utility.yul\":3172:3205   */\n      tag_310\n        /* \"#utility.yul\":3199:3204   */\n      dup2\n        /* \"#utility.yul\":3172:3205   */\n      tag_220\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":3072:3211   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3217:3546   */\n    tag_28:\n        /* \"#utility.yul\":3276:3282   */\n      0x00\n        /* \"#utility.yul\":3325:3327   */\n      0x20\n        /* \"#utility.yul\":3313:3322   */\n      dup3\n        /* \"#utility.yul\":3304:3311   */\n      dup5\n        /* \"#utility.yul\":3300:3323   */\n      sub\n        /* \"#utility.yul\":3296:3328   */\n      slt\n        /* \"#utility.yul\":3293:3412   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":3331:3410   */\n      tag_313\n      tag_206\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":3293:3412   */\n    tag_312:\n        /* \"#utility.yul\":3451:3452   */\n      0x00\n        /* \"#utility.yul\":3476:3529   */\n      tag_314\n        /* \"#utility.yul\":3521:3528   */\n      dup5\n        /* \"#utility.yul\":3512:3518   */\n      dup3\n        /* \"#utility.yul\":3501:3510   */\n      dup6\n        /* \"#utility.yul\":3497:3519   */\n      add\n        /* \"#utility.yul\":3476:3529   */\n      tag_221\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":3466:3529   */\n      swap2\n      pop\n        /* \"#utility.yul\":3422:3539   */\n      pop\n        /* \"#utility.yul\":3217:3546   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3552:3670   */\n    tag_222:\n        /* \"#utility.yul\":3639:3663   */\n      tag_316\n        /* \"#utility.yul\":3657:3662   */\n      dup2\n        /* \"#utility.yul\":3639:3663   */\n      tag_208\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":3634:3637   */\n      dup3\n        /* \"#utility.yul\":3627:3664   */\n      mstore\n        /* \"#utility.yul\":3552:3670   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3676:4340   */\n    tag_31:\n        /* \"#utility.yul\":3881:3885   */\n      0x00\n        /* \"#utility.yul\":3919:3922   */\n      0xa0\n        /* \"#utility.yul\":3908:3917   */\n      dup3\n        /* \"#utility.yul\":3904:3923   */\n      add\n        /* \"#utility.yul\":3896:3923   */\n      swap1\n      pop\n        /* \"#utility.yul\":3933:4004   */\n      tag_318\n        /* \"#utility.yul\":4001:4002   */\n      0x00\n        /* \"#utility.yul\":3990:3999   */\n      dup4\n        /* \"#utility.yul\":3986:4003   */\n      add\n        /* \"#utility.yul\":3977:3983   */\n      dup9\n        /* \"#utility.yul\":3933:4004   */\n      tag_222\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":4014:4086   */\n      tag_319\n        /* \"#utility.yul\":4082:4084   */\n      0x20\n        /* \"#utility.yul\":4071:4080   */\n      dup4\n        /* \"#utility.yul\":4067:4085   */\n      add\n        /* \"#utility.yul\":4058:4064   */\n      dup8\n        /* \"#utility.yul\":4014:4086   */\n      tag_222\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":4096:4168   */\n      tag_320\n        /* \"#utility.yul\":4164:4166   */\n      0x40\n        /* \"#utility.yul\":4153:4162   */\n      dup4\n        /* \"#utility.yul\":4149:4167   */\n      add\n        /* \"#utility.yul\":4140:4146   */\n      dup7\n        /* \"#utility.yul\":4096:4168   */\n      tag_222\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":4178:4250   */\n      tag_321\n        /* \"#utility.yul\":4246:4248   */\n      0x60\n        /* \"#utility.yul\":4235:4244   */\n      dup4\n        /* \"#utility.yul\":4231:4249   */\n      add\n        /* \"#utility.yul\":4222:4228   */\n      dup6\n        /* \"#utility.yul\":4178:4250   */\n      tag_222\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":4260:4333   */\n      tag_322\n        /* \"#utility.yul\":4328:4331   */\n      0x80\n        /* \"#utility.yul\":4317:4326   */\n      dup4\n        /* \"#utility.yul\":4313:4332   */\n      add\n        /* \"#utility.yul\":4304:4310   */\n      dup5\n        /* \"#utility.yul\":4260:4333   */\n      tag_222\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":3676:4340   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4346:4568   */\n    tag_37:\n        /* \"#utility.yul\":4439:4443   */\n      0x00\n        /* \"#utility.yul\":4477:4479   */\n      0x20\n        /* \"#utility.yul\":4466:4475   */\n      dup3\n        /* \"#utility.yul\":4462:4480   */\n      add\n        /* \"#utility.yul\":4454:4480   */\n      swap1\n      pop\n        /* \"#utility.yul\":4490:4561   */\n      tag_324\n        /* \"#utility.yul\":4558:4559   */\n      0x00\n        /* \"#utility.yul\":4547:4556   */\n      dup4\n        /* \"#utility.yul\":4543:4560   */\n      add\n        /* \"#utility.yul\":4534:4540   */\n      dup5\n        /* \"#utility.yul\":4490:4561   */\n      tag_222\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":4346:4568   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4574:4743   */\n    tag_223:\n        /* \"#utility.yul\":4658:4669   */\n      0x00\n        /* \"#utility.yul\":4692:4698   */\n      dup3\n        /* \"#utility.yul\":4687:4690   */\n      dup3\n        /* \"#utility.yul\":4680:4699   */\n      mstore\n        /* \"#utility.yul\":4732:4736   */\n      0x20\n        /* \"#utility.yul\":4727:4730   */\n      dup3\n        /* \"#utility.yul\":4723:4737   */\n      add\n        /* \"#utility.yul\":4708:4737   */\n      swap1\n      pop\n        /* \"#utility.yul\":4574:4743   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4749:4912   */\n    tag_224:\n        /* \"#utility.yul\":4889:4904   */\n      0x506c616e20697320657869737400000000000000000000000000000000000000\n        /* \"#utility.yul\":4885:4886   */\n      0x00\n        /* \"#utility.yul\":4877:4883   */\n      dup3\n        /* \"#utility.yul\":4873:4887   */\n      add\n        /* \"#utility.yul\":4866:4905   */\n      mstore\n        /* \"#utility.yul\":4749:4912   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4918:5284   */\n    tag_225:\n        /* \"#utility.yul\":5060:5063   */\n      0x00\n        /* \"#utility.yul\":5081:5148   */\n      tag_328\n        /* \"#utility.yul\":5145:5147   */\n      0x0d\n        /* \"#utility.yul\":5140:5143   */\n      dup4\n        /* \"#utility.yul\":5081:5148   */\n      tag_223\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":5074:5148   */\n      swap2\n      pop\n        /* \"#utility.yul\":5157:5250   */\n      tag_329\n        /* \"#utility.yul\":5246:5249   */\n      dup3\n        /* \"#utility.yul\":5157:5250   */\n      tag_224\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":5275:5277   */\n      0x20\n        /* \"#utility.yul\":5270:5273   */\n      dup3\n        /* \"#utility.yul\":5266:5278   */\n      add\n        /* \"#utility.yul\":5259:5278   */\n      swap1\n      pop\n        /* \"#utility.yul\":4918:5284   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5290:5709   */\n    tag_53:\n        /* \"#utility.yul\":5456:5460   */\n      0x00\n        /* \"#utility.yul\":5494:5496   */\n      0x20\n        /* \"#utility.yul\":5483:5492   */\n      dup3\n        /* \"#utility.yul\":5479:5497   */\n      add\n        /* \"#utility.yul\":5471:5497   */\n      swap1\n      pop\n        /* \"#utility.yul\":5543:5552   */\n      dup2\n        /* \"#utility.yul\":5537:5541   */\n      dup2\n        /* \"#utility.yul\":5533:5553   */\n      sub\n        /* \"#utility.yul\":5529:5530   */\n      0x00\n        /* \"#utility.yul\":5518:5527   */\n      dup4\n        /* \"#utility.yul\":5514:5531   */\n      add\n        /* \"#utility.yul\":5507:5554   */\n      mstore\n        /* \"#utility.yul\":5571:5702   */\n      tag_331\n        /* \"#utility.yul\":5697:5701   */\n      dup2\n        /* \"#utility.yul\":5571:5702   */\n      tag_225\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":5563:5702   */\n      swap1\n      pop\n        /* \"#utility.yul\":5290:5709   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5715:5897   */\n    tag_226:\n        /* \"#utility.yul\":5855:5889   */\n      0x4672657175656e6379206d7573742062652067726561746572207468616e2030\n        /* \"#utility.yul\":5851:5852   */\n      0x00\n        /* \"#utility.yul\":5843:5849   */\n      dup3\n        /* \"#utility.yul\":5839:5853   */\n      add\n        /* \"#utility.yul\":5832:5890   */\n      mstore\n        /* \"#utility.yul\":5715:5897   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5903:6269   */\n    tag_227:\n        /* \"#utility.yul\":6045:6048   */\n      0x00\n        /* \"#utility.yul\":6066:6133   */\n      tag_334\n        /* \"#utility.yul\":6130:6132   */\n      0x20\n        /* \"#utility.yul\":6125:6128   */\n      dup4\n        /* \"#utility.yul\":6066:6133   */\n      tag_223\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":6059:6133   */\n      swap2\n      pop\n        /* \"#utility.yul\":6142:6235   */\n      tag_335\n        /* \"#utility.yul\":6231:6234   */\n      dup3\n        /* \"#utility.yul\":6142:6235   */\n      tag_226\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":6260:6262   */\n      0x20\n        /* \"#utility.yul\":6255:6258   */\n      dup3\n        /* \"#utility.yul\":6251:6263   */\n      add\n        /* \"#utility.yul\":6244:6263   */\n      swap1\n      pop\n        /* \"#utility.yul\":5903:6269   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6275:6694   */\n    tag_56:\n        /* \"#utility.yul\":6441:6445   */\n      0x00\n        /* \"#utility.yul\":6479:6481   */\n      0x20\n        /* \"#utility.yul\":6468:6477   */\n      dup3\n        /* \"#utility.yul\":6464:6482   */\n      add\n        /* \"#utility.yul\":6456:6482   */\n      swap1\n      pop\n        /* \"#utility.yul\":6528:6537   */\n      dup2\n        /* \"#utility.yul\":6522:6526   */\n      dup2\n        /* \"#utility.yul\":6518:6538   */\n      sub\n        /* \"#utility.yul\":6514:6515   */\n      0x00\n        /* \"#utility.yul\":6503:6512   */\n      dup4\n        /* \"#utility.yul\":6499:6516   */\n      add\n        /* \"#utility.yul\":6492:6539   */\n      mstore\n        /* \"#utility.yul\":6556:6687   */\n      tag_337\n        /* \"#utility.yul\":6682:6686   */\n      dup2\n        /* \"#utility.yul\":6556:6687   */\n      tag_227\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":6548:6687   */\n      swap1\n      pop\n        /* \"#utility.yul\":6275:6694   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6700:6879   */\n    tag_228:\n        /* \"#utility.yul\":6840:6871   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":6836:6837   */\n      0x00\n        /* \"#utility.yul\":6828:6834   */\n      dup3\n        /* \"#utility.yul\":6824:6838   */\n      add\n        /* \"#utility.yul\":6817:6872   */\n      mstore\n        /* \"#utility.yul\":6700:6879   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6885:7251   */\n    tag_229:\n        /* \"#utility.yul\":7027:7030   */\n      0x00\n        /* \"#utility.yul\":7048:7115   */\n      tag_340\n        /* \"#utility.yul\":7112:7114   */\n      0x1d\n        /* \"#utility.yul\":7107:7110   */\n      dup4\n        /* \"#utility.yul\":7048:7115   */\n      tag_223\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":7041:7115   */\n      swap2\n      pop\n        /* \"#utility.yul\":7124:7217   */\n      tag_341\n        /* \"#utility.yul\":7213:7216   */\n      dup3\n        /* \"#utility.yul\":7124:7217   */\n      tag_228\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":7242:7244   */\n      0x20\n        /* \"#utility.yul\":7237:7240   */\n      dup3\n        /* \"#utility.yul\":7233:7245   */\n      add\n        /* \"#utility.yul\":7226:7245   */\n      swap1\n      pop\n        /* \"#utility.yul\":6885:7251   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7257:7676   */\n    tag_59:\n        /* \"#utility.yul\":7423:7427   */\n      0x00\n        /* \"#utility.yul\":7461:7463   */\n      0x20\n        /* \"#utility.yul\":7450:7459   */\n      dup3\n        /* \"#utility.yul\":7446:7464   */\n      add\n        /* \"#utility.yul\":7438:7464   */\n      swap1\n      pop\n        /* \"#utility.yul\":7510:7519   */\n      dup2\n        /* \"#utility.yul\":7504:7508   */\n      dup2\n        /* \"#utility.yul\":7500:7520   */\n      sub\n        /* \"#utility.yul\":7496:7497   */\n      0x00\n        /* \"#utility.yul\":7485:7494   */\n      dup4\n        /* \"#utility.yul\":7481:7498   */\n      add\n        /* \"#utility.yul\":7474:7521   */\n      mstore\n        /* \"#utility.yul\":7538:7669   */\n      tag_343\n        /* \"#utility.yul\":7664:7668   */\n      dup2\n        /* \"#utility.yul\":7538:7669   */\n      tag_229\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":7530:7669   */\n      swap1\n      pop\n        /* \"#utility.yul\":7257:7676   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7682:8014   */\n    tag_61:\n        /* \"#utility.yul\":7803:7807   */\n      0x00\n        /* \"#utility.yul\":7841:7843   */\n      0x40\n        /* \"#utility.yul\":7830:7839   */\n      dup3\n        /* \"#utility.yul\":7826:7844   */\n      add\n        /* \"#utility.yul\":7818:7844   */\n      swap1\n      pop\n        /* \"#utility.yul\":7854:7925   */\n      tag_345\n        /* \"#utility.yul\":7922:7923   */\n      0x00\n        /* \"#utility.yul\":7911:7920   */\n      dup4\n        /* \"#utility.yul\":7907:7924   */\n      add\n        /* \"#utility.yul\":7898:7904   */\n      dup6\n        /* \"#utility.yul\":7854:7925   */\n      tag_222\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":7935:8007   */\n      tag_346\n        /* \"#utility.yul\":8003:8005   */\n      0x20\n        /* \"#utility.yul\":7992:8001   */\n      dup4\n        /* \"#utility.yul\":7988:8006   */\n      add\n        /* \"#utility.yul\":7979:7985   */\n      dup5\n        /* \"#utility.yul\":7935:8007   */\n      tag_222\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":7682:8014   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8020:8187   */\n    tag_230:\n        /* \"#utility.yul\":8160:8179   */\n      0x506c616e206973206e6f74206578697374000000000000000000000000000000\n        /* \"#utility.yul\":8156:8157   */\n      0x00\n        /* \"#utility.yul\":8148:8154   */\n      dup3\n        /* \"#utility.yul\":8144:8158   */\n      add\n        /* \"#utility.yul\":8137:8180   */\n      mstore\n        /* \"#utility.yul\":8020:8187   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8193:8559   */\n    tag_231:\n        /* \"#utility.yul\":8335:8338   */\n      0x00\n        /* \"#utility.yul\":8356:8423   */\n      tag_349\n        /* \"#utility.yul\":8420:8422   */\n      0x11\n        /* \"#utility.yul\":8415:8418   */\n      dup4\n        /* \"#utility.yul\":8356:8423   */\n      tag_223\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":8349:8423   */\n      swap2\n      pop\n        /* \"#utility.yul\":8432:8525   */\n      tag_350\n        /* \"#utility.yul\":8521:8524   */\n      dup3\n        /* \"#utility.yul\":8432:8525   */\n      tag_230\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":8550:8552   */\n      0x20\n        /* \"#utility.yul\":8545:8548   */\n      dup3\n        /* \"#utility.yul\":8541:8553   */\n      add\n        /* \"#utility.yul\":8534:8553   */\n      swap1\n      pop\n        /* \"#utility.yul\":8193:8559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8565:8984   */\n    tag_65:\n        /* \"#utility.yul\":8731:8735   */\n      0x00\n        /* \"#utility.yul\":8769:8771   */\n      0x20\n        /* \"#utility.yul\":8758:8767   */\n      dup3\n        /* \"#utility.yul\":8754:8772   */\n      add\n        /* \"#utility.yul\":8746:8772   */\n      swap1\n      pop\n        /* \"#utility.yul\":8818:8827   */\n      dup2\n        /* \"#utility.yul\":8812:8816   */\n      dup2\n        /* \"#utility.yul\":8808:8828   */\n      sub\n        /* \"#utility.yul\":8804:8805   */\n      0x00\n        /* \"#utility.yul\":8793:8802   */\n      dup4\n        /* \"#utility.yul\":8789:8806   */\n      add\n        /* \"#utility.yul\":8782:8829   */\n      mstore\n        /* \"#utility.yul\":8846:8977   */\n      tag_352\n        /* \"#utility.yul\":8972:8976   */\n      dup2\n        /* \"#utility.yul\":8846:8977   */\n      tag_231\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":8838:8977   */\n      swap1\n      pop\n        /* \"#utility.yul\":8565:8984   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8990:9210   */\n    tag_232:\n        /* \"#utility.yul\":9130:9164   */\n      0x546f74616c206d7573742062652067726561746572207468616e20616d6f756e\n        /* \"#utility.yul\":9126:9127   */\n      0x00\n        /* \"#utility.yul\":9118:9124   */\n      dup3\n        /* \"#utility.yul\":9114:9128   */\n      add\n        /* \"#utility.yul\":9107:9165   */\n      mstore\n        /* \"#utility.yul\":9199:9202   */\n      0x7400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9194:9196   */\n      0x20\n        /* \"#utility.yul\":9186:9192   */\n      dup3\n        /* \"#utility.yul\":9182:9197   */\n      add\n        /* \"#utility.yul\":9175:9203   */\n      mstore\n        /* \"#utility.yul\":8990:9210   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9216:9582   */\n    tag_233:\n        /* \"#utility.yul\":9358:9361   */\n      0x00\n        /* \"#utility.yul\":9379:9446   */\n      tag_355\n        /* \"#utility.yul\":9443:9445   */\n      0x21\n        /* \"#utility.yul\":9438:9441   */\n      dup4\n        /* \"#utility.yul\":9379:9446   */\n      tag_223\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":9372:9446   */\n      swap2\n      pop\n        /* \"#utility.yul\":9455:9548   */\n      tag_356\n        /* \"#utility.yul\":9544:9547   */\n      dup3\n        /* \"#utility.yul\":9455:9548   */\n      tag_232\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":9573:9575   */\n      0x40\n        /* \"#utility.yul\":9568:9571   */\n      dup3\n        /* \"#utility.yul\":9564:9576   */\n      add\n        /* \"#utility.yul\":9557:9576   */\n      swap1\n      pop\n        /* \"#utility.yul\":9216:9582   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9588:10007   */\n    tag_71:\n        /* \"#utility.yul\":9754:9758   */\n      0x00\n        /* \"#utility.yul\":9792:9794   */\n      0x20\n        /* \"#utility.yul\":9781:9790   */\n      dup3\n        /* \"#utility.yul\":9777:9795   */\n      add\n        /* \"#utility.yul\":9769:9795   */\n      swap1\n      pop\n        /* \"#utility.yul\":9841:9850   */\n      dup2\n        /* \"#utility.yul\":9835:9839   */\n      dup2\n        /* \"#utility.yul\":9831:9851   */\n      sub\n        /* \"#utility.yul\":9827:9828   */\n      0x00\n        /* \"#utility.yul\":9816:9825   */\n      dup4\n        /* \"#utility.yul\":9812:9829   */\n      add\n        /* \"#utility.yul\":9805:9852   */\n      mstore\n        /* \"#utility.yul\":9869:10000   */\n      tag_358\n        /* \"#utility.yul\":9995:9999   */\n      dup2\n        /* \"#utility.yul\":9869:10000   */\n      tag_233\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":9861:10000   */\n      swap1\n      pop\n        /* \"#utility.yul\":9588:10007   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10013:10193   */\n    tag_234:\n        /* \"#utility.yul\":10061:10138   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10058:10059   */\n      0x00\n        /* \"#utility.yul\":10051:10139   */\n      mstore\n        /* \"#utility.yul\":10158:10162   */\n      0x11\n        /* \"#utility.yul\":10155:10156   */\n      0x04\n        /* \"#utility.yul\":10148:10163   */\n      mstore\n        /* \"#utility.yul\":10182:10186   */\n      0x24\n        /* \"#utility.yul\":10179:10180   */\n      0x00\n        /* \"#utility.yul\":10172:10187   */\n      revert\n        /* \"#utility.yul\":10199:10432   */\n    tag_80:\n        /* \"#utility.yul\":10238:10241   */\n      0x00\n        /* \"#utility.yul\":10261:10285   */\n      tag_361\n        /* \"#utility.yul\":10279:10284   */\n      dup3\n        /* \"#utility.yul\":10261:10285   */\n      tag_208\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":10252:10285   */\n      swap2\n      pop\n        /* \"#utility.yul\":10307:10373   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10300:10305   */\n      dup3\n        /* \"#utility.yul\":10297:10374   */\n      sub\n        /* \"#utility.yul\":10294:10397   */\n      tag_362\n      jumpi\n        /* \"#utility.yul\":10377:10395   */\n      tag_363\n      tag_234\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":10294:10397   */\n    tag_362:\n        /* \"#utility.yul\":10424:10425   */\n      0x01\n        /* \"#utility.yul\":10417:10422   */\n      dup3\n        /* \"#utility.yul\":10413:10426   */\n      add\n        /* \"#utility.yul\":10406:10426   */\n      swap1\n      pop\n        /* \"#utility.yul\":10199:10432   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10438:10606   */\n    tag_235:\n        /* \"#utility.yul\":10578:10598   */\n      0x506c616e206973206e6f74206163746976650000000000000000000000000000\n        /* \"#utility.yul\":10574:10575   */\n      0x00\n        /* \"#utility.yul\":10566:10572   */\n      dup3\n        /* \"#utility.yul\":10562:10576   */\n      add\n        /* \"#utility.yul\":10555:10599   */\n      mstore\n        /* \"#utility.yul\":10438:10606   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10612:10978   */\n    tag_236:\n        /* \"#utility.yul\":10754:10757   */\n      0x00\n        /* \"#utility.yul\":10775:10842   */\n      tag_366\n        /* \"#utility.yul\":10839:10841   */\n      0x12\n        /* \"#utility.yul\":10834:10837   */\n      dup4\n        /* \"#utility.yul\":10775:10842   */\n      tag_223\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":10768:10842   */\n      swap2\n      pop\n        /* \"#utility.yul\":10851:10944   */\n      tag_367\n        /* \"#utility.yul\":10940:10943   */\n      dup3\n        /* \"#utility.yul\":10851:10944   */\n      tag_235\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":10969:10971   */\n      0x20\n        /* \"#utility.yul\":10964:10967   */\n      dup3\n        /* \"#utility.yul\":10960:10972   */\n      add\n        /* \"#utility.yul\":10953:10972   */\n      swap1\n      pop\n        /* \"#utility.yul\":10612:10978   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10984:11403   */\n    tag_86:\n        /* \"#utility.yul\":11150:11154   */\n      0x00\n        /* \"#utility.yul\":11188:11190   */\n      0x20\n        /* \"#utility.yul\":11177:11186   */\n      dup3\n        /* \"#utility.yul\":11173:11191   */\n      add\n        /* \"#utility.yul\":11165:11191   */\n      swap1\n      pop\n        /* \"#utility.yul\":11237:11246   */\n      dup2\n        /* \"#utility.yul\":11231:11235   */\n      dup2\n        /* \"#utility.yul\":11227:11247   */\n      sub\n        /* \"#utility.yul\":11223:11224   */\n      0x00\n        /* \"#utility.yul\":11212:11221   */\n      dup4\n        /* \"#utility.yul\":11208:11225   */\n      add\n        /* \"#utility.yul\":11201:11248   */\n      mstore\n        /* \"#utility.yul\":11265:11396   */\n      tag_369\n        /* \"#utility.yul\":11391:11395   */\n      dup2\n        /* \"#utility.yul\":11265:11396   */\n      tag_236\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":11257:11396   */\n      swap1\n      pop\n        /* \"#utility.yul\":10984:11403   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11409:11637   */\n    tag_237:\n        /* \"#utility.yul\":11549:11583   */\n      0x43616e6e6f742074726967676572206d6f7265207468616e2072656d61696e69\n        /* \"#utility.yul\":11545:11546   */\n      0x00\n        /* \"#utility.yul\":11537:11543   */\n      dup3\n        /* \"#utility.yul\":11533:11547   */\n      add\n        /* \"#utility.yul\":11526:11584   */\n      mstore\n        /* \"#utility.yul\":11618:11629   */\n      0x6e6720616d6f756e740000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11613:11615   */\n      0x20\n        /* \"#utility.yul\":11605:11611   */\n      dup3\n        /* \"#utility.yul\":11601:11616   */\n      add\n        /* \"#utility.yul\":11594:11630   */\n      mstore\n        /* \"#utility.yul\":11409:11637   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11643:12009   */\n    tag_238:\n        /* \"#utility.yul\":11785:11788   */\n      0x00\n        /* \"#utility.yul\":11806:11873   */\n      tag_372\n        /* \"#utility.yul\":11870:11872   */\n      0x29\n        /* \"#utility.yul\":11865:11868   */\n      dup4\n        /* \"#utility.yul\":11806:11873   */\n      tag_223\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":11799:11873   */\n      swap2\n      pop\n        /* \"#utility.yul\":11882:11975   */\n      tag_373\n        /* \"#utility.yul\":11971:11974   */\n      dup3\n        /* \"#utility.yul\":11882:11975   */\n      tag_237\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":12000:12002   */\n      0x40\n        /* \"#utility.yul\":11995:11998   */\n      dup3\n        /* \"#utility.yul\":11991:12003   */\n      add\n        /* \"#utility.yul\":11984:12003   */\n      swap1\n      pop\n        /* \"#utility.yul\":11643:12009   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12015:12434   */\n    tag_90:\n        /* \"#utility.yul\":12181:12185   */\n      0x00\n        /* \"#utility.yul\":12219:12221   */\n      0x20\n        /* \"#utility.yul\":12208:12217   */\n      dup3\n        /* \"#utility.yul\":12204:12222   */\n      add\n        /* \"#utility.yul\":12196:12222   */\n      swap1\n      pop\n        /* \"#utility.yul\":12268:12277   */\n      dup2\n        /* \"#utility.yul\":12262:12266   */\n      dup2\n        /* \"#utility.yul\":12258:12278   */\n      sub\n        /* \"#utility.yul\":12254:12255   */\n      0x00\n        /* \"#utility.yul\":12243:12252   */\n      dup4\n        /* \"#utility.yul\":12239:12256   */\n      add\n        /* \"#utility.yul\":12232:12279   */\n      mstore\n        /* \"#utility.yul\":12296:12427   */\n      tag_375\n        /* \"#utility.yul\":12422:12426   */\n      dup2\n        /* \"#utility.yul\":12296:12427   */\n      tag_238\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":12288:12427   */\n      swap1\n      pop\n        /* \"#utility.yul\":12015:12434   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12440:12850   */\n    tag_92:\n        /* \"#utility.yul\":12480:12487   */\n      0x00\n        /* \"#utility.yul\":12503:12523   */\n      tag_377\n        /* \"#utility.yul\":12521:12522   */\n      dup3\n        /* \"#utility.yul\":12503:12523   */\n      tag_208\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":12498:12523   */\n      swap2\n      pop\n        /* \"#utility.yul\":12537:12557   */\n      tag_378\n        /* \"#utility.yul\":12555:12556   */\n      dup4\n        /* \"#utility.yul\":12537:12557   */\n      tag_208\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":12532:12557   */\n      swap3\n      pop\n        /* \"#utility.yul\":12592:12593   */\n      dup3\n        /* \"#utility.yul\":12589:12590   */\n      dup3\n        /* \"#utility.yul\":12585:12594   */\n      mul\n        /* \"#utility.yul\":12614:12644   */\n      tag_379\n        /* \"#utility.yul\":12632:12643   */\n      dup2\n        /* \"#utility.yul\":12614:12644   */\n      tag_208\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":12603:12644   */\n      swap2\n      pop\n        /* \"#utility.yul\":12793:12794   */\n      dup3\n        /* \"#utility.yul\":12784:12791   */\n      dup3\n        /* \"#utility.yul\":12780:12795   */\n      div\n        /* \"#utility.yul\":12777:12778   */\n      dup5\n        /* \"#utility.yul\":12774:12796   */\n      eq\n        /* \"#utility.yul\":12754:12755   */\n      dup4\n        /* \"#utility.yul\":12747:12756   */\n      iszero\n        /* \"#utility.yul\":12727:12810   */\n      or\n        /* \"#utility.yul\":12704:12843   */\n      tag_380\n      jumpi\n        /* \"#utility.yul\":12823:12841   */\n      tag_381\n      tag_234\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":12704:12843   */\n    tag_380:\n        /* \"#utility.yul\":12488:12850   */\n      pop\n        /* \"#utility.yul\":12440:12850   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12856:13047   */\n    tag_94:\n        /* \"#utility.yul\":12896:12899   */\n      0x00\n        /* \"#utility.yul\":12915:12935   */\n      tag_383\n        /* \"#utility.yul\":12933:12934   */\n      dup3\n        /* \"#utility.yul\":12915:12935   */\n      tag_208\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":12910:12935   */\n      swap2\n      pop\n        /* \"#utility.yul\":12949:12969   */\n      tag_384\n        /* \"#utility.yul\":12967:12968   */\n      dup4\n        /* \"#utility.yul\":12949:12969   */\n      tag_208\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":12944:12969   */\n      swap3\n      pop\n        /* \"#utility.yul\":12992:12993   */\n      dup3\n        /* \"#utility.yul\":12989:12990   */\n      dup3\n        /* \"#utility.yul\":12985:12994   */\n      add\n        /* \"#utility.yul\":12978:12994   */\n      swap1\n      pop\n        /* \"#utility.yul\":13013:13016   */\n      dup1\n        /* \"#utility.yul\":13010:13011   */\n      dup3\n        /* \"#utility.yul\":13007:13017   */\n      gt\n        /* \"#utility.yul\":13004:13040   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":13020:13038   */\n      tag_386\n      tag_234\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":13004:13040   */\n    tag_385:\n        /* \"#utility.yul\":12856:13047   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13053:13274   */\n    tag_239:\n        /* \"#utility.yul\":13193:13227   */\n      0x43616e206f6e6c79207472696767657220706c616e206f6e6365207065722064\n        /* \"#utility.yul\":13189:13190   */\n      0x00\n        /* \"#utility.yul\":13181:13187   */\n      dup3\n        /* \"#utility.yul\":13177:13191   */\n      add\n        /* \"#utility.yul\":13170:13228   */\n      mstore\n        /* \"#utility.yul\":13262:13266   */\n      0x6179000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13257:13259   */\n      0x20\n        /* \"#utility.yul\":13249:13255   */\n      dup3\n        /* \"#utility.yul\":13245:13260   */\n      add\n        /* \"#utility.yul\":13238:13267   */\n      mstore\n        /* \"#utility.yul\":13053:13274   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13280:13646   */\n    tag_240:\n        /* \"#utility.yul\":13422:13425   */\n      0x00\n        /* \"#utility.yul\":13443:13510   */\n      tag_389\n        /* \"#utility.yul\":13507:13509   */\n      0x22\n        /* \"#utility.yul\":13502:13505   */\n      dup4\n        /* \"#utility.yul\":13443:13510   */\n      tag_223\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":13436:13510   */\n      swap2\n      pop\n        /* \"#utility.yul\":13519:13612   */\n      tag_390\n        /* \"#utility.yul\":13608:13611   */\n      dup3\n        /* \"#utility.yul\":13519:13612   */\n      tag_239\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":13637:13639   */\n      0x40\n        /* \"#utility.yul\":13632:13635   */\n      dup3\n        /* \"#utility.yul\":13628:13640   */\n      add\n        /* \"#utility.yul\":13621:13640   */\n      swap1\n      pop\n        /* \"#utility.yul\":13280:13646   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13652:14071   */\n    tag_97:\n        /* \"#utility.yul\":13818:13822   */\n      0x00\n        /* \"#utility.yul\":13856:13858   */\n      0x20\n        /* \"#utility.yul\":13845:13854   */\n      dup3\n        /* \"#utility.yul\":13841:13859   */\n      add\n        /* \"#utility.yul\":13833:13859   */\n      swap1\n      pop\n        /* \"#utility.yul\":13905:13914   */\n      dup2\n        /* \"#utility.yul\":13899:13903   */\n      dup2\n        /* \"#utility.yul\":13895:13915   */\n      sub\n        /* \"#utility.yul\":13891:13892   */\n      0x00\n        /* \"#utility.yul\":13880:13889   */\n      dup4\n        /* \"#utility.yul\":13876:13893   */\n      add\n        /* \"#utility.yul\":13869:13916   */\n      mstore\n        /* \"#utility.yul\":13933:14064   */\n      tag_392\n        /* \"#utility.yul\":14059:14063   */\n      dup2\n        /* \"#utility.yul\":13933:14064   */\n      tag_240\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":13925:14064   */\n      swap1\n      pop\n        /* \"#utility.yul\":13652:14071   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14077:14257   */\n    tag_104:\n        /* \"#utility.yul\":14125:14202   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14122:14123   */\n      0x00\n        /* \"#utility.yul\":14115:14203   */\n      mstore\n        /* \"#utility.yul\":14222:14226   */\n      0x41\n        /* \"#utility.yul\":14219:14220   */\n      0x04\n        /* \"#utility.yul\":14212:14227   */\n      mstore\n        /* \"#utility.yul\":14246:14250   */\n      0x24\n        /* \"#utility.yul\":14243:14244   */\n      0x00\n        /* \"#utility.yul\":14236:14251   */\n      revert\n        /* \"#utility.yul\":14263:14443   */\n    tag_108:\n        /* \"#utility.yul\":14311:14388   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14308:14309   */\n      0x00\n        /* \"#utility.yul\":14301:14389   */\n      mstore\n        /* \"#utility.yul\":14408:14412   */\n      0x32\n        /* \"#utility.yul\":14405:14406   */\n      0x04\n        /* \"#utility.yul\":14398:14413   */\n      mstore\n        /* \"#utility.yul\":14432:14436   */\n      0x24\n        /* \"#utility.yul\":14429:14430   */\n      0x00\n        /* \"#utility.yul\":14422:14437   */\n      revert\n        /* \"#utility.yul\":14449:14592   */\n    tag_241:\n        /* \"#utility.yul\":14506:14511   */\n      0x00\n        /* \"#utility.yul\":14537:14543   */\n      dup2\n        /* \"#utility.yul\":14531:14544   */\n      mload\n        /* \"#utility.yul\":14522:14544   */\n      swap1\n      pop\n        /* \"#utility.yul\":14553:14586   */\n      tag_396\n        /* \"#utility.yul\":14580:14585   */\n      dup2\n        /* \"#utility.yul\":14553:14586   */\n      tag_220\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":14449:14592   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14598:14949   */\n    tag_112:\n        /* \"#utility.yul\":14668:14674   */\n      0x00\n        /* \"#utility.yul\":14717:14719   */\n      0x20\n        /* \"#utility.yul\":14705:14714   */\n      dup3\n        /* \"#utility.yul\":14696:14703   */\n      dup5\n        /* \"#utility.yul\":14692:14715   */\n      sub\n        /* \"#utility.yul\":14688:14720   */\n      slt\n        /* \"#utility.yul\":14685:14804   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":14723:14802   */\n      tag_399\n      tag_206\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":14685:14804   */\n    tag_398:\n        /* \"#utility.yul\":14843:14844   */\n      0x00\n        /* \"#utility.yul\":14868:14932   */\n      tag_400\n        /* \"#utility.yul\":14924:14931   */\n      dup5\n        /* \"#utility.yul\":14915:14921   */\n      dup3\n        /* \"#utility.yul\":14904:14913   */\n      dup6\n        /* \"#utility.yul\":14900:14922   */\n      add\n        /* \"#utility.yul\":14868:14932   */\n      tag_241\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":14858:14932   */\n      swap2\n      pop\n        /* \"#utility.yul\":14814:14942   */\n      pop\n        /* \"#utility.yul\":14598:14949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14955:15040   */\n    tag_242:\n        /* \"#utility.yul\":15000:15007   */\n      0x00\n        /* \"#utility.yul\":15029:15034   */\n      dup2\n        /* \"#utility.yul\":15018:15034   */\n      swap1\n      pop\n        /* \"#utility.yul\":14955:15040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15046:15204   */\n    tag_243:\n        /* \"#utility.yul\":15104:15113   */\n      0x00\n        /* \"#utility.yul\":15137:15198   */\n      tag_403\n        /* \"#utility.yul\":15155:15197   */\n      tag_404\n        /* \"#utility.yul\":15164:15196   */\n      tag_405\n        /* \"#utility.yul\":15190:15195   */\n      dup5\n        /* \"#utility.yul\":15164:15196   */\n      tag_242\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":15155:15197   */\n      tag_212\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":15137:15198   */\n      tag_208\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":15124:15198   */\n      swap1\n      pop\n        /* \"#utility.yul\":15046:15204   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15210:15357   */\n    tag_244:\n        /* \"#utility.yul\":15305:15350   */\n      tag_407\n        /* \"#utility.yul\":15344:15349   */\n      dup2\n        /* \"#utility.yul\":15305:15350   */\n      tag_243\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":15300:15303   */\n      dup3\n        /* \"#utility.yul\":15293:15351   */\n      mstore\n        /* \"#utility.yul\":15210:15357   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15363:15477   */\n    tag_245:\n        /* \"#utility.yul\":15430:15436   */\n      0x00\n        /* \"#utility.yul\":15464:15469   */\n      dup2\n        /* \"#utility.yul\":15458:15470   */\n      mload\n        /* \"#utility.yul\":15448:15470   */\n      swap1\n      pop\n        /* \"#utility.yul\":15363:15477   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15483:15667   */\n    tag_246:\n        /* \"#utility.yul\":15582:15593   */\n      0x00\n        /* \"#utility.yul\":15616:15622   */\n      dup3\n        /* \"#utility.yul\":15611:15614   */\n      dup3\n        /* \"#utility.yul\":15604:15623   */\n      mstore\n        /* \"#utility.yul\":15656:15660   */\n      0x20\n        /* \"#utility.yul\":15651:15654   */\n      dup3\n        /* \"#utility.yul\":15647:15661   */\n      add\n        /* \"#utility.yul\":15632:15661   */\n      swap1\n      pop\n        /* \"#utility.yul\":15483:15667   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15673:15805   */\n    tag_247:\n        /* \"#utility.yul\":15740:15744   */\n      0x00\n        /* \"#utility.yul\":15763:15766   */\n      dup2\n        /* \"#utility.yul\":15755:15766   */\n      swap1\n      pop\n        /* \"#utility.yul\":15793:15797   */\n      0x20\n        /* \"#utility.yul\":15788:15791   */\n      dup3\n        /* \"#utility.yul\":15784:15798   */\n      add\n        /* \"#utility.yul\":15776:15798   */\n      swap1\n      pop\n        /* \"#utility.yul\":15673:15805   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15811:15919   */\n    tag_248:\n        /* \"#utility.yul\":15888:15912   */\n      tag_412\n        /* \"#utility.yul\":15906:15911   */\n      dup2\n        /* \"#utility.yul\":15888:15912   */\n      tag_219\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":15883:15886   */\n      dup3\n        /* \"#utility.yul\":15876:15913   */\n      mstore\n        /* \"#utility.yul\":15811:15919   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15925:16104   */\n    tag_249:\n        /* \"#utility.yul\":15994:16004   */\n      0x00\n        /* \"#utility.yul\":16015:16061   */\n      tag_414\n        /* \"#utility.yul\":16057:16060   */\n      dup4\n        /* \"#utility.yul\":16049:16055   */\n      dup4\n        /* \"#utility.yul\":16015:16061   */\n      tag_248\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":16093:16097   */\n      0x20\n        /* \"#utility.yul\":16088:16091   */\n      dup4\n        /* \"#utility.yul\":16084:16098   */\n      add\n        /* \"#utility.yul\":16070:16098   */\n      swap1\n      pop\n        /* \"#utility.yul\":15925:16104   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16110:16223   */\n    tag_250:\n        /* \"#utility.yul\":16180:16184   */\n      0x00\n        /* \"#utility.yul\":16212:16216   */\n      0x20\n        /* \"#utility.yul\":16207:16210   */\n      dup3\n        /* \"#utility.yul\":16203:16217   */\n      add\n        /* \"#utility.yul\":16195:16217   */\n      swap1\n      pop\n        /* \"#utility.yul\":16110:16223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16259:16991   */\n    tag_251:\n        /* \"#utility.yul\":16378:16381   */\n      0x00\n        /* \"#utility.yul\":16407:16461   */\n      tag_417\n        /* \"#utility.yul\":16455:16460   */\n      dup3\n        /* \"#utility.yul\":16407:16461   */\n      tag_245\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":16477:16563   */\n      tag_418\n        /* \"#utility.yul\":16556:16562   */\n      dup2\n        /* \"#utility.yul\":16551:16554   */\n      dup6\n        /* \"#utility.yul\":16477:16563   */\n      tag_246\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":16470:16563   */\n      swap4\n      pop\n        /* \"#utility.yul\":16587:16643   */\n      tag_419\n        /* \"#utility.yul\":16637:16642   */\n      dup4\n        /* \"#utility.yul\":16587:16643   */\n      tag_247\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":16666:16673   */\n      dup1\n        /* \"#utility.yul\":16697:16698   */\n      0x00\n        /* \"#utility.yul\":16682:16966   */\n    tag_420:\n        /* \"#utility.yul\":16707:16713   */\n      dup4\n        /* \"#utility.yul\":16704:16705   */\n      dup2\n        /* \"#utility.yul\":16701:16714   */\n      lt\n        /* \"#utility.yul\":16682:16966   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":16783:16789   */\n      dup2\n        /* \"#utility.yul\":16777:16790   */\n      mload\n        /* \"#utility.yul\":16810:16873   */\n      tag_423\n        /* \"#utility.yul\":16869:16872   */\n      dup9\n        /* \"#utility.yul\":16854:16867   */\n      dup3\n        /* \"#utility.yul\":16810:16873   */\n      tag_249\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":16803:16873   */\n      swap8\n      pop\n        /* \"#utility.yul\":16896:16956   */\n      tag_424\n        /* \"#utility.yul\":16949:16955   */\n      dup4\n        /* \"#utility.yul\":16896:16956   */\n      tag_250\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":16886:16956   */\n      swap3\n      pop\n        /* \"#utility.yul\":16742:16966   */\n      pop\n        /* \"#utility.yul\":16729:16730   */\n      0x01\n        /* \"#utility.yul\":16726:16727   */\n      dup2\n        /* \"#utility.yul\":16722:16731   */\n      add\n        /* \"#utility.yul\":16717:16731   */\n      swap1\n      pop\n        /* \"#utility.yul\":16682:16966   */\n      jump(tag_420)\n    tag_422:\n        /* \"#utility.yul\":16686:16700   */\n      pop\n        /* \"#utility.yul\":16982:16985   */\n      dup6\n        /* \"#utility.yul\":16975:16985   */\n      swap4\n      pop\n        /* \"#utility.yul\":16383:16991   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16259:16991   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16997:17115   */\n    tag_252:\n        /* \"#utility.yul\":17084:17108   */\n      tag_426\n        /* \"#utility.yul\":17102:17107   */\n      dup2\n        /* \"#utility.yul\":17084:17108   */\n      tag_219\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":17079:17082   */\n      dup3\n        /* \"#utility.yul\":17072:17109   */\n      mstore\n        /* \"#utility.yul\":16997:17115   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17121:17952   */\n    tag_117:\n        /* \"#utility.yul\":17384:17388   */\n      0x00\n        /* \"#utility.yul\":17422:17425   */\n      0xa0\n        /* \"#utility.yul\":17411:17420   */\n      dup3\n        /* \"#utility.yul\":17407:17426   */\n      add\n        /* \"#utility.yul\":17399:17426   */\n      swap1\n      pop\n        /* \"#utility.yul\":17436:17507   */\n      tag_428\n        /* \"#utility.yul\":17504:17505   */\n      0x00\n        /* \"#utility.yul\":17493:17502   */\n      dup4\n        /* \"#utility.yul\":17489:17506   */\n      add\n        /* \"#utility.yul\":17480:17486   */\n      dup9\n        /* \"#utility.yul\":17436:17507   */\n      tag_222\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":17517:17597   */\n      tag_429\n        /* \"#utility.yul\":17593:17595   */\n      0x20\n        /* \"#utility.yul\":17582:17591   */\n      dup4\n        /* \"#utility.yul\":17578:17596   */\n      add\n        /* \"#utility.yul\":17569:17575   */\n      dup8\n        /* \"#utility.yul\":17517:17597   */\n      tag_244\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":17644:17653   */\n      dup2\n        /* \"#utility.yul\":17638:17642   */\n      dup2\n        /* \"#utility.yul\":17634:17654   */\n      sub\n        /* \"#utility.yul\":17629:17631   */\n      0x40\n        /* \"#utility.yul\":17618:17627   */\n      dup4\n        /* \"#utility.yul\":17614:17632   */\n      add\n        /* \"#utility.yul\":17607:17655   */\n      mstore\n        /* \"#utility.yul\":17672:17780   */\n      tag_430\n        /* \"#utility.yul\":17775:17779   */\n      dup2\n        /* \"#utility.yul\":17766:17772   */\n      dup7\n        /* \"#utility.yul\":17672:17780   */\n      tag_251\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":17664:17780   */\n      swap1\n      pop\n        /* \"#utility.yul\":17790:17862   */\n      tag_431\n        /* \"#utility.yul\":17858:17860   */\n      0x60\n        /* \"#utility.yul\":17847:17856   */\n      dup4\n        /* \"#utility.yul\":17843:17861   */\n      add\n        /* \"#utility.yul\":17834:17840   */\n      dup6\n        /* \"#utility.yul\":17790:17862   */\n      tag_252\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":17872:17945   */\n      tag_432\n        /* \"#utility.yul\":17940:17943   */\n      0x80\n        /* \"#utility.yul\":17929:17938   */\n      dup4\n        /* \"#utility.yul\":17925:17944   */\n      add\n        /* \"#utility.yul\":17916:17922   */\n      dup5\n        /* \"#utility.yul\":17872:17945   */\n      tag_222\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":17121:17952   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17958:18075   */\n    tag_253:\n        /* \"#utility.yul\":18067:18068   */\n      0x00\n        /* \"#utility.yul\":18064:18065   */\n      dup1\n        /* \"#utility.yul\":18057:18069   */\n      revert\n        /* \"#utility.yul\":18081:18183   */\n    tag_254:\n        /* \"#utility.yul\":18122:18128   */\n      0x00\n        /* \"#utility.yul\":18173:18175   */\n      0x1f\n        /* \"#utility.yul\":18169:18176   */\n      not\n        /* \"#utility.yul\":18164:18166   */\n      0x1f\n        /* \"#utility.yul\":18157:18162   */\n      dup4\n        /* \"#utility.yul\":18153:18167   */\n      add\n        /* \"#utility.yul\":18149:18177   */\n      and\n        /* \"#utility.yul\":18139:18177   */\n      swap1\n      pop\n        /* \"#utility.yul\":18081:18183   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18189:18470   */\n    tag_255:\n        /* \"#utility.yul\":18272:18299   */\n      tag_436\n        /* \"#utility.yul\":18294:18298   */\n      dup3\n        /* \"#utility.yul\":18272:18299   */\n      tag_254\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":18264:18270   */\n      dup2\n        /* \"#utility.yul\":18260:18300   */\n      add\n        /* \"#utility.yul\":18402:18408   */\n      dup2\n        /* \"#utility.yul\":18390:18400   */\n      dup2\n        /* \"#utility.yul\":18387:18409   */\n      lt\n        /* \"#utility.yul\":18366:18384   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18354:18364   */\n      dup3\n        /* \"#utility.yul\":18351:18385   */\n      gt\n        /* \"#utility.yul\":18348:18410   */\n      or\n        /* \"#utility.yul\":18345:18433   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":18413:18431   */\n      tag_438\n      tag_104\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":18345:18433   */\n    tag_437:\n        /* \"#utility.yul\":18453:18463   */\n      dup1\n        /* \"#utility.yul\":18449:18451   */\n      0x40\n        /* \"#utility.yul\":18442:18464   */\n      mstore\n        /* \"#utility.yul\":18232:18470   */\n      pop\n        /* \"#utility.yul\":18189:18470   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18476:18605   */\n    tag_256:\n        /* \"#utility.yul\":18510:18516   */\n      0x00\n        /* \"#utility.yul\":18537:18557   */\n      tag_440\n      tag_205\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":18527:18557   */\n      swap1\n      pop\n        /* \"#utility.yul\":18566:18599   */\n      tag_441\n        /* \"#utility.yul\":18594:18598   */\n      dup3\n        /* \"#utility.yul\":18586:18592   */\n      dup3\n        /* \"#utility.yul\":18566:18599   */\n      tag_255\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":18476:18605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18611:18922   */\n    tag_257:\n        /* \"#utility.yul\":18688:18692   */\n      0x00\n        /* \"#utility.yul\":18778:18796   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18770:18776   */\n      dup3\n        /* \"#utility.yul\":18767:18797   */\n      gt\n        /* \"#utility.yul\":18764:18820   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":18800:18818   */\n      tag_444\n      tag_104\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":18764:18820   */\n    tag_443:\n        /* \"#utility.yul\":18850:18854   */\n      0x20\n        /* \"#utility.yul\":18842:18848   */\n      dup3\n        /* \"#utility.yul\":18838:18855   */\n      mul\n        /* \"#utility.yul\":18830:18855   */\n      swap1\n      pop\n        /* \"#utility.yul\":18910:18914   */\n      0x20\n        /* \"#utility.yul\":18904:18908   */\n      dup2\n        /* \"#utility.yul\":18900:18915   */\n      add\n        /* \"#utility.yul\":18892:18915   */\n      swap1\n      pop\n        /* \"#utility.yul\":18611:18922   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18928:19045   */\n    tag_258:\n        /* \"#utility.yul\":19037:19038   */\n      0x00\n        /* \"#utility.yul\":19034:19035   */\n      dup1\n        /* \"#utility.yul\":19027:19039   */\n      revert\n        /* \"#utility.yul\":19051:19194   */\n    tag_259:\n        /* \"#utility.yul\":19108:19113   */\n      0x00\n        /* \"#utility.yul\":19139:19145   */\n      dup2\n        /* \"#utility.yul\":19133:19146   */\n      mload\n        /* \"#utility.yul\":19124:19146   */\n      swap1\n      pop\n        /* \"#utility.yul\":19155:19188   */\n      tag_447\n        /* \"#utility.yul\":19182:19187   */\n      dup2\n        /* \"#utility.yul\":19155:19188   */\n      tag_209\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":19051:19194   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19217:19949   */\n    tag_260:\n        /* \"#utility.yul\":19324:19329   */\n      0x00\n        /* \"#utility.yul\":19349:19430   */\n      tag_449\n        /* \"#utility.yul\":19365:19429   */\n      tag_450\n        /* \"#utility.yul\":19422:19428   */\n      dup5\n        /* \"#utility.yul\":19365:19429   */\n      tag_257\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":19349:19430   */\n      tag_256\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":19340:19430   */\n      swap1\n      pop\n        /* \"#utility.yul\":19450:19455   */\n      dup1\n        /* \"#utility.yul\":19479:19485   */\n      dup4\n        /* \"#utility.yul\":19472:19477   */\n      dup3\n        /* \"#utility.yul\":19465:19486   */\n      mstore\n        /* \"#utility.yul\":19513:19517   */\n      0x20\n        /* \"#utility.yul\":19506:19511   */\n      dup3\n        /* \"#utility.yul\":19502:19518   */\n      add\n        /* \"#utility.yul\":19495:19518   */\n      swap1\n      pop\n        /* \"#utility.yul\":19566:19570   */\n      0x20\n        /* \"#utility.yul\":19558:19564   */\n      dup5\n        /* \"#utility.yul\":19554:19571   */\n      mul\n        /* \"#utility.yul\":19546:19552   */\n      dup4\n        /* \"#utility.yul\":19542:19572   */\n      add\n        /* \"#utility.yul\":19595:19598   */\n      dup6\n        /* \"#utility.yul\":19587:19593   */\n      dup2\n        /* \"#utility.yul\":19584:19599   */\n      gt\n        /* \"#utility.yul\":19581:19703   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":19614:19693   */\n      tag_452\n      tag_258\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":19581:19703   */\n    tag_451:\n        /* \"#utility.yul\":19729:19735   */\n      dup4\n        /* \"#utility.yul\":19712:19943   */\n    tag_453:\n        /* \"#utility.yul\":19746:19752   */\n      dup2\n        /* \"#utility.yul\":19741:19744   */\n      dup2\n        /* \"#utility.yul\":19738:19753   */\n      lt\n        /* \"#utility.yul\":19712:19943   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":19821:19824   */\n      dup1\n        /* \"#utility.yul\":19850:19898   */\n      tag_456\n        /* \"#utility.yul\":19894:19897   */\n      dup9\n        /* \"#utility.yul\":19882:19892   */\n      dup3\n        /* \"#utility.yul\":19850:19898   */\n      tag_259\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":19845:19848   */\n      dup5\n        /* \"#utility.yul\":19838:19899   */\n      mstore\n        /* \"#utility.yul\":19928:19932   */\n      0x20\n        /* \"#utility.yul\":19923:19926   */\n      dup5\n        /* \"#utility.yul\":19919:19933   */\n      add\n        /* \"#utility.yul\":19912:19933   */\n      swap4\n      pop\n        /* \"#utility.yul\":19788:19943   */\n      pop\n        /* \"#utility.yul\":19772:19776   */\n      0x20\n        /* \"#utility.yul\":19767:19770   */\n      dup2\n        /* \"#utility.yul\":19763:19777   */\n      add\n        /* \"#utility.yul\":19756:19777   */\n      swap1\n      pop\n        /* \"#utility.yul\":19712:19943   */\n      jump(tag_453)\n    tag_455:\n        /* \"#utility.yul\":19716:19737   */\n      pop\n        /* \"#utility.yul\":19330:19949   */\n      pop\n      pop\n        /* \"#utility.yul\":19217:19949   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19972:20357   */\n    tag_261:\n        /* \"#utility.yul\":20054:20059   */\n      0x00\n        /* \"#utility.yul\":20103:20106   */\n      dup3\n        /* \"#utility.yul\":20096:20100   */\n      0x1f\n        /* \"#utility.yul\":20088:20094   */\n      dup4\n        /* \"#utility.yul\":20084:20101   */\n      add\n        /* \"#utility.yul\":20080:20107   */\n      slt\n        /* \"#utility.yul\":20070:20192   */\n      tag_458\n      jumpi\n        /* \"#utility.yul\":20111:20190   */\n      tag_459\n      tag_253\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":20070:20192   */\n    tag_458:\n        /* \"#utility.yul\":20221:20227   */\n      dup2\n        /* \"#utility.yul\":20215:20228   */\n      mload\n        /* \"#utility.yul\":20246:20351   */\n      tag_460\n        /* \"#utility.yul\":20347:20350   */\n      dup5\n        /* \"#utility.yul\":20339:20345   */\n      dup3\n        /* \"#utility.yul\":20332:20336   */\n      0x20\n        /* \"#utility.yul\":20324:20330   */\n      dup7\n        /* \"#utility.yul\":20320:20337   */\n      add\n        /* \"#utility.yul\":20246:20351   */\n      tag_260\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":20237:20351   */\n      swap2\n      pop\n        /* \"#utility.yul\":20060:20357   */\n      pop\n        /* \"#utility.yul\":19972:20357   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20363:20917   */\n    tag_121:\n        /* \"#utility.yul\":20458:20464   */\n      0x00\n        /* \"#utility.yul\":20507:20509   */\n      0x20\n        /* \"#utility.yul\":20495:20504   */\n      dup3\n        /* \"#utility.yul\":20486:20493   */\n      dup5\n        /* \"#utility.yul\":20482:20505   */\n      sub\n        /* \"#utility.yul\":20478:20510   */\n      slt\n        /* \"#utility.yul\":20475:20594   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":20513:20592   */\n      tag_463\n      tag_206\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":20475:20594   */\n    tag_462:\n        /* \"#utility.yul\":20654:20655   */\n      0x00\n        /* \"#utility.yul\":20643:20652   */\n      dup3\n        /* \"#utility.yul\":20639:20656   */\n      add\n        /* \"#utility.yul\":20633:20657   */\n      mload\n        /* \"#utility.yul\":20684:20702   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":20676:20682   */\n      dup2\n        /* \"#utility.yul\":20673:20703   */\n      gt\n        /* \"#utility.yul\":20670:20787   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":20706:20785   */\n      tag_465\n      tag_207\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":20670:20787   */\n    tag_464:\n        /* \"#utility.yul\":20811:20900   */\n      tag_466\n        /* \"#utility.yul\":20892:20899   */\n      dup5\n        /* \"#utility.yul\":20883:20889   */\n      dup3\n        /* \"#utility.yul\":20872:20881   */\n      dup6\n        /* \"#utility.yul\":20868:20890   */\n      add\n        /* \"#utility.yul\":20811:20900   */\n      tag_261\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":20801:20900   */\n      swap2\n      pop\n        /* \"#utility.yul\":20604:20910   */\n      pop\n        /* \"#utility.yul\":20363:20917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20923:21255   */\n    tag_132:\n        /* \"#utility.yul\":21044:21048   */\n      0x00\n        /* \"#utility.yul\":21082:21084   */\n      0x40\n        /* \"#utility.yul\":21071:21080   */\n      dup3\n        /* \"#utility.yul\":21067:21085   */\n      add\n        /* \"#utility.yul\":21059:21085   */\n      swap1\n      pop\n        /* \"#utility.yul\":21095:21166   */\n      tag_468\n        /* \"#utility.yul\":21163:21164   */\n      0x00\n        /* \"#utility.yul\":21152:21161   */\n      dup4\n        /* \"#utility.yul\":21148:21165   */\n      add\n        /* \"#utility.yul\":21139:21145   */\n      dup6\n        /* \"#utility.yul\":21095:21166   */\n      tag_252\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":21176:21248   */\n      tag_469\n        /* \"#utility.yul\":21244:21246   */\n      0x20\n        /* \"#utility.yul\":21233:21242   */\n      dup4\n        /* \"#utility.yul\":21229:21247   */\n      add\n        /* \"#utility.yul\":21220:21226   */\n      dup5\n        /* \"#utility.yul\":21176:21248   */\n      tag_252\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":20923:21255   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21261:21612   */\n    tag_136:\n        /* \"#utility.yul\":21331:21337   */\n      0x00\n        /* \"#utility.yul\":21380:21382   */\n      0x20\n        /* \"#utility.yul\":21368:21377   */\n      dup3\n        /* \"#utility.yul\":21359:21366   */\n      dup5\n        /* \"#utility.yul\":21355:21378   */\n      sub\n        /* \"#utility.yul\":21351:21383   */\n      slt\n        /* \"#utility.yul\":21348:21467   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":21386:21465   */\n      tag_472\n      tag_206\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":21348:21467   */\n    tag_471:\n        /* \"#utility.yul\":21506:21507   */\n      0x00\n        /* \"#utility.yul\":21531:21595   */\n      tag_473\n        /* \"#utility.yul\":21587:21594   */\n      dup5\n        /* \"#utility.yul\":21578:21584   */\n      dup3\n        /* \"#utility.yul\":21567:21576   */\n      dup6\n        /* \"#utility.yul\":21563:21585   */\n      add\n        /* \"#utility.yul\":21531:21595   */\n      tag_259\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":21521:21595   */\n      swap2\n      pop\n        /* \"#utility.yul\":21477:21605   */\n      pop\n        /* \"#utility.yul\":21261:21612   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21618:22060   */\n    tag_140:\n        /* \"#utility.yul\":21767:21771   */\n      0x00\n        /* \"#utility.yul\":21805:21807   */\n      0x60\n        /* \"#utility.yul\":21794:21803   */\n      dup3\n        /* \"#utility.yul\":21790:21808   */\n      add\n        /* \"#utility.yul\":21782:21808   */\n      swap1\n      pop\n        /* \"#utility.yul\":21818:21889   */\n      tag_475\n        /* \"#utility.yul\":21886:21887   */\n      0x00\n        /* \"#utility.yul\":21875:21884   */\n      dup4\n        /* \"#utility.yul\":21871:21888   */\n      add\n        /* \"#utility.yul\":21862:21868   */\n      dup7\n        /* \"#utility.yul\":21818:21889   */\n      tag_252\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":21899:21971   */\n      tag_476\n        /* \"#utility.yul\":21967:21969   */\n      0x20\n        /* \"#utility.yul\":21956:21965   */\n      dup4\n        /* \"#utility.yul\":21952:21970   */\n      add\n        /* \"#utility.yul\":21943:21949   */\n      dup6\n        /* \"#utility.yul\":21899:21971   */\n      tag_252\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":21981:22053   */\n      tag_477\n        /* \"#utility.yul\":22049:22051   */\n      0x40\n        /* \"#utility.yul\":22038:22047   */\n      dup4\n        /* \"#utility.yul\":22034:22052   */\n      add\n        /* \"#utility.yul\":22025:22031   */\n      dup5\n        /* \"#utility.yul\":21981:22053   */\n      tag_222\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":21618:22060   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22066:22398   */\n    tag_153:\n        /* \"#utility.yul\":22187:22191   */\n      0x00\n        /* \"#utility.yul\":22225:22227   */\n      0x40\n        /* \"#utility.yul\":22214:22223   */\n      dup3\n        /* \"#utility.yul\":22210:22228   */\n      add\n        /* \"#utility.yul\":22202:22228   */\n      swap1\n      pop\n        /* \"#utility.yul\":22238:22309   */\n      tag_479\n        /* \"#utility.yul\":22306:22307   */\n      0x00\n        /* \"#utility.yul\":22295:22304   */\n      dup4\n        /* \"#utility.yul\":22291:22308   */\n      add\n        /* \"#utility.yul\":22282:22288   */\n      dup6\n        /* \"#utility.yul\":22238:22309   */\n      tag_252\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":22319:22391   */\n      tag_480\n        /* \"#utility.yul\":22387:22389   */\n      0x20\n        /* \"#utility.yul\":22376:22385   */\n      dup4\n        /* \"#utility.yul\":22372:22390   */\n      add\n        /* \"#utility.yul\":22363:22369   */\n      dup5\n        /* \"#utility.yul\":22319:22391   */\n      tag_222\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":22066:22398   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22404:22494   */\n    tag_262:\n        /* \"#utility.yul\":22438:22445   */\n      0x00\n        /* \"#utility.yul\":22481:22486   */\n      dup2\n        /* \"#utility.yul\":22474:22487   */\n      iszero\n        /* \"#utility.yul\":22467:22488   */\n      iszero\n        /* \"#utility.yul\":22456:22488   */\n      swap1\n      pop\n        /* \"#utility.yul\":22404:22494   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22500:22616   */\n    tag_263:\n        /* \"#utility.yul\":22570:22591   */\n      tag_483\n        /* \"#utility.yul\":22585:22590   */\n      dup2\n        /* \"#utility.yul\":22570:22591   */\n      tag_262\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":22563:22568   */\n      dup2\n        /* \"#utility.yul\":22560:22592   */\n      eq\n        /* \"#utility.yul\":22550:22610   */\n      tag_484\n      jumpi\n        /* \"#utility.yul\":22606:22607   */\n      0x00\n        /* \"#utility.yul\":22603:22604   */\n      dup1\n        /* \"#utility.yul\":22596:22608   */\n      revert\n        /* \"#utility.yul\":22550:22610   */\n    tag_484:\n        /* \"#utility.yul\":22500:22616   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22622:22759   */\n    tag_264:\n        /* \"#utility.yul\":22676:22681   */\n      0x00\n        /* \"#utility.yul\":22707:22713   */\n      dup2\n        /* \"#utility.yul\":22701:22714   */\n      mload\n        /* \"#utility.yul\":22692:22714   */\n      swap1\n      pop\n        /* \"#utility.yul\":22723:22753   */\n      tag_486\n        /* \"#utility.yul\":22747:22752   */\n      dup2\n        /* \"#utility.yul\":22723:22753   */\n      tag_263\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":22622:22759   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22765:23110   */\n    tag_159:\n        /* \"#utility.yul\":22832:22838   */\n      0x00\n        /* \"#utility.yul\":22881:22883   */\n      0x20\n        /* \"#utility.yul\":22869:22878   */\n      dup3\n        /* \"#utility.yul\":22860:22867   */\n      dup5\n        /* \"#utility.yul\":22856:22879   */\n      sub\n        /* \"#utility.yul\":22852:22884   */\n      slt\n        /* \"#utility.yul\":22849:22968   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":22887:22966   */\n      tag_489\n      tag_206\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":22849:22968   */\n    tag_488:\n        /* \"#utility.yul\":23007:23008   */\n      0x00\n        /* \"#utility.yul\":23032:23093   */\n      tag_490\n        /* \"#utility.yul\":23085:23092   */\n      dup5\n        /* \"#utility.yul\":23076:23082   */\n      dup3\n        /* \"#utility.yul\":23065:23074   */\n      dup6\n        /* \"#utility.yul\":23061:23083   */\n      add\n        /* \"#utility.yul\":23032:23093   */\n      tag_264\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":23022:23093   */\n      swap2\n      pop\n        /* \"#utility.yul\":22978:23103   */\n      pop\n        /* \"#utility.yul\":22765:23110   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23116:23338   */\n    tag_162:\n        /* \"#utility.yul\":23209:23213   */\n      0x00\n        /* \"#utility.yul\":23247:23249   */\n      0x20\n        /* \"#utility.yul\":23236:23245   */\n      dup3\n        /* \"#utility.yul\":23232:23250   */\n      add\n        /* \"#utility.yul\":23224:23250   */\n      swap1\n      pop\n        /* \"#utility.yul\":23260:23331   */\n      tag_492\n        /* \"#utility.yul\":23328:23329   */\n      0x00\n        /* \"#utility.yul\":23317:23326   */\n      dup4\n        /* \"#utility.yul\":23313:23330   */\n      add\n        /* \"#utility.yul\":23304:23310   */\n      dup5\n        /* \"#utility.yul\":23260:23331   */\n      tag_252\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":23116:23338   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23344:23692   */\n    tag_170:\n        /* \"#utility.yul\":23473:23477   */\n      0x00\n        /* \"#utility.yul\":23511:23513   */\n      0x40\n        /* \"#utility.yul\":23500:23509   */\n      dup3\n        /* \"#utility.yul\":23496:23514   */\n      add\n        /* \"#utility.yul\":23488:23514   */\n      swap1\n      pop\n        /* \"#utility.yul\":23524:23595   */\n      tag_494\n        /* \"#utility.yul\":23592:23593   */\n      0x00\n        /* \"#utility.yul\":23581:23590   */\n      dup4\n        /* \"#utility.yul\":23577:23594   */\n      add\n        /* \"#utility.yul\":23568:23574   */\n      dup6\n        /* \"#utility.yul\":23524:23595   */\n      tag_252\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":23605:23685   */\n      tag_495\n        /* \"#utility.yul\":23681:23683   */\n      0x20\n        /* \"#utility.yul\":23670:23679   */\n      dup4\n        /* \"#utility.yul\":23666:23684   */\n      add\n        /* \"#utility.yul\":23657:23663   */\n      dup5\n        /* \"#utility.yul\":23605:23685   */\n      tag_244\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":23344:23692   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23698:23796   */\n    tag_265:\n        /* \"#utility.yul\":23749:23755   */\n      0x00\n        /* \"#utility.yul\":23783:23788   */\n      dup2\n        /* \"#utility.yul\":23777:23789   */\n      mload\n        /* \"#utility.yul\":23767:23789   */\n      swap1\n      pop\n        /* \"#utility.yul\":23698:23796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23802:23949   */\n    tag_266:\n        /* \"#utility.yul\":23903:23914   */\n      0x00\n        /* \"#utility.yul\":23940:23943   */\n      dup2\n        /* \"#utility.yul\":23925:23943   */\n      swap1\n      pop\n        /* \"#utility.yul\":23802:23949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23955:24201   */\n    tag_267:\n        /* \"#utility.yul\":24036:24037   */\n      0x00\n        /* \"#utility.yul\":24046:24159   */\n    tag_499:\n        /* \"#utility.yul\":24060:24066   */\n      dup4\n        /* \"#utility.yul\":24057:24058   */\n      dup2\n        /* \"#utility.yul\":24054:24067   */\n      lt\n        /* \"#utility.yul\":24046:24159   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":24145:24146   */\n      dup1\n        /* \"#utility.yul\":24140:24143   */\n      dup3\n        /* \"#utility.yul\":24136:24147   */\n      add\n        /* \"#utility.yul\":24130:24148   */\n      mload\n        /* \"#utility.yul\":24126:24127   */\n      dup2\n        /* \"#utility.yul\":24121:24124   */\n      dup5\n        /* \"#utility.yul\":24117:24128   */\n      add\n        /* \"#utility.yul\":24110:24149   */\n      mstore\n        /* \"#utility.yul\":24082:24084   */\n      0x20\n        /* \"#utility.yul\":24079:24080   */\n      dup2\n        /* \"#utility.yul\":24075:24085   */\n      add\n        /* \"#utility.yul\":24070:24085   */\n      swap1\n      pop\n        /* \"#utility.yul\":24046:24159   */\n      jump(tag_499)\n    tag_501:\n        /* \"#utility.yul\":24193:24194   */\n      0x00\n        /* \"#utility.yul\":24184:24190   */\n      dup5\n        /* \"#utility.yul\":24179:24182   */\n      dup5\n        /* \"#utility.yul\":24175:24191   */\n      add\n        /* \"#utility.yul\":24168:24195   */\n      mstore\n        /* \"#utility.yul\":24017:24201   */\n      pop\n        /* \"#utility.yul\":23955:24201   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24207:24593   */\n    tag_268:\n        /* \"#utility.yul\":24311:24314   */\n      0x00\n        /* \"#utility.yul\":24339:24377   */\n      tag_503\n        /* \"#utility.yul\":24371:24376   */\n      dup3\n        /* \"#utility.yul\":24339:24377   */\n      tag_265\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":24393:24481   */\n      tag_504\n        /* \"#utility.yul\":24474:24480   */\n      dup2\n        /* \"#utility.yul\":24469:24472   */\n      dup6\n        /* \"#utility.yul\":24393:24481   */\n      tag_266\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":24386:24481   */\n      swap4\n      pop\n        /* \"#utility.yul\":24490:24555   */\n      tag_505\n        /* \"#utility.yul\":24548:24554   */\n      dup2\n        /* \"#utility.yul\":24543:24546   */\n      dup6\n        /* \"#utility.yul\":24536:24540   */\n      0x20\n        /* \"#utility.yul\":24529:24534   */\n      dup7\n        /* \"#utility.yul\":24525:24541   */\n      add\n        /* \"#utility.yul\":24490:24555   */\n      tag_267\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":24580:24586   */\n      dup1\n        /* \"#utility.yul\":24575:24578   */\n      dup5\n        /* \"#utility.yul\":24571:24587   */\n      add\n        /* \"#utility.yul\":24564:24587   */\n      swap2\n      pop\n        /* \"#utility.yul\":24315:24593   */\n      pop\n        /* \"#utility.yul\":24207:24593   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24599:24870   */\n    tag_177:\n        /* \"#utility.yul\":24729:24732   */\n      0x00\n        /* \"#utility.yul\":24751:24844   */\n      tag_507\n        /* \"#utility.yul\":24840:24843   */\n      dup3\n        /* \"#utility.yul\":24831:24837   */\n      dup5\n        /* \"#utility.yul\":24751:24844   */\n      tag_268\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":24744:24844   */\n      swap2\n      pop\n        /* \"#utility.yul\":24861:24864   */\n      dup2\n        /* \"#utility.yul\":24854:24864   */\n      swap1\n      pop\n        /* \"#utility.yul\":24599:24870   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220311e4c1d4546bf94d2c90bc7f16c1d29ed287fc3da017696b204dab072873dd764736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1837": {
									"entryPoint": null,
									"id": 1837,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 197,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1355:11",
										"nodeType": "YulBlock",
										"src": "0:1355:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:81:11",
													"nodeType": "YulBlock",
													"src": "379:81:11",
													"statements": [
														{
															"nativeSrc": "389:65:11",
															"nodeType": "YulAssignment",
															"src": "389:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:11",
																		"nodeType": "YulLiteral",
																		"src": "411:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:11"
																},
																"nativeSrc": "400:54:11",
																"nodeType": "YulFunctionCall",
																"src": "400:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:126:11"
											},
											{
												"body": {
													"nativeSrc": "511:51:11",
													"nodeType": "YulBlock",
													"src": "511:51:11",
													"statements": [
														{
															"nativeSrc": "521:35:11",
															"nodeType": "YulAssignment",
															"src": "521:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:11"
																},
																"nativeSrc": "532:24:11",
																"nodeType": "YulFunctionCall",
																"src": "532:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:11",
														"nodeType": "YulTypedName",
														"src": "493:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:11",
														"nodeType": "YulTypedName",
														"src": "503:7:11",
														"type": ""
													}
												],
												"src": "466:96:11"
											},
											{
												"body": {
													"nativeSrc": "611:79:11",
													"nodeType": "YulBlock",
													"src": "611:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:11",
																"nodeType": "YulBlock",
																"src": "668:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:11",
																					"nodeType": "YulLiteral",
																					"src": "677:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:11",
																					"nodeType": "YulLiteral",
																					"src": "680:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:11"
																			},
																			"nativeSrc": "670:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:11"
																		},
																		"nativeSrc": "670:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:11"
																				},
																				"nativeSrc": "641:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:11"
																		},
																		"nativeSrc": "631:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:11"
																},
																"nativeSrc": "624:43:11",
																"nodeType": "YulFunctionCall",
																"src": "624:43:11"
															},
															"nativeSrc": "621:63:11",
															"nodeType": "YulIf",
															"src": "621:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:11",
														"nodeType": "YulTypedName",
														"src": "604:5:11",
														"type": ""
													}
												],
												"src": "568:122:11"
											},
											{
												"body": {
													"nativeSrc": "759:80:11",
													"nodeType": "YulBlock",
													"src": "759:80:11",
													"statements": [
														{
															"nativeSrc": "769:22:11",
															"nodeType": "YulAssignment",
															"src": "769:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:11"
																},
																"nativeSrc": "778:13:11",
																"nodeType": "YulFunctionCall",
																"src": "778:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:11"
																},
																"nativeSrc": "800:33:11",
																"nodeType": "YulFunctionCall",
																"src": "800:33:11"
															},
															"nativeSrc": "800:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:11"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:11",
														"nodeType": "YulTypedName",
														"src": "737:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:11",
														"nodeType": "YulTypedName",
														"src": "745:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:11",
														"nodeType": "YulTypedName",
														"src": "753:5:11",
														"type": ""
													}
												],
												"src": "696:143:11"
											},
											{
												"body": {
													"nativeSrc": "939:413:11",
													"nodeType": "YulBlock",
													"src": "939:413:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:11",
																"nodeType": "YulBlock",
																"src": "985:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:11"
																			},
																			"nativeSrc": "987:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:11"
																		},
																		"nativeSrc": "987:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:11"
																		},
																		"nativeSrc": "956:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:11",
																		"nodeType": "YulLiteral",
																		"src": "981:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:11"
																},
																"nativeSrc": "952:32:11",
																"nodeType": "YulFunctionCall",
																"src": "952:32:11"
															},
															"nativeSrc": "949:119:11",
															"nodeType": "YulIf",
															"src": "949:119:11"
														},
														{
															"nativeSrc": "1078:128:11",
															"nodeType": "YulBlock",
															"src": "1078:128:11",
															"statements": [
																{
																	"nativeSrc": "1093:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:11"
																				},
																				"nativeSrc": "1164:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:11"
																		},
																		"nativeSrc": "1132:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:11",
															"nodeType": "YulBlock",
															"src": "1216:129:11",
															"statements": [
																{
																	"nativeSrc": "1231:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:11"
																				},
																				"nativeSrc": "1303:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:11"
																		},
																		"nativeSrc": "1271:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:11",
														"nodeType": "YulTypedName",
														"src": "901:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:11",
														"nodeType": "YulTypedName",
														"src": "912:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:11",
														"nodeType": "YulTypedName",
														"src": "924:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:11",
														"nodeType": "YulTypedName",
														"src": "932:6:11",
														"type": ""
													}
												],
												"src": "845:507:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040516200236d3803806200236d83398181016040528101906200003691906200012a565b8160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060015f8190555050506200016f565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620000f482620000c9565b9050919050565b6200010681620000e8565b811462000111575f80fd5b50565b5f815190506200012481620000fb565b92915050565b5f8060408385031215620001435762000142620000c5565b5b5f620001528582860162000114565b9250506020620001658582860162000114565b9150509250929050565b6121f0806200017d5f395ff3fe608060405234801561000f575f80fd5b506004361061009b575f3560e01c8063affed0e011610064578063affed0e014610135578063b197df5414610153578063c440fa0f1461016f578063d930da601461018b578063eb5a662e146101955761009b565b8062e1801c1461009f5780632f48ab7d146100bb578063735de9f7146100d957806386d86d84146100f7578063a63661a51461012b575b5f80fd5b6100b960048036038101906100b491906115c2565b6101c5565b005b6100c36103a8565b6040516100d0919061167a565b60405180910390f35b6100e16103cd565b6040516100ee91906116b3565b60405180910390f35b610111600480360381019061010c9190611707565b6103f2565b604051610122959493929190611741565b60405180910390f35b610133610424565b005b61013d61063b565b60405161014a9190611792565b60405180910390f35b61016d600480360381019061016891906115c2565b610640565b005b61018960048036038101906101849190611707565b61084c565b005b610193610e26565b005b6101af60048036038101906101aa9190611707565b610f31565b6040516101bc9190611792565b60405180910390f35b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015411610246576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023d90611805565b60405180910390fd5b5f8211610288576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027f9061186d565b60405180910390fd5b5f81116102ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c1906118d5565b60405180910390fd5b8060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600201819055508160015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101819055503373ffffffffffffffffffffffffffffffffffffffff167fc8108639f5e0627bac90449607e60d516a5082452e397808a067b57f755515fc838360405161039c9291906118f3565b60405180910390a25050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001602052805f5260405f205f91509050805f0154908060010154908060020154908060030154908060040154905085565b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0154116104a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049c90611964565b60405180910390fd5b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206002015411610527576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051e906118d5565b60405180910390fd5b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206002015461057133610f31565b116105b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a8906119f2565b60405180910390fd5b6001805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600301819055503373ffffffffffffffffffffffffffffffffffffffff167fa806cf17be1fb3cff26c4a6a46b735ddbf2ac07c138bdedb6d2ace798a2cfd4060405160405180910390a2565b5f5481565b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0154146106c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b890611805565b60405180910390fd5b5f8211610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa9061186d565b60405180910390fd5b5f8111610745576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073c906118d5565b60405180910390fd5b6040518060a001604052805f8081548092919061076190611a3d565b9190505581526020018381526020018281526020015f81526020015f81525060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f0155602082015181600101556040820151816002015560608201518160030155608082015181600401559050503373ffffffffffffffffffffffffffffffffffffffff167f89d3f1cdfad4e5c26535ac23dc61cf9e975667801747518f01b1b653545d736a83836040516108389291906118f3565b60405180910390a2610848610424565b5050565b6001805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060030154146108ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c590611ace565b60405180910390fd5b60015f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206002015461091833610f31565b11610958576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094f90611b5c565b60405180910390fd5b6201518060015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101546109a79190611b7a565b60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600401546109f29190611bbb565b421015610a34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2b90611c5e565b60405180910390fd5b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600201549050610aa560025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16833084610fd4565b610af260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683611056565b5f600267ffffffffffffffff811115610b0e57610b0d611c7c565b5b604051908082528060200260200182016040528015610b3c5781602001602082028036833780820191505090505b50905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815f81518110610b7457610b73611ca9565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c18573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c3c9190611cea565b81600181518110610c5057610c4f611ca9565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318cbafe5845f8530610e1042610cda9190611bbb565b6040518663ffffffff1660e01b8152600401610cfa959493929190611e14565b5f604051808303815f875af1158015610d15573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f82011682018060405250810190610d3d9190611fa3565b90505f81600181518110610d5457610d53611ca9565b5b602002602001015190504260015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600401819055508473ffffffffffffffffffffffffffffffffffffffff167f1a3abf7e0a472651ebe2c79a31a5f4660c7ea65e3086ee1742d7502999bbf5b58583604051610deb9291906118f3565b60405180910390a2610e1f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686836110ef565b5050505050565b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015411610ea7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9e90611964565b60405180910390fd5b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600301819055503373ffffffffffffffffffffffffffffffffffffffff167ff222abd4ee7afb02f9450183b95d07aaab2ea2f2d6748f55525c7e875fdd58a160405160405180910390a2565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e83306040518363ffffffff1660e01b8152600401610f8e929190611fea565b602060405180830381865afa158015610fa9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fcd9190612011565b9050919050565b611050848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016110099392919061203c565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061116e565b50505050565b5f8373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401611092929190611fea565b602060405180830381865afa1580156110ad573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110d19190612011565b90506110e9848484846110e49190611bbb565b611203565b50505050565b611169838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611122929190612071565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061116e565b505050565b5f611198828473ffffffffffffffffffffffffffffffffffffffff1661131090919063ffffffff16565b90505f8151141580156111bc5750808060200190518101906111ba91906120cd565b155b156111fe57826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016111f591906120f8565b60405180910390fd5b505050565b5f8373ffffffffffffffffffffffffffffffffffffffff1663095ea7b38484604051602401611233929190612071565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506112818482611325565b61130a576112ff848573ffffffffffffffffffffffffffffffffffffffff1663095ea7b3865f6040516024016112b8929190612111565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061116e565b611309848261116e565b5b50505050565b606061131d83835f6113e4565b905092915050565b5f805f8473ffffffffffffffffffffffffffffffffffffffff168460405161134d91906121a4565b5f604051808303815f865af19150503d805f8114611386576040519150601f19603f3d011682016040523d82523d5f602084013e61138b565b606091505b50915091508180156113b857505f815114806113b75750808060200190518101906113b691906120cd565b5b5b80156113da57505f8573ffffffffffffffffffffffffffffffffffffffff163b115b9250505092915050565b60608147101561142b57306040517fcd78605900000000000000000000000000000000000000000000000000000000815260040161142291906120f8565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff16848660405161145391906121a4565b5f6040518083038185875af1925050503d805f811461148d576040519150601f19603f3d011682016040523d82523d5f602084013e611492565b606091505b50915091506114a28683836114ad565b925050509392505050565b6060826114c2576114bd8261153a565b611532565b5f82511480156114e857505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561152a57836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161152191906120f8565b60405180910390fd5b819050611533565b5b9392505050565b5f8151111561154c5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b6115a18161158f565b81146115ab575f80fd5b50565b5f813590506115bc81611598565b92915050565b5f80604083850312156115d8576115d7611587565b5b5f6115e5858286016115ae565b92505060206115f6858286016115ae565b9150509250929050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61164261163d61163884611600565b61161f565b611600565b9050919050565b5f61165382611628565b9050919050565b5f61166482611649565b9050919050565b6116748161165a565b82525050565b5f60208201905061168d5f83018461166b565b92915050565b5f61169d82611649565b9050919050565b6116ad81611693565b82525050565b5f6020820190506116c65f8301846116a4565b92915050565b5f6116d682611600565b9050919050565b6116e6816116cc565b81146116f0575f80fd5b50565b5f81359050611701816116dd565b92915050565b5f6020828403121561171c5761171b611587565b5b5f611729848285016116f3565b91505092915050565b61173b8161158f565b82525050565b5f60a0820190506117545f830188611732565b6117616020830187611732565b61176e6040830186611732565b61177b6060830185611732565b6117886080830184611732565b9695505050505050565b5f6020820190506117a55f830184611732565b92915050565b5f82825260208201905092915050565b7f506c616e206973206578697374000000000000000000000000000000000000005f82015250565b5f6117ef600d836117ab565b91506117fa826117bb565b602082019050919050565b5f6020820190508181035f83015261181c816117e3565b9050919050565b7f4672657175656e6379206d7573742062652067726561746572207468616e20305f82015250565b5f6118576020836117ab565b915061186282611823565b602082019050919050565b5f6020820190508181035f8301526118848161184b565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f6118bf601d836117ab565b91506118ca8261188b565b602082019050919050565b5f6020820190508181035f8301526118ec816118b3565b9050919050565b5f6040820190506119065f830185611732565b6119136020830184611732565b9392505050565b7f506c616e206973206e6f742065786973740000000000000000000000000000005f82015250565b5f61194e6011836117ab565b91506119598261191a565b602082019050919050565b5f6020820190508181035f83015261197b81611942565b9050919050565b7f546f74616c206d7573742062652067726561746572207468616e20616d6f756e5f8201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b5f6119dc6021836117ab565b91506119e782611982565b604082019050919050565b5f6020820190508181035f830152611a09816119d0565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a478261158f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611a7957611a78611a10565b5b600182019050919050565b7f506c616e206973206e6f742061637469766500000000000000000000000000005f82015250565b5f611ab86012836117ab565b9150611ac382611a84565b602082019050919050565b5f6020820190508181035f830152611ae581611aac565b9050919050565b7f43616e6e6f742074726967676572206d6f7265207468616e2072656d61696e695f8201527f6e6720616d6f756e740000000000000000000000000000000000000000000000602082015250565b5f611b466029836117ab565b9150611b5182611aec565b604082019050919050565b5f6020820190508181035f830152611b7381611b3a565b9050919050565b5f611b848261158f565b9150611b8f8361158f565b9250828202611b9d8161158f565b91508282048414831517611bb457611bb3611a10565b5b5092915050565b5f611bc58261158f565b9150611bd08361158f565b9250828201905080821115611be857611be7611a10565b5b92915050565b7f43616e206f6e6c79207472696767657220706c616e206f6e63652070657220645f8201527f6179000000000000000000000000000000000000000000000000000000000000602082015250565b5f611c486022836117ab565b9150611c5382611bee565b604082019050919050565b5f6020820190508181035f830152611c7581611c3c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050611ce4816116dd565b92915050565b5f60208284031215611cff57611cfe611587565b5b5f611d0c84828501611cd6565b91505092915050565b5f819050919050565b5f611d38611d33611d2e84611d15565b61161f565b61158f565b9050919050565b611d4881611d1e565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611d80816116cc565b82525050565b5f611d918383611d77565b60208301905092915050565b5f602082019050919050565b5f611db382611d4e565b611dbd8185611d58565b9350611dc883611d68565b805f5b83811015611df8578151611ddf8882611d86565b9750611dea83611d9d565b925050600181019050611dcb565b5085935050505092915050565b611e0e816116cc565b82525050565b5f60a082019050611e275f830188611732565b611e346020830187611d3f565b8181036040830152611e468186611da9565b9050611e556060830185611e05565b611e626080830184611732565b9695505050505050565b5f80fd5b5f601f19601f8301169050919050565b611e8982611e70565b810181811067ffffffffffffffff82111715611ea857611ea7611c7c565b5b80604052505050565b5f611eba61157e565b9050611ec68282611e80565b919050565b5f67ffffffffffffffff821115611ee557611ee4611c7c565b5b602082029050602081019050919050565b5f80fd5b5f81519050611f0881611598565b92915050565b5f611f20611f1b84611ecb565b611eb1565b90508083825260208201905060208402830185811115611f4357611f42611ef6565b5b835b81811015611f6c5780611f588882611efa565b845260208401935050602081019050611f45565b5050509392505050565b5f82601f830112611f8a57611f89611e6c565b5b8151611f9a848260208601611f0e565b91505092915050565b5f60208284031215611fb857611fb7611587565b5b5f82015167ffffffffffffffff811115611fd557611fd461158b565b5b611fe184828501611f76565b91505092915050565b5f604082019050611ffd5f830185611e05565b61200a6020830184611e05565b9392505050565b5f6020828403121561202657612025611587565b5b5f61203384828501611efa565b91505092915050565b5f60608201905061204f5f830186611e05565b61205c6020830185611e05565b6120696040830184611732565b949350505050565b5f6040820190506120845f830185611e05565b6120916020830184611732565b9392505050565b5f8115159050919050565b6120ac81612098565b81146120b6575f80fd5b50565b5f815190506120c7816120a3565b92915050565b5f602082840312156120e2576120e1611587565b5b5f6120ef848285016120b9565b91505092915050565b5f60208201905061210b5f830184611e05565b92915050565b5f6040820190506121245f830185611e05565b6121316020830184611d3f565b9392505050565b5f81519050919050565b5f81905092915050565b5f5b8381101561216957808201518184015260208101905061214e565b5f8484015250505050565b5f61217e82612138565b6121888185612142565b935061219881856020860161214c565b80840191505092915050565b5f6121af8284612174565b91508190509291505056fea2646970667358221220311e4c1d4546bf94d2c90bc7f16c1d29ed287fc3da017696b204dab072873dd764736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x236D CODESIZE SUB DUP1 PUSH3 0x236D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x12A JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x16F JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xF4 DUP3 PUSH3 0xC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x106 DUP2 PUSH3 0xE8 JUMP JUMPDEST DUP2 EQ PUSH3 0x111 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x124 DUP2 PUSH3 0xFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x143 JUMPI PUSH3 0x142 PUSH3 0xC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x152 DUP6 DUP3 DUP7 ADD PUSH3 0x114 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x165 DUP6 DUP3 DUP7 ADD PUSH3 0x114 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x21F0 DUP1 PUSH3 0x17D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAFFED0E0 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xB197DF54 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0xC440FA0F EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xD930DA60 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xEB5A662E EQ PUSH2 0x195 JUMPI PUSH2 0x9B JUMP JUMPDEST DUP1 PUSH3 0xE1801C EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0x735DE9F7 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x86D86D84 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xA63661A5 EQ PUSH2 0x12B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0x1C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC3 PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE1 PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0x16B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH2 0x424 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13D PUSH2 0x63B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1792 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x189 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH2 0x84C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x193 PUSH2 0xE26 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH2 0xF31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x1792 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT PUSH2 0x246 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23D SWAP1 PUSH2 0x1805 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x288 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x2CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C1 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC8108639F5E0627BAC90449607E60D516A5082452E397808A067B57F755515FC DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x39C SWAP3 SWAP2 SWAP1 PUSH2 0x18F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT PUSH2 0x4A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49C SWAP1 PUSH2 0x1964 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD GT PUSH2 0x527 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51E SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x571 CALLER PUSH2 0xF31 JUMP JUMPDEST GT PUSH2 0x5B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A8 SWAP1 PUSH2 0x19F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA806CF17BE1FB3CFF26C4A6A46B735DDBF2AC07C138BDEDB6D2ACE798A2CFD40 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD EQ PUSH2 0x6C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B8 SWAP1 PUSH2 0x1805 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x745 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73C SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x761 SWAP1 PUSH2 0x1A3D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x89D3F1CDFAD4E5C26535AC23DC61CF9E975667801747518F01B1B653545D736A DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x838 SWAP3 SWAP2 SWAP1 PUSH2 0x18F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x848 PUSH2 0x424 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD EQ PUSH2 0x8CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C5 SWAP1 PUSH2 0x1ACE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x918 CALLER PUSH2 0xF31 JUMP JUMPDEST GT PUSH2 0x958 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94F SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x15180 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x9A7 SWAP2 SWAP1 PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x9F2 SWAP2 SWAP1 PUSH2 0x1BBB JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xA34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2B SWAP1 PUSH2 0x1C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH2 0xAA5 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 ADDRESS DUP5 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0xAF2 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x1056 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB0E JUMPI PUSH2 0xB0D PUSH2 0x1C7C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB3C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xB74 JUMPI PUSH2 0xB73 PUSH2 0x1CA9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC18 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC3C SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xC50 JUMPI PUSH2 0xC4F PUSH2 0x1CA9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18CBAFE5 DUP5 PUSH0 DUP6 ADDRESS PUSH2 0xE10 TIMESTAMP PUSH2 0xCDA SWAP2 SWAP1 PUSH2 0x1BBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E14 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD15 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD3D SWAP2 SWAP1 PUSH2 0x1FA3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xD54 JUMPI PUSH2 0xD53 PUSH2 0x1CA9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP TIMESTAMP PUSH1 0x1 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1A3ABF7E0A472651EBE2C79A31A5F4660C7EA65E3086EE1742D7502999BBF5B5 DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0xDEB SWAP3 SWAP2 SWAP1 PUSH2 0x18F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xE1F PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP4 PUSH2 0x10EF JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT PUSH2 0xEA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9E SWAP1 PUSH2 0x1964 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF222ABD4EE7AFB02F9450183B95D07AAAB2EA2F2D6748F55525C7E875FDD58A1 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP4 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8E SWAP3 SWAP2 SWAP1 PUSH2 0x1FEA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFA9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFCD SWAP2 SWAP1 PUSH2 0x2011 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1050 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1009 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x203C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x116E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1092 SWAP3 SWAP2 SWAP1 PUSH2 0x1FEA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10AD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10D1 SWAP2 SWAP1 PUSH2 0x2011 JUMP JUMPDEST SWAP1 POP PUSH2 0x10E9 DUP5 DUP5 DUP5 DUP5 PUSH2 0x10E4 SWAP2 SWAP1 PUSH2 0x1BBB JUMP JUMPDEST PUSH2 0x1203 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1169 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1122 SWAP3 SWAP2 SWAP1 PUSH2 0x2071 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x116E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1198 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1310 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x11BC JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x11BA SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x11FE JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F5 SWAP2 SWAP1 PUSH2 0x20F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1233 SWAP3 SWAP2 SWAP1 PUSH2 0x2071 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH2 0x1281 DUP5 DUP3 PUSH2 0x1325 JUMP JUMPDEST PUSH2 0x130A JUMPI PUSH2 0x12FF DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP7 PUSH0 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x12B8 SWAP3 SWAP2 SWAP1 PUSH2 0x2111 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x116E JUMP JUMPDEST PUSH2 0x1309 DUP5 DUP3 PUSH2 0x116E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x131D DUP4 DUP4 PUSH0 PUSH2 0x13E4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x134D SWAP2 SWAP1 PUSH2 0x21A4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1386 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x138B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x13B8 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x13B7 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x13B6 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST JUMPDEST JUMPDEST DUP1 ISZERO PUSH2 0x13DA JUMPI POP PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x142B JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1422 SWAP2 SWAP1 PUSH2 0x20F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1453 SWAP2 SWAP1 PUSH2 0x21A4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x148D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1492 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x14A2 DUP7 DUP4 DUP4 PUSH2 0x14AD JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x14C2 JUMPI PUSH2 0x14BD DUP3 PUSH2 0x153A JUMP JUMPDEST PUSH2 0x1532 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x14E8 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x152A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1521 SWAP2 SWAP1 PUSH2 0x20F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1533 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x154C JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A1 DUP2 PUSH2 0x158F JUMP JUMPDEST DUP2 EQ PUSH2 0x15AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15BC DUP2 PUSH2 0x1598 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15D8 JUMPI PUSH2 0x15D7 PUSH2 0x1587 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15E5 DUP6 DUP3 DUP7 ADD PUSH2 0x15AE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15F6 DUP6 DUP3 DUP7 ADD PUSH2 0x15AE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1642 PUSH2 0x163D PUSH2 0x1638 DUP5 PUSH2 0x1600 JUMP JUMPDEST PUSH2 0x161F JUMP JUMPDEST PUSH2 0x1600 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1653 DUP3 PUSH2 0x1628 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1664 DUP3 PUSH2 0x1649 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1674 DUP2 PUSH2 0x165A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x168D PUSH0 DUP4 ADD DUP5 PUSH2 0x166B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x169D DUP3 PUSH2 0x1649 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16AD DUP2 PUSH2 0x1693 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16C6 PUSH0 DUP4 ADD DUP5 PUSH2 0x16A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16D6 DUP3 PUSH2 0x1600 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16E6 DUP2 PUSH2 0x16CC JUMP JUMPDEST DUP2 EQ PUSH2 0x16F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1701 DUP2 PUSH2 0x16DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x171C JUMPI PUSH2 0x171B PUSH2 0x1587 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1729 DUP5 DUP3 DUP6 ADD PUSH2 0x16F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x173B DUP2 PUSH2 0x158F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1754 PUSH0 DUP4 ADD DUP9 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x1761 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x176E PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x177B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x1788 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1732 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17A5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1732 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506C616E20697320657869737400000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17EF PUSH1 0xD DUP4 PUSH2 0x17AB JUMP JUMPDEST SWAP2 POP PUSH2 0x17FA DUP3 PUSH2 0x17BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x181C DUP2 PUSH2 0x17E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4672657175656E6379206D7573742062652067726561746572207468616E2030 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1857 PUSH1 0x20 DUP4 PUSH2 0x17AB JUMP JUMPDEST SWAP2 POP PUSH2 0x1862 DUP3 PUSH2 0x1823 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1884 DUP2 PUSH2 0x184B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18BF PUSH1 0x1D DUP4 PUSH2 0x17AB JUMP JUMPDEST SWAP2 POP PUSH2 0x18CA DUP3 PUSH2 0x188B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18EC DUP2 PUSH2 0x18B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1906 PUSH0 DUP4 ADD DUP6 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x1913 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1732 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x506C616E206973206E6F74206578697374000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x194E PUSH1 0x11 DUP4 PUSH2 0x17AB JUMP JUMPDEST SWAP2 POP PUSH2 0x1959 DUP3 PUSH2 0x191A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x197B DUP2 PUSH2 0x1942 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F74616C206D7573742062652067726561746572207468616E20616D6F756E PUSH0 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19DC PUSH1 0x21 DUP4 PUSH2 0x17AB JUMP JUMPDEST SWAP2 POP PUSH2 0x19E7 DUP3 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A09 DUP2 PUSH2 0x19D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A47 DUP3 PUSH2 0x158F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1A79 JUMPI PUSH2 0x1A78 PUSH2 0x1A10 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C616E206973206E6F74206163746976650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB8 PUSH1 0x12 DUP4 PUSH2 0x17AB JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC3 DUP3 PUSH2 0x1A84 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AE5 DUP2 PUSH2 0x1AAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F742074726967676572206D6F7265207468616E2072656D61696E69 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E6720616D6F756E740000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B46 PUSH1 0x29 DUP4 PUSH2 0x17AB JUMP JUMPDEST SWAP2 POP PUSH2 0x1B51 DUP3 PUSH2 0x1AEC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B73 DUP2 PUSH2 0x1B3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B84 DUP3 PUSH2 0x158F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B8F DUP4 PUSH2 0x158F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1B9D DUP2 PUSH2 0x158F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1BB4 JUMPI PUSH2 0x1BB3 PUSH2 0x1A10 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BC5 DUP3 PUSH2 0x158F JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD0 DUP4 PUSH2 0x158F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1BE8 JUMPI PUSH2 0x1BE7 PUSH2 0x1A10 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E206F6E6C79207472696767657220706C616E206F6E6365207065722064 PUSH0 DUP3 ADD MSTORE PUSH32 0x6179000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C48 PUSH1 0x22 DUP4 PUSH2 0x17AB JUMP JUMPDEST SWAP2 POP PUSH2 0x1C53 DUP3 PUSH2 0x1BEE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C75 DUP2 PUSH2 0x1C3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CE4 DUP2 PUSH2 0x16DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CFF JUMPI PUSH2 0x1CFE PUSH2 0x1587 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D0C DUP5 DUP3 DUP6 ADD PUSH2 0x1CD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D38 PUSH2 0x1D33 PUSH2 0x1D2E DUP5 PUSH2 0x1D15 JUMP JUMPDEST PUSH2 0x161F JUMP JUMPDEST PUSH2 0x158F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D48 DUP2 PUSH2 0x1D1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D80 DUP2 PUSH2 0x16CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D91 DUP4 DUP4 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DB3 DUP3 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x1DBD DUP2 DUP6 PUSH2 0x1D58 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DC8 DUP4 PUSH2 0x1D68 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DF8 JUMPI DUP2 MLOAD PUSH2 0x1DDF DUP9 DUP3 PUSH2 0x1D86 JUMP JUMPDEST SWAP8 POP PUSH2 0x1DEA DUP4 PUSH2 0x1D9D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1DCB JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E0E DUP2 PUSH2 0x16CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1E27 PUSH0 DUP4 ADD DUP9 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x1E34 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1D3F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1E46 DUP2 DUP7 PUSH2 0x1DA9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E55 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0x1E62 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1732 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E89 DUP3 PUSH2 0x1E70 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1EA8 JUMPI PUSH2 0x1EA7 PUSH2 0x1C7C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EBA PUSH2 0x157E JUMP JUMPDEST SWAP1 POP PUSH2 0x1EC6 DUP3 DUP3 PUSH2 0x1E80 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EE5 JUMPI PUSH2 0x1EE4 PUSH2 0x1C7C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F08 DUP2 PUSH2 0x1598 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F20 PUSH2 0x1F1B DUP5 PUSH2 0x1ECB JUMP JUMPDEST PUSH2 0x1EB1 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1F43 JUMPI PUSH2 0x1F42 PUSH2 0x1EF6 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1F6C JUMPI DUP1 PUSH2 0x1F58 DUP9 DUP3 PUSH2 0x1EFA JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F45 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F8A JUMPI PUSH2 0x1F89 PUSH2 0x1E6C JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1F9A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F0E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FB8 JUMPI PUSH2 0x1FB7 PUSH2 0x1587 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FD5 JUMPI PUSH2 0x1FD4 PUSH2 0x158B JUMP JUMPDEST JUMPDEST PUSH2 0x1FE1 DUP5 DUP3 DUP6 ADD PUSH2 0x1F76 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FFD PUSH0 DUP4 ADD DUP6 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0x200A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E05 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2026 JUMPI PUSH2 0x2025 PUSH2 0x1587 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2033 DUP5 DUP3 DUP6 ADD PUSH2 0x1EFA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x204F PUSH0 DUP4 ADD DUP7 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0x205C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0x2069 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1732 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2084 PUSH0 DUP4 ADD DUP6 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0x2091 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1732 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20AC DUP2 PUSH2 0x2098 JUMP JUMPDEST DUP2 EQ PUSH2 0x20B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x20C7 DUP2 PUSH2 0x20A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20E2 JUMPI PUSH2 0x20E1 PUSH2 0x1587 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20EF DUP5 DUP3 DUP6 ADD PUSH2 0x20B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x210B PUSH0 DUP4 ADD DUP5 PUSH2 0x1E05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2124 PUSH0 DUP4 ADD DUP6 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0x2131 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D3F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2169 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x214E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x217E DUP3 PUSH2 0x2138 JUMP JUMPDEST PUSH2 0x2188 DUP2 DUP6 PUSH2 0x2142 JUMP JUMPDEST SWAP4 POP PUSH2 0x2198 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x214C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21AF DUP3 DUP5 PUSH2 0x2174 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0x1E 0x4C SAR GASLIMIT CHAINID 0xBF SWAP5 0xD2 0xC9 SIGNEXTEND 0xC7 CALL PUSH13 0x1D29ED287FC3DA017696B204DA 0xB0 PUSH19 0x873DD764736F6C634300081600330000000000 ",
							"sourceMap": "231:3624:10:-:0;;;873:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;944:5;931:4;;:19;;;;;;;;;;;;;;;;;;992:14;957:13;;:50;;;;;;;;;;;;;;;;;;1022:1;1014:5;:9;;;;873:156;;231:3624;;88:117:11;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;231:3624:10:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturnBool_1080": {
									"entryPoint": 4901,
									"id": 1080,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_callOptionalReturn_1031": {
									"entryPoint": 4462,
									"id": 1031,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_1333": {
									"entryPoint": 5434,
									"id": 1333,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@createPlan_1911": {
									"entryPoint": 1600,
									"id": 1911,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@forceApprove_989": {
									"entryPoint": 4611,
									"id": 989,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@functionCallWithValue_1201": {
									"entryPoint": 5092,
									"id": 1201,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_1155": {
									"entryPoint": 4880,
									"id": 1155,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAllowance_1854": {
									"entryPoint": 3889,
									"id": 1854,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nonce_1791": {
									"entryPoint": 1595,
									"id": 1791,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@plans_1807": {
									"entryPoint": 1010,
									"id": 1807,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeIncreaseAllowance_899": {
									"entryPoint": 4182,
									"id": 899,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_868": {
									"entryPoint": 4052,
									"id": 868,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_841": {
									"entryPoint": 4335,
									"id": 841,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@startPlan_2020": {
									"entryPoint": 1060,
									"id": 2020,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stopPlan_2048": {
									"entryPoint": 3622,
									"id": 2048,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@triggerPlan_2201": {
									"entryPoint": 2124,
									"id": 2201,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@uniswapRouter_1813": {
									"entryPoint": 973,
									"id": 1813,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updatePlan_1967": {
									"entryPoint": 453,
									"id": 1967,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@usdt_1810": {
									"entryPoint": 936,
									"id": 1810,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1293": {
									"entryPoint": 5293,
									"id": 1293,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 7950,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 7382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 8054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 7402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 8099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 7558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 7543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack": {
									"entryPoint": 5739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IUniswapV2Router02_$1752_to_t_address_fromStack": {
									"entryPoint": 5796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 7487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0d0ccbf0fb388ef2019a4c569d6a5318305b2bf4cf0afc9067c0a6b28559054d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 8170,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8252,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8465,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8305,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed": {
									"entryPoint": 5754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IUniswapV2Router02_$1752__to_t_address__fromStack_reversed": {
									"entryPoint": 5811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d0ccbf0fb388ef2019a4c569d6a5318305b2bf4cf0afc9067c0a6b28559054d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7700,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6387,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5953,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5502,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 7445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ERC20_$651_to_t_address": {
									"entryPoint": 5722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IUniswapV2Router02_$1752_to_t_address": {
									"entryPoint": 5779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 7454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8524,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 7808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 5663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6672,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7337,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7292,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7788,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 7926,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5515,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5511,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d0ccbf0fb388ef2019a4c569d6a5318305b2bf4cf0afc9067c0a6b28559054d": {
									"entryPoint": 7150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad": {
									"entryPoint": 6075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c": {
									"entryPoint": 6788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296": {
									"entryPoint": 6283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa": {
									"entryPoint": 6530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2": {
									"entryPoint": 6426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24": {
									"entryPoint": 6892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016": {
									"entryPoint": 6179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:24873:11",
										"nodeType": "YulBlock",
										"src": "0:24873:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:32:11",
													"nodeType": "YulBlock",
													"src": "379:32:11",
													"statements": [
														{
															"nativeSrc": "389:16:11",
															"nodeType": "YulAssignment",
															"src": "389:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:11",
																"nodeType": "YulIdentifier",
																"src": "400:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:77:11"
											},
											{
												"body": {
													"nativeSrc": "460:79:11",
													"nodeType": "YulBlock",
													"src": "460:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:11",
																"nodeType": "YulBlock",
																"src": "517:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:11",
																					"nodeType": "YulLiteral",
																					"src": "526:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:11",
																					"nodeType": "YulLiteral",
																					"src": "529:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:11"
																			},
																			"nativeSrc": "519:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:11"
																		},
																		"nativeSrc": "519:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:11"
																				},
																				"nativeSrc": "490:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:11"
																		},
																		"nativeSrc": "480:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:11"
																},
																"nativeSrc": "473:43:11",
																"nodeType": "YulFunctionCall",
																"src": "473:43:11"
															},
															"nativeSrc": "470:63:11",
															"nodeType": "YulIf",
															"src": "470:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:11",
														"nodeType": "YulTypedName",
														"src": "453:5:11",
														"type": ""
													}
												],
												"src": "417:122:11"
											},
											{
												"body": {
													"nativeSrc": "597:87:11",
													"nodeType": "YulBlock",
													"src": "597:87:11",
													"statements": [
														{
															"nativeSrc": "607:29:11",
															"nodeType": "YulAssignment",
															"src": "607:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:11"
																},
																"nativeSrc": "616:20:11",
																"nodeType": "YulFunctionCall",
																"src": "616:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:11"
																},
																"nativeSrc": "645:33:11",
																"nodeType": "YulFunctionCall",
																"src": "645:33:11"
															},
															"nativeSrc": "645:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:11",
														"nodeType": "YulTypedName",
														"src": "575:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:11",
														"nodeType": "YulTypedName",
														"src": "583:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:11",
														"nodeType": "YulTypedName",
														"src": "591:5:11",
														"type": ""
													}
												],
												"src": "545:139:11"
											},
											{
												"body": {
													"nativeSrc": "773:391:11",
													"nodeType": "YulBlock",
													"src": "773:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "819:83:11",
																"nodeType": "YulBlock",
																"src": "819:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "821:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "821:77:11"
																			},
																			"nativeSrc": "821:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "821:79:11"
																		},
																		"nativeSrc": "821:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "821:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "794:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "794:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "803:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "803:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "790:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "790:3:11"
																		},
																		"nativeSrc": "790:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "790:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "815:2:11",
																		"nodeType": "YulLiteral",
																		"src": "815:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "786:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "786:3:11"
																},
																"nativeSrc": "786:32:11",
																"nodeType": "YulFunctionCall",
																"src": "786:32:11"
															},
															"nativeSrc": "783:119:11",
															"nodeType": "YulIf",
															"src": "783:119:11"
														},
														{
															"nativeSrc": "912:117:11",
															"nodeType": "YulBlock",
															"src": "912:117:11",
															"statements": [
																{
																	"nativeSrc": "927:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "927:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "941:1:11",
																		"nodeType": "YulLiteral",
																		"src": "941:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "931:6:11",
																			"nodeType": "YulTypedName",
																			"src": "931:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "956:63:11",
																	"nodeType": "YulAssignment",
																	"src": "956:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "991:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "991:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1002:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1002:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "987:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:11"
																				},
																				"nativeSrc": "987:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "987:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1011:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1011:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "966:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "966:20:11"
																		},
																		"nativeSrc": "966:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "966:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "956:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "956:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1039:118:11",
															"nodeType": "YulBlock",
															"src": "1039:118:11",
															"statements": [
																{
																	"nativeSrc": "1054:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1054:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1068:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1068:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1058:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1058:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1084:63:11",
																	"nodeType": "YulAssignment",
																	"src": "1084:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1119:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1119:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1130:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1130:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1115:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1115:3:11"
																				},
																				"nativeSrc": "1115:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1115:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1139:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1139:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1094:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "1094:20:11"
																		},
																		"nativeSrc": "1094:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1084:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1084:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "690:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "735:9:11",
														"nodeType": "YulTypedName",
														"src": "735:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "746:7:11",
														"nodeType": "YulTypedName",
														"src": "746:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "758:6:11",
														"nodeType": "YulTypedName",
														"src": "758:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "766:6:11",
														"nodeType": "YulTypedName",
														"src": "766:6:11",
														"type": ""
													}
												],
												"src": "690:474:11"
											},
											{
												"body": {
													"nativeSrc": "1215:81:11",
													"nodeType": "YulBlock",
													"src": "1215:81:11",
													"statements": [
														{
															"nativeSrc": "1225:65:11",
															"nodeType": "YulAssignment",
															"src": "1225:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1240:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1240:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1247:42:11",
																		"nodeType": "YulLiteral",
																		"src": "1247:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1236:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1236:3:11"
																},
																"nativeSrc": "1236:54:11",
																"nodeType": "YulFunctionCall",
																"src": "1236:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1225:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1225:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1170:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1197:5:11",
														"nodeType": "YulTypedName",
														"src": "1197:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1207:7:11",
														"nodeType": "YulTypedName",
														"src": "1207:7:11",
														"type": ""
													}
												],
												"src": "1170:126:11"
											},
											{
												"body": {
													"nativeSrc": "1334:28:11",
													"nodeType": "YulBlock",
													"src": "1334:28:11",
													"statements": [
														{
															"nativeSrc": "1344:12:11",
															"nodeType": "YulAssignment",
															"src": "1344:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "1351:5:11",
																"nodeType": "YulIdentifier",
																"src": "1351:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1344:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1344:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1302:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1320:5:11",
														"nodeType": "YulTypedName",
														"src": "1320:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1330:3:11",
														"nodeType": "YulTypedName",
														"src": "1330:3:11",
														"type": ""
													}
												],
												"src": "1302:60:11"
											},
											{
												"body": {
													"nativeSrc": "1428:82:11",
													"nodeType": "YulBlock",
													"src": "1428:82:11",
													"statements": [
														{
															"nativeSrc": "1438:66:11",
															"nodeType": "YulAssignment",
															"src": "1438:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1496:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1496:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1478:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1478:17:11"
																				},
																				"nativeSrc": "1478:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1478:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1469:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "1469:8:11"
																		},
																		"nativeSrc": "1469:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1469:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1451:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "1451:17:11"
																},
																"nativeSrc": "1451:53:11",
																"nodeType": "YulFunctionCall",
																"src": "1451:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1438:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "1438:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1368:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1408:5:11",
														"nodeType": "YulTypedName",
														"src": "1408:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1418:9:11",
														"nodeType": "YulTypedName",
														"src": "1418:9:11",
														"type": ""
													}
												],
												"src": "1368:142:11"
											},
											{
												"body": {
													"nativeSrc": "1576:66:11",
													"nodeType": "YulBlock",
													"src": "1576:66:11",
													"statements": [
														{
															"nativeSrc": "1586:50:11",
															"nodeType": "YulAssignment",
															"src": "1586:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1630:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1630:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1599:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "1599:30:11"
																},
																"nativeSrc": "1599:37:11",
																"nodeType": "YulFunctionCall",
																"src": "1599:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1586:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "1586:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1516:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1556:5:11",
														"nodeType": "YulTypedName",
														"src": "1556:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1566:9:11",
														"nodeType": "YulTypedName",
														"src": "1566:9:11",
														"type": ""
													}
												],
												"src": "1516:126:11"
											},
											{
												"body": {
													"nativeSrc": "1721:66:11",
													"nodeType": "YulBlock",
													"src": "1721:66:11",
													"statements": [
														{
															"nativeSrc": "1731:50:11",
															"nodeType": "YulAssignment",
															"src": "1731:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1775:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1775:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1744:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "1744:30:11"
																},
																"nativeSrc": "1744:37:11",
																"nodeType": "YulFunctionCall",
																"src": "1744:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1731:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "1731:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ERC20_$651_to_t_address",
												"nativeSrc": "1648:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1701:5:11",
														"nodeType": "YulTypedName",
														"src": "1701:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1711:9:11",
														"nodeType": "YulTypedName",
														"src": "1711:9:11",
														"type": ""
													}
												],
												"src": "1648:139:11"
											},
											{
												"body": {
													"nativeSrc": "1871:79:11",
													"nodeType": "YulBlock",
													"src": "1871:79:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1888:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1888:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1937:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1937:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ERC20_$651_to_t_address",
																			"nativeSrc": "1893:43:11",
																			"nodeType": "YulIdentifier",
																			"src": "1893:43:11"
																		},
																		"nativeSrc": "1893:50:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1893:50:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1881:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1881:6:11"
																},
																"nativeSrc": "1881:63:11",
																"nodeType": "YulFunctionCall",
																"src": "1881:63:11"
															},
															"nativeSrc": "1881:63:11",
															"nodeType": "YulExpressionStatement",
															"src": "1881:63:11"
														}
													]
												},
												"name": "abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack",
												"nativeSrc": "1793:157:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1859:5:11",
														"nodeType": "YulTypedName",
														"src": "1859:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1866:3:11",
														"nodeType": "YulTypedName",
														"src": "1866:3:11",
														"type": ""
													}
												],
												"src": "1793:157:11"
											},
											{
												"body": {
													"nativeSrc": "2067:137:11",
													"nodeType": "YulBlock",
													"src": "2067:137:11",
													"statements": [
														{
															"nativeSrc": "2077:26:11",
															"nodeType": "YulAssignment",
															"src": "2077:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2089:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2089:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2100:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2100:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2085:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2085:3:11"
																},
																"nativeSrc": "2085:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2085:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2077:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2077:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2170:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2170:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2183:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2183:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2194:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2194:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2179:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2179:3:11"
																		},
																		"nativeSrc": "2179:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2179:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack",
																	"nativeSrc": "2113:56:11",
																	"nodeType": "YulIdentifier",
																	"src": "2113:56:11"
																},
																"nativeSrc": "2113:84:11",
																"nodeType": "YulFunctionCall",
																"src": "2113:84:11"
															},
															"nativeSrc": "2113:84:11",
															"nodeType": "YulExpressionStatement",
															"src": "2113:84:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed",
												"nativeSrc": "1956:248:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2039:9:11",
														"nodeType": "YulTypedName",
														"src": "2039:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2051:6:11",
														"nodeType": "YulTypedName",
														"src": "2051:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2062:4:11",
														"nodeType": "YulTypedName",
														"src": "2062:4:11",
														"type": ""
													}
												],
												"src": "1956:248:11"
											},
											{
												"body": {
													"nativeSrc": "2297:66:11",
													"nodeType": "YulBlock",
													"src": "2297:66:11",
													"statements": [
														{
															"nativeSrc": "2307:50:11",
															"nodeType": "YulAssignment",
															"src": "2307:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2351:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2351:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2320:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "2320:30:11"
																},
																"nativeSrc": "2320:37:11",
																"nodeType": "YulFunctionCall",
																"src": "2320:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2307:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2307:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IUniswapV2Router02_$1752_to_t_address",
												"nativeSrc": "2210:153:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2277:5:11",
														"nodeType": "YulTypedName",
														"src": "2277:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2287:9:11",
														"nodeType": "YulTypedName",
														"src": "2287:9:11",
														"type": ""
													}
												],
												"src": "2210:153:11"
											},
											{
												"body": {
													"nativeSrc": "2461:93:11",
													"nodeType": "YulBlock",
													"src": "2461:93:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2478:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2478:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2541:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2541:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IUniswapV2Router02_$1752_to_t_address",
																			"nativeSrc": "2483:57:11",
																			"nodeType": "YulIdentifier",
																			"src": "2483:57:11"
																		},
																		"nativeSrc": "2483:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2483:64:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2471:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2471:6:11"
																},
																"nativeSrc": "2471:77:11",
																"nodeType": "YulFunctionCall",
																"src": "2471:77:11"
															},
															"nativeSrc": "2471:77:11",
															"nodeType": "YulExpressionStatement",
															"src": "2471:77:11"
														}
													]
												},
												"name": "abi_encode_t_contract$_IUniswapV2Router02_$1752_to_t_address_fromStack",
												"nativeSrc": "2369:185:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2449:5:11",
														"nodeType": "YulTypedName",
														"src": "2449:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2456:3:11",
														"nodeType": "YulTypedName",
														"src": "2456:3:11",
														"type": ""
													}
												],
												"src": "2369:185:11"
											},
											{
												"body": {
													"nativeSrc": "2685:151:11",
													"nodeType": "YulBlock",
													"src": "2685:151:11",
													"statements": [
														{
															"nativeSrc": "2695:26:11",
															"nodeType": "YulAssignment",
															"src": "2695:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2707:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2707:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2718:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2718:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2703:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2703:3:11"
																},
																"nativeSrc": "2703:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2703:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2695:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2695:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2802:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2802:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2815:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2815:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2826:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2826:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2811:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2811:3:11"
																		},
																		"nativeSrc": "2811:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2811:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IUniswapV2Router02_$1752_to_t_address_fromStack",
																	"nativeSrc": "2731:70:11",
																	"nodeType": "YulIdentifier",
																	"src": "2731:70:11"
																},
																"nativeSrc": "2731:98:11",
																"nodeType": "YulFunctionCall",
																"src": "2731:98:11"
															},
															"nativeSrc": "2731:98:11",
															"nodeType": "YulExpressionStatement",
															"src": "2731:98:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV2Router02_$1752__to_t_address__fromStack_reversed",
												"nativeSrc": "2560:276:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2657:9:11",
														"nodeType": "YulTypedName",
														"src": "2657:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2669:6:11",
														"nodeType": "YulTypedName",
														"src": "2669:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2680:4:11",
														"nodeType": "YulTypedName",
														"src": "2680:4:11",
														"type": ""
													}
												],
												"src": "2560:276:11"
											},
											{
												"body": {
													"nativeSrc": "2887:51:11",
													"nodeType": "YulBlock",
													"src": "2887:51:11",
													"statements": [
														{
															"nativeSrc": "2897:35:11",
															"nodeType": "YulAssignment",
															"src": "2897:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2926:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2926:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2908:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "2908:17:11"
																},
																"nativeSrc": "2908:24:11",
																"nodeType": "YulFunctionCall",
																"src": "2908:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2897:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2897:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2842:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2869:5:11",
														"nodeType": "YulTypedName",
														"src": "2869:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2879:7:11",
														"nodeType": "YulTypedName",
														"src": "2879:7:11",
														"type": ""
													}
												],
												"src": "2842:96:11"
											},
											{
												"body": {
													"nativeSrc": "2987:79:11",
													"nodeType": "YulBlock",
													"src": "2987:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3044:16:11",
																"nodeType": "YulBlock",
																"src": "3044:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3053:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3053:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3056:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3056:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3046:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3046:6:11"
																			},
																			"nativeSrc": "3046:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3046:12:11"
																		},
																		"nativeSrc": "3046:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3046:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3010:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3010:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3035:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3035:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3017:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "3017:17:11"
																				},
																				"nativeSrc": "3017:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3017:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3007:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3007:2:11"
																		},
																		"nativeSrc": "3007:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3007:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3000:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3000:6:11"
																},
																"nativeSrc": "3000:43:11",
																"nodeType": "YulFunctionCall",
																"src": "3000:43:11"
															},
															"nativeSrc": "2997:63:11",
															"nodeType": "YulIf",
															"src": "2997:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2944:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2980:5:11",
														"nodeType": "YulTypedName",
														"src": "2980:5:11",
														"type": ""
													}
												],
												"src": "2944:122:11"
											},
											{
												"body": {
													"nativeSrc": "3124:87:11",
													"nodeType": "YulBlock",
													"src": "3124:87:11",
													"statements": [
														{
															"nativeSrc": "3134:29:11",
															"nodeType": "YulAssignment",
															"src": "3134:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3156:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3156:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3143:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3143:12:11"
																},
																"nativeSrc": "3143:20:11",
																"nodeType": "YulFunctionCall",
																"src": "3143:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3134:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3134:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3199:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3199:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3172:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "3172:26:11"
																},
																"nativeSrc": "3172:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3172:33:11"
															},
															"nativeSrc": "3172:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3172:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3072:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3102:6:11",
														"nodeType": "YulTypedName",
														"src": "3102:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3110:3:11",
														"nodeType": "YulTypedName",
														"src": "3110:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3118:5:11",
														"nodeType": "YulTypedName",
														"src": "3118:5:11",
														"type": ""
													}
												],
												"src": "3072:139:11"
											},
											{
												"body": {
													"nativeSrc": "3283:263:11",
													"nodeType": "YulBlock",
													"src": "3283:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3329:83:11",
																"nodeType": "YulBlock",
																"src": "3329:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3331:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3331:77:11"
																			},
																			"nativeSrc": "3331:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3331:79:11"
																		},
																		"nativeSrc": "3331:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3331:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3304:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3304:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3313:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3313:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3300:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3300:3:11"
																		},
																		"nativeSrc": "3300:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3300:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3325:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3325:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3296:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3296:3:11"
																},
																"nativeSrc": "3296:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3296:32:11"
															},
															"nativeSrc": "3293:119:11",
															"nodeType": "YulIf",
															"src": "3293:119:11"
														},
														{
															"nativeSrc": "3422:117:11",
															"nodeType": "YulBlock",
															"src": "3422:117:11",
															"statements": [
																{
																	"nativeSrc": "3437:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3437:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3451:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3451:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3441:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3441:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3466:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3466:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3501:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3501:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3512:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3512:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3497:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3497:3:11"
																				},
																				"nativeSrc": "3497:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3497:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3521:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3521:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3476:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3476:20:11"
																		},
																		"nativeSrc": "3476:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3476:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3466:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3466:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3217:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3253:9:11",
														"nodeType": "YulTypedName",
														"src": "3253:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3264:7:11",
														"nodeType": "YulTypedName",
														"src": "3264:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3276:6:11",
														"nodeType": "YulTypedName",
														"src": "3276:6:11",
														"type": ""
													}
												],
												"src": "3217:329:11"
											},
											{
												"body": {
													"nativeSrc": "3617:53:11",
													"nodeType": "YulBlock",
													"src": "3617:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3634:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3634:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3657:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3657:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3639:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "3639:17:11"
																		},
																		"nativeSrc": "3639:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3639:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3627:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:11"
																},
																"nativeSrc": "3627:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3627:37:11"
															},
															"nativeSrc": "3627:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "3627:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3552:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3605:5:11",
														"nodeType": "YulTypedName",
														"src": "3605:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3612:3:11",
														"nodeType": "YulTypedName",
														"src": "3612:3:11",
														"type": ""
													}
												],
												"src": "3552:118:11"
											},
											{
												"body": {
													"nativeSrc": "3886:454:11",
													"nodeType": "YulBlock",
													"src": "3886:454:11",
													"statements": [
														{
															"nativeSrc": "3896:27:11",
															"nodeType": "YulAssignment",
															"src": "3896:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3908:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3908:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3919:3:11",
																		"nodeType": "YulLiteral",
																		"src": "3919:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3904:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3904:3:11"
																},
																"nativeSrc": "3904:19:11",
																"nodeType": "YulFunctionCall",
																"src": "3904:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3896:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3896:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3977:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3977:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3990:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3990:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4001:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4001:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3986:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3986:3:11"
																		},
																		"nativeSrc": "3986:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3986:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3933:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3933:43:11"
																},
																"nativeSrc": "3933:71:11",
																"nodeType": "YulFunctionCall",
																"src": "3933:71:11"
															},
															"nativeSrc": "3933:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "3933:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4058:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4058:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4071:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4071:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4082:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4082:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4067:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4067:3:11"
																		},
																		"nativeSrc": "4067:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4067:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4014:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4014:43:11"
																},
																"nativeSrc": "4014:72:11",
																"nodeType": "YulFunctionCall",
																"src": "4014:72:11"
															},
															"nativeSrc": "4014:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "4014:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "4140:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4140:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4153:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4153:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4164:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4164:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4149:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4149:3:11"
																		},
																		"nativeSrc": "4149:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4149:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4096:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4096:43:11"
																},
																"nativeSrc": "4096:72:11",
																"nodeType": "YulFunctionCall",
																"src": "4096:72:11"
															},
															"nativeSrc": "4096:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "4096:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "4222:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4222:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4235:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4235:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4246:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4246:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4231:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4231:3:11"
																		},
																		"nativeSrc": "4231:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4231:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4178:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4178:43:11"
																},
																"nativeSrc": "4178:72:11",
																"nodeType": "YulFunctionCall",
																"src": "4178:72:11"
															},
															"nativeSrc": "4178:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "4178:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "4304:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4304:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4317:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4317:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4328:3:11",
																				"nodeType": "YulLiteral",
																				"src": "4328:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4313:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4313:3:11"
																		},
																		"nativeSrc": "4313:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4313:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4260:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4260:43:11"
																},
																"nativeSrc": "4260:73:11",
																"nodeType": "YulFunctionCall",
																"src": "4260:73:11"
															},
															"nativeSrc": "4260:73:11",
															"nodeType": "YulExpressionStatement",
															"src": "4260:73:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3676:664:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3826:9:11",
														"nodeType": "YulTypedName",
														"src": "3826:9:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3838:6:11",
														"nodeType": "YulTypedName",
														"src": "3838:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3846:6:11",
														"nodeType": "YulTypedName",
														"src": "3846:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3854:6:11",
														"nodeType": "YulTypedName",
														"src": "3854:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3862:6:11",
														"nodeType": "YulTypedName",
														"src": "3862:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3870:6:11",
														"nodeType": "YulTypedName",
														"src": "3870:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3881:4:11",
														"nodeType": "YulTypedName",
														"src": "3881:4:11",
														"type": ""
													}
												],
												"src": "3676:664:11"
											},
											{
												"body": {
													"nativeSrc": "4444:124:11",
													"nodeType": "YulBlock",
													"src": "4444:124:11",
													"statements": [
														{
															"nativeSrc": "4454:26:11",
															"nodeType": "YulAssignment",
															"src": "4454:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4466:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4466:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4477:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4477:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4462:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4462:3:11"
																},
																"nativeSrc": "4462:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4462:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4454:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4454:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4534:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4534:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4547:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4547:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4558:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4558:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4543:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4543:3:11"
																		},
																		"nativeSrc": "4543:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4543:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4490:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4490:43:11"
																},
																"nativeSrc": "4490:71:11",
																"nodeType": "YulFunctionCall",
																"src": "4490:71:11"
															},
															"nativeSrc": "4490:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "4490:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4346:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4416:9:11",
														"nodeType": "YulTypedName",
														"src": "4416:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4428:6:11",
														"nodeType": "YulTypedName",
														"src": "4428:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4439:4:11",
														"nodeType": "YulTypedName",
														"src": "4439:4:11",
														"type": ""
													}
												],
												"src": "4346:222:11"
											},
											{
												"body": {
													"nativeSrc": "4670:73:11",
													"nodeType": "YulBlock",
													"src": "4670:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4687:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4687:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4692:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4692:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4680:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4680:6:11"
																},
																"nativeSrc": "4680:19:11",
																"nodeType": "YulFunctionCall",
																"src": "4680:19:11"
															},
															"nativeSrc": "4680:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "4680:19:11"
														},
														{
															"nativeSrc": "4708:29:11",
															"nodeType": "YulAssignment",
															"src": "4708:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4727:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4727:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4732:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4732:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4723:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4723:3:11"
																},
																"nativeSrc": "4723:14:11",
																"nodeType": "YulFunctionCall",
																"src": "4723:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4708:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "4708:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4574:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4642:3:11",
														"nodeType": "YulTypedName",
														"src": "4642:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4647:6:11",
														"nodeType": "YulTypedName",
														"src": "4647:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4658:11:11",
														"nodeType": "YulTypedName",
														"src": "4658:11:11",
														"type": ""
													}
												],
												"src": "4574:169:11"
											},
											{
												"body": {
													"nativeSrc": "4855:57:11",
													"nodeType": "YulBlock",
													"src": "4855:57:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4877:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4877:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4885:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4885:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4873:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4873:3:11"
																		},
																		"nativeSrc": "4873:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4873:14:11"
																	},
																	{
																		"hexValue": "506c616e206973206578697374",
																		"kind": "string",
																		"nativeSrc": "4889:15:11",
																		"nodeType": "YulLiteral",
																		"src": "4889:15:11",
																		"type": "",
																		"value": "Plan is exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4866:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4866:6:11"
																},
																"nativeSrc": "4866:39:11",
																"nodeType": "YulFunctionCall",
																"src": "4866:39:11"
															},
															"nativeSrc": "4866:39:11",
															"nodeType": "YulExpressionStatement",
															"src": "4866:39:11"
														}
													]
												},
												"name": "store_literal_in_memory_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad",
												"nativeSrc": "4749:163:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4847:6:11",
														"nodeType": "YulTypedName",
														"src": "4847:6:11",
														"type": ""
													}
												],
												"src": "4749:163:11"
											},
											{
												"body": {
													"nativeSrc": "5064:220:11",
													"nodeType": "YulBlock",
													"src": "5064:220:11",
													"statements": [
														{
															"nativeSrc": "5074:74:11",
															"nodeType": "YulAssignment",
															"src": "5074:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5140:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5140:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5145:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5145:2:11",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5081:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "5081:58:11"
																},
																"nativeSrc": "5081:67:11",
																"nodeType": "YulFunctionCall",
																"src": "5081:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5074:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5074:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5246:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5246:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad",
																	"nativeSrc": "5157:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "5157:88:11"
																},
																"nativeSrc": "5157:93:11",
																"nodeType": "YulFunctionCall",
																"src": "5157:93:11"
															},
															"nativeSrc": "5157:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "5157:93:11"
														},
														{
															"nativeSrc": "5259:19:11",
															"nodeType": "YulAssignment",
															"src": "5259:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5270:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5270:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5275:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5275:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5266:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5266:3:11"
																},
																"nativeSrc": "5266:12:11",
																"nodeType": "YulFunctionCall",
																"src": "5266:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5259:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5259:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4918:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5052:3:11",
														"nodeType": "YulTypedName",
														"src": "5052:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5060:3:11",
														"nodeType": "YulTypedName",
														"src": "5060:3:11",
														"type": ""
													}
												],
												"src": "4918:366:11"
											},
											{
												"body": {
													"nativeSrc": "5461:248:11",
													"nodeType": "YulBlock",
													"src": "5461:248:11",
													"statements": [
														{
															"nativeSrc": "5471:26:11",
															"nodeType": "YulAssignment",
															"src": "5471:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5483:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5483:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5494:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5494:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5479:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5479:3:11"
																},
																"nativeSrc": "5479:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5479:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5471:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5471:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5518:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5518:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5529:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5529:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5514:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5514:3:11"
																		},
																		"nativeSrc": "5514:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5514:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5537:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "5537:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5543:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5543:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5533:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:11"
																		},
																		"nativeSrc": "5533:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5507:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5507:6:11"
																},
																"nativeSrc": "5507:47:11",
																"nodeType": "YulFunctionCall",
																"src": "5507:47:11"
															},
															"nativeSrc": "5507:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "5507:47:11"
														},
														{
															"nativeSrc": "5563:139:11",
															"nodeType": "YulAssignment",
															"src": "5563:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5697:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "5697:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5571:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "5571:124:11"
																},
																"nativeSrc": "5571:131:11",
																"nodeType": "YulFunctionCall",
																"src": "5571:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5563:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5563:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5290:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5441:9:11",
														"nodeType": "YulTypedName",
														"src": "5441:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5456:4:11",
														"nodeType": "YulTypedName",
														"src": "5456:4:11",
														"type": ""
													}
												],
												"src": "5290:419:11"
											},
											{
												"body": {
													"nativeSrc": "5821:76:11",
													"nodeType": "YulBlock",
													"src": "5821:76:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5843:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5843:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5851:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5851:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5839:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5839:3:11"
																		},
																		"nativeSrc": "5839:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5839:14:11"
																	},
																	{
																		"hexValue": "4672657175656e6379206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "5855:34:11",
																		"nodeType": "YulLiteral",
																		"src": "5855:34:11",
																		"type": "",
																		"value": "Frequency must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5832:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5832:6:11"
																},
																"nativeSrc": "5832:58:11",
																"nodeType": "YulFunctionCall",
																"src": "5832:58:11"
															},
															"nativeSrc": "5832:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "5832:58:11"
														}
													]
												},
												"name": "store_literal_in_memory_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016",
												"nativeSrc": "5715:182:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5813:6:11",
														"nodeType": "YulTypedName",
														"src": "5813:6:11",
														"type": ""
													}
												],
												"src": "5715:182:11"
											},
											{
												"body": {
													"nativeSrc": "6049:220:11",
													"nodeType": "YulBlock",
													"src": "6049:220:11",
													"statements": [
														{
															"nativeSrc": "6059:74:11",
															"nodeType": "YulAssignment",
															"src": "6059:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6125:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6125:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6130:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6130:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6066:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "6066:58:11"
																},
																"nativeSrc": "6066:67:11",
																"nodeType": "YulFunctionCall",
																"src": "6066:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6059:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6059:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6231:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6231:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016",
																	"nativeSrc": "6142:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "6142:88:11"
																},
																"nativeSrc": "6142:93:11",
																"nodeType": "YulFunctionCall",
																"src": "6142:93:11"
															},
															"nativeSrc": "6142:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "6142:93:11"
														},
														{
															"nativeSrc": "6244:19:11",
															"nodeType": "YulAssignment",
															"src": "6244:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6255:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6255:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6260:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6260:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6251:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6251:3:11"
																},
																"nativeSrc": "6251:12:11",
																"nodeType": "YulFunctionCall",
																"src": "6251:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6244:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6244:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5903:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6037:3:11",
														"nodeType": "YulTypedName",
														"src": "6037:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6045:3:11",
														"nodeType": "YulTypedName",
														"src": "6045:3:11",
														"type": ""
													}
												],
												"src": "5903:366:11"
											},
											{
												"body": {
													"nativeSrc": "6446:248:11",
													"nodeType": "YulBlock",
													"src": "6446:248:11",
													"statements": [
														{
															"nativeSrc": "6456:26:11",
															"nodeType": "YulAssignment",
															"src": "6456:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6468:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6468:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6479:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6479:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6464:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6464:3:11"
																},
																"nativeSrc": "6464:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6464:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6456:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6456:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6503:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6503:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6514:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6514:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6499:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6499:3:11"
																		},
																		"nativeSrc": "6499:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6499:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6522:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "6522:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6528:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6528:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6518:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6518:3:11"
																		},
																		"nativeSrc": "6518:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6518:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6492:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6492:6:11"
																},
																"nativeSrc": "6492:47:11",
																"nodeType": "YulFunctionCall",
																"src": "6492:47:11"
															},
															"nativeSrc": "6492:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "6492:47:11"
														},
														{
															"nativeSrc": "6548:139:11",
															"nodeType": "YulAssignment",
															"src": "6548:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6682:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6682:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6556:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "6556:124:11"
																},
																"nativeSrc": "6556:131:11",
																"nodeType": "YulFunctionCall",
																"src": "6556:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6548:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6548:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6275:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6426:9:11",
														"nodeType": "YulTypedName",
														"src": "6426:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6441:4:11",
														"nodeType": "YulTypedName",
														"src": "6441:4:11",
														"type": ""
													}
												],
												"src": "6275:419:11"
											},
											{
												"body": {
													"nativeSrc": "6806:73:11",
													"nodeType": "YulBlock",
													"src": "6806:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6828:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6828:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6836:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6836:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6824:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6824:3:11"
																		},
																		"nativeSrc": "6824:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6824:14:11"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "6840:31:11",
																		"nodeType": "YulLiteral",
																		"src": "6840:31:11",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6817:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6817:6:11"
																},
																"nativeSrc": "6817:55:11",
																"nodeType": "YulFunctionCall",
																"src": "6817:55:11"
															},
															"nativeSrc": "6817:55:11",
															"nodeType": "YulExpressionStatement",
															"src": "6817:55:11"
														}
													]
												},
												"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
												"nativeSrc": "6700:179:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6798:6:11",
														"nodeType": "YulTypedName",
														"src": "6798:6:11",
														"type": ""
													}
												],
												"src": "6700:179:11"
											},
											{
												"body": {
													"nativeSrc": "7031:220:11",
													"nodeType": "YulBlock",
													"src": "7031:220:11",
													"statements": [
														{
															"nativeSrc": "7041:74:11",
															"nodeType": "YulAssignment",
															"src": "7041:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7107:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7107:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7112:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7112:2:11",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7048:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "7048:58:11"
																},
																"nativeSrc": "7048:67:11",
																"nodeType": "YulFunctionCall",
																"src": "7048:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7041:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7041:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7213:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7213:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																	"nativeSrc": "7124:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "7124:88:11"
																},
																"nativeSrc": "7124:93:11",
																"nodeType": "YulFunctionCall",
																"src": "7124:93:11"
															},
															"nativeSrc": "7124:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "7124:93:11"
														},
														{
															"nativeSrc": "7226:19:11",
															"nodeType": "YulAssignment",
															"src": "7226:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7237:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7237:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7242:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7242:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7233:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7233:3:11"
																},
																"nativeSrc": "7233:12:11",
																"nodeType": "YulFunctionCall",
																"src": "7233:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7226:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7226:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6885:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7019:3:11",
														"nodeType": "YulTypedName",
														"src": "7019:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7027:3:11",
														"nodeType": "YulTypedName",
														"src": "7027:3:11",
														"type": ""
													}
												],
												"src": "6885:366:11"
											},
											{
												"body": {
													"nativeSrc": "7428:248:11",
													"nodeType": "YulBlock",
													"src": "7428:248:11",
													"statements": [
														{
															"nativeSrc": "7438:26:11",
															"nodeType": "YulAssignment",
															"src": "7438:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7450:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7450:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7461:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7461:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7446:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7446:3:11"
																},
																"nativeSrc": "7446:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7446:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7438:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7438:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7485:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7485:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7496:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7496:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7481:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7481:3:11"
																		},
																		"nativeSrc": "7481:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7481:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7504:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "7504:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7510:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7510:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7500:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7500:3:11"
																		},
																		"nativeSrc": "7500:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7500:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7474:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7474:6:11"
																},
																"nativeSrc": "7474:47:11",
																"nodeType": "YulFunctionCall",
																"src": "7474:47:11"
															},
															"nativeSrc": "7474:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "7474:47:11"
														},
														{
															"nativeSrc": "7530:139:11",
															"nodeType": "YulAssignment",
															"src": "7530:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7664:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7664:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7538:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "7538:124:11"
																},
																"nativeSrc": "7538:131:11",
																"nodeType": "YulFunctionCall",
																"src": "7538:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7530:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7530:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7257:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7408:9:11",
														"nodeType": "YulTypedName",
														"src": "7408:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7423:4:11",
														"nodeType": "YulTypedName",
														"src": "7423:4:11",
														"type": ""
													}
												],
												"src": "7257:419:11"
											},
											{
												"body": {
													"nativeSrc": "7808:206:11",
													"nodeType": "YulBlock",
													"src": "7808:206:11",
													"statements": [
														{
															"nativeSrc": "7818:26:11",
															"nodeType": "YulAssignment",
															"src": "7818:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7830:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7830:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7841:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7841:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7826:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7826:3:11"
																},
																"nativeSrc": "7826:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7826:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7818:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7818:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7898:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7898:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7911:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7911:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7922:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7922:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7907:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7907:3:11"
																		},
																		"nativeSrc": "7907:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7907:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7854:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7854:43:11"
																},
																"nativeSrc": "7854:71:11",
																"nodeType": "YulFunctionCall",
																"src": "7854:71:11"
															},
															"nativeSrc": "7854:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "7854:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7979:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7979:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7992:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7992:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8003:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8003:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7988:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7988:3:11"
																		},
																		"nativeSrc": "7988:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7988:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7935:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7935:43:11"
																},
																"nativeSrc": "7935:72:11",
																"nodeType": "YulFunctionCall",
																"src": "7935:72:11"
															},
															"nativeSrc": "7935:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "7935:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7682:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7772:9:11",
														"nodeType": "YulTypedName",
														"src": "7772:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7784:6:11",
														"nodeType": "YulTypedName",
														"src": "7784:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7792:6:11",
														"nodeType": "YulTypedName",
														"src": "7792:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7803:4:11",
														"nodeType": "YulTypedName",
														"src": "7803:4:11",
														"type": ""
													}
												],
												"src": "7682:332:11"
											},
											{
												"body": {
													"nativeSrc": "8126:61:11",
													"nodeType": "YulBlock",
													"src": "8126:61:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8148:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8148:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8156:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8156:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8144:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8144:3:11"
																		},
																		"nativeSrc": "8144:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8144:14:11"
																	},
																	{
																		"hexValue": "506c616e206973206e6f74206578697374",
																		"kind": "string",
																		"nativeSrc": "8160:19:11",
																		"nodeType": "YulLiteral",
																		"src": "8160:19:11",
																		"type": "",
																		"value": "Plan is not exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8137:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8137:6:11"
																},
																"nativeSrc": "8137:43:11",
																"nodeType": "YulFunctionCall",
																"src": "8137:43:11"
															},
															"nativeSrc": "8137:43:11",
															"nodeType": "YulExpressionStatement",
															"src": "8137:43:11"
														}
													]
												},
												"name": "store_literal_in_memory_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2",
												"nativeSrc": "8020:167:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8118:6:11",
														"nodeType": "YulTypedName",
														"src": "8118:6:11",
														"type": ""
													}
												],
												"src": "8020:167:11"
											},
											{
												"body": {
													"nativeSrc": "8339:220:11",
													"nodeType": "YulBlock",
													"src": "8339:220:11",
													"statements": [
														{
															"nativeSrc": "8349:74:11",
															"nodeType": "YulAssignment",
															"src": "8349:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8415:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8415:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8420:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8420:2:11",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8356:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "8356:58:11"
																},
																"nativeSrc": "8356:67:11",
																"nodeType": "YulFunctionCall",
																"src": "8356:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8349:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8349:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8521:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8521:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2",
																	"nativeSrc": "8432:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "8432:88:11"
																},
																"nativeSrc": "8432:93:11",
																"nodeType": "YulFunctionCall",
																"src": "8432:93:11"
															},
															"nativeSrc": "8432:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "8432:93:11"
														},
														{
															"nativeSrc": "8534:19:11",
															"nodeType": "YulAssignment",
															"src": "8534:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8545:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8545:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8550:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8550:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8541:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8541:3:11"
																},
																"nativeSrc": "8541:12:11",
																"nodeType": "YulFunctionCall",
																"src": "8541:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8534:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8534:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8193:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8327:3:11",
														"nodeType": "YulTypedName",
														"src": "8327:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8335:3:11",
														"nodeType": "YulTypedName",
														"src": "8335:3:11",
														"type": ""
													}
												],
												"src": "8193:366:11"
											},
											{
												"body": {
													"nativeSrc": "8736:248:11",
													"nodeType": "YulBlock",
													"src": "8736:248:11",
													"statements": [
														{
															"nativeSrc": "8746:26:11",
															"nodeType": "YulAssignment",
															"src": "8746:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8758:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8758:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8769:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8769:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8754:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8754:3:11"
																},
																"nativeSrc": "8754:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8754:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8746:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8746:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8793:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8793:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8804:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8804:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8789:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8789:3:11"
																		},
																		"nativeSrc": "8789:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8789:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8812:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "8812:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8818:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8818:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8808:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8808:3:11"
																		},
																		"nativeSrc": "8808:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8808:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8782:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8782:6:11"
																},
																"nativeSrc": "8782:47:11",
																"nodeType": "YulFunctionCall",
																"src": "8782:47:11"
															},
															"nativeSrc": "8782:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "8782:47:11"
														},
														{
															"nativeSrc": "8838:139:11",
															"nodeType": "YulAssignment",
															"src": "8838:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8972:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8972:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8846:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "8846:124:11"
																},
																"nativeSrc": "8846:131:11",
																"nodeType": "YulFunctionCall",
																"src": "8846:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8838:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8838:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8565:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8716:9:11",
														"nodeType": "YulTypedName",
														"src": "8716:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8731:4:11",
														"nodeType": "YulTypedName",
														"src": "8731:4:11",
														"type": ""
													}
												],
												"src": "8565:419:11"
											},
											{
												"body": {
													"nativeSrc": "9096:114:11",
													"nodeType": "YulBlock",
													"src": "9096:114:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9118:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9118:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9126:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9126:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9114:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9114:3:11"
																		},
																		"nativeSrc": "9114:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9114:14:11"
																	},
																	{
																		"hexValue": "546f74616c206d7573742062652067726561746572207468616e20616d6f756e",
																		"kind": "string",
																		"nativeSrc": "9130:34:11",
																		"nodeType": "YulLiteral",
																		"src": "9130:34:11",
																		"type": "",
																		"value": "Total must be greater than amoun"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9107:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9107:6:11"
																},
																"nativeSrc": "9107:58:11",
																"nodeType": "YulFunctionCall",
																"src": "9107:58:11"
															},
															"nativeSrc": "9107:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "9107:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9186:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9186:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9194:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9194:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9182:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9182:3:11"
																		},
																		"nativeSrc": "9182:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9182:15:11"
																	},
																	{
																		"hexValue": "74",
																		"kind": "string",
																		"nativeSrc": "9199:3:11",
																		"nodeType": "YulLiteral",
																		"src": "9199:3:11",
																		"type": "",
																		"value": "t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9175:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9175:6:11"
																},
																"nativeSrc": "9175:28:11",
																"nodeType": "YulFunctionCall",
																"src": "9175:28:11"
															},
															"nativeSrc": "9175:28:11",
															"nodeType": "YulExpressionStatement",
															"src": "9175:28:11"
														}
													]
												},
												"name": "store_literal_in_memory_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa",
												"nativeSrc": "8990:220:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9088:6:11",
														"nodeType": "YulTypedName",
														"src": "9088:6:11",
														"type": ""
													}
												],
												"src": "8990:220:11"
											},
											{
												"body": {
													"nativeSrc": "9362:220:11",
													"nodeType": "YulBlock",
													"src": "9362:220:11",
													"statements": [
														{
															"nativeSrc": "9372:74:11",
															"nodeType": "YulAssignment",
															"src": "9372:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9438:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9438:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9443:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9443:2:11",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9379:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "9379:58:11"
																},
																"nativeSrc": "9379:67:11",
																"nodeType": "YulFunctionCall",
																"src": "9379:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9372:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9372:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9544:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9544:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa",
																	"nativeSrc": "9455:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "9455:88:11"
																},
																"nativeSrc": "9455:93:11",
																"nodeType": "YulFunctionCall",
																"src": "9455:93:11"
															},
															"nativeSrc": "9455:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "9455:93:11"
														},
														{
															"nativeSrc": "9557:19:11",
															"nodeType": "YulAssignment",
															"src": "9557:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9568:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9568:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9573:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9573:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9564:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9564:3:11"
																},
																"nativeSrc": "9564:12:11",
																"nodeType": "YulFunctionCall",
																"src": "9564:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9557:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9557:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9216:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9350:3:11",
														"nodeType": "YulTypedName",
														"src": "9350:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9358:3:11",
														"nodeType": "YulTypedName",
														"src": "9358:3:11",
														"type": ""
													}
												],
												"src": "9216:366:11"
											},
											{
												"body": {
													"nativeSrc": "9759:248:11",
													"nodeType": "YulBlock",
													"src": "9759:248:11",
													"statements": [
														{
															"nativeSrc": "9769:26:11",
															"nodeType": "YulAssignment",
															"src": "9769:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9781:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9781:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9792:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9792:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9777:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9777:3:11"
																},
																"nativeSrc": "9777:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9777:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9769:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9769:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9816:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9816:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9827:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9827:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9812:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9812:3:11"
																		},
																		"nativeSrc": "9812:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9812:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9835:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "9835:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9841:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9841:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9831:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9831:3:11"
																		},
																		"nativeSrc": "9831:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9831:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9805:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9805:6:11"
																},
																"nativeSrc": "9805:47:11",
																"nodeType": "YulFunctionCall",
																"src": "9805:47:11"
															},
															"nativeSrc": "9805:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "9805:47:11"
														},
														{
															"nativeSrc": "9861:139:11",
															"nodeType": "YulAssignment",
															"src": "9861:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9995:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "9995:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9869:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "9869:124:11"
																},
																"nativeSrc": "9869:131:11",
																"nodeType": "YulFunctionCall",
																"src": "9869:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9861:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9861:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9588:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9739:9:11",
														"nodeType": "YulTypedName",
														"src": "9739:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9754:4:11",
														"nodeType": "YulTypedName",
														"src": "9754:4:11",
														"type": ""
													}
												],
												"src": "9588:419:11"
											},
											{
												"body": {
													"nativeSrc": "10041:152:11",
													"nodeType": "YulBlock",
													"src": "10041:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10058:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10058:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10061:77:11",
																		"nodeType": "YulLiteral",
																		"src": "10061:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10051:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10051:6:11"
																},
																"nativeSrc": "10051:88:11",
																"nodeType": "YulFunctionCall",
																"src": "10051:88:11"
															},
															"nativeSrc": "10051:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "10051:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10155:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10155:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10158:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10158:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10148:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10148:6:11"
																},
																"nativeSrc": "10148:15:11",
																"nodeType": "YulFunctionCall",
																"src": "10148:15:11"
															},
															"nativeSrc": "10148:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "10148:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10179:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10179:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10182:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10182:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10172:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10172:6:11"
																},
																"nativeSrc": "10172:15:11",
																"nodeType": "YulFunctionCall",
																"src": "10172:15:11"
															},
															"nativeSrc": "10172:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "10172:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10013:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "10013:180:11"
											},
											{
												"body": {
													"nativeSrc": "10242:190:11",
													"nodeType": "YulBlock",
													"src": "10242:190:11",
													"statements": [
														{
															"nativeSrc": "10252:33:11",
															"nodeType": "YulAssignment",
															"src": "10252:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10279:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "10279:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10261:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "10261:17:11"
																},
																"nativeSrc": "10261:24:11",
																"nodeType": "YulFunctionCall",
																"src": "10261:24:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10252:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "10252:5:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10375:22:11",
																"nodeType": "YulBlock",
																"src": "10375:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10377:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "10377:16:11"
																			},
																			"nativeSrc": "10377:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10377:18:11"
																		},
																		"nativeSrc": "10377:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10377:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10300:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "10300:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10307:66:11",
																		"nodeType": "YulLiteral",
																		"src": "10307:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10297:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "10297:2:11"
																},
																"nativeSrc": "10297:77:11",
																"nodeType": "YulFunctionCall",
																"src": "10297:77:11"
															},
															"nativeSrc": "10294:103:11",
															"nodeType": "YulIf",
															"src": "10294:103:11"
														},
														{
															"nativeSrc": "10406:20:11",
															"nodeType": "YulAssignment",
															"src": "10406:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10417:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "10417:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10424:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10424:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10413:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10413:3:11"
																},
																"nativeSrc": "10413:13:11",
																"nodeType": "YulFunctionCall",
																"src": "10413:13:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10406:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10406:3:11"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "10199:233:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10228:5:11",
														"nodeType": "YulTypedName",
														"src": "10228:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10238:3:11",
														"nodeType": "YulTypedName",
														"src": "10238:3:11",
														"type": ""
													}
												],
												"src": "10199:233:11"
											},
											{
												"body": {
													"nativeSrc": "10544:62:11",
													"nodeType": "YulBlock",
													"src": "10544:62:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10566:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10566:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10574:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10574:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10562:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10562:3:11"
																		},
																		"nativeSrc": "10562:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10562:14:11"
																	},
																	{
																		"hexValue": "506c616e206973206e6f7420616374697665",
																		"kind": "string",
																		"nativeSrc": "10578:20:11",
																		"nodeType": "YulLiteral",
																		"src": "10578:20:11",
																		"type": "",
																		"value": "Plan is not active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10555:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10555:6:11"
																},
																"nativeSrc": "10555:44:11",
																"nodeType": "YulFunctionCall",
																"src": "10555:44:11"
															},
															"nativeSrc": "10555:44:11",
															"nodeType": "YulExpressionStatement",
															"src": "10555:44:11"
														}
													]
												},
												"name": "store_literal_in_memory_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c",
												"nativeSrc": "10438:168:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10536:6:11",
														"nodeType": "YulTypedName",
														"src": "10536:6:11",
														"type": ""
													}
												],
												"src": "10438:168:11"
											},
											{
												"body": {
													"nativeSrc": "10758:220:11",
													"nodeType": "YulBlock",
													"src": "10758:220:11",
													"statements": [
														{
															"nativeSrc": "10768:74:11",
															"nodeType": "YulAssignment",
															"src": "10768:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10834:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10834:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10839:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10839:2:11",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10775:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "10775:58:11"
																},
																"nativeSrc": "10775:67:11",
																"nodeType": "YulFunctionCall",
																"src": "10775:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10768:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10768:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10940:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10940:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c",
																	"nativeSrc": "10851:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "10851:88:11"
																},
																"nativeSrc": "10851:93:11",
																"nodeType": "YulFunctionCall",
																"src": "10851:93:11"
															},
															"nativeSrc": "10851:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "10851:93:11"
														},
														{
															"nativeSrc": "10953:19:11",
															"nodeType": "YulAssignment",
															"src": "10953:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10964:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10964:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10969:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10969:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10960:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10960:3:11"
																},
																"nativeSrc": "10960:12:11",
																"nodeType": "YulFunctionCall",
																"src": "10960:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10953:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10953:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10612:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10746:3:11",
														"nodeType": "YulTypedName",
														"src": "10746:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10754:3:11",
														"nodeType": "YulTypedName",
														"src": "10754:3:11",
														"type": ""
													}
												],
												"src": "10612:366:11"
											},
											{
												"body": {
													"nativeSrc": "11155:248:11",
													"nodeType": "YulBlock",
													"src": "11155:248:11",
													"statements": [
														{
															"nativeSrc": "11165:26:11",
															"nodeType": "YulAssignment",
															"src": "11165:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11177:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11177:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11188:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11188:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11173:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11173:3:11"
																},
																"nativeSrc": "11173:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11173:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11165:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11165:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11212:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11212:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11223:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11223:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11208:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11208:3:11"
																		},
																		"nativeSrc": "11208:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11208:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11231:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "11231:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11237:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11237:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11227:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11227:3:11"
																		},
																		"nativeSrc": "11227:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11227:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11201:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11201:6:11"
																},
																"nativeSrc": "11201:47:11",
																"nodeType": "YulFunctionCall",
																"src": "11201:47:11"
															},
															"nativeSrc": "11201:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "11201:47:11"
														},
														{
															"nativeSrc": "11257:139:11",
															"nodeType": "YulAssignment",
															"src": "11257:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11391:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "11391:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11265:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "11265:124:11"
																},
																"nativeSrc": "11265:131:11",
																"nodeType": "YulFunctionCall",
																"src": "11265:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11257:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11257:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10984:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11135:9:11",
														"nodeType": "YulTypedName",
														"src": "11135:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11150:4:11",
														"nodeType": "YulTypedName",
														"src": "11150:4:11",
														"type": ""
													}
												],
												"src": "10984:419:11"
											},
											{
												"body": {
													"nativeSrc": "11515:122:11",
													"nodeType": "YulBlock",
													"src": "11515:122:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11537:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11537:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11545:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11545:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11533:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11533:3:11"
																		},
																		"nativeSrc": "11533:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11533:14:11"
																	},
																	{
																		"hexValue": "43616e6e6f742074726967676572206d6f7265207468616e2072656d61696e69",
																		"kind": "string",
																		"nativeSrc": "11549:34:11",
																		"nodeType": "YulLiteral",
																		"src": "11549:34:11",
																		"type": "",
																		"value": "Cannot trigger more than remaini"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11526:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11526:6:11"
																},
																"nativeSrc": "11526:58:11",
																"nodeType": "YulFunctionCall",
																"src": "11526:58:11"
															},
															"nativeSrc": "11526:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "11526:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11605:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11605:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11613:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11613:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11601:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11601:3:11"
																		},
																		"nativeSrc": "11601:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11601:15:11"
																	},
																	{
																		"hexValue": "6e6720616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "11618:11:11",
																		"nodeType": "YulLiteral",
																		"src": "11618:11:11",
																		"type": "",
																		"value": "ng amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11594:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11594:6:11"
																},
																"nativeSrc": "11594:36:11",
																"nodeType": "YulFunctionCall",
																"src": "11594:36:11"
															},
															"nativeSrc": "11594:36:11",
															"nodeType": "YulExpressionStatement",
															"src": "11594:36:11"
														}
													]
												},
												"name": "store_literal_in_memory_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24",
												"nativeSrc": "11409:228:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11507:6:11",
														"nodeType": "YulTypedName",
														"src": "11507:6:11",
														"type": ""
													}
												],
												"src": "11409:228:11"
											},
											{
												"body": {
													"nativeSrc": "11789:220:11",
													"nodeType": "YulBlock",
													"src": "11789:220:11",
													"statements": [
														{
															"nativeSrc": "11799:74:11",
															"nodeType": "YulAssignment",
															"src": "11799:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11865:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11865:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11870:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11870:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11806:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "11806:58:11"
																},
																"nativeSrc": "11806:67:11",
																"nodeType": "YulFunctionCall",
																"src": "11806:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11799:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11799:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11971:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11971:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24",
																	"nativeSrc": "11882:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "11882:88:11"
																},
																"nativeSrc": "11882:93:11",
																"nodeType": "YulFunctionCall",
																"src": "11882:93:11"
															},
															"nativeSrc": "11882:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "11882:93:11"
														},
														{
															"nativeSrc": "11984:19:11",
															"nodeType": "YulAssignment",
															"src": "11984:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11995:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11995:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12000:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12000:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11991:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11991:3:11"
																},
																"nativeSrc": "11991:12:11",
																"nodeType": "YulFunctionCall",
																"src": "11991:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11984:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11984:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11643:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11777:3:11",
														"nodeType": "YulTypedName",
														"src": "11777:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11785:3:11",
														"nodeType": "YulTypedName",
														"src": "11785:3:11",
														"type": ""
													}
												],
												"src": "11643:366:11"
											},
											{
												"body": {
													"nativeSrc": "12186:248:11",
													"nodeType": "YulBlock",
													"src": "12186:248:11",
													"statements": [
														{
															"nativeSrc": "12196:26:11",
															"nodeType": "YulAssignment",
															"src": "12196:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12208:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12208:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12219:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12219:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12204:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12204:3:11"
																},
																"nativeSrc": "12204:18:11",
																"nodeType": "YulFunctionCall",
																"src": "12204:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12196:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12196:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12243:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12243:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12254:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12254:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12239:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12239:3:11"
																		},
																		"nativeSrc": "12239:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12239:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12262:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "12262:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12268:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12268:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12258:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12258:3:11"
																		},
																		"nativeSrc": "12258:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12258:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12232:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12232:6:11"
																},
																"nativeSrc": "12232:47:11",
																"nodeType": "YulFunctionCall",
																"src": "12232:47:11"
															},
															"nativeSrc": "12232:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "12232:47:11"
														},
														{
															"nativeSrc": "12288:139:11",
															"nodeType": "YulAssignment",
															"src": "12288:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12422:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "12422:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12296:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "12296:124:11"
																},
																"nativeSrc": "12296:131:11",
																"nodeType": "YulFunctionCall",
																"src": "12296:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12288:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12288:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12015:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12166:9:11",
														"nodeType": "YulTypedName",
														"src": "12166:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12181:4:11",
														"nodeType": "YulTypedName",
														"src": "12181:4:11",
														"type": ""
													}
												],
												"src": "12015:419:11"
											},
											{
												"body": {
													"nativeSrc": "12488:362:11",
													"nodeType": "YulBlock",
													"src": "12488:362:11",
													"statements": [
														{
															"nativeSrc": "12498:25:11",
															"nodeType": "YulAssignment",
															"src": "12498:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12521:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12521:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12503:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "12503:17:11"
																},
																"nativeSrc": "12503:20:11",
																"nodeType": "YulFunctionCall",
																"src": "12503:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12498:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "12498:1:11"
																}
															]
														},
														{
															"nativeSrc": "12532:25:11",
															"nodeType": "YulAssignment",
															"src": "12532:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12555:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12555:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12537:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "12537:17:11"
																},
																"nativeSrc": "12537:20:11",
																"nodeType": "YulFunctionCall",
																"src": "12537:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12532:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "12532:1:11"
																}
															]
														},
														{
															"nativeSrc": "12566:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "12566:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12589:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12589:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12592:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12592:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12585:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12585:3:11"
																},
																"nativeSrc": "12585:9:11",
																"nodeType": "YulFunctionCall",
																"src": "12585:9:11"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "12570:11:11",
																	"nodeType": "YulTypedName",
																	"src": "12570:11:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12603:41:11",
															"nodeType": "YulAssignment",
															"src": "12603:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "12632:11:11",
																		"nodeType": "YulIdentifier",
																		"src": "12632:11:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12614:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "12614:17:11"
																},
																"nativeSrc": "12614:30:11",
																"nodeType": "YulFunctionCall",
																"src": "12614:30:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12603:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "12603:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12821:22:11",
																"nodeType": "YulBlock",
																"src": "12821:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12823:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "12823:16:11"
																			},
																			"nativeSrc": "12823:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12823:18:11"
																		},
																		"nativeSrc": "12823:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12823:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12754:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "12754:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12747:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "12747:6:11"
																				},
																				"nativeSrc": "12747:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "12747:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12777:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "12777:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12784:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "12784:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12793:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "12793:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12780:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "12780:3:11"
																						},
																						"nativeSrc": "12780:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "12780:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12774:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "12774:2:11"
																				},
																				"nativeSrc": "12774:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "12774:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12727:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "12727:2:11"
																		},
																		"nativeSrc": "12727:83:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12727:83:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12707:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12707:6:11"
																},
																"nativeSrc": "12707:113:11",
																"nodeType": "YulFunctionCall",
																"src": "12707:113:11"
															},
															"nativeSrc": "12704:139:11",
															"nodeType": "YulIf",
															"src": "12704:139:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12440:410:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12471:1:11",
														"nodeType": "YulTypedName",
														"src": "12471:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12474:1:11",
														"nodeType": "YulTypedName",
														"src": "12474:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12480:7:11",
														"nodeType": "YulTypedName",
														"src": "12480:7:11",
														"type": ""
													}
												],
												"src": "12440:410:11"
											},
											{
												"body": {
													"nativeSrc": "12900:147:11",
													"nodeType": "YulBlock",
													"src": "12900:147:11",
													"statements": [
														{
															"nativeSrc": "12910:25:11",
															"nodeType": "YulAssignment",
															"src": "12910:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12933:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12933:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12915:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "12915:17:11"
																},
																"nativeSrc": "12915:20:11",
																"nodeType": "YulFunctionCall",
																"src": "12915:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12910:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "12910:1:11"
																}
															]
														},
														{
															"nativeSrc": "12944:25:11",
															"nodeType": "YulAssignment",
															"src": "12944:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12967:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12967:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12949:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "12949:17:11"
																},
																"nativeSrc": "12949:20:11",
																"nodeType": "YulFunctionCall",
																"src": "12949:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12944:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "12944:1:11"
																}
															]
														},
														{
															"nativeSrc": "12978:16:11",
															"nodeType": "YulAssignment",
															"src": "12978:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12989:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12989:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12992:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12992:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12985:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12985:3:11"
																},
																"nativeSrc": "12985:9:11",
																"nodeType": "YulFunctionCall",
																"src": "12985:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12978:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12978:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13018:22:11",
																"nodeType": "YulBlock",
																"src": "13018:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13020:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "13020:16:11"
																			},
																			"nativeSrc": "13020:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "13020:18:11"
																		},
																		"nativeSrc": "13020:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "13020:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13010:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13010:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13013:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13013:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13007:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "13007:2:11"
																},
																"nativeSrc": "13007:10:11",
																"nodeType": "YulFunctionCall",
																"src": "13007:10:11"
															},
															"nativeSrc": "13004:36:11",
															"nodeType": "YulIf",
															"src": "13004:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12856:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12887:1:11",
														"nodeType": "YulTypedName",
														"src": "12887:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12890:1:11",
														"nodeType": "YulTypedName",
														"src": "12890:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12896:3:11",
														"nodeType": "YulTypedName",
														"src": "12896:3:11",
														"type": ""
													}
												],
												"src": "12856:191:11"
											},
											{
												"body": {
													"nativeSrc": "13159:115:11",
													"nodeType": "YulBlock",
													"src": "13159:115:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13181:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "13181:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13189:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13189:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13177:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13177:3:11"
																		},
																		"nativeSrc": "13177:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13177:14:11"
																	},
																	{
																		"hexValue": "43616e206f6e6c79207472696767657220706c616e206f6e6365207065722064",
																		"kind": "string",
																		"nativeSrc": "13193:34:11",
																		"nodeType": "YulLiteral",
																		"src": "13193:34:11",
																		"type": "",
																		"value": "Can only trigger plan once per d"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13170:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13170:6:11"
																},
																"nativeSrc": "13170:58:11",
																"nodeType": "YulFunctionCall",
																"src": "13170:58:11"
															},
															"nativeSrc": "13170:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "13170:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13249:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "13249:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13257:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13257:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13245:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13245:3:11"
																		},
																		"nativeSrc": "13245:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13245:15:11"
																	},
																	{
																		"hexValue": "6179",
																		"kind": "string",
																		"nativeSrc": "13262:4:11",
																		"nodeType": "YulLiteral",
																		"src": "13262:4:11",
																		"type": "",
																		"value": "ay"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13238:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13238:6:11"
																},
																"nativeSrc": "13238:29:11",
																"nodeType": "YulFunctionCall",
																"src": "13238:29:11"
															},
															"nativeSrc": "13238:29:11",
															"nodeType": "YulExpressionStatement",
															"src": "13238:29:11"
														}
													]
												},
												"name": "store_literal_in_memory_0d0ccbf0fb388ef2019a4c569d6a5318305b2bf4cf0afc9067c0a6b28559054d",
												"nativeSrc": "13053:221:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13151:6:11",
														"nodeType": "YulTypedName",
														"src": "13151:6:11",
														"type": ""
													}
												],
												"src": "13053:221:11"
											},
											{
												"body": {
													"nativeSrc": "13426:220:11",
													"nodeType": "YulBlock",
													"src": "13426:220:11",
													"statements": [
														{
															"nativeSrc": "13436:74:11",
															"nodeType": "YulAssignment",
															"src": "13436:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13502:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13502:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13507:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13507:2:11",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13443:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "13443:58:11"
																},
																"nativeSrc": "13443:67:11",
																"nodeType": "YulFunctionCall",
																"src": "13443:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13436:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13436:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13608:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13608:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d0ccbf0fb388ef2019a4c569d6a5318305b2bf4cf0afc9067c0a6b28559054d",
																	"nativeSrc": "13519:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "13519:88:11"
																},
																"nativeSrc": "13519:93:11",
																"nodeType": "YulFunctionCall",
																"src": "13519:93:11"
															},
															"nativeSrc": "13519:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "13519:93:11"
														},
														{
															"nativeSrc": "13621:19:11",
															"nodeType": "YulAssignment",
															"src": "13621:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13632:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13632:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13637:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13637:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13628:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13628:3:11"
																},
																"nativeSrc": "13628:12:11",
																"nodeType": "YulFunctionCall",
																"src": "13628:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13621:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13621:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d0ccbf0fb388ef2019a4c569d6a5318305b2bf4cf0afc9067c0a6b28559054d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13280:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13414:3:11",
														"nodeType": "YulTypedName",
														"src": "13414:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13422:3:11",
														"nodeType": "YulTypedName",
														"src": "13422:3:11",
														"type": ""
													}
												],
												"src": "13280:366:11"
											},
											{
												"body": {
													"nativeSrc": "13823:248:11",
													"nodeType": "YulBlock",
													"src": "13823:248:11",
													"statements": [
														{
															"nativeSrc": "13833:26:11",
															"nodeType": "YulAssignment",
															"src": "13833:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13845:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13845:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13856:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13856:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13841:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13841:3:11"
																},
																"nativeSrc": "13841:18:11",
																"nodeType": "YulFunctionCall",
																"src": "13841:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13833:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13833:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13880:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13880:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13891:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13891:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13876:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13876:3:11"
																		},
																		"nativeSrc": "13876:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13876:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13899:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "13899:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13905:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13905:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13895:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13895:3:11"
																		},
																		"nativeSrc": "13895:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13895:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13869:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13869:6:11"
																},
																"nativeSrc": "13869:47:11",
																"nodeType": "YulFunctionCall",
																"src": "13869:47:11"
															},
															"nativeSrc": "13869:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "13869:47:11"
														},
														{
															"nativeSrc": "13925:139:11",
															"nodeType": "YulAssignment",
															"src": "13925:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14059:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "14059:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d0ccbf0fb388ef2019a4c569d6a5318305b2bf4cf0afc9067c0a6b28559054d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13933:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "13933:124:11"
																},
																"nativeSrc": "13933:131:11",
																"nodeType": "YulFunctionCall",
																"src": "13933:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13925:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13925:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d0ccbf0fb388ef2019a4c569d6a5318305b2bf4cf0afc9067c0a6b28559054d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13652:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13803:9:11",
														"nodeType": "YulTypedName",
														"src": "13803:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13818:4:11",
														"nodeType": "YulTypedName",
														"src": "13818:4:11",
														"type": ""
													}
												],
												"src": "13652:419:11"
											},
											{
												"body": {
													"nativeSrc": "14105:152:11",
													"nodeType": "YulBlock",
													"src": "14105:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14122:1:11",
																		"nodeType": "YulLiteral",
																		"src": "14122:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14125:77:11",
																		"nodeType": "YulLiteral",
																		"src": "14125:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14115:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14115:6:11"
																},
																"nativeSrc": "14115:88:11",
																"nodeType": "YulFunctionCall",
																"src": "14115:88:11"
															},
															"nativeSrc": "14115:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "14115:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14219:1:11",
																		"nodeType": "YulLiteral",
																		"src": "14219:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14222:4:11",
																		"nodeType": "YulLiteral",
																		"src": "14222:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14212:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14212:6:11"
																},
																"nativeSrc": "14212:15:11",
																"nodeType": "YulFunctionCall",
																"src": "14212:15:11"
															},
															"nativeSrc": "14212:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "14212:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14243:1:11",
																		"nodeType": "YulLiteral",
																		"src": "14243:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14246:4:11",
																		"nodeType": "YulLiteral",
																		"src": "14246:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14236:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14236:6:11"
																},
																"nativeSrc": "14236:15:11",
																"nodeType": "YulFunctionCall",
																"src": "14236:15:11"
															},
															"nativeSrc": "14236:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "14236:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14077:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "14077:180:11"
											},
											{
												"body": {
													"nativeSrc": "14291:152:11",
													"nodeType": "YulBlock",
													"src": "14291:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14308:1:11",
																		"nodeType": "YulLiteral",
																		"src": "14308:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14311:77:11",
																		"nodeType": "YulLiteral",
																		"src": "14311:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14301:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14301:6:11"
																},
																"nativeSrc": "14301:88:11",
																"nodeType": "YulFunctionCall",
																"src": "14301:88:11"
															},
															"nativeSrc": "14301:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "14301:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14405:1:11",
																		"nodeType": "YulLiteral",
																		"src": "14405:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14408:4:11",
																		"nodeType": "YulLiteral",
																		"src": "14408:4:11",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14398:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14398:6:11"
																},
																"nativeSrc": "14398:15:11",
																"nodeType": "YulFunctionCall",
																"src": "14398:15:11"
															},
															"nativeSrc": "14398:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "14398:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14429:1:11",
																		"nodeType": "YulLiteral",
																		"src": "14429:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14432:4:11",
																		"nodeType": "YulLiteral",
																		"src": "14432:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14422:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14422:6:11"
																},
																"nativeSrc": "14422:15:11",
																"nodeType": "YulFunctionCall",
																"src": "14422:15:11"
															},
															"nativeSrc": "14422:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "14422:15:11"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "14263:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "14263:180:11"
											},
											{
												"body": {
													"nativeSrc": "14512:80:11",
													"nodeType": "YulBlock",
													"src": "14512:80:11",
													"statements": [
														{
															"nativeSrc": "14522:22:11",
															"nodeType": "YulAssignment",
															"src": "14522:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14537:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "14537:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14531:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "14531:5:11"
																},
																"nativeSrc": "14531:13:11",
																"nodeType": "YulFunctionCall",
																"src": "14531:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14522:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "14522:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14580:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "14580:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "14553:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "14553:26:11"
																},
																"nativeSrc": "14553:33:11",
																"nodeType": "YulFunctionCall",
																"src": "14553:33:11"
															},
															"nativeSrc": "14553:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "14553:33:11"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "14449:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14490:6:11",
														"nodeType": "YulTypedName",
														"src": "14490:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14498:3:11",
														"nodeType": "YulTypedName",
														"src": "14498:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14506:5:11",
														"nodeType": "YulTypedName",
														"src": "14506:5:11",
														"type": ""
													}
												],
												"src": "14449:143:11"
											},
											{
												"body": {
													"nativeSrc": "14675:274:11",
													"nodeType": "YulBlock",
													"src": "14675:274:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "14721:83:11",
																"nodeType": "YulBlock",
																"src": "14721:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14723:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "14723:77:11"
																			},
																			"nativeSrc": "14723:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "14723:79:11"
																		},
																		"nativeSrc": "14723:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "14723:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14696:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "14696:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14705:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14705:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14692:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14692:3:11"
																		},
																		"nativeSrc": "14692:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14692:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14717:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14717:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14688:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14688:3:11"
																},
																"nativeSrc": "14688:32:11",
																"nodeType": "YulFunctionCall",
																"src": "14688:32:11"
															},
															"nativeSrc": "14685:119:11",
															"nodeType": "YulIf",
															"src": "14685:119:11"
														},
														{
															"nativeSrc": "14814:128:11",
															"nodeType": "YulBlock",
															"src": "14814:128:11",
															"statements": [
																{
																	"nativeSrc": "14829:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14829:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14843:1:11",
																		"nodeType": "YulLiteral",
																		"src": "14843:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14833:6:11",
																			"nodeType": "YulTypedName",
																			"src": "14833:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14858:74:11",
																	"nodeType": "YulAssignment",
																	"src": "14858:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14904:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "14904:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14915:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "14915:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14900:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "14900:3:11"
																				},
																				"nativeSrc": "14900:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "14900:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14924:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "14924:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "14868:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "14868:31:11"
																		},
																		"nativeSrc": "14868:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14868:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14858:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "14858:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14598:351:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14645:9:11",
														"nodeType": "YulTypedName",
														"src": "14645:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14656:7:11",
														"nodeType": "YulTypedName",
														"src": "14656:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14668:6:11",
														"nodeType": "YulTypedName",
														"src": "14668:6:11",
														"type": ""
													}
												],
												"src": "14598:351:11"
											},
											{
												"body": {
													"nativeSrc": "15008:32:11",
													"nodeType": "YulBlock",
													"src": "15008:32:11",
													"statements": [
														{
															"nativeSrc": "15018:16:11",
															"nodeType": "YulAssignment",
															"src": "15018:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "15029:5:11",
																"nodeType": "YulIdentifier",
																"src": "15029:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "15018:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "15018:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "14955:85:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14990:5:11",
														"nodeType": "YulTypedName",
														"src": "14990:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "15000:7:11",
														"nodeType": "YulTypedName",
														"src": "15000:7:11",
														"type": ""
													}
												],
												"src": "14955:85:11"
											},
											{
												"body": {
													"nativeSrc": "15114:90:11",
													"nodeType": "YulBlock",
													"src": "15114:90:11",
													"statements": [
														{
															"nativeSrc": "15124:74:11",
															"nodeType": "YulAssignment",
															"src": "15124:74:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15190:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "15190:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "15164:25:11",
																					"nodeType": "YulIdentifier",
																					"src": "15164:25:11"
																				},
																				"nativeSrc": "15164:32:11",
																				"nodeType": "YulFunctionCall",
																				"src": "15164:32:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "15155:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "15155:8:11"
																		},
																		"nativeSrc": "15155:42:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15155:42:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15137:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "15137:17:11"
																},
																"nativeSrc": "15137:61:11",
																"nodeType": "YulFunctionCall",
																"src": "15137:61:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "15124:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "15124:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nativeSrc": "15046:158:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15094:5:11",
														"nodeType": "YulTypedName",
														"src": "15094:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "15104:9:11",
														"nodeType": "YulTypedName",
														"src": "15104:9:11",
														"type": ""
													}
												],
												"src": "15046:158:11"
											},
											{
												"body": {
													"nativeSrc": "15283:74:11",
													"nodeType": "YulBlock",
													"src": "15283:74:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15300:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15300:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15344:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "15344:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nativeSrc": "15305:38:11",
																			"nodeType": "YulIdentifier",
																			"src": "15305:38:11"
																		},
																		"nativeSrc": "15305:45:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15305:45:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15293:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15293:6:11"
																},
																"nativeSrc": "15293:58:11",
																"nodeType": "YulFunctionCall",
																"src": "15293:58:11"
															},
															"nativeSrc": "15293:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "15293:58:11"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nativeSrc": "15210:147:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15271:5:11",
														"nodeType": "YulTypedName",
														"src": "15271:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15278:3:11",
														"nodeType": "YulTypedName",
														"src": "15278:3:11",
														"type": ""
													}
												],
												"src": "15210:147:11"
											},
											{
												"body": {
													"nativeSrc": "15437:40:11",
													"nodeType": "YulBlock",
													"src": "15437:40:11",
													"statements": [
														{
															"nativeSrc": "15448:22:11",
															"nodeType": "YulAssignment",
															"src": "15448:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15464:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "15464:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15458:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "15458:5:11"
																},
																"nativeSrc": "15458:12:11",
																"nodeType": "YulFunctionCall",
																"src": "15458:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "15448:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15448:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "15363:114:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15420:5:11",
														"nodeType": "YulTypedName",
														"src": "15420:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "15430:6:11",
														"nodeType": "YulTypedName",
														"src": "15430:6:11",
														"type": ""
													}
												],
												"src": "15363:114:11"
											},
											{
												"body": {
													"nativeSrc": "15594:73:11",
													"nodeType": "YulBlock",
													"src": "15594:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15611:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15611:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15616:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "15616:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15604:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15604:6:11"
																},
																"nativeSrc": "15604:19:11",
																"nodeType": "YulFunctionCall",
																"src": "15604:19:11"
															},
															"nativeSrc": "15604:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "15604:19:11"
														},
														{
															"nativeSrc": "15632:29:11",
															"nodeType": "YulAssignment",
															"src": "15632:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15651:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15651:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15656:4:11",
																		"nodeType": "YulLiteral",
																		"src": "15656:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15647:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15647:3:11"
																},
																"nativeSrc": "15647:14:11",
																"nodeType": "YulFunctionCall",
																"src": "15647:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "15632:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "15632:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "15483:184:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15566:3:11",
														"nodeType": "YulTypedName",
														"src": "15566:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "15571:6:11",
														"nodeType": "YulTypedName",
														"src": "15571:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "15582:11:11",
														"nodeType": "YulTypedName",
														"src": "15582:11:11",
														"type": ""
													}
												],
												"src": "15483:184:11"
											},
											{
												"body": {
													"nativeSrc": "15745:60:11",
													"nodeType": "YulBlock",
													"src": "15745:60:11",
													"statements": [
														{
															"nativeSrc": "15755:11:11",
															"nodeType": "YulAssignment",
															"src": "15755:11:11",
															"value": {
																"name": "ptr",
																"nativeSrc": "15763:3:11",
																"nodeType": "YulIdentifier",
																"src": "15763:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "15755:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15755:4:11"
																}
															]
														},
														{
															"nativeSrc": "15776:22:11",
															"nodeType": "YulAssignment",
															"src": "15776:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "15788:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15788:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15793:4:11",
																		"nodeType": "YulLiteral",
																		"src": "15793:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15784:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15784:3:11"
																},
																"nativeSrc": "15784:14:11",
																"nodeType": "YulFunctionCall",
																"src": "15784:14:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "15776:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15776:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "15673:132:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "15732:3:11",
														"nodeType": "YulTypedName",
														"src": "15732:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "15740:4:11",
														"nodeType": "YulTypedName",
														"src": "15740:4:11",
														"type": ""
													}
												],
												"src": "15673:132:11"
											},
											{
												"body": {
													"nativeSrc": "15866:53:11",
													"nodeType": "YulBlock",
													"src": "15866:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15883:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15883:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15906:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "15906:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "15888:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "15888:17:11"
																		},
																		"nativeSrc": "15888:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15888:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15876:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15876:6:11"
																},
																"nativeSrc": "15876:37:11",
																"nodeType": "YulFunctionCall",
																"src": "15876:37:11"
															},
															"nativeSrc": "15876:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "15876:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "15811:108:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15854:5:11",
														"nodeType": "YulTypedName",
														"src": "15854:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15861:3:11",
														"nodeType": "YulTypedName",
														"src": "15861:3:11",
														"type": ""
													}
												],
												"src": "15811:108:11"
											},
											{
												"body": {
													"nativeSrc": "16005:99:11",
													"nodeType": "YulBlock",
													"src": "16005:99:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16049:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "16049:6:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16057:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16057:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nativeSrc": "16015:33:11",
																	"nodeType": "YulIdentifier",
																	"src": "16015:33:11"
																},
																"nativeSrc": "16015:46:11",
																"nodeType": "YulFunctionCall",
																"src": "16015:46:11"
															},
															"nativeSrc": "16015:46:11",
															"nodeType": "YulExpressionStatement",
															"src": "16015:46:11"
														},
														{
															"nativeSrc": "16070:28:11",
															"nodeType": "YulAssignment",
															"src": "16070:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16088:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16088:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16093:4:11",
																		"nodeType": "YulLiteral",
																		"src": "16093:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16084:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16084:3:11"
																},
																"nativeSrc": "16084:14:11",
																"nodeType": "YulFunctionCall",
																"src": "16084:14:11"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "16070:10:11",
																	"nodeType": "YulIdentifier",
																	"src": "16070:10:11"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nativeSrc": "15925:179:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "15978:6:11",
														"nodeType": "YulTypedName",
														"src": "15978:6:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15986:3:11",
														"nodeType": "YulTypedName",
														"src": "15986:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "15994:10:11",
														"nodeType": "YulTypedName",
														"src": "15994:10:11",
														"type": ""
													}
												],
												"src": "15925:179:11"
											},
											{
												"body": {
													"nativeSrc": "16185:38:11",
													"nodeType": "YulBlock",
													"src": "16185:38:11",
													"statements": [
														{
															"nativeSrc": "16195:22:11",
															"nodeType": "YulAssignment",
															"src": "16195:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "16207:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16207:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16212:4:11",
																		"nodeType": "YulLiteral",
																		"src": "16212:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16203:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16203:3:11"
																},
																"nativeSrc": "16203:14:11",
																"nodeType": "YulFunctionCall",
																"src": "16203:14:11"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "16195:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "16195:4:11"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "16110:113:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "16172:3:11",
														"nodeType": "YulTypedName",
														"src": "16172:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "16180:4:11",
														"nodeType": "YulTypedName",
														"src": "16180:4:11",
														"type": ""
													}
												],
												"src": "16110:113:11"
											},
											{
												"body": {
													"nativeSrc": "16383:608:11",
													"nodeType": "YulBlock",
													"src": "16383:608:11",
													"statements": [
														{
															"nativeSrc": "16393:68:11",
															"nodeType": "YulVariableDeclaration",
															"src": "16393:68:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16455:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "16455:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "16407:47:11",
																	"nodeType": "YulIdentifier",
																	"src": "16407:47:11"
																},
																"nativeSrc": "16407:54:11",
																"nodeType": "YulFunctionCall",
																"src": "16407:54:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "16397:6:11",
																	"nodeType": "YulTypedName",
																	"src": "16397:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16470:93:11",
															"nodeType": "YulAssignment",
															"src": "16470:93:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16551:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16551:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16556:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "16556:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "16477:73:11",
																	"nodeType": "YulIdentifier",
																	"src": "16477:73:11"
																},
																"nativeSrc": "16477:86:11",
																"nodeType": "YulFunctionCall",
																"src": "16477:86:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16470:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16470:3:11"
																}
															]
														},
														{
															"nativeSrc": "16572:71:11",
															"nodeType": "YulVariableDeclaration",
															"src": "16572:71:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16637:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "16637:5:11"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "16587:49:11",
																	"nodeType": "YulIdentifier",
																	"src": "16587:49:11"
																},
																"nativeSrc": "16587:56:11",
																"nodeType": "YulFunctionCall",
																"src": "16587:56:11"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "16576:7:11",
																	"nodeType": "YulTypedName",
																	"src": "16576:7:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16652:21:11",
															"nodeType": "YulVariableDeclaration",
															"src": "16652:21:11",
															"value": {
																"name": "baseRef",
																"nativeSrc": "16666:7:11",
																"nodeType": "YulIdentifier",
																"src": "16666:7:11"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "16656:6:11",
																	"nodeType": "YulTypedName",
																	"src": "16656:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16742:224:11",
																"nodeType": "YulBlock",
																"src": "16742:224:11",
																"statements": [
																	{
																		"nativeSrc": "16756:34:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "16756:34:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "16783:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "16783:6:11"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "16777:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "16777:5:11"
																			},
																			"nativeSrc": "16777:13:11",
																			"nodeType": "YulFunctionCall",
																			"src": "16777:13:11"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "16760:13:11",
																				"nodeType": "YulTypedName",
																				"src": "16760:13:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "16803:70:11",
																		"nodeType": "YulAssignment",
																		"src": "16803:70:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "16854:13:11",
																					"nodeType": "YulIdentifier",
																					"src": "16854:13:11"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "16869:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "16869:3:11"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nativeSrc": "16810:43:11",
																				"nodeType": "YulIdentifier",
																				"src": "16810:43:11"
																			},
																			"nativeSrc": "16810:63:11",
																			"nodeType": "YulFunctionCall",
																			"src": "16810:63:11"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "16803:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "16803:3:11"
																			}
																		]
																	},
																	{
																		"nativeSrc": "16886:70:11",
																		"nodeType": "YulAssignment",
																		"src": "16886:70:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "16949:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "16949:6:11"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nativeSrc": "16896:52:11",
																				"nodeType": "YulIdentifier",
																				"src": "16896:52:11"
																			},
																			"nativeSrc": "16896:60:11",
																			"nodeType": "YulFunctionCall",
																			"src": "16896:60:11"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "16886:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "16886:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "16704:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "16704:1:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16707:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "16707:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "16701:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "16701:2:11"
																},
																"nativeSrc": "16701:13:11",
																"nodeType": "YulFunctionCall",
																"src": "16701:13:11"
															},
															"nativeSrc": "16682:284:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "16715:18:11",
																"nodeType": "YulBlock",
																"src": "16715:18:11",
																"statements": [
																	{
																		"nativeSrc": "16717:14:11",
																		"nodeType": "YulAssignment",
																		"src": "16717:14:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "16726:1:11",
																					"nodeType": "YulIdentifier",
																					"src": "16726:1:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16729:1:11",
																					"nodeType": "YulLiteral",
																					"src": "16729:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16722:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "16722:3:11"
																			},
																			"nativeSrc": "16722:9:11",
																			"nodeType": "YulFunctionCall",
																			"src": "16722:9:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "16717:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "16717:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "16686:14:11",
																"nodeType": "YulBlock",
																"src": "16686:14:11",
																"statements": [
																	{
																		"nativeSrc": "16688:10:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "16688:10:11",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "16697:1:11",
																			"nodeType": "YulLiteral",
																			"src": "16697:1:11",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "16692:1:11",
																				"nodeType": "YulTypedName",
																				"src": "16692:1:11",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "16682:284:11"
														},
														{
															"nativeSrc": "16975:10:11",
															"nodeType": "YulAssignment",
															"src": "16975:10:11",
															"value": {
																"name": "pos",
																"nativeSrc": "16982:3:11",
																"nodeType": "YulIdentifier",
																"src": "16982:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16975:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16975:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "16259:732:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16362:5:11",
														"nodeType": "YulTypedName",
														"src": "16362:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16369:3:11",
														"nodeType": "YulTypedName",
														"src": "16369:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16378:3:11",
														"nodeType": "YulTypedName",
														"src": "16378:3:11",
														"type": ""
													}
												],
												"src": "16259:732:11"
											},
											{
												"body": {
													"nativeSrc": "17062:53:11",
													"nodeType": "YulBlock",
													"src": "17062:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17079:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17079:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17102:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "17102:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "17084:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "17084:17:11"
																		},
																		"nativeSrc": "17084:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17084:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17072:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17072:6:11"
																},
																"nativeSrc": "17072:37:11",
																"nodeType": "YulFunctionCall",
																"src": "17072:37:11"
															},
															"nativeSrc": "17072:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "17072:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "16997:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17050:5:11",
														"nodeType": "YulTypedName",
														"src": "17050:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "17057:3:11",
														"nodeType": "YulTypedName",
														"src": "17057:3:11",
														"type": ""
													}
												],
												"src": "16997:118:11"
											},
											{
												"body": {
													"nativeSrc": "17389:563:11",
													"nodeType": "YulBlock",
													"src": "17389:563:11",
													"statements": [
														{
															"nativeSrc": "17399:27:11",
															"nodeType": "YulAssignment",
															"src": "17399:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17411:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "17411:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17422:3:11",
																		"nodeType": "YulLiteral",
																		"src": "17422:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17407:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17407:3:11"
																},
																"nativeSrc": "17407:19:11",
																"nodeType": "YulFunctionCall",
																"src": "17407:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17399:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17399:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17480:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "17480:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17493:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17493:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17504:1:11",
																				"nodeType": "YulLiteral",
																				"src": "17504:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17489:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17489:3:11"
																		},
																		"nativeSrc": "17489:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17489:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17436:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "17436:43:11"
																},
																"nativeSrc": "17436:71:11",
																"nodeType": "YulFunctionCall",
																"src": "17436:71:11"
															},
															"nativeSrc": "17436:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "17436:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17569:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "17569:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17582:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17582:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17593:2:11",
																				"nodeType": "YulLiteral",
																				"src": "17593:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17578:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17578:3:11"
																		},
																		"nativeSrc": "17578:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17578:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "17517:51:11",
																	"nodeType": "YulIdentifier",
																	"src": "17517:51:11"
																},
																"nativeSrc": "17517:80:11",
																"nodeType": "YulFunctionCall",
																"src": "17517:80:11"
															},
															"nativeSrc": "17517:80:11",
															"nodeType": "YulExpressionStatement",
															"src": "17517:80:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17618:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17618:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17629:2:11",
																				"nodeType": "YulLiteral",
																				"src": "17629:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17614:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17614:3:11"
																		},
																		"nativeSrc": "17614:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17614:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17638:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "17638:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17644:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17644:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17634:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17634:3:11"
																		},
																		"nativeSrc": "17634:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17634:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17607:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17607:6:11"
																},
																"nativeSrc": "17607:48:11",
																"nodeType": "YulFunctionCall",
																"src": "17607:48:11"
															},
															"nativeSrc": "17607:48:11",
															"nodeType": "YulExpressionStatement",
															"src": "17607:48:11"
														},
														{
															"nativeSrc": "17664:116:11",
															"nodeType": "YulAssignment",
															"src": "17664:116:11",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17766:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "17766:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "17775:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "17775:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "17672:93:11",
																	"nodeType": "YulIdentifier",
																	"src": "17672:93:11"
																},
																"nativeSrc": "17672:108:11",
																"nodeType": "YulFunctionCall",
																"src": "17672:108:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17664:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17664:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "17834:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "17834:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17847:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17847:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17858:2:11",
																				"nodeType": "YulLiteral",
																				"src": "17858:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17843:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17843:3:11"
																		},
																		"nativeSrc": "17843:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17843:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17790:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "17790:43:11"
																},
																"nativeSrc": "17790:72:11",
																"nodeType": "YulFunctionCall",
																"src": "17790:72:11"
															},
															"nativeSrc": "17790:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "17790:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "17916:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "17916:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17929:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17929:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17940:3:11",
																				"nodeType": "YulLiteral",
																				"src": "17940:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17925:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17925:3:11"
																		},
																		"nativeSrc": "17925:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17925:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17872:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "17872:43:11"
																},
																"nativeSrc": "17872:73:11",
																"nodeType": "YulFunctionCall",
																"src": "17872:73:11"
															},
															"nativeSrc": "17872:73:11",
															"nodeType": "YulExpressionStatement",
															"src": "17872:73:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "17121:831:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17329:9:11",
														"nodeType": "YulTypedName",
														"src": "17329:9:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "17341:6:11",
														"nodeType": "YulTypedName",
														"src": "17341:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "17349:6:11",
														"nodeType": "YulTypedName",
														"src": "17349:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17357:6:11",
														"nodeType": "YulTypedName",
														"src": "17357:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17365:6:11",
														"nodeType": "YulTypedName",
														"src": "17365:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17373:6:11",
														"nodeType": "YulTypedName",
														"src": "17373:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17384:4:11",
														"nodeType": "YulTypedName",
														"src": "17384:4:11",
														"type": ""
													}
												],
												"src": "17121:831:11"
											},
											{
												"body": {
													"nativeSrc": "18047:28:11",
													"nodeType": "YulBlock",
													"src": "18047:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18064:1:11",
																		"nodeType": "YulLiteral",
																		"src": "18064:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18067:1:11",
																		"nodeType": "YulLiteral",
																		"src": "18067:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18057:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "18057:6:11"
																},
																"nativeSrc": "18057:12:11",
																"nodeType": "YulFunctionCall",
																"src": "18057:12:11"
															},
															"nativeSrc": "18057:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "18057:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "17958:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "17958:117:11"
											},
											{
												"body": {
													"nativeSrc": "18129:54:11",
													"nodeType": "YulBlock",
													"src": "18129:54:11",
													"statements": [
														{
															"nativeSrc": "18139:38:11",
															"nodeType": "YulAssignment",
															"src": "18139:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18157:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "18157:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18164:2:11",
																				"nodeType": "YulLiteral",
																				"src": "18164:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18153:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18153:3:11"
																		},
																		"nativeSrc": "18153:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18153:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "18173:2:11",
																				"nodeType": "YulLiteral",
																				"src": "18173:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "18169:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18169:3:11"
																		},
																		"nativeSrc": "18169:7:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18169:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "18149:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18149:3:11"
																},
																"nativeSrc": "18149:28:11",
																"nodeType": "YulFunctionCall",
																"src": "18149:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18139:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "18139:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "18081:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18112:5:11",
														"nodeType": "YulTypedName",
														"src": "18112:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "18122:6:11",
														"nodeType": "YulTypedName",
														"src": "18122:6:11",
														"type": ""
													}
												],
												"src": "18081:102:11"
											},
											{
												"body": {
													"nativeSrc": "18232:238:11",
													"nodeType": "YulBlock",
													"src": "18232:238:11",
													"statements": [
														{
															"nativeSrc": "18242:58:11",
															"nodeType": "YulVariableDeclaration",
															"src": "18242:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "18264:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "18264:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "18294:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "18294:4:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "18272:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "18272:21:11"
																		},
																		"nativeSrc": "18272:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18272:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18260:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18260:3:11"
																},
																"nativeSrc": "18260:40:11",
																"nodeType": "YulFunctionCall",
																"src": "18260:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "18246:10:11",
																	"nodeType": "YulTypedName",
																	"src": "18246:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18411:22:11",
																"nodeType": "YulBlock",
																"src": "18411:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "18413:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "18413:16:11"
																			},
																			"nativeSrc": "18413:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "18413:18:11"
																		},
																		"nativeSrc": "18413:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "18413:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "18354:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "18354:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18366:18:11",
																				"nodeType": "YulLiteral",
																				"src": "18366:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "18351:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "18351:2:11"
																		},
																		"nativeSrc": "18351:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18351:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "18390:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "18390:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "18402:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "18402:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "18387:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "18387:2:11"
																		},
																		"nativeSrc": "18387:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18387:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "18348:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "18348:2:11"
																},
																"nativeSrc": "18348:62:11",
																"nodeType": "YulFunctionCall",
																"src": "18348:62:11"
															},
															"nativeSrc": "18345:88:11",
															"nodeType": "YulIf",
															"src": "18345:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18449:2:11",
																		"nodeType": "YulLiteral",
																		"src": "18449:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "18453:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "18453:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18442:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "18442:6:11"
																},
																"nativeSrc": "18442:22:11",
																"nodeType": "YulFunctionCall",
																"src": "18442:22:11"
															},
															"nativeSrc": "18442:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "18442:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "18189:281:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18218:6:11",
														"nodeType": "YulTypedName",
														"src": "18218:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "18226:4:11",
														"nodeType": "YulTypedName",
														"src": "18226:4:11",
														"type": ""
													}
												],
												"src": "18189:281:11"
											},
											{
												"body": {
													"nativeSrc": "18517:88:11",
													"nodeType": "YulBlock",
													"src": "18517:88:11",
													"statements": [
														{
															"nativeSrc": "18527:30:11",
															"nodeType": "YulAssignment",
															"src": "18527:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "18537:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "18537:18:11"
																},
																"nativeSrc": "18537:20:11",
																"nodeType": "YulFunctionCall",
																"src": "18537:20:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "18527:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "18527:6:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "18586:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "18586:6:11"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "18594:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "18594:4:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "18566:19:11",
																	"nodeType": "YulIdentifier",
																	"src": "18566:19:11"
																},
																"nativeSrc": "18566:33:11",
																"nodeType": "YulFunctionCall",
																"src": "18566:33:11"
															},
															"nativeSrc": "18566:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "18566:33:11"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "18476:129:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "18501:4:11",
														"nodeType": "YulTypedName",
														"src": "18501:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "18510:6:11",
														"nodeType": "YulTypedName",
														"src": "18510:6:11",
														"type": ""
													}
												],
												"src": "18476:129:11"
											},
											{
												"body": {
													"nativeSrc": "18693:229:11",
													"nodeType": "YulBlock",
													"src": "18693:229:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "18798:22:11",
																"nodeType": "YulBlock",
																"src": "18798:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "18800:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "18800:16:11"
																			},
																			"nativeSrc": "18800:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "18800:18:11"
																		},
																		"nativeSrc": "18800:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "18800:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "18770:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "18770:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18778:18:11",
																		"nodeType": "YulLiteral",
																		"src": "18778:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18767:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "18767:2:11"
																},
																"nativeSrc": "18767:30:11",
																"nodeType": "YulFunctionCall",
																"src": "18767:30:11"
															},
															"nativeSrc": "18764:56:11",
															"nodeType": "YulIf",
															"src": "18764:56:11"
														},
														{
															"nativeSrc": "18830:25:11",
															"nodeType": "YulAssignment",
															"src": "18830:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "18842:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "18842:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18850:4:11",
																		"nodeType": "YulLiteral",
																		"src": "18850:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "18838:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18838:3:11"
																},
																"nativeSrc": "18838:17:11",
																"nodeType": "YulFunctionCall",
																"src": "18838:17:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "18830:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "18830:4:11"
																}
															]
														},
														{
															"nativeSrc": "18892:23:11",
															"nodeType": "YulAssignment",
															"src": "18892:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "18904:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "18904:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18910:4:11",
																		"nodeType": "YulLiteral",
																		"src": "18910:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18900:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18900:3:11"
																},
																"nativeSrc": "18900:15:11",
																"nodeType": "YulFunctionCall",
																"src": "18900:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "18892:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "18892:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "18611:311:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "18677:6:11",
														"nodeType": "YulTypedName",
														"src": "18677:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "18688:4:11",
														"nodeType": "YulTypedName",
														"src": "18688:4:11",
														"type": ""
													}
												],
												"src": "18611:311:11"
											},
											{
												"body": {
													"nativeSrc": "19017:28:11",
													"nodeType": "YulBlock",
													"src": "19017:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19034:1:11",
																		"nodeType": "YulLiteral",
																		"src": "19034:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19037:1:11",
																		"nodeType": "YulLiteral",
																		"src": "19037:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19027:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "19027:6:11"
																},
																"nativeSrc": "19027:12:11",
																"nodeType": "YulFunctionCall",
																"src": "19027:12:11"
															},
															"nativeSrc": "19027:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "19027:12:11"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "18928:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "18928:117:11"
											},
											{
												"body": {
													"nativeSrc": "19114:80:11",
													"nodeType": "YulBlock",
													"src": "19114:80:11",
													"statements": [
														{
															"nativeSrc": "19124:22:11",
															"nodeType": "YulAssignment",
															"src": "19124:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "19139:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "19139:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19133:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "19133:5:11"
																},
																"nativeSrc": "19133:13:11",
																"nodeType": "YulFunctionCall",
																"src": "19133:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19124:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "19124:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19182:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "19182:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "19155:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "19155:26:11"
																},
																"nativeSrc": "19155:33:11",
																"nodeType": "YulFunctionCall",
																"src": "19155:33:11"
															},
															"nativeSrc": "19155:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "19155:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "19051:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "19092:6:11",
														"nodeType": "YulTypedName",
														"src": "19092:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19100:3:11",
														"nodeType": "YulTypedName",
														"src": "19100:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "19108:5:11",
														"nodeType": "YulTypedName",
														"src": "19108:5:11",
														"type": ""
													}
												],
												"src": "19051:143:11"
											},
											{
												"body": {
													"nativeSrc": "19330:619:11",
													"nodeType": "YulBlock",
													"src": "19330:619:11",
													"statements": [
														{
															"nativeSrc": "19340:90:11",
															"nodeType": "YulAssignment",
															"src": "19340:90:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "19422:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "19422:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "19365:56:11",
																			"nodeType": "YulIdentifier",
																			"src": "19365:56:11"
																		},
																		"nativeSrc": "19365:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19365:64:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "19349:15:11",
																	"nodeType": "YulIdentifier",
																	"src": "19349:15:11"
																},
																"nativeSrc": "19349:81:11",
																"nodeType": "YulFunctionCall",
																"src": "19349:81:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "19340:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "19340:5:11"
																}
															]
														},
														{
															"nativeSrc": "19439:16:11",
															"nodeType": "YulVariableDeclaration",
															"src": "19439:16:11",
															"value": {
																"name": "array",
																"nativeSrc": "19450:5:11",
																"nodeType": "YulIdentifier",
																"src": "19450:5:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "19443:3:11",
																	"nodeType": "YulTypedName",
																	"src": "19443:3:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "19472:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "19472:5:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19479:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "19479:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19465:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "19465:6:11"
																},
																"nativeSrc": "19465:21:11",
																"nodeType": "YulFunctionCall",
																"src": "19465:21:11"
															},
															"nativeSrc": "19465:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "19465:21:11"
														},
														{
															"nativeSrc": "19495:23:11",
															"nodeType": "YulAssignment",
															"src": "19495:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "19506:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "19506:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19513:4:11",
																		"nodeType": "YulLiteral",
																		"src": "19513:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19502:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19502:3:11"
																},
																"nativeSrc": "19502:16:11",
																"nodeType": "YulFunctionCall",
																"src": "19502:16:11"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "19495:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19495:3:11"
																}
															]
														},
														{
															"nativeSrc": "19528:44:11",
															"nodeType": "YulVariableDeclaration",
															"src": "19528:44:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "19546:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "19546:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "19558:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "19558:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19566:4:11",
																				"nodeType": "YulLiteral",
																				"src": "19566:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "19554:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19554:3:11"
																		},
																		"nativeSrc": "19554:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19554:17:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19542:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19542:3:11"
																},
																"nativeSrc": "19542:30:11",
																"nodeType": "YulFunctionCall",
																"src": "19542:30:11"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "19532:6:11",
																	"nodeType": "YulTypedName",
																	"src": "19532:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19600:103:11",
																"nodeType": "YulBlock",
																"src": "19600:103:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "19614:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "19614:77:11"
																			},
																			"nativeSrc": "19614:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "19614:79:11"
																		},
																		"nativeSrc": "19614:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "19614:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "19587:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "19587:6:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "19595:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "19595:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19584:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "19584:2:11"
																},
																"nativeSrc": "19584:15:11",
																"nodeType": "YulFunctionCall",
																"src": "19584:15:11"
															},
															"nativeSrc": "19581:122:11",
															"nodeType": "YulIf",
															"src": "19581:122:11"
														},
														{
															"body": {
																"nativeSrc": "19788:155:11",
																"nodeType": "YulBlock",
																"src": "19788:155:11",
																"statements": [
																	{
																		"nativeSrc": "19803:21:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "19803:21:11",
																		"value": {
																			"name": "src",
																			"nativeSrc": "19821:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19821:3:11"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "19807:10:11",
																				"nodeType": "YulTypedName",
																				"src": "19807:10:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "19845:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "19845:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "19882:10:11",
																							"nodeType": "YulIdentifier",
																							"src": "19882:10:11"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "19894:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "19894:3:11"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nativeSrc": "19850:31:11",
																						"nodeType": "YulIdentifier",
																						"src": "19850:31:11"
																					},
																					"nativeSrc": "19850:48:11",
																					"nodeType": "YulFunctionCall",
																					"src": "19850:48:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "19838:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "19838:6:11"
																			},
																			"nativeSrc": "19838:61:11",
																			"nodeType": "YulFunctionCall",
																			"src": "19838:61:11"
																		},
																		"nativeSrc": "19838:61:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "19838:61:11"
																	},
																	{
																		"nativeSrc": "19912:21:11",
																		"nodeType": "YulAssignment",
																		"src": "19912:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "19923:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "19923:3:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "19928:4:11",
																					"nodeType": "YulLiteral",
																					"src": "19928:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "19919:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "19919:3:11"
																			},
																			"nativeSrc": "19919:14:11",
																			"nodeType": "YulFunctionCall",
																			"src": "19919:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "19912:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "19912:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "19741:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "19741:3:11"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "19746:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "19746:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "19738:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "19738:2:11"
																},
																"nativeSrc": "19738:15:11",
																"nodeType": "YulFunctionCall",
																"src": "19738:15:11"
															},
															"nativeSrc": "19712:231:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "19754:25:11",
																"nodeType": "YulBlock",
																"src": "19754:25:11",
																"statements": [
																	{
																		"nativeSrc": "19756:21:11",
																		"nodeType": "YulAssignment",
																		"src": "19756:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "19767:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "19767:3:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "19772:4:11",
																					"nodeType": "YulLiteral",
																					"src": "19772:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "19763:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "19763:3:11"
																			},
																			"nativeSrc": "19763:14:11",
																			"nodeType": "YulFunctionCall",
																			"src": "19763:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "19756:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "19756:3:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "19716:21:11",
																"nodeType": "YulBlock",
																"src": "19716:21:11",
																"statements": [
																	{
																		"nativeSrc": "19718:17:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "19718:17:11",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "19729:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "19729:6:11"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "19722:3:11",
																				"nodeType": "YulTypedName",
																				"src": "19722:3:11",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "19712:231:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "19217:732:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "19300:6:11",
														"nodeType": "YulTypedName",
														"src": "19300:6:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "19308:6:11",
														"nodeType": "YulTypedName",
														"src": "19308:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19316:3:11",
														"nodeType": "YulTypedName",
														"src": "19316:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "19324:5:11",
														"nodeType": "YulTypedName",
														"src": "19324:5:11",
														"type": ""
													}
												],
												"src": "19217:732:11"
											},
											{
												"body": {
													"nativeSrc": "20060:297:11",
													"nodeType": "YulBlock",
													"src": "20060:297:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "20109:83:11",
																"nodeType": "YulBlock",
																"src": "20109:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "20111:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "20111:77:11"
																			},
																			"nativeSrc": "20111:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "20111:79:11"
																		},
																		"nativeSrc": "20111:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "20111:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "20088:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "20088:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "20096:4:11",
																						"nodeType": "YulLiteral",
																						"src": "20096:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20084:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "20084:3:11"
																				},
																				"nativeSrc": "20084:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "20084:17:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "20103:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "20103:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "20080:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20080:3:11"
																		},
																		"nativeSrc": "20080:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20080:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20073:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "20073:6:11"
																},
																"nativeSrc": "20073:35:11",
																"nodeType": "YulFunctionCall",
																"src": "20073:35:11"
															},
															"nativeSrc": "20070:122:11",
															"nodeType": "YulIf",
															"src": "20070:122:11"
														},
														{
															"nativeSrc": "20201:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "20201:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "20221:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "20221:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20215:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "20215:5:11"
																},
																"nativeSrc": "20215:13:11",
																"nodeType": "YulFunctionCall",
																"src": "20215:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "20205:6:11",
																	"nodeType": "YulTypedName",
																	"src": "20205:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20237:114:11",
															"nodeType": "YulAssignment",
															"src": "20237:114:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "20324:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "20324:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20332:4:11",
																				"nodeType": "YulLiteral",
																				"src": "20332:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20320:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20320:3:11"
																		},
																		"nativeSrc": "20320:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20320:17:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20339:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "20339:6:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "20347:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "20347:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nativeSrc": "20246:73:11",
																	"nodeType": "YulIdentifier",
																	"src": "20246:73:11"
																},
																"nativeSrc": "20246:105:11",
																"nodeType": "YulFunctionCall",
																"src": "20246:105:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "20237:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "20237:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "19972:385:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "20038:6:11",
														"nodeType": "YulTypedName",
														"src": "20038:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "20046:3:11",
														"nodeType": "YulTypedName",
														"src": "20046:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "20054:5:11",
														"nodeType": "YulTypedName",
														"src": "20054:5:11",
														"type": ""
													}
												],
												"src": "19972:385:11"
											},
											{
												"body": {
													"nativeSrc": "20465:452:11",
													"nodeType": "YulBlock",
													"src": "20465:452:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "20511:83:11",
																"nodeType": "YulBlock",
																"src": "20511:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "20513:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "20513:77:11"
																			},
																			"nativeSrc": "20513:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "20513:79:11"
																		},
																		"nativeSrc": "20513:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "20513:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20486:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "20486:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20495:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "20495:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20482:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20482:3:11"
																		},
																		"nativeSrc": "20482:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20482:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20507:2:11",
																		"nodeType": "YulLiteral",
																		"src": "20507:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "20478:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20478:3:11"
																},
																"nativeSrc": "20478:32:11",
																"nodeType": "YulFunctionCall",
																"src": "20478:32:11"
															},
															"nativeSrc": "20475:119:11",
															"nodeType": "YulIf",
															"src": "20475:119:11"
														},
														{
															"nativeSrc": "20604:306:11",
															"nodeType": "YulBlock",
															"src": "20604:306:11",
															"statements": [
																{
																	"nativeSrc": "20619:38:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20619:38:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20643:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "20643:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "20654:1:11",
																						"nodeType": "YulLiteral",
																						"src": "20654:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20639:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "20639:3:11"
																				},
																				"nativeSrc": "20639:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "20639:17:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "20633:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "20633:5:11"
																		},
																		"nativeSrc": "20633:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20633:24:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20623:6:11",
																			"nodeType": "YulTypedName",
																			"src": "20623:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "20704:83:11",
																		"nodeType": "YulBlock",
																		"src": "20704:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "20706:77:11",
																						"nodeType": "YulIdentifier",
																						"src": "20706:77:11"
																					},
																					"nativeSrc": "20706:79:11",
																					"nodeType": "YulFunctionCall",
																					"src": "20706:79:11"
																				},
																				"nativeSrc": "20706:79:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "20706:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "20676:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "20676:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20684:18:11",
																				"nodeType": "YulLiteral",
																				"src": "20684:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "20673:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "20673:2:11"
																		},
																		"nativeSrc": "20673:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20673:30:11"
																	},
																	"nativeSrc": "20670:117:11",
																	"nodeType": "YulIf",
																	"src": "20670:117:11"
																},
																{
																	"nativeSrc": "20801:99:11",
																	"nodeType": "YulAssignment",
																	"src": "20801:99:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20872:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "20872:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20883:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "20883:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20868:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "20868:3:11"
																				},
																				"nativeSrc": "20868:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "20868:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20892:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "20892:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nativeSrc": "20811:56:11",
																			"nodeType": "YulIdentifier",
																			"src": "20811:56:11"
																		},
																		"nativeSrc": "20811:89:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20811:89:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "20801:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "20801:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "20363:554:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20435:9:11",
														"nodeType": "YulTypedName",
														"src": "20435:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "20446:7:11",
														"nodeType": "YulTypedName",
														"src": "20446:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "20458:6:11",
														"nodeType": "YulTypedName",
														"src": "20458:6:11",
														"type": ""
													}
												],
												"src": "20363:554:11"
											},
											{
												"body": {
													"nativeSrc": "21049:206:11",
													"nodeType": "YulBlock",
													"src": "21049:206:11",
													"statements": [
														{
															"nativeSrc": "21059:26:11",
															"nodeType": "YulAssignment",
															"src": "21059:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21071:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "21071:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21082:2:11",
																		"nodeType": "YulLiteral",
																		"src": "21082:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21067:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "21067:3:11"
																},
																"nativeSrc": "21067:18:11",
																"nodeType": "YulFunctionCall",
																"src": "21067:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21059:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "21059:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21139:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "21139:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21152:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "21152:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21163:1:11",
																				"nodeType": "YulLiteral",
																				"src": "21163:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21148:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21148:3:11"
																		},
																		"nativeSrc": "21148:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21148:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21095:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "21095:43:11"
																},
																"nativeSrc": "21095:71:11",
																"nodeType": "YulFunctionCall",
																"src": "21095:71:11"
															},
															"nativeSrc": "21095:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "21095:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21220:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "21220:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21233:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "21233:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21244:2:11",
																				"nodeType": "YulLiteral",
																				"src": "21244:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21229:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21229:3:11"
																		},
																		"nativeSrc": "21229:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21229:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21176:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "21176:43:11"
																},
																"nativeSrc": "21176:72:11",
																"nodeType": "YulFunctionCall",
																"src": "21176:72:11"
															},
															"nativeSrc": "21176:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "21176:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "20923:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21013:9:11",
														"nodeType": "YulTypedName",
														"src": "21013:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21025:6:11",
														"nodeType": "YulTypedName",
														"src": "21025:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21033:6:11",
														"nodeType": "YulTypedName",
														"src": "21033:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21044:4:11",
														"nodeType": "YulTypedName",
														"src": "21044:4:11",
														"type": ""
													}
												],
												"src": "20923:332:11"
											},
											{
												"body": {
													"nativeSrc": "21338:274:11",
													"nodeType": "YulBlock",
													"src": "21338:274:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "21384:83:11",
																"nodeType": "YulBlock",
																"src": "21384:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "21386:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "21386:77:11"
																			},
																			"nativeSrc": "21386:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "21386:79:11"
																		},
																		"nativeSrc": "21386:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "21386:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21359:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "21359:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21368:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "21368:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21355:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21355:3:11"
																		},
																		"nativeSrc": "21355:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21355:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21380:2:11",
																		"nodeType": "YulLiteral",
																		"src": "21380:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "21351:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "21351:3:11"
																},
																"nativeSrc": "21351:32:11",
																"nodeType": "YulFunctionCall",
																"src": "21351:32:11"
															},
															"nativeSrc": "21348:119:11",
															"nodeType": "YulIf",
															"src": "21348:119:11"
														},
														{
															"nativeSrc": "21477:128:11",
															"nodeType": "YulBlock",
															"src": "21477:128:11",
															"statements": [
																{
																	"nativeSrc": "21492:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21492:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21506:1:11",
																		"nodeType": "YulLiteral",
																		"src": "21506:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21496:6:11",
																			"nodeType": "YulTypedName",
																			"src": "21496:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21521:74:11",
																	"nodeType": "YulAssignment",
																	"src": "21521:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21567:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "21567:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21578:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "21578:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21563:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "21563:3:11"
																				},
																				"nativeSrc": "21563:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "21563:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21587:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "21587:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "21531:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "21531:31:11"
																		},
																		"nativeSrc": "21531:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21531:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "21521:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "21521:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "21261:351:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21308:9:11",
														"nodeType": "YulTypedName",
														"src": "21308:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "21319:7:11",
														"nodeType": "YulTypedName",
														"src": "21319:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "21331:6:11",
														"nodeType": "YulTypedName",
														"src": "21331:6:11",
														"type": ""
													}
												],
												"src": "21261:351:11"
											},
											{
												"body": {
													"nativeSrc": "21772:288:11",
													"nodeType": "YulBlock",
													"src": "21772:288:11",
													"statements": [
														{
															"nativeSrc": "21782:26:11",
															"nodeType": "YulAssignment",
															"src": "21782:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21794:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "21794:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21805:2:11",
																		"nodeType": "YulLiteral",
																		"src": "21805:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21790:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "21790:3:11"
																},
																"nativeSrc": "21790:18:11",
																"nodeType": "YulFunctionCall",
																"src": "21790:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21782:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "21782:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21862:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "21862:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21875:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "21875:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21886:1:11",
																				"nodeType": "YulLiteral",
																				"src": "21886:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21871:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21871:3:11"
																		},
																		"nativeSrc": "21871:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21871:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21818:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "21818:43:11"
																},
																"nativeSrc": "21818:71:11",
																"nodeType": "YulFunctionCall",
																"src": "21818:71:11"
															},
															"nativeSrc": "21818:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "21818:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21943:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "21943:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21956:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "21956:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21967:2:11",
																				"nodeType": "YulLiteral",
																				"src": "21967:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21952:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21952:3:11"
																		},
																		"nativeSrc": "21952:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21952:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21899:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "21899:43:11"
																},
																"nativeSrc": "21899:72:11",
																"nodeType": "YulFunctionCall",
																"src": "21899:72:11"
															},
															"nativeSrc": "21899:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "21899:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "22025:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "22025:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22038:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "22038:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22049:2:11",
																				"nodeType": "YulLiteral",
																				"src": "22049:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22034:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "22034:3:11"
																		},
																		"nativeSrc": "22034:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "22034:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21981:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "21981:43:11"
																},
																"nativeSrc": "21981:72:11",
																"nodeType": "YulFunctionCall",
																"src": "21981:72:11"
															},
															"nativeSrc": "21981:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "21981:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "21618:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21728:9:11",
														"nodeType": "YulTypedName",
														"src": "21728:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21740:6:11",
														"nodeType": "YulTypedName",
														"src": "21740:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21748:6:11",
														"nodeType": "YulTypedName",
														"src": "21748:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21756:6:11",
														"nodeType": "YulTypedName",
														"src": "21756:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21767:4:11",
														"nodeType": "YulTypedName",
														"src": "21767:4:11",
														"type": ""
													}
												],
												"src": "21618:442:11"
											},
											{
												"body": {
													"nativeSrc": "22192:206:11",
													"nodeType": "YulBlock",
													"src": "22192:206:11",
													"statements": [
														{
															"nativeSrc": "22202:26:11",
															"nodeType": "YulAssignment",
															"src": "22202:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22214:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "22214:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22225:2:11",
																		"nodeType": "YulLiteral",
																		"src": "22225:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22210:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "22210:3:11"
																},
																"nativeSrc": "22210:18:11",
																"nodeType": "YulFunctionCall",
																"src": "22210:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22202:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "22202:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22282:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "22282:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22295:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "22295:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22306:1:11",
																				"nodeType": "YulLiteral",
																				"src": "22306:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22291:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "22291:3:11"
																		},
																		"nativeSrc": "22291:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "22291:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22238:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "22238:43:11"
																},
																"nativeSrc": "22238:71:11",
																"nodeType": "YulFunctionCall",
																"src": "22238:71:11"
															},
															"nativeSrc": "22238:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "22238:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22363:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "22363:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22376:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "22376:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22387:2:11",
																				"nodeType": "YulLiteral",
																				"src": "22387:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22372:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "22372:3:11"
																		},
																		"nativeSrc": "22372:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "22372:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22319:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "22319:43:11"
																},
																"nativeSrc": "22319:72:11",
																"nodeType": "YulFunctionCall",
																"src": "22319:72:11"
															},
															"nativeSrc": "22319:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "22319:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "22066:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22156:9:11",
														"nodeType": "YulTypedName",
														"src": "22156:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22168:6:11",
														"nodeType": "YulTypedName",
														"src": "22168:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22176:6:11",
														"nodeType": "YulTypedName",
														"src": "22176:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22187:4:11",
														"nodeType": "YulTypedName",
														"src": "22187:4:11",
														"type": ""
													}
												],
												"src": "22066:332:11"
											},
											{
												"body": {
													"nativeSrc": "22446:48:11",
													"nodeType": "YulBlock",
													"src": "22446:48:11",
													"statements": [
														{
															"nativeSrc": "22456:32:11",
															"nodeType": "YulAssignment",
															"src": "22456:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "22481:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "22481:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "22474:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "22474:6:11"
																		},
																		"nativeSrc": "22474:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "22474:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "22467:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "22467:6:11"
																},
																"nativeSrc": "22467:21:11",
																"nodeType": "YulFunctionCall",
																"src": "22467:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "22456:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "22456:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "22404:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22428:5:11",
														"nodeType": "YulTypedName",
														"src": "22428:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "22438:7:11",
														"nodeType": "YulTypedName",
														"src": "22438:7:11",
														"type": ""
													}
												],
												"src": "22404:90:11"
											},
											{
												"body": {
													"nativeSrc": "22540:76:11",
													"nodeType": "YulBlock",
													"src": "22540:76:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "22594:16:11",
																"nodeType": "YulBlock",
																"src": "22594:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "22603:1:11",
																					"nodeType": "YulLiteral",
																					"src": "22603:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "22606:1:11",
																					"nodeType": "YulLiteral",
																					"src": "22606:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "22596:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "22596:6:11"
																			},
																			"nativeSrc": "22596:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "22596:12:11"
																		},
																		"nativeSrc": "22596:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "22596:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "22563:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "22563:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "22585:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "22585:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "22570:14:11",
																					"nodeType": "YulIdentifier",
																					"src": "22570:14:11"
																				},
																				"nativeSrc": "22570:21:11",
																				"nodeType": "YulFunctionCall",
																				"src": "22570:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "22560:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "22560:2:11"
																		},
																		"nativeSrc": "22560:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "22560:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "22553:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "22553:6:11"
																},
																"nativeSrc": "22553:40:11",
																"nodeType": "YulFunctionCall",
																"src": "22553:40:11"
															},
															"nativeSrc": "22550:60:11",
															"nodeType": "YulIf",
															"src": "22550:60:11"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "22500:116:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22533:5:11",
														"nodeType": "YulTypedName",
														"src": "22533:5:11",
														"type": ""
													}
												],
												"src": "22500:116:11"
											},
											{
												"body": {
													"nativeSrc": "22682:77:11",
													"nodeType": "YulBlock",
													"src": "22682:77:11",
													"statements": [
														{
															"nativeSrc": "22692:22:11",
															"nodeType": "YulAssignment",
															"src": "22692:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "22707:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "22707:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "22701:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "22701:5:11"
																},
																"nativeSrc": "22701:13:11",
																"nodeType": "YulFunctionCall",
																"src": "22701:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "22692:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "22692:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22747:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "22747:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "22723:23:11",
																	"nodeType": "YulIdentifier",
																	"src": "22723:23:11"
																},
																"nativeSrc": "22723:30:11",
																"nodeType": "YulFunctionCall",
																"src": "22723:30:11"
															},
															"nativeSrc": "22723:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "22723:30:11"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "22622:137:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "22660:6:11",
														"nodeType": "YulTypedName",
														"src": "22660:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "22668:3:11",
														"nodeType": "YulTypedName",
														"src": "22668:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "22676:5:11",
														"nodeType": "YulTypedName",
														"src": "22676:5:11",
														"type": ""
													}
												],
												"src": "22622:137:11"
											},
											{
												"body": {
													"nativeSrc": "22839:271:11",
													"nodeType": "YulBlock",
													"src": "22839:271:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "22885:83:11",
																"nodeType": "YulBlock",
																"src": "22885:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "22887:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "22887:77:11"
																			},
																			"nativeSrc": "22887:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "22887:79:11"
																		},
																		"nativeSrc": "22887:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "22887:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22860:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "22860:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22869:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "22869:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22856:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "22856:3:11"
																		},
																		"nativeSrc": "22856:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "22856:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22881:2:11",
																		"nodeType": "YulLiteral",
																		"src": "22881:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "22852:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "22852:3:11"
																},
																"nativeSrc": "22852:32:11",
																"nodeType": "YulFunctionCall",
																"src": "22852:32:11"
															},
															"nativeSrc": "22849:119:11",
															"nodeType": "YulIf",
															"src": "22849:119:11"
														},
														{
															"nativeSrc": "22978:125:11",
															"nodeType": "YulBlock",
															"src": "22978:125:11",
															"statements": [
																{
																	"nativeSrc": "22993:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "22993:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "23007:1:11",
																		"nodeType": "YulLiteral",
																		"src": "23007:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "22997:6:11",
																			"nodeType": "YulTypedName",
																			"src": "22997:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "23022:71:11",
																	"nodeType": "YulAssignment",
																	"src": "23022:71:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "23065:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "23065:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "23076:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "23076:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "23061:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "23061:3:11"
																				},
																				"nativeSrc": "23061:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "23061:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "23085:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "23085:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "23032:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "23032:28:11"
																		},
																		"nativeSrc": "23032:61:11",
																		"nodeType": "YulFunctionCall",
																		"src": "23032:61:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "23022:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "23022:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "22765:345:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22809:9:11",
														"nodeType": "YulTypedName",
														"src": "22809:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "22820:7:11",
														"nodeType": "YulTypedName",
														"src": "22820:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "22832:6:11",
														"nodeType": "YulTypedName",
														"src": "22832:6:11",
														"type": ""
													}
												],
												"src": "22765:345:11"
											},
											{
												"body": {
													"nativeSrc": "23214:124:11",
													"nodeType": "YulBlock",
													"src": "23214:124:11",
													"statements": [
														{
															"nativeSrc": "23224:26:11",
															"nodeType": "YulAssignment",
															"src": "23224:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23236:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "23236:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23247:2:11",
																		"nodeType": "YulLiteral",
																		"src": "23247:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23232:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "23232:3:11"
																},
																"nativeSrc": "23232:18:11",
																"nodeType": "YulFunctionCall",
																"src": "23232:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23224:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "23224:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23304:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "23304:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23317:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "23317:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23328:1:11",
																				"nodeType": "YulLiteral",
																				"src": "23328:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23313:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "23313:3:11"
																		},
																		"nativeSrc": "23313:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "23313:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23260:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "23260:43:11"
																},
																"nativeSrc": "23260:71:11",
																"nodeType": "YulFunctionCall",
																"src": "23260:71:11"
															},
															"nativeSrc": "23260:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "23260:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "23116:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23186:9:11",
														"nodeType": "YulTypedName",
														"src": "23186:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23198:6:11",
														"nodeType": "YulTypedName",
														"src": "23198:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23209:4:11",
														"nodeType": "YulTypedName",
														"src": "23209:4:11",
														"type": ""
													}
												],
												"src": "23116:222:11"
											},
											{
												"body": {
													"nativeSrc": "23478:214:11",
													"nodeType": "YulBlock",
													"src": "23478:214:11",
													"statements": [
														{
															"nativeSrc": "23488:26:11",
															"nodeType": "YulAssignment",
															"src": "23488:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23500:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "23500:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23511:2:11",
																		"nodeType": "YulLiteral",
																		"src": "23511:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23496:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "23496:3:11"
																},
																"nativeSrc": "23496:18:11",
																"nodeType": "YulFunctionCall",
																"src": "23496:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23488:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "23488:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23568:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "23568:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23581:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "23581:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23592:1:11",
																				"nodeType": "YulLiteral",
																				"src": "23592:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23577:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "23577:3:11"
																		},
																		"nativeSrc": "23577:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "23577:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23524:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "23524:43:11"
																},
																"nativeSrc": "23524:71:11",
																"nodeType": "YulFunctionCall",
																"src": "23524:71:11"
															},
															"nativeSrc": "23524:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "23524:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23657:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "23657:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23670:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "23670:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23681:2:11",
																				"nodeType": "YulLiteral",
																				"src": "23681:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23666:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "23666:3:11"
																		},
																		"nativeSrc": "23666:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "23666:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "23605:51:11",
																	"nodeType": "YulIdentifier",
																	"src": "23605:51:11"
																},
																"nativeSrc": "23605:80:11",
																"nodeType": "YulFunctionCall",
																"src": "23605:80:11"
															},
															"nativeSrc": "23605:80:11",
															"nodeType": "YulExpressionStatement",
															"src": "23605:80:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "23344:348:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23442:9:11",
														"nodeType": "YulTypedName",
														"src": "23442:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23454:6:11",
														"nodeType": "YulTypedName",
														"src": "23454:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23462:6:11",
														"nodeType": "YulTypedName",
														"src": "23462:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23473:4:11",
														"nodeType": "YulTypedName",
														"src": "23473:4:11",
														"type": ""
													}
												],
												"src": "23344:348:11"
											},
											{
												"body": {
													"nativeSrc": "23756:40:11",
													"nodeType": "YulBlock",
													"src": "23756:40:11",
													"statements": [
														{
															"nativeSrc": "23767:22:11",
															"nodeType": "YulAssignment",
															"src": "23767:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23783:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "23783:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "23777:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "23777:5:11"
																},
																"nativeSrc": "23777:12:11",
																"nodeType": "YulFunctionCall",
																"src": "23777:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "23767:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "23767:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "23698:98:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23739:5:11",
														"nodeType": "YulTypedName",
														"src": "23739:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "23749:6:11",
														"nodeType": "YulTypedName",
														"src": "23749:6:11",
														"type": ""
													}
												],
												"src": "23698:98:11"
											},
											{
												"body": {
													"nativeSrc": "23915:34:11",
													"nodeType": "YulBlock",
													"src": "23915:34:11",
													"statements": [
														{
															"nativeSrc": "23925:18:11",
															"nodeType": "YulAssignment",
															"src": "23925:18:11",
															"value": {
																"name": "pos",
																"nativeSrc": "23940:3:11",
																"nodeType": "YulIdentifier",
																"src": "23940:3:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "23925:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "23925:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "23802:147:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23887:3:11",
														"nodeType": "YulTypedName",
														"src": "23887:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "23892:6:11",
														"nodeType": "YulTypedName",
														"src": "23892:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "23903:11:11",
														"nodeType": "YulTypedName",
														"src": "23903:11:11",
														"type": ""
													}
												],
												"src": "23802:147:11"
											},
											{
												"body": {
													"nativeSrc": "24017:184:11",
													"nodeType": "YulBlock",
													"src": "24017:184:11",
													"statements": [
														{
															"nativeSrc": "24027:10:11",
															"nodeType": "YulVariableDeclaration",
															"src": "24027:10:11",
															"value": {
																"kind": "number",
																"nativeSrc": "24036:1:11",
																"nodeType": "YulLiteral",
																"src": "24036:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "24031:1:11",
																	"nodeType": "YulTypedName",
																	"src": "24031:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "24096:63:11",
																"nodeType": "YulBlock",
																"src": "24096:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "24121:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "24121:3:11"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "24126:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "24126:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "24117:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "24117:3:11"
																					},
																					"nativeSrc": "24117:11:11",
																					"nodeType": "YulFunctionCall",
																					"src": "24117:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "24140:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "24140:3:11"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "24145:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "24145:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "24136:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "24136:3:11"
																							},
																							"nativeSrc": "24136:11:11",
																							"nodeType": "YulFunctionCall",
																							"src": "24136:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "24130:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "24130:5:11"
																					},
																					"nativeSrc": "24130:18:11",
																					"nodeType": "YulFunctionCall",
																					"src": "24130:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "24110:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "24110:6:11"
																			},
																			"nativeSrc": "24110:39:11",
																			"nodeType": "YulFunctionCall",
																			"src": "24110:39:11"
																		},
																		"nativeSrc": "24110:39:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "24110:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "24057:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "24057:1:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24060:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "24060:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "24054:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "24054:2:11"
																},
																"nativeSrc": "24054:13:11",
																"nodeType": "YulFunctionCall",
																"src": "24054:13:11"
															},
															"nativeSrc": "24046:113:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "24068:19:11",
																"nodeType": "YulBlock",
																"src": "24068:19:11",
																"statements": [
																	{
																		"nativeSrc": "24070:15:11",
																		"nodeType": "YulAssignment",
																		"src": "24070:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "24079:1:11",
																					"nodeType": "YulIdentifier",
																					"src": "24079:1:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24082:2:11",
																					"nodeType": "YulLiteral",
																					"src": "24082:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "24075:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "24075:3:11"
																			},
																			"nativeSrc": "24075:10:11",
																			"nodeType": "YulFunctionCall",
																			"src": "24075:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "24070:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "24070:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "24050:3:11",
																"nodeType": "YulBlock",
																"src": "24050:3:11",
																"statements": []
															},
															"src": "24046:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "24179:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "24179:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "24184:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "24184:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24175:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "24175:3:11"
																		},
																		"nativeSrc": "24175:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "24175:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24193:1:11",
																		"nodeType": "YulLiteral",
																		"src": "24193:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24168:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "24168:6:11"
																},
																"nativeSrc": "24168:27:11",
																"nodeType": "YulFunctionCall",
																"src": "24168:27:11"
															},
															"nativeSrc": "24168:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "24168:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "23955:246:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "23999:3:11",
														"nodeType": "YulTypedName",
														"src": "23999:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "24004:3:11",
														"nodeType": "YulTypedName",
														"src": "24004:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "24009:6:11",
														"nodeType": "YulTypedName",
														"src": "24009:6:11",
														"type": ""
													}
												],
												"src": "23955:246:11"
											},
											{
												"body": {
													"nativeSrc": "24315:278:11",
													"nodeType": "YulBlock",
													"src": "24315:278:11",
													"statements": [
														{
															"nativeSrc": "24325:52:11",
															"nodeType": "YulVariableDeclaration",
															"src": "24325:52:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24371:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "24371:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "24339:31:11",
																	"nodeType": "YulIdentifier",
																	"src": "24339:31:11"
																},
																"nativeSrc": "24339:38:11",
																"nodeType": "YulFunctionCall",
																"src": "24339:38:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "24329:6:11",
																	"nodeType": "YulTypedName",
																	"src": "24329:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24386:95:11",
															"nodeType": "YulAssignment",
															"src": "24386:95:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24469:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "24469:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24474:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "24474:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "24393:75:11",
																	"nodeType": "YulIdentifier",
																	"src": "24393:75:11"
																},
																"nativeSrc": "24393:88:11",
																"nodeType": "YulFunctionCall",
																"src": "24393:88:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24386:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "24386:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "24529:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "24529:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24536:4:11",
																				"nodeType": "YulLiteral",
																				"src": "24536:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24525:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "24525:3:11"
																		},
																		"nativeSrc": "24525:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "24525:16:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "24543:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "24543:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24548:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "24548:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "24490:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "24490:34:11"
																},
																"nativeSrc": "24490:65:11",
																"nodeType": "YulFunctionCall",
																"src": "24490:65:11"
															},
															"nativeSrc": "24490:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "24490:65:11"
														},
														{
															"nativeSrc": "24564:23:11",
															"nodeType": "YulAssignment",
															"src": "24564:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24575:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "24575:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24580:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "24580:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24571:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "24571:3:11"
																},
																"nativeSrc": "24571:16:11",
																"nodeType": "YulFunctionCall",
																"src": "24571:16:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24564:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "24564:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "24207:386:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24296:5:11",
														"nodeType": "YulTypedName",
														"src": "24296:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "24303:3:11",
														"nodeType": "YulTypedName",
														"src": "24303:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24311:3:11",
														"nodeType": "YulTypedName",
														"src": "24311:3:11",
														"type": ""
													}
												],
												"src": "24207:386:11"
											},
											{
												"body": {
													"nativeSrc": "24733:137:11",
													"nodeType": "YulBlock",
													"src": "24733:137:11",
													"statements": [
														{
															"nativeSrc": "24744:100:11",
															"nodeType": "YulAssignment",
															"src": "24744:100:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24831:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "24831:6:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "24840:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "24840:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "24751:79:11",
																	"nodeType": "YulIdentifier",
																	"src": "24751:79:11"
																},
																"nativeSrc": "24751:93:11",
																"nodeType": "YulFunctionCall",
																"src": "24751:93:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24744:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "24744:3:11"
																}
															]
														},
														{
															"nativeSrc": "24854:10:11",
															"nodeType": "YulAssignment",
															"src": "24854:10:11",
															"value": {
																"name": "pos",
																"nativeSrc": "24861:3:11",
																"nodeType": "YulIdentifier",
																"src": "24861:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24854:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "24854:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "24599:271:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24712:3:11",
														"nodeType": "YulTypedName",
														"src": "24712:3:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24718:6:11",
														"nodeType": "YulTypedName",
														"src": "24718:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24729:3:11",
														"nodeType": "YulTypedName",
														"src": "24729:3:11",
														"type": ""
													}
												],
												"src": "24599:271:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$651_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$651_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IUniswapV2Router02_$1752_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IUniswapV2Router02_$1752_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV2Router02_$1752_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IUniswapV2Router02_$1752__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IUniswapV2Router02_$1752_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Plan is exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016(memPtr) {\n\n        mstore(add(memPtr, 0), \"Frequency must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Plan is not exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Total must be greater than amoun\")\n\n        mstore(add(memPtr, 32), \"t\")\n\n    }\n\n    function abi_encode_t_stringliteral_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Plan is not active\")\n\n    }\n\n    function abi_encode_t_stringliteral_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot trigger more than remaini\")\n\n        mstore(add(memPtr, 32), \"ng amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_0d0ccbf0fb388ef2019a4c569d6a5318305b2bf4cf0afc9067c0a6b28559054d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can only trigger plan once per d\")\n\n        mstore(add(memPtr, 32), \"ay\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d0ccbf0fb388ef2019a4c569d6a5318305b2bf4cf0afc9067c0a6b28559054d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_0d0ccbf0fb388ef2019a4c569d6a5318305b2bf4cf0afc9067c0a6b28559054d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d0ccbf0fb388ef2019a4c569d6a5318305b2bf4cf0afc9067c0a6b28559054d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d0ccbf0fb388ef2019a4c569d6a5318305b2bf4cf0afc9067c0a6b28559054d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009b575f3560e01c8063affed0e011610064578063affed0e014610135578063b197df5414610153578063c440fa0f1461016f578063d930da601461018b578063eb5a662e146101955761009b565b8062e1801c1461009f5780632f48ab7d146100bb578063735de9f7146100d957806386d86d84146100f7578063a63661a51461012b575b5f80fd5b6100b960048036038101906100b491906115c2565b6101c5565b005b6100c36103a8565b6040516100d0919061167a565b60405180910390f35b6100e16103cd565b6040516100ee91906116b3565b60405180910390f35b610111600480360381019061010c9190611707565b6103f2565b604051610122959493929190611741565b60405180910390f35b610133610424565b005b61013d61063b565b60405161014a9190611792565b60405180910390f35b61016d600480360381019061016891906115c2565b610640565b005b61018960048036038101906101849190611707565b61084c565b005b610193610e26565b005b6101af60048036038101906101aa9190611707565b610f31565b6040516101bc9190611792565b60405180910390f35b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015411610246576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023d90611805565b60405180910390fd5b5f8211610288576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027f9061186d565b60405180910390fd5b5f81116102ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c1906118d5565b60405180910390fd5b8060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600201819055508160015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101819055503373ffffffffffffffffffffffffffffffffffffffff167fc8108639f5e0627bac90449607e60d516a5082452e397808a067b57f755515fc838360405161039c9291906118f3565b60405180910390a25050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001602052805f5260405f205f91509050805f0154908060010154908060020154908060030154908060040154905085565b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0154116104a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049c90611964565b60405180910390fd5b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206002015411610527576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051e906118d5565b60405180910390fd5b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206002015461057133610f31565b116105b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a8906119f2565b60405180910390fd5b6001805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600301819055503373ffffffffffffffffffffffffffffffffffffffff167fa806cf17be1fb3cff26c4a6a46b735ddbf2ac07c138bdedb6d2ace798a2cfd4060405160405180910390a2565b5f5481565b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0154146106c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b890611805565b60405180910390fd5b5f8211610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa9061186d565b60405180910390fd5b5f8111610745576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073c906118d5565b60405180910390fd5b6040518060a001604052805f8081548092919061076190611a3d565b9190505581526020018381526020018281526020015f81526020015f81525060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f0155602082015181600101556040820151816002015560608201518160030155608082015181600401559050503373ffffffffffffffffffffffffffffffffffffffff167f89d3f1cdfad4e5c26535ac23dc61cf9e975667801747518f01b1b653545d736a83836040516108389291906118f3565b60405180910390a2610848610424565b5050565b6001805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060030154146108ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c590611ace565b60405180910390fd5b60015f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206002015461091833610f31565b11610958576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094f90611b5c565b60405180910390fd5b6201518060015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101546109a79190611b7a565b60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600401546109f29190611bbb565b421015610a34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2b90611c5e565b60405180910390fd5b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600201549050610aa560025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16833084610fd4565b610af260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683611056565b5f600267ffffffffffffffff811115610b0e57610b0d611c7c565b5b604051908082528060200260200182016040528015610b3c5781602001602082028036833780820191505090505b50905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815f81518110610b7457610b73611ca9565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c18573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c3c9190611cea565b81600181518110610c5057610c4f611ca9565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318cbafe5845f8530610e1042610cda9190611bbb565b6040518663ffffffff1660e01b8152600401610cfa959493929190611e14565b5f604051808303815f875af1158015610d15573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f82011682018060405250810190610d3d9190611fa3565b90505f81600181518110610d5457610d53611ca9565b5b602002602001015190504260015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600401819055508473ffffffffffffffffffffffffffffffffffffffff167f1a3abf7e0a472651ebe2c79a31a5f4660c7ea65e3086ee1742d7502999bbf5b58583604051610deb9291906118f3565b60405180910390a2610e1f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686836110ef565b5050505050565b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015411610ea7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9e90611964565b60405180910390fd5b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600301819055503373ffffffffffffffffffffffffffffffffffffffff167ff222abd4ee7afb02f9450183b95d07aaab2ea2f2d6748f55525c7e875fdd58a160405160405180910390a2565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e83306040518363ffffffff1660e01b8152600401610f8e929190611fea565b602060405180830381865afa158015610fa9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fcd9190612011565b9050919050565b611050848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016110099392919061203c565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061116e565b50505050565b5f8373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401611092929190611fea565b602060405180830381865afa1580156110ad573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110d19190612011565b90506110e9848484846110e49190611bbb565b611203565b50505050565b611169838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611122929190612071565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061116e565b505050565b5f611198828473ffffffffffffffffffffffffffffffffffffffff1661131090919063ffffffff16565b90505f8151141580156111bc5750808060200190518101906111ba91906120cd565b155b156111fe57826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016111f591906120f8565b60405180910390fd5b505050565b5f8373ffffffffffffffffffffffffffffffffffffffff1663095ea7b38484604051602401611233929190612071565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506112818482611325565b61130a576112ff848573ffffffffffffffffffffffffffffffffffffffff1663095ea7b3865f6040516024016112b8929190612111565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061116e565b611309848261116e565b5b50505050565b606061131d83835f6113e4565b905092915050565b5f805f8473ffffffffffffffffffffffffffffffffffffffff168460405161134d91906121a4565b5f604051808303815f865af19150503d805f8114611386576040519150601f19603f3d011682016040523d82523d5f602084013e61138b565b606091505b50915091508180156113b857505f815114806113b75750808060200190518101906113b691906120cd565b5b5b80156113da57505f8573ffffffffffffffffffffffffffffffffffffffff163b115b9250505092915050565b60608147101561142b57306040517fcd78605900000000000000000000000000000000000000000000000000000000815260040161142291906120f8565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff16848660405161145391906121a4565b5f6040518083038185875af1925050503d805f811461148d576040519150601f19603f3d011682016040523d82523d5f602084013e611492565b606091505b50915091506114a28683836114ad565b925050509392505050565b6060826114c2576114bd8261153a565b611532565b5f82511480156114e857505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561152a57836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161152191906120f8565b60405180910390fd5b819050611533565b5b9392505050565b5f8151111561154c5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b6115a18161158f565b81146115ab575f80fd5b50565b5f813590506115bc81611598565b92915050565b5f80604083850312156115d8576115d7611587565b5b5f6115e5858286016115ae565b92505060206115f6858286016115ae565b9150509250929050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61164261163d61163884611600565b61161f565b611600565b9050919050565b5f61165382611628565b9050919050565b5f61166482611649565b9050919050565b6116748161165a565b82525050565b5f60208201905061168d5f83018461166b565b92915050565b5f61169d82611649565b9050919050565b6116ad81611693565b82525050565b5f6020820190506116c65f8301846116a4565b92915050565b5f6116d682611600565b9050919050565b6116e6816116cc565b81146116f0575f80fd5b50565b5f81359050611701816116dd565b92915050565b5f6020828403121561171c5761171b611587565b5b5f611729848285016116f3565b91505092915050565b61173b8161158f565b82525050565b5f60a0820190506117545f830188611732565b6117616020830187611732565b61176e6040830186611732565b61177b6060830185611732565b6117886080830184611732565b9695505050505050565b5f6020820190506117a55f830184611732565b92915050565b5f82825260208201905092915050565b7f506c616e206973206578697374000000000000000000000000000000000000005f82015250565b5f6117ef600d836117ab565b91506117fa826117bb565b602082019050919050565b5f6020820190508181035f83015261181c816117e3565b9050919050565b7f4672657175656e6379206d7573742062652067726561746572207468616e20305f82015250565b5f6118576020836117ab565b915061186282611823565b602082019050919050565b5f6020820190508181035f8301526118848161184b565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f6118bf601d836117ab565b91506118ca8261188b565b602082019050919050565b5f6020820190508181035f8301526118ec816118b3565b9050919050565b5f6040820190506119065f830185611732565b6119136020830184611732565b9392505050565b7f506c616e206973206e6f742065786973740000000000000000000000000000005f82015250565b5f61194e6011836117ab565b91506119598261191a565b602082019050919050565b5f6020820190508181035f83015261197b81611942565b9050919050565b7f546f74616c206d7573742062652067726561746572207468616e20616d6f756e5f8201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b5f6119dc6021836117ab565b91506119e782611982565b604082019050919050565b5f6020820190508181035f830152611a09816119d0565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a478261158f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611a7957611a78611a10565b5b600182019050919050565b7f506c616e206973206e6f742061637469766500000000000000000000000000005f82015250565b5f611ab86012836117ab565b9150611ac382611a84565b602082019050919050565b5f6020820190508181035f830152611ae581611aac565b9050919050565b7f43616e6e6f742074726967676572206d6f7265207468616e2072656d61696e695f8201527f6e6720616d6f756e740000000000000000000000000000000000000000000000602082015250565b5f611b466029836117ab565b9150611b5182611aec565b604082019050919050565b5f6020820190508181035f830152611b7381611b3a565b9050919050565b5f611b848261158f565b9150611b8f8361158f565b9250828202611b9d8161158f565b91508282048414831517611bb457611bb3611a10565b5b5092915050565b5f611bc58261158f565b9150611bd08361158f565b9250828201905080821115611be857611be7611a10565b5b92915050565b7f43616e206f6e6c79207472696767657220706c616e206f6e63652070657220645f8201527f6179000000000000000000000000000000000000000000000000000000000000602082015250565b5f611c486022836117ab565b9150611c5382611bee565b604082019050919050565b5f6020820190508181035f830152611c7581611c3c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050611ce4816116dd565b92915050565b5f60208284031215611cff57611cfe611587565b5b5f611d0c84828501611cd6565b91505092915050565b5f819050919050565b5f611d38611d33611d2e84611d15565b61161f565b61158f565b9050919050565b611d4881611d1e565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611d80816116cc565b82525050565b5f611d918383611d77565b60208301905092915050565b5f602082019050919050565b5f611db382611d4e565b611dbd8185611d58565b9350611dc883611d68565b805f5b83811015611df8578151611ddf8882611d86565b9750611dea83611d9d565b925050600181019050611dcb565b5085935050505092915050565b611e0e816116cc565b82525050565b5f60a082019050611e275f830188611732565b611e346020830187611d3f565b8181036040830152611e468186611da9565b9050611e556060830185611e05565b611e626080830184611732565b9695505050505050565b5f80fd5b5f601f19601f8301169050919050565b611e8982611e70565b810181811067ffffffffffffffff82111715611ea857611ea7611c7c565b5b80604052505050565b5f611eba61157e565b9050611ec68282611e80565b919050565b5f67ffffffffffffffff821115611ee557611ee4611c7c565b5b602082029050602081019050919050565b5f80fd5b5f81519050611f0881611598565b92915050565b5f611f20611f1b84611ecb565b611eb1565b90508083825260208201905060208402830185811115611f4357611f42611ef6565b5b835b81811015611f6c5780611f588882611efa565b845260208401935050602081019050611f45565b5050509392505050565b5f82601f830112611f8a57611f89611e6c565b5b8151611f9a848260208601611f0e565b91505092915050565b5f60208284031215611fb857611fb7611587565b5b5f82015167ffffffffffffffff811115611fd557611fd461158b565b5b611fe184828501611f76565b91505092915050565b5f604082019050611ffd5f830185611e05565b61200a6020830184611e05565b9392505050565b5f6020828403121561202657612025611587565b5b5f61203384828501611efa565b91505092915050565b5f60608201905061204f5f830186611e05565b61205c6020830185611e05565b6120696040830184611732565b949350505050565b5f6040820190506120845f830185611e05565b6120916020830184611732565b9392505050565b5f8115159050919050565b6120ac81612098565b81146120b6575f80fd5b50565b5f815190506120c7816120a3565b92915050565b5f602082840312156120e2576120e1611587565b5b5f6120ef848285016120b9565b91505092915050565b5f60208201905061210b5f830184611e05565b92915050565b5f6040820190506121245f830185611e05565b6121316020830184611d3f565b9392505050565b5f81519050919050565b5f81905092915050565b5f5b8381101561216957808201518184015260208101905061214e565b5f8484015250505050565b5f61217e82612138565b6121888185612142565b935061219881856020860161214c565b80840191505092915050565b5f6121af8284612174565b91508190509291505056fea2646970667358221220311e4c1d4546bf94d2c90bc7f16c1d29ed287fc3da017696b204dab072873dd764736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAFFED0E0 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xB197DF54 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0xC440FA0F EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xD930DA60 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xEB5A662E EQ PUSH2 0x195 JUMPI PUSH2 0x9B JUMP JUMPDEST DUP1 PUSH3 0xE1801C EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0x735DE9F7 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x86D86D84 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xA63661A5 EQ PUSH2 0x12B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0x1C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC3 PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE1 PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0x16B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH2 0x424 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13D PUSH2 0x63B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1792 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x189 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH2 0x84C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x193 PUSH2 0xE26 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH2 0xF31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x1792 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT PUSH2 0x246 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23D SWAP1 PUSH2 0x1805 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x288 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x2CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C1 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC8108639F5E0627BAC90449607E60D516A5082452E397808A067B57F755515FC DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x39C SWAP3 SWAP2 SWAP1 PUSH2 0x18F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT PUSH2 0x4A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49C SWAP1 PUSH2 0x1964 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD GT PUSH2 0x527 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51E SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x571 CALLER PUSH2 0xF31 JUMP JUMPDEST GT PUSH2 0x5B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A8 SWAP1 PUSH2 0x19F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA806CF17BE1FB3CFF26C4A6A46B735DDBF2AC07C138BDEDB6D2ACE798A2CFD40 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD EQ PUSH2 0x6C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B8 SWAP1 PUSH2 0x1805 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x745 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73C SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x761 SWAP1 PUSH2 0x1A3D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x89D3F1CDFAD4E5C26535AC23DC61CF9E975667801747518F01B1B653545D736A DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x838 SWAP3 SWAP2 SWAP1 PUSH2 0x18F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x848 PUSH2 0x424 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD EQ PUSH2 0x8CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C5 SWAP1 PUSH2 0x1ACE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x918 CALLER PUSH2 0xF31 JUMP JUMPDEST GT PUSH2 0x958 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94F SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x15180 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x9A7 SWAP2 SWAP1 PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x9F2 SWAP2 SWAP1 PUSH2 0x1BBB JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xA34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2B SWAP1 PUSH2 0x1C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH2 0xAA5 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 ADDRESS DUP5 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0xAF2 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x1056 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB0E JUMPI PUSH2 0xB0D PUSH2 0x1C7C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB3C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xB74 JUMPI PUSH2 0xB73 PUSH2 0x1CA9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC18 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC3C SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xC50 JUMPI PUSH2 0xC4F PUSH2 0x1CA9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18CBAFE5 DUP5 PUSH0 DUP6 ADDRESS PUSH2 0xE10 TIMESTAMP PUSH2 0xCDA SWAP2 SWAP1 PUSH2 0x1BBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E14 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD15 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD3D SWAP2 SWAP1 PUSH2 0x1FA3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xD54 JUMPI PUSH2 0xD53 PUSH2 0x1CA9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP TIMESTAMP PUSH1 0x1 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1A3ABF7E0A472651EBE2C79A31A5F4660C7EA65E3086EE1742D7502999BBF5B5 DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0xDEB SWAP3 SWAP2 SWAP1 PUSH2 0x18F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xE1F PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP4 PUSH2 0x10EF JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT PUSH2 0xEA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9E SWAP1 PUSH2 0x1964 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF222ABD4EE7AFB02F9450183B95D07AAAB2EA2F2D6748F55525C7E875FDD58A1 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP4 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8E SWAP3 SWAP2 SWAP1 PUSH2 0x1FEA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFA9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFCD SWAP2 SWAP1 PUSH2 0x2011 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1050 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1009 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x203C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x116E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1092 SWAP3 SWAP2 SWAP1 PUSH2 0x1FEA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10AD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10D1 SWAP2 SWAP1 PUSH2 0x2011 JUMP JUMPDEST SWAP1 POP PUSH2 0x10E9 DUP5 DUP5 DUP5 DUP5 PUSH2 0x10E4 SWAP2 SWAP1 PUSH2 0x1BBB JUMP JUMPDEST PUSH2 0x1203 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1169 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1122 SWAP3 SWAP2 SWAP1 PUSH2 0x2071 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x116E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1198 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1310 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x11BC JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x11BA SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x11FE JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F5 SWAP2 SWAP1 PUSH2 0x20F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1233 SWAP3 SWAP2 SWAP1 PUSH2 0x2071 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH2 0x1281 DUP5 DUP3 PUSH2 0x1325 JUMP JUMPDEST PUSH2 0x130A JUMPI PUSH2 0x12FF DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP7 PUSH0 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x12B8 SWAP3 SWAP2 SWAP1 PUSH2 0x2111 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x116E JUMP JUMPDEST PUSH2 0x1309 DUP5 DUP3 PUSH2 0x116E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x131D DUP4 DUP4 PUSH0 PUSH2 0x13E4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x134D SWAP2 SWAP1 PUSH2 0x21A4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1386 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x138B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x13B8 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x13B7 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x13B6 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST JUMPDEST JUMPDEST DUP1 ISZERO PUSH2 0x13DA JUMPI POP PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x142B JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1422 SWAP2 SWAP1 PUSH2 0x20F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1453 SWAP2 SWAP1 PUSH2 0x21A4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x148D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1492 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x14A2 DUP7 DUP4 DUP4 PUSH2 0x14AD JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x14C2 JUMPI PUSH2 0x14BD DUP3 PUSH2 0x153A JUMP JUMPDEST PUSH2 0x1532 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x14E8 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x152A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1521 SWAP2 SWAP1 PUSH2 0x20F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1533 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x154C JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A1 DUP2 PUSH2 0x158F JUMP JUMPDEST DUP2 EQ PUSH2 0x15AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15BC DUP2 PUSH2 0x1598 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15D8 JUMPI PUSH2 0x15D7 PUSH2 0x1587 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15E5 DUP6 DUP3 DUP7 ADD PUSH2 0x15AE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15F6 DUP6 DUP3 DUP7 ADD PUSH2 0x15AE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1642 PUSH2 0x163D PUSH2 0x1638 DUP5 PUSH2 0x1600 JUMP JUMPDEST PUSH2 0x161F JUMP JUMPDEST PUSH2 0x1600 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1653 DUP3 PUSH2 0x1628 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1664 DUP3 PUSH2 0x1649 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1674 DUP2 PUSH2 0x165A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x168D PUSH0 DUP4 ADD DUP5 PUSH2 0x166B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x169D DUP3 PUSH2 0x1649 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16AD DUP2 PUSH2 0x1693 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16C6 PUSH0 DUP4 ADD DUP5 PUSH2 0x16A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16D6 DUP3 PUSH2 0x1600 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16E6 DUP2 PUSH2 0x16CC JUMP JUMPDEST DUP2 EQ PUSH2 0x16F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1701 DUP2 PUSH2 0x16DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x171C JUMPI PUSH2 0x171B PUSH2 0x1587 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1729 DUP5 DUP3 DUP6 ADD PUSH2 0x16F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x173B DUP2 PUSH2 0x158F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1754 PUSH0 DUP4 ADD DUP9 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x1761 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x176E PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x177B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x1788 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1732 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17A5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1732 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506C616E20697320657869737400000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17EF PUSH1 0xD DUP4 PUSH2 0x17AB JUMP JUMPDEST SWAP2 POP PUSH2 0x17FA DUP3 PUSH2 0x17BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x181C DUP2 PUSH2 0x17E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4672657175656E6379206D7573742062652067726561746572207468616E2030 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1857 PUSH1 0x20 DUP4 PUSH2 0x17AB JUMP JUMPDEST SWAP2 POP PUSH2 0x1862 DUP3 PUSH2 0x1823 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1884 DUP2 PUSH2 0x184B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18BF PUSH1 0x1D DUP4 PUSH2 0x17AB JUMP JUMPDEST SWAP2 POP PUSH2 0x18CA DUP3 PUSH2 0x188B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18EC DUP2 PUSH2 0x18B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1906 PUSH0 DUP4 ADD DUP6 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x1913 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1732 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x506C616E206973206E6F74206578697374000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x194E PUSH1 0x11 DUP4 PUSH2 0x17AB JUMP JUMPDEST SWAP2 POP PUSH2 0x1959 DUP3 PUSH2 0x191A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x197B DUP2 PUSH2 0x1942 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F74616C206D7573742062652067726561746572207468616E20616D6F756E PUSH0 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19DC PUSH1 0x21 DUP4 PUSH2 0x17AB JUMP JUMPDEST SWAP2 POP PUSH2 0x19E7 DUP3 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A09 DUP2 PUSH2 0x19D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A47 DUP3 PUSH2 0x158F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1A79 JUMPI PUSH2 0x1A78 PUSH2 0x1A10 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C616E206973206E6F74206163746976650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB8 PUSH1 0x12 DUP4 PUSH2 0x17AB JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC3 DUP3 PUSH2 0x1A84 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AE5 DUP2 PUSH2 0x1AAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F742074726967676572206D6F7265207468616E2072656D61696E69 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E6720616D6F756E740000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B46 PUSH1 0x29 DUP4 PUSH2 0x17AB JUMP JUMPDEST SWAP2 POP PUSH2 0x1B51 DUP3 PUSH2 0x1AEC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B73 DUP2 PUSH2 0x1B3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B84 DUP3 PUSH2 0x158F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B8F DUP4 PUSH2 0x158F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1B9D DUP2 PUSH2 0x158F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1BB4 JUMPI PUSH2 0x1BB3 PUSH2 0x1A10 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BC5 DUP3 PUSH2 0x158F JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD0 DUP4 PUSH2 0x158F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1BE8 JUMPI PUSH2 0x1BE7 PUSH2 0x1A10 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E206F6E6C79207472696767657220706C616E206F6E6365207065722064 PUSH0 DUP3 ADD MSTORE PUSH32 0x6179000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C48 PUSH1 0x22 DUP4 PUSH2 0x17AB JUMP JUMPDEST SWAP2 POP PUSH2 0x1C53 DUP3 PUSH2 0x1BEE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C75 DUP2 PUSH2 0x1C3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CE4 DUP2 PUSH2 0x16DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CFF JUMPI PUSH2 0x1CFE PUSH2 0x1587 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D0C DUP5 DUP3 DUP6 ADD PUSH2 0x1CD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D38 PUSH2 0x1D33 PUSH2 0x1D2E DUP5 PUSH2 0x1D15 JUMP JUMPDEST PUSH2 0x161F JUMP JUMPDEST PUSH2 0x158F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D48 DUP2 PUSH2 0x1D1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D80 DUP2 PUSH2 0x16CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D91 DUP4 DUP4 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DB3 DUP3 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x1DBD DUP2 DUP6 PUSH2 0x1D58 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DC8 DUP4 PUSH2 0x1D68 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DF8 JUMPI DUP2 MLOAD PUSH2 0x1DDF DUP9 DUP3 PUSH2 0x1D86 JUMP JUMPDEST SWAP8 POP PUSH2 0x1DEA DUP4 PUSH2 0x1D9D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1DCB JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E0E DUP2 PUSH2 0x16CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1E27 PUSH0 DUP4 ADD DUP9 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x1E34 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1D3F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1E46 DUP2 DUP7 PUSH2 0x1DA9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E55 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0x1E62 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1732 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E89 DUP3 PUSH2 0x1E70 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1EA8 JUMPI PUSH2 0x1EA7 PUSH2 0x1C7C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EBA PUSH2 0x157E JUMP JUMPDEST SWAP1 POP PUSH2 0x1EC6 DUP3 DUP3 PUSH2 0x1E80 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EE5 JUMPI PUSH2 0x1EE4 PUSH2 0x1C7C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F08 DUP2 PUSH2 0x1598 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F20 PUSH2 0x1F1B DUP5 PUSH2 0x1ECB JUMP JUMPDEST PUSH2 0x1EB1 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1F43 JUMPI PUSH2 0x1F42 PUSH2 0x1EF6 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1F6C JUMPI DUP1 PUSH2 0x1F58 DUP9 DUP3 PUSH2 0x1EFA JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F45 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F8A JUMPI PUSH2 0x1F89 PUSH2 0x1E6C JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1F9A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F0E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FB8 JUMPI PUSH2 0x1FB7 PUSH2 0x1587 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FD5 JUMPI PUSH2 0x1FD4 PUSH2 0x158B JUMP JUMPDEST JUMPDEST PUSH2 0x1FE1 DUP5 DUP3 DUP6 ADD PUSH2 0x1F76 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FFD PUSH0 DUP4 ADD DUP6 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0x200A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E05 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2026 JUMPI PUSH2 0x2025 PUSH2 0x1587 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2033 DUP5 DUP3 DUP6 ADD PUSH2 0x1EFA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x204F PUSH0 DUP4 ADD DUP7 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0x205C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0x2069 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1732 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2084 PUSH0 DUP4 ADD DUP6 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0x2091 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1732 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20AC DUP2 PUSH2 0x2098 JUMP JUMPDEST DUP2 EQ PUSH2 0x20B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x20C7 DUP2 PUSH2 0x20A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20E2 JUMPI PUSH2 0x20E1 PUSH2 0x1587 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20EF DUP5 DUP3 DUP6 ADD PUSH2 0x20B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x210B PUSH0 DUP4 ADD DUP5 PUSH2 0x1E05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2124 PUSH0 DUP4 ADD DUP6 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0x2131 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D3F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2169 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x214E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x217E DUP3 PUSH2 0x2138 JUMP JUMPDEST PUSH2 0x2188 DUP2 DUP6 PUSH2 0x2142 JUMP JUMPDEST SWAP4 POP PUSH2 0x2198 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x214C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21AF DUP3 DUP5 PUSH2 0x2174 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0x1E 0x4C SAR GASLIMIT CHAINID 0xBF SWAP5 0xD2 0xC9 SIGNEXTEND 0xC7 CALL PUSH13 0x1D29ED287FC3DA017696B204DA 0xB0 PUSH19 0x873DD764736F6C634300081600330000000000 ",
							"sourceMap": "231:3624:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1658:396;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;805:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;827:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;761:37;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;2060:359;;;:::i;:::-;;597:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1162:490;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2599:1253;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2425:168;;;:::i;:::-;;1035:121;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1658:396;1761:1;1735:5;:17;1741:10;1735:17;;;;;;;;;;;;;;;:23;;;:27;1727:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1807:1;1795:9;:13;1787:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1869:1;1860:6;:10;1852:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1940:6;1913:5;:17;1919:10;1913:17;;;;;;;;;;;;;;;:24;;:33;;;;1983:9;1953:5;:17;1959:10;1953:17;;;;;;;;;;;;;;;:27;;:39;;;;2018:10;2006:42;;;2030:9;2041:6;2006:42;;;;;;;:::i;:::-;;;;;;;;1658:396;;:::o;805:17::-;;;;;;;;;;;;;:::o;827:39::-;;;;;;;;;;;;;:::o;761:37::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2060:359::-;2133:1;2107:5;:17;2113:10;2107:17;;;;;;;;;;;;;;;:23;;;:27;2099:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;2198:1;2171:5;:17;2177:10;2171:17;;;;;;;;;;;;;;;:24;;;:28;2163:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;2275:5;:17;2281:10;2275:17;;;;;;;;;;;;;;;:24;;;2248;2261:10;2248:12;:24::i;:::-;:51;2240:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;2377:1;2350:5;:17;2356:10;2350:17;;;;;;;;;;;;;;;:24;;:28;;;;2402:10;2390:23;;;;;;;;;;;;2060:359::o;597:20::-;;;;:::o;1162:490::-;1266:1;1239:5;:17;1245:10;1239:17;;;;;;;;;;;;;;;:23;;;:28;1231:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1312:1;1300:9;:13;1292:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1374:1;1365:6;:10;1357:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1438:133;;;;;;;;1459:5;;:7;;;;;;;;;:::i;:::-;;;;;1438:133;;;;1486:9;1438:133;;;;1512:6;1438:133;;;;1535:1;1438:133;;;;1562:1;1438:133;;;1418:5;:17;1424:10;1418:17;;;;;;;;;;;;;;;:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1595:10;1583:42;;;1607:9;1618:6;1583:42;;;;;;;:::i;:::-;;;;;;;;1635:11;:9;:11::i;:::-;1162:490;;:::o;2599:1253::-;2678:1;2656:5;:11;2662:4;2656:11;;;;;;;;;;;;;;;:18;;;:23;2648:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2744:5;:11;2750:4;2744:11;;;;;;;;;;;;;;;:18;;;2717:24;2730:10;2717:12;:24::i;:::-;:45;2709:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;2896:8;2872:5;:11;2878:4;2872:11;;;;;;;;;;;;;;;:21;;;:32;;;;:::i;:::-;2842:5;:11;2848:4;2842:11;;;;;;;;;;;;;;;:27;;;:62;;;;:::i;:::-;2823:15;:81;;2815:128;;;;;;;;;;;;:::i;:::-;;;;;;;;;2952:14;2969:5;:11;2975:4;2969:11;;;;;;;;;;;;;;;:18;;;2952:35;;3054:61;3081:4;;;;;;;;;;;3087;3101;3108:6;3054:26;:61::i;:::-;3171:69;3203:4;;;;;;;;;;;3217:13;;;;;;;;;;;3233:6;3171:31;:69::i;:::-;3276:21;3314:1;3300:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3276:40;;3341:4;;;;;;;;;;;3323;3328:1;3323:7;;;;;;;;:::i;:::-;;;;;;;:23;;;;;;;;;;;3377:13;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3367:4;3372:1;3367:7;;;;;;;;:::i;:::-;;;;;;;:30;;;;;;;;;;;3456:21;3481:13;;;;;;;;;;;:35;;;3517:6;3525:1;3528:4;3542;3567:7;3549:15;:25;;;;:::i;:::-;3481:94;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3455:120;;3584:19;3606:7;3614:1;3606:10;;;;;;;;:::i;:::-;;;;;;;;3584:32;;3687:15;3657:5;:11;3663:4;3657:11;;;;;;;;;;;;;;;:27;;:45;;;;3730:4;3716:40;;;3736:6;3744:11;3716:40;;;;;;;:::i;:::-;;;;;;;;3799:47;3822:4;;;;;;;;;;;3828;3834:11;3799:22;:47::i;:::-;2641:1211;;;;2599:1253;:::o;2425:168::-;2493:1;2467:5;:17;2473:10;2467:17;;;;;;;;;;;;;;;:23;;;:27;2459:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;2552:1;2525:5;:17;2531:10;2525:17;;;;;;;;;;;;;;;:24;;:28;;;;2576:10;2565:22;;;;;;;;;;;;2425:168::o;1035:121::-;1092:7;1115:4;;;;;;;;;;;:14;;;1130:4;1144;1115:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1108:42;;1035:121;;;:::o;1702:188:5:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;2081:225::-;2177:20;2200:5;:15;;;2224:4;2231:7;2200:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2177:62;;2249:50;2262:5;2269:7;2293:5;2278:12;:20;;;;:::i;:::-;2249:12;:50::i;:::-;2167:139;2081:225;;;:::o;1303:160::-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;4059:629::-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;3296:380::-;3383:25;3426:5;:13;;;3442:7;3451:5;3411:47;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3383:75;;3474:44;3498:5;3505:12;3474:23;:44::i;:::-;3469:201;;3534:71;3554:5;3576;:13;;;3592:7;3601:1;3561:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3534:19;:71::i;:::-;3619:40;3639:5;3646:12;3619:19;:40::i;:::-;3469:201;3373:303;3296:380;;;:::o;2705:151:6:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;5189:578:5:-;5272:4;5574:12;5588:23;5623:5;5615:19;;5635:4;5615:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5573:67;;;;5657:7;:69;;;;;5690:1;5669:10;:17;:22;:56;;;;5706:10;5695:30;;;;;;;;;;;;:::i;:::-;5669:56;5657:69;:103;;;;;5759:1;5738:5;5730:26;;;:30;5657:103;5650:110;;;;5189:578;;;;:::o;3180:392:6:-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:75:11;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:126::-;1207:7;1247:42;1240:5;1236:54;1225:65;;1170:126;;;:::o;1302:60::-;1330:3;1351:5;1344:12;;1302:60;;;:::o;1368:142::-;1418:9;1451:53;1469:34;1478:24;1496:5;1478:24;:::i;:::-;1469:34;:::i;:::-;1451:53;:::i;:::-;1438:66;;1368:142;;;:::o;1516:126::-;1566:9;1599:37;1630:5;1599:37;:::i;:::-;1586:50;;1516:126;;;:::o;1648:139::-;1711:9;1744:37;1775:5;1744:37;:::i;:::-;1731:50;;1648:139;;;:::o;1793:157::-;1893:50;1937:5;1893:50;:::i;:::-;1888:3;1881:63;1793:157;;:::o;1956:248::-;2062:4;2100:2;2089:9;2085:18;2077:26;;2113:84;2194:1;2183:9;2179:17;2170:6;2113:84;:::i;:::-;1956:248;;;;:::o;2210:153::-;2287:9;2320:37;2351:5;2320:37;:::i;:::-;2307:50;;2210:153;;;:::o;2369:185::-;2483:64;2541:5;2483:64;:::i;:::-;2478:3;2471:77;2369:185;;:::o;2560:276::-;2680:4;2718:2;2707:9;2703:18;2695:26;;2731:98;2826:1;2815:9;2811:17;2802:6;2731:98;:::i;:::-;2560:276;;;;:::o;2842:96::-;2879:7;2908:24;2926:5;2908:24;:::i;:::-;2897:35;;2842:96;;;:::o;2944:122::-;3017:24;3035:5;3017:24;:::i;:::-;3010:5;3007:35;2997:63;;3056:1;3053;3046:12;2997:63;2944:122;:::o;3072:139::-;3118:5;3156:6;3143:20;3134:29;;3172:33;3199:5;3172:33;:::i;:::-;3072:139;;;;:::o;3217:329::-;3276:6;3325:2;3313:9;3304:7;3300:23;3296:32;3293:119;;;3331:79;;:::i;:::-;3293:119;3451:1;3476:53;3521:7;3512:6;3501:9;3497:22;3476:53;:::i;:::-;3466:63;;3422:117;3217:329;;;;:::o;3552:118::-;3639:24;3657:5;3639:24;:::i;:::-;3634:3;3627:37;3552:118;;:::o;3676:664::-;3881:4;3919:3;3908:9;3904:19;3896:27;;3933:71;4001:1;3990:9;3986:17;3977:6;3933:71;:::i;:::-;4014:72;4082:2;4071:9;4067:18;4058:6;4014:72;:::i;:::-;4096;4164:2;4153:9;4149:18;4140:6;4096:72;:::i;:::-;4178;4246:2;4235:9;4231:18;4222:6;4178:72;:::i;:::-;4260:73;4328:3;4317:9;4313:19;4304:6;4260:73;:::i;:::-;3676:664;;;;;;;;:::o;4346:222::-;4439:4;4477:2;4466:9;4462:18;4454:26;;4490:71;4558:1;4547:9;4543:17;4534:6;4490:71;:::i;:::-;4346:222;;;;:::o;4574:169::-;4658:11;4692:6;4687:3;4680:19;4732:4;4727:3;4723:14;4708:29;;4574:169;;;;:::o;4749:163::-;4889:15;4885:1;4877:6;4873:14;4866:39;4749:163;:::o;4918:366::-;5060:3;5081:67;5145:2;5140:3;5081:67;:::i;:::-;5074:74;;5157:93;5246:3;5157:93;:::i;:::-;5275:2;5270:3;5266:12;5259:19;;4918:366;;;:::o;5290:419::-;5456:4;5494:2;5483:9;5479:18;5471:26;;5543:9;5537:4;5533:20;5529:1;5518:9;5514:17;5507:47;5571:131;5697:4;5571:131;:::i;:::-;5563:139;;5290:419;;;:::o;5715:182::-;5855:34;5851:1;5843:6;5839:14;5832:58;5715:182;:::o;5903:366::-;6045:3;6066:67;6130:2;6125:3;6066:67;:::i;:::-;6059:74;;6142:93;6231:3;6142:93;:::i;:::-;6260:2;6255:3;6251:12;6244:19;;5903:366;;;:::o;6275:419::-;6441:4;6479:2;6468:9;6464:18;6456:26;;6528:9;6522:4;6518:20;6514:1;6503:9;6499:17;6492:47;6556:131;6682:4;6556:131;:::i;:::-;6548:139;;6275:419;;;:::o;6700:179::-;6840:31;6836:1;6828:6;6824:14;6817:55;6700:179;:::o;6885:366::-;7027:3;7048:67;7112:2;7107:3;7048:67;:::i;:::-;7041:74;;7124:93;7213:3;7124:93;:::i;:::-;7242:2;7237:3;7233:12;7226:19;;6885:366;;;:::o;7257:419::-;7423:4;7461:2;7450:9;7446:18;7438:26;;7510:9;7504:4;7500:20;7496:1;7485:9;7481:17;7474:47;7538:131;7664:4;7538:131;:::i;:::-;7530:139;;7257:419;;;:::o;7682:332::-;7803:4;7841:2;7830:9;7826:18;7818:26;;7854:71;7922:1;7911:9;7907:17;7898:6;7854:71;:::i;:::-;7935:72;8003:2;7992:9;7988:18;7979:6;7935:72;:::i;:::-;7682:332;;;;;:::o;8020:167::-;8160:19;8156:1;8148:6;8144:14;8137:43;8020:167;:::o;8193:366::-;8335:3;8356:67;8420:2;8415:3;8356:67;:::i;:::-;8349:74;;8432:93;8521:3;8432:93;:::i;:::-;8550:2;8545:3;8541:12;8534:19;;8193:366;;;:::o;8565:419::-;8731:4;8769:2;8758:9;8754:18;8746:26;;8818:9;8812:4;8808:20;8804:1;8793:9;8789:17;8782:47;8846:131;8972:4;8846:131;:::i;:::-;8838:139;;8565:419;;;:::o;8990:220::-;9130:34;9126:1;9118:6;9114:14;9107:58;9199:3;9194:2;9186:6;9182:15;9175:28;8990:220;:::o;9216:366::-;9358:3;9379:67;9443:2;9438:3;9379:67;:::i;:::-;9372:74;;9455:93;9544:3;9455:93;:::i;:::-;9573:2;9568:3;9564:12;9557:19;;9216:366;;;:::o;9588:419::-;9754:4;9792:2;9781:9;9777:18;9769:26;;9841:9;9835:4;9831:20;9827:1;9816:9;9812:17;9805:47;9869:131;9995:4;9869:131;:::i;:::-;9861:139;;9588:419;;;:::o;10013:180::-;10061:77;10058:1;10051:88;10158:4;10155:1;10148:15;10182:4;10179:1;10172:15;10199:233;10238:3;10261:24;10279:5;10261:24;:::i;:::-;10252:33;;10307:66;10300:5;10297:77;10294:103;;10377:18;;:::i;:::-;10294:103;10424:1;10417:5;10413:13;10406:20;;10199:233;;;:::o;10438:168::-;10578:20;10574:1;10566:6;10562:14;10555:44;10438:168;:::o;10612:366::-;10754:3;10775:67;10839:2;10834:3;10775:67;:::i;:::-;10768:74;;10851:93;10940:3;10851:93;:::i;:::-;10969:2;10964:3;10960:12;10953:19;;10612:366;;;:::o;10984:419::-;11150:4;11188:2;11177:9;11173:18;11165:26;;11237:9;11231:4;11227:20;11223:1;11212:9;11208:17;11201:47;11265:131;11391:4;11265:131;:::i;:::-;11257:139;;10984:419;;;:::o;11409:228::-;11549:34;11545:1;11537:6;11533:14;11526:58;11618:11;11613:2;11605:6;11601:15;11594:36;11409:228;:::o;11643:366::-;11785:3;11806:67;11870:2;11865:3;11806:67;:::i;:::-;11799:74;;11882:93;11971:3;11882:93;:::i;:::-;12000:2;11995:3;11991:12;11984:19;;11643:366;;;:::o;12015:419::-;12181:4;12219:2;12208:9;12204:18;12196:26;;12268:9;12262:4;12258:20;12254:1;12243:9;12239:17;12232:47;12296:131;12422:4;12296:131;:::i;:::-;12288:139;;12015:419;;;:::o;12440:410::-;12480:7;12503:20;12521:1;12503:20;:::i;:::-;12498:25;;12537:20;12555:1;12537:20;:::i;:::-;12532:25;;12592:1;12589;12585:9;12614:30;12632:11;12614:30;:::i;:::-;12603:41;;12793:1;12784:7;12780:15;12777:1;12774:22;12754:1;12747:9;12727:83;12704:139;;12823:18;;:::i;:::-;12704:139;12488:362;12440:410;;;;:::o;12856:191::-;12896:3;12915:20;12933:1;12915:20;:::i;:::-;12910:25;;12949:20;12967:1;12949:20;:::i;:::-;12944:25;;12992:1;12989;12985:9;12978:16;;13013:3;13010:1;13007:10;13004:36;;;13020:18;;:::i;:::-;13004:36;12856:191;;;;:::o;13053:221::-;13193:34;13189:1;13181:6;13177:14;13170:58;13262:4;13257:2;13249:6;13245:15;13238:29;13053:221;:::o;13280:366::-;13422:3;13443:67;13507:2;13502:3;13443:67;:::i;:::-;13436:74;;13519:93;13608:3;13519:93;:::i;:::-;13637:2;13632:3;13628:12;13621:19;;13280:366;;;:::o;13652:419::-;13818:4;13856:2;13845:9;13841:18;13833:26;;13905:9;13899:4;13895:20;13891:1;13880:9;13876:17;13869:47;13933:131;14059:4;13933:131;:::i;:::-;13925:139;;13652:419;;;:::o;14077:180::-;14125:77;14122:1;14115:88;14222:4;14219:1;14212:15;14246:4;14243:1;14236:15;14263:180;14311:77;14308:1;14301:88;14408:4;14405:1;14398:15;14432:4;14429:1;14422:15;14449:143;14506:5;14537:6;14531:13;14522:22;;14553:33;14580:5;14553:33;:::i;:::-;14449:143;;;;:::o;14598:351::-;14668:6;14717:2;14705:9;14696:7;14692:23;14688:32;14685:119;;;14723:79;;:::i;:::-;14685:119;14843:1;14868:64;14924:7;14915:6;14904:9;14900:22;14868:64;:::i;:::-;14858:74;;14814:128;14598:351;;;;:::o;14955:85::-;15000:7;15029:5;15018:16;;14955:85;;;:::o;15046:158::-;15104:9;15137:61;15155:42;15164:32;15190:5;15164:32;:::i;:::-;15155:42;:::i;:::-;15137:61;:::i;:::-;15124:74;;15046:158;;;:::o;15210:147::-;15305:45;15344:5;15305:45;:::i;:::-;15300:3;15293:58;15210:147;;:::o;15363:114::-;15430:6;15464:5;15458:12;15448:22;;15363:114;;;:::o;15483:184::-;15582:11;15616:6;15611:3;15604:19;15656:4;15651:3;15647:14;15632:29;;15483:184;;;;:::o;15673:132::-;15740:4;15763:3;15755:11;;15793:4;15788:3;15784:14;15776:22;;15673:132;;;:::o;15811:108::-;15888:24;15906:5;15888:24;:::i;:::-;15883:3;15876:37;15811:108;;:::o;15925:179::-;15994:10;16015:46;16057:3;16049:6;16015:46;:::i;:::-;16093:4;16088:3;16084:14;16070:28;;15925:179;;;;:::o;16110:113::-;16180:4;16212;16207:3;16203:14;16195:22;;16110:113;;;:::o;16259:732::-;16378:3;16407:54;16455:5;16407:54;:::i;:::-;16477:86;16556:6;16551:3;16477:86;:::i;:::-;16470:93;;16587:56;16637:5;16587:56;:::i;:::-;16666:7;16697:1;16682:284;16707:6;16704:1;16701:13;16682:284;;;16783:6;16777:13;16810:63;16869:3;16854:13;16810:63;:::i;:::-;16803:70;;16896:60;16949:6;16896:60;:::i;:::-;16886:70;;16742:224;16729:1;16726;16722:9;16717:14;;16682:284;;;16686:14;16982:3;16975:10;;16383:608;;;16259:732;;;;:::o;16997:118::-;17084:24;17102:5;17084:24;:::i;:::-;17079:3;17072:37;16997:118;;:::o;17121:831::-;17384:4;17422:3;17411:9;17407:19;17399:27;;17436:71;17504:1;17493:9;17489:17;17480:6;17436:71;:::i;:::-;17517:80;17593:2;17582:9;17578:18;17569:6;17517:80;:::i;:::-;17644:9;17638:4;17634:20;17629:2;17618:9;17614:18;17607:48;17672:108;17775:4;17766:6;17672:108;:::i;:::-;17664:116;;17790:72;17858:2;17847:9;17843:18;17834:6;17790:72;:::i;:::-;17872:73;17940:3;17929:9;17925:19;17916:6;17872:73;:::i;:::-;17121:831;;;;;;;;:::o;17958:117::-;18067:1;18064;18057:12;18081:102;18122:6;18173:2;18169:7;18164:2;18157:5;18153:14;18149:28;18139:38;;18081:102;;;:::o;18189:281::-;18272:27;18294:4;18272:27;:::i;:::-;18264:6;18260:40;18402:6;18390:10;18387:22;18366:18;18354:10;18351:34;18348:62;18345:88;;;18413:18;;:::i;:::-;18345:88;18453:10;18449:2;18442:22;18232:238;18189:281;;:::o;18476:129::-;18510:6;18537:20;;:::i;:::-;18527:30;;18566:33;18594:4;18586:6;18566:33;:::i;:::-;18476:129;;;:::o;18611:311::-;18688:4;18778:18;18770:6;18767:30;18764:56;;;18800:18;;:::i;:::-;18764:56;18850:4;18842:6;18838:17;18830:25;;18910:4;18904;18900:15;18892:23;;18611:311;;;:::o;18928:117::-;19037:1;19034;19027:12;19051:143;19108:5;19139:6;19133:13;19124:22;;19155:33;19182:5;19155:33;:::i;:::-;19051:143;;;;:::o;19217:732::-;19324:5;19349:81;19365:64;19422:6;19365:64;:::i;:::-;19349:81;:::i;:::-;19340:90;;19450:5;19479:6;19472:5;19465:21;19513:4;19506:5;19502:16;19495:23;;19566:4;19558:6;19554:17;19546:6;19542:30;19595:3;19587:6;19584:15;19581:122;;;19614:79;;:::i;:::-;19581:122;19729:6;19712:231;19746:6;19741:3;19738:15;19712:231;;;19821:3;19850:48;19894:3;19882:10;19850:48;:::i;:::-;19845:3;19838:61;19928:4;19923:3;19919:14;19912:21;;19788:155;19772:4;19767:3;19763:14;19756:21;;19712:231;;;19716:21;19330:619;;19217:732;;;;;:::o;19972:385::-;20054:5;20103:3;20096:4;20088:6;20084:17;20080:27;20070:122;;20111:79;;:::i;:::-;20070:122;20221:6;20215:13;20246:105;20347:3;20339:6;20332:4;20324:6;20320:17;20246:105;:::i;:::-;20237:114;;20060:297;19972:385;;;;:::o;20363:554::-;20458:6;20507:2;20495:9;20486:7;20482:23;20478:32;20475:119;;;20513:79;;:::i;:::-;20475:119;20654:1;20643:9;20639:17;20633:24;20684:18;20676:6;20673:30;20670:117;;;20706:79;;:::i;:::-;20670:117;20811:89;20892:7;20883:6;20872:9;20868:22;20811:89;:::i;:::-;20801:99;;20604:306;20363:554;;;;:::o;20923:332::-;21044:4;21082:2;21071:9;21067:18;21059:26;;21095:71;21163:1;21152:9;21148:17;21139:6;21095:71;:::i;:::-;21176:72;21244:2;21233:9;21229:18;21220:6;21176:72;:::i;:::-;20923:332;;;;;:::o;21261:351::-;21331:6;21380:2;21368:9;21359:7;21355:23;21351:32;21348:119;;;21386:79;;:::i;:::-;21348:119;21506:1;21531:64;21587:7;21578:6;21567:9;21563:22;21531:64;:::i;:::-;21521:74;;21477:128;21261:351;;;;:::o;21618:442::-;21767:4;21805:2;21794:9;21790:18;21782:26;;21818:71;21886:1;21875:9;21871:17;21862:6;21818:71;:::i;:::-;21899:72;21967:2;21956:9;21952:18;21943:6;21899:72;:::i;:::-;21981;22049:2;22038:9;22034:18;22025:6;21981:72;:::i;:::-;21618:442;;;;;;:::o;22066:332::-;22187:4;22225:2;22214:9;22210:18;22202:26;;22238:71;22306:1;22295:9;22291:17;22282:6;22238:71;:::i;:::-;22319:72;22387:2;22376:9;22372:18;22363:6;22319:72;:::i;:::-;22066:332;;;;;:::o;22404:90::-;22438:7;22481:5;22474:13;22467:21;22456:32;;22404:90;;;:::o;22500:116::-;22570:21;22585:5;22570:21;:::i;:::-;22563:5;22560:32;22550:60;;22606:1;22603;22596:12;22550:60;22500:116;:::o;22622:137::-;22676:5;22707:6;22701:13;22692:22;;22723:30;22747:5;22723:30;:::i;:::-;22622:137;;;;:::o;22765:345::-;22832:6;22881:2;22869:9;22860:7;22856:23;22852:32;22849:119;;;22887:79;;:::i;:::-;22849:119;23007:1;23032:61;23085:7;23076:6;23065:9;23061:22;23032:61;:::i;:::-;23022:71;;22978:125;22765:345;;;;:::o;23116:222::-;23209:4;23247:2;23236:9;23232:18;23224:26;;23260:71;23328:1;23317:9;23313:17;23304:6;23260:71;:::i;:::-;23116:222;;;;:::o;23344:348::-;23473:4;23511:2;23500:9;23496:18;23488:26;;23524:71;23592:1;23581:9;23577:17;23568:6;23524:71;:::i;:::-;23605:80;23681:2;23670:9;23666:18;23657:6;23605:80;:::i;:::-;23344:348;;;;;:::o;23698:98::-;23749:6;23783:5;23777:12;23767:22;;23698:98;;;:::o;23802:147::-;23903:11;23940:3;23925:18;;23802:147;;;;:::o;23955:246::-;24036:1;24046:113;24060:6;24057:1;24054:13;24046:113;;;24145:1;24140:3;24136:11;24130:18;24126:1;24121:3;24117:11;24110:39;24082:2;24079:1;24075:10;24070:15;;24046:113;;;24193:1;24184:6;24179:3;24175:16;24168:27;24017:184;23955:246;;;:::o;24207:386::-;24311:3;24339:38;24371:5;24339:38;:::i;:::-;24393:88;24474:6;24469:3;24393:88;:::i;:::-;24386:95;;24490:65;24548:6;24543:3;24536:4;24529:5;24525:16;24490:65;:::i;:::-;24580:6;24575:3;24571:16;24564:23;;24315:278;24207:386;;;;:::o;24599:271::-;24729:3;24751:93;24840:3;24831:6;24751:93;:::i;:::-;24744:100;;24861:3;24854:10;;24599:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1737600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"createPlan(uint256,uint256)": "infinite",
								"getAllowance(address)": "infinite",
								"nonce()": "2424",
								"plans(address)": "infinite",
								"startPlan()": "infinite",
								"stopPlan()": "8689",
								"triggerPlan(address)": "infinite",
								"uniswapRouter()": "infinite",
								"updatePlan(uint256,uint256)": "infinite",
								"usdt()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 231,
									"end": 3855,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 231,
									"end": 3855,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 231,
									"end": 3855,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 873,
									"end": 1029,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 944,
									"end": 949,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 931,
									"end": 935,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 931,
									"end": 935,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 931,
									"end": 950,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 931,
									"end": 950,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 931,
									"end": 950,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 931,
									"end": 950,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 931,
									"end": 950,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 931,
									"end": 950,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 931,
									"end": 950,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 931,
									"end": 950,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 931,
									"end": 950,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 931,
									"end": 950,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 931,
									"end": 950,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 931,
									"end": 950,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 931,
									"end": 950,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 931,
									"end": 950,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 931,
									"end": 950,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 931,
									"end": 950,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 931,
									"end": 950,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 931,
									"end": 950,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1006,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 957,
									"end": 970,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 957,
									"end": 970,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 957,
									"end": 1007,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 957,
									"end": 1007,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1007,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1007,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1007,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1007,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 957,
									"end": 1007,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1007,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1007,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1007,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1007,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1007,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 957,
									"end": 1007,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1007,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1007,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1007,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1007,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1007,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1022,
									"end": 1023,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1014,
									"end": 1019,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1014,
									"end": 1023,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1014,
									"end": 1023,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1014,
									"end": 1023,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1014,
									"end": 1023,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1029,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 231,
									"end": 3855,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 231,
									"end": 3855,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 231,
									"end": 3855,
									"name": "tag",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 231,
									"end": 3855,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 231,
									"end": 3855,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 231,
									"end": 3855,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 231,
									"end": 3855,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 231,
									"end": 3855,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 3855,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 231,
									"end": 3855,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 3855,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220311e4c1d4546bf94d2c90bc7f16c1d29ed287fc3da017696b204dab072873dd764736f6c63430008160033",
									".code": [
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH",
											"source": 10,
											"value": "AFFED0E0"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH",
											"source": 10,
											"value": "AFFED0E0"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH",
											"source": 10,
											"value": "B197DF54"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH",
											"source": 10,
											"value": "C440FA0F"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH",
											"source": 10,
											"value": "D930DA60"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH",
											"source": 10,
											"value": "EB5A662E"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH",
											"source": 10,
											"value": "E1801C"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH",
											"source": 10,
											"value": "2F48AB7D"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH",
											"source": 10,
											"value": "735DE9F7"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH",
											"source": 10,
											"value": "86D86D84"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH",
											"source": 10,
											"value": "A63661A5"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 3855,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 2054,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1658,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1658,
											"end": 2054,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1658,
											"end": 2054,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 2054,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 2054,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 2054,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 2054,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 2054,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1658,
											"end": 2054,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 2054,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1658,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 2054,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1658,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1658,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 2054,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1658,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 2054,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 805,
											"end": 822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 805,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 805,
											"end": 822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 805,
											"end": 822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 805,
											"end": 822,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 805,
											"end": 822,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 805,
											"end": 822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 805,
											"end": 822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 805,
											"end": 822,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 827,
											"end": 866,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 827,
											"end": 866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 827,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 827,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 827,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 827,
											"end": 866,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 827,
											"end": 866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 827,
											"end": 866,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 866,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 827,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 827,
											"end": 866,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 827,
											"end": 866,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 827,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 827,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 827,
											"end": 866,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 827,
											"end": 866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 827,
											"end": 866,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 866,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 827,
											"end": 866,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 827,
											"end": 866,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 827,
											"end": 866,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 827,
											"end": 866,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 827,
											"end": 866,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 761,
											"end": 798,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 761,
											"end": 798,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 761,
											"end": 798,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 761,
											"end": 798,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 761,
											"end": 798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 761,
											"end": 798,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 761,
											"end": 798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 761,
											"end": 798,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 798,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 761,
											"end": 798,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 761,
											"end": 798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 761,
											"end": 798,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 798,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2419,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 2060,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 2060,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 2060,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2419,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 2060,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2419,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 597,
											"end": 617,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 597,
											"end": 617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 597,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 597,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 597,
											"end": 617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 597,
											"end": 617,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 597,
											"end": 617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 597,
											"end": 617,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 597,
											"end": 617,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 597,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 597,
											"end": 617,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 597,
											"end": 617,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 597,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 597,
											"end": 617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 597,
											"end": 617,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 597,
											"end": 617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 597,
											"end": 617,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 597,
											"end": 617,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 597,
											"end": 617,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 597,
											"end": 617,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 597,
											"end": 617,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 597,
											"end": 617,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 597,
											"end": 617,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1652,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1162,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 1162,
											"end": 1652,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1162,
											"end": 1652,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1652,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1652,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1652,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1652,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1652,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 1162,
											"end": 1652,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1652,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1162,
											"end": 1652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1652,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 1162,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1652,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 1162,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1652,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 3852,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 2599,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 2599,
											"end": 3852,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2599,
											"end": 3852,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 3852,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 3852,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 3852,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 3852,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 3852,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2599,
											"end": 3852,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 3852,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 2599,
											"end": 3852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 3852,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2599,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 2599,
											"end": 3852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 3852,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 2599,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 3852,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2425,
											"end": 2593,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 2425,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2425,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2425,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 2425,
											"end": 2593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2425,
											"end": 2593,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2425,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2425,
											"end": 2593,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 1035,
											"end": 1156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1035,
											"end": 1156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 1035,
											"end": 1156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 2054,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1658,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1762,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1740,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1735,
											"end": 1752,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1752,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1735,
											"end": 1752,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1752,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1735,
											"end": 1752,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1752,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1752,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1752,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1735,
											"end": 1752,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1752,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1752,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1752,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1735,
											"end": 1752,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1752,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1752,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1758,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1758,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1758,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1762,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1727,
											"end": 1780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1807,
											"end": 1808,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1804,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1795,
											"end": 1808,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1787,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1870,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1866,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1870,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1852,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 1852,
											"end": 1904,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1852,
											"end": 1904,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1852,
											"end": 1904,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1852,
											"end": 1904,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1852,
											"end": 1904,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1852,
											"end": 1904,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1852,
											"end": 1904,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1852,
											"end": 1904,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1852,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 1852,
											"end": 1904,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1852,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1852,
											"end": 1904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1852,
											"end": 1904,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 1852,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1852,
											"end": 1904,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1852,
											"end": 1904,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1852,
											"end": 1904,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1852,
											"end": 1904,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1852,
											"end": 1904,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1852,
											"end": 1904,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1852,
											"end": 1904,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1852,
											"end": 1904,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 1852,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1940,
											"end": 1946,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1918,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1913,
											"end": 1930,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1929,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1930,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1913,
											"end": 1930,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1930,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1913,
											"end": 1930,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1930,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1930,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1930,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1913,
											"end": 1930,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1930,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1930,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1930,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1930,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1913,
											"end": 1930,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1930,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1913,
											"end": 1930,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1937,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1913,
											"end": 1937,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1946,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1946,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1946,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 1992,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 1958,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1953,
											"end": 1970,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1969,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 1970,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1953,
											"end": 1970,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 1970,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1953,
											"end": 1970,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 1970,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 1970,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 1970,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1953,
											"end": 1970,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 1970,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 1970,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 1970,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 1970,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1953,
											"end": 1970,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 1970,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1953,
											"end": 1970,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 1980,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1953,
											"end": 1980,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2028,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2048,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2048,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2048,
											"name": "PUSH",
											"source": 10,
											"value": "C8108639F5E0627BAC90449607E60D516A5082452E397808A067B57F755515FC"
										},
										{
											"begin": 2030,
											"end": 2039,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2047,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2048,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2048,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2006,
											"end": 2048,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2048,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2048,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 2006,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2048,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2006,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2048,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2048,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2048,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2048,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2048,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2048,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2048,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 2054,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 2054,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 2054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 805,
											"end": 822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 805,
											"end": 822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 822,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 805,
											"end": 822,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 805,
											"end": 822,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 827,
											"end": 866,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 827,
											"end": 866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 827,
											"end": 866,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 827,
											"end": 866,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 866,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 827,
											"end": 866,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 827,
											"end": 866,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 827,
											"end": 866,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 827,
											"end": 866,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 827,
											"end": 866,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 827,
											"end": 866,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 827,
											"end": 866,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 827,
											"end": 866,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 827,
											"end": 866,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 827,
											"end": 866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 761,
											"end": 798,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 761,
											"end": 798,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 761,
											"end": 798,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 798,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 798,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 798,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 798,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 798,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 761,
											"end": 798,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 761,
											"end": 798,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 761,
											"end": 798,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 761,
											"end": 798,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 761,
											"end": 798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2419,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 2060,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2134,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 2112,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2107,
											"end": 2124,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2113,
											"end": 2123,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2124,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2107,
											"end": 2124,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2124,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2107,
											"end": 2124,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2124,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2124,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2124,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2107,
											"end": 2124,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2124,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2124,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2124,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2124,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2107,
											"end": 2124,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2124,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 2124,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2130,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 2130,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2130,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2134,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 2099,
											"end": 2156,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2156,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2099,
											"end": 2156,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2156,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2099,
											"end": 2156,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2156,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2156,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2099,
											"end": 2156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2099,
											"end": 2156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 2099,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2156,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2099,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2156,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2099,
											"end": 2156,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2156,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2156,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2156,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2156,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2156,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 2099,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2171,
											"end": 2176,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2171,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2177,
											"end": 2187,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2171,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2171,
											"end": 2188,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2171,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2171,
											"end": 2188,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2171,
											"end": 2188,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2171,
											"end": 2188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2171,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2171,
											"end": 2188,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2171,
											"end": 2188,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2171,
											"end": 2188,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2171,
											"end": 2188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2171,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2171,
											"end": 2188,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2171,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2171,
											"end": 2188,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2171,
											"end": 2195,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2171,
											"end": 2195,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2171,
											"end": 2195,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2171,
											"end": 2199,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 2163,
											"end": 2233,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2233,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2233,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2233,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2163,
											"end": 2233,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2233,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2233,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2163,
											"end": 2233,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 2163,
											"end": 2233,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 2163,
											"end": 2233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2233,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 2163,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2233,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2233,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2233,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2233,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2233,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2233,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2233,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2233,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 2163,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2280,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2275,
											"end": 2292,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2291,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2292,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2275,
											"end": 2292,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2292,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2275,
											"end": 2292,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2292,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2292,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2292,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2275,
											"end": 2292,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2292,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2292,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2292,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2292,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2275,
											"end": 2292,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2292,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2275,
											"end": 2292,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2299,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2275,
											"end": 2299,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2299,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2248,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 2261,
											"end": 2271,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2248,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 2248,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2248,
											"end": 2272,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 2248,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2248,
											"end": 2299,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2240,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 2240,
											"end": 2337,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2240,
											"end": 2337,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2240,
											"end": 2337,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2240,
											"end": 2337,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2240,
											"end": 2337,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2240,
											"end": 2337,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2240,
											"end": 2337,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2240,
											"end": 2337,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2240,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 2240,
											"end": 2337,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2240,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 2240,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2240,
											"end": 2337,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 2240,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2240,
											"end": 2337,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2240,
											"end": 2337,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2240,
											"end": 2337,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2240,
											"end": 2337,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2240,
											"end": 2337,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2240,
											"end": 2337,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2240,
											"end": 2337,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2240,
											"end": 2337,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 2240,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2350,
											"end": 2355,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2356,
											"end": 2366,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2374,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2350,
											"end": 2374,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2378,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2378,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2378,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2402,
											"end": 2412,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2413,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2390,
											"end": 2413,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2413,
											"name": "PUSH",
											"source": 10,
											"value": "A806CF17BE1FB3CFF26C4A6A46B735DDBF2AC07C138BDEDB6D2ACE798A2CFD40"
										},
										{
											"begin": 2390,
											"end": 2413,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2390,
											"end": 2413,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2413,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2390,
											"end": 2413,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2413,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2413,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2413,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2413,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2413,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 597,
											"end": 617,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 597,
											"end": 617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 597,
											"end": 617,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 617,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 597,
											"end": 617,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 597,
											"end": 617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1652,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1266,
											"end": 1267,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1244,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1255,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1262,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1262,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1262,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1267,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 1231,
											"end": 1285,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1285,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1231,
											"end": 1285,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1285,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1231,
											"end": 1285,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1285,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1285,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1231,
											"end": 1285,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1231,
											"end": 1285,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1231,
											"end": 1285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1285,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1231,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1285,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1231,
											"end": 1285,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1285,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1285,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1285,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1285,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1285,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1285,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 1231,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1312,
											"end": 1313,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1300,
											"end": 1309,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1300,
											"end": 1313,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1292,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 1292,
											"end": 1350,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1292,
											"end": 1350,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1292,
											"end": 1350,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1292,
											"end": 1350,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1292,
											"end": 1350,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1292,
											"end": 1350,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1292,
											"end": 1350,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1292,
											"end": 1350,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1292,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 1292,
											"end": 1350,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1292,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1292,
											"end": 1350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1292,
											"end": 1350,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 1292,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1292,
											"end": 1350,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1292,
											"end": 1350,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1292,
											"end": 1350,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1292,
											"end": 1350,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1292,
											"end": 1350,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1292,
											"end": 1350,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1292,
											"end": 1350,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1292,
											"end": 1350,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 1292,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1375,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1365,
											"end": 1371,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1365,
											"end": 1375,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1357,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 1357,
											"end": 1409,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1357,
											"end": 1409,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1357,
											"end": 1409,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1357,
											"end": 1409,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1357,
											"end": 1409,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1357,
											"end": 1409,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1357,
											"end": 1409,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1357,
											"end": 1409,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1357,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 1357,
											"end": 1409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1357,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1357,
											"end": 1409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1357,
											"end": 1409,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 1357,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1357,
											"end": 1409,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1357,
											"end": 1409,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1357,
											"end": 1409,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1357,
											"end": 1409,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1357,
											"end": 1409,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1357,
											"end": 1409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1357,
											"end": 1409,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1357,
											"end": 1409,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 1357,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1464,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1459,
											"end": 1464,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1466,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1466,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1466,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1466,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1466,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1466,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1459,
											"end": 1466,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1459,
											"end": 1466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1466,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1459,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1466,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1466,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1466,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1466,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1486,
											"end": 1495,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1535,
											"end": 1536,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1562,
											"end": 1563,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1571,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1423,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1418,
											"end": 1435,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1434,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1435,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1418,
											"end": 1435,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1435,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1418,
											"end": 1435,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1435,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1435,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1435,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1435,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1435,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1435,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1435,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1435,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1435,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1435,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1435,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1571,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1595,
											"end": 1605,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1583,
											"end": 1625,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1583,
											"end": 1625,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1583,
											"end": 1625,
											"name": "PUSH",
											"source": 10,
											"value": "89D3F1CDFAD4E5C26535AC23DC61CF9E975667801747518F01B1B653545D736A"
										},
										{
											"begin": 1607,
											"end": 1616,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1618,
											"end": 1624,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1583,
											"end": 1625,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1625,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1583,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 1583,
											"end": 1625,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1583,
											"end": 1625,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1583,
											"end": 1625,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1583,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 1583,
											"end": 1625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1583,
											"end": 1625,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 1583,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1583,
											"end": 1625,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1625,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1583,
											"end": 1625,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1583,
											"end": 1625,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1583,
											"end": 1625,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1583,
											"end": 1625,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1583,
											"end": 1625,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 1635,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1635,
											"end": 1646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1646,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 1635,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 3852,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 2599,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2678,
											"end": 2679,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2656,
											"end": 2661,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2656,
											"end": 2667,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2662,
											"end": 2666,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2656,
											"end": 2667,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2656,
											"end": 2667,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2656,
											"end": 2667,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2656,
											"end": 2667,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2656,
											"end": 2667,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2656,
											"end": 2667,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2656,
											"end": 2667,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2656,
											"end": 2667,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2656,
											"end": 2667,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2656,
											"end": 2667,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2656,
											"end": 2667,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2656,
											"end": 2667,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2656,
											"end": 2667,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2656,
											"end": 2667,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2656,
											"end": 2667,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2656,
											"end": 2674,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2656,
											"end": 2674,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2656,
											"end": 2674,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2656,
											"end": 2679,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 2648,
											"end": 2702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2744,
											"end": 2749,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2744,
											"end": 2755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2754,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2744,
											"end": 2755,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2744,
											"end": 2755,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2744,
											"end": 2755,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2744,
											"end": 2755,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2744,
											"end": 2755,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2744,
											"end": 2755,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2744,
											"end": 2755,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2744,
											"end": 2755,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2744,
											"end": 2755,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2744,
											"end": 2755,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2744,
											"end": 2755,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2744,
											"end": 2755,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2744,
											"end": 2755,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2744,
											"end": 2755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2744,
											"end": 2755,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2717,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 2730,
											"end": 2740,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2717,
											"end": 2729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 2717,
											"end": 2741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2717,
											"end": 2741,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 2717,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2717,
											"end": 2762,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 2709,
											"end": 2808,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2808,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2709,
											"end": 2808,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2808,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2709,
											"end": 2808,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2808,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2808,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2709,
											"end": 2808,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 2709,
											"end": 2808,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 2709,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2808,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 2709,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2808,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2709,
											"end": 2808,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2808,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2808,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2808,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2808,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2808,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2808,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 2709,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2896,
											"end": 2904,
											"name": "PUSH",
											"source": 10,
											"value": "15180"
										},
										{
											"begin": 2872,
											"end": 2877,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2883,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2878,
											"end": 2882,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2883,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2872,
											"end": 2883,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2883,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2872,
											"end": 2883,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2883,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2883,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2883,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2872,
											"end": 2883,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2883,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2883,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2883,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2883,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2872,
											"end": 2883,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2883,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2872,
											"end": 2883,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2893,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2893,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2893,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 2872,
											"end": 2904,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2904,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 2872,
											"end": 2904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2904,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 2872,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2847,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2842,
											"end": 2853,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2848,
											"end": 2852,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2853,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2842,
											"end": 2853,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2853,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2842,
											"end": 2853,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2853,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2853,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2853,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2842,
											"end": 2853,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2853,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2853,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2853,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2853,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2842,
											"end": 2853,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2853,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2853,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2869,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2842,
											"end": 2869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2869,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 2842,
											"end": 2904,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2904,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 2842,
											"end": 2904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2904,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 2842,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2823,
											"end": 2838,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 2823,
											"end": 2904,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2823,
											"end": 2904,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 2815,
											"end": 2943,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2943,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2943,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2943,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2815,
											"end": 2943,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2943,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2943,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2815,
											"end": 2943,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 2815,
											"end": 2943,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2815,
											"end": 2943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2943,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 2815,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2943,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2943,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2943,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2943,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2943,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2943,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2943,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2943,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 2815,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 2966,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2969,
											"end": 2980,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2979,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2969,
											"end": 2980,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2969,
											"end": 2980,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2969,
											"end": 2980,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2969,
											"end": 2980,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2969,
											"end": 2980,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2969,
											"end": 2980,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2969,
											"end": 2980,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2969,
											"end": 2980,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2969,
											"end": 2980,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2969,
											"end": 2980,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2969,
											"end": 2980,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2969,
											"end": 2980,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2969,
											"end": 2980,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2969,
											"end": 2980,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 2980,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2969,
											"end": 2987,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2969,
											"end": 2987,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2969,
											"end": 2987,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 2987,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 2987,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 3081,
											"end": 3085,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3081,
											"end": 3085,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3081,
											"end": 3085,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3085,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3085,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3085,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3081,
											"end": 3085,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3085,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3085,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3085,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3081,
											"end": 3085,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3087,
											"end": 3091,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3105,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 3108,
											"end": 3114,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 3054,
											"end": 3115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3115,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 3054,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3203,
											"end": 3207,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3203,
											"end": 3207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3207,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3207,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3203,
											"end": 3207,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3207,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3207,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3203,
											"end": 3207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3230,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3217,
											"end": 3230,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3230,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3230,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3230,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3230,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3217,
											"end": 3230,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3230,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3230,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3230,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3217,
											"end": 3230,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3239,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 3171,
											"end": 3240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3240,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3171,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3276,
											"end": 3297,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3314,
											"end": 3315,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 3300,
											"end": 3316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3276,
											"end": 3316,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3276,
											"end": 3316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3341,
											"end": 3345,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3341,
											"end": 3345,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3345,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3341,
											"end": 3345,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3341,
											"end": 3345,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3341,
											"end": 3345,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3341,
											"end": 3345,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3341,
											"end": 3345,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3341,
											"end": 3345,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3341,
											"end": 3345,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3341,
											"end": 3345,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3327,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3328,
											"end": 3329,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3323,
											"end": 3330,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3330,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3330,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3330,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 3323,
											"end": 3330,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 3323,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 3323,
											"end": 3330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3330,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 3323,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3330,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 3323,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3330,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3323,
											"end": 3330,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3330,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3323,
											"end": 3330,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3330,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3346,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3323,
											"end": 3346,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3346,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3346,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3323,
											"end": 3346,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3346,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3346,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3395,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3377,
											"end": 3395,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3395,
											"name": "PUSH",
											"source": 10,
											"value": "AD5C4648"
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 3377,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 3377,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3371,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3372,
											"end": 3373,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3367,
											"end": 3374,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3374,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3374,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3374,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 3367,
											"end": 3374,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 3367,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 3367,
											"end": 3374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3374,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 3367,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3374,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 3367,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3374,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3367,
											"end": 3374,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3374,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3367,
											"end": 3374,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3374,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3397,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3397,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3367,
											"end": 3397,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3397,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3397,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3397,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3367,
											"end": 3397,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3397,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3397,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3397,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3397,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3456,
											"end": 3477,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3494,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3481,
											"end": 3494,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3494,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3494,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3494,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3494,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3481,
											"end": 3494,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3494,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3494,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3494,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3481,
											"end": 3494,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3516,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3481,
											"end": 3516,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3516,
											"name": "PUSH",
											"source": 10,
											"value": "18CBAFE5"
										},
										{
											"begin": 3517,
											"end": 3523,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3525,
											"end": 3526,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3542,
											"end": 3546,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 3567,
											"end": 3574,
											"name": "PUSH",
											"source": 10,
											"value": "E10"
										},
										{
											"begin": 3549,
											"end": 3564,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 3549,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 3549,
											"end": 3574,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3549,
											"end": 3574,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3549,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 3549,
											"end": 3574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3549,
											"end": 3574,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 3549,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 3481,
											"end": 3575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 3481,
											"end": 3575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 3481,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3455,
											"end": 3575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3455,
											"end": 3575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3603,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3606,
											"end": 3613,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3614,
											"end": 3615,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3606,
											"end": 3616,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3606,
											"end": 3616,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3606,
											"end": 3616,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3606,
											"end": 3616,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3606,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 3606,
											"end": 3616,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3606,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 3606,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 3606,
											"end": 3616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3606,
											"end": 3616,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 3606,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3606,
											"end": 3616,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 3606,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3606,
											"end": 3616,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3606,
											"end": 3616,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3606,
											"end": 3616,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3606,
											"end": 3616,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3606,
											"end": 3616,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3606,
											"end": 3616,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3687,
											"end": 3702,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3702,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3702,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3702,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3702,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3730,
											"end": 3734,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "PUSH",
											"source": 10,
											"value": "1A3ABF7E0A472651EBE2C79A31A5F4660C7EA65E3086EE1742D7502999BBF5B5"
										},
										{
											"begin": 3736,
											"end": 3742,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3755,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 3716,
											"end": 3756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 3799,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 3822,
											"end": 3826,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3822,
											"end": 3826,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3822,
											"end": 3826,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3822,
											"end": 3826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3822,
											"end": 3826,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3822,
											"end": 3826,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3822,
											"end": 3826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3822,
											"end": 3826,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3822,
											"end": 3826,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3822,
											"end": 3826,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3828,
											"end": 3832,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3834,
											"end": 3845,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3799,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 3799,
											"end": 3846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3799,
											"end": 3846,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 3799,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2641,
											"end": 3852,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2641,
											"end": 3852,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2641,
											"end": 3852,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2641,
											"end": 3852,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 3852,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 3852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2425,
											"end": 2593,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 2425,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2493,
											"end": 2494,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2472,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2467,
											"end": 2484,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2484,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2467,
											"end": 2484,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2484,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2467,
											"end": 2484,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2484,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2484,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2484,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2467,
											"end": 2484,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2484,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2484,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2484,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2484,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2467,
											"end": 2484,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2484,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2484,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2490,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2490,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2490,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2494,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 2459,
											"end": 2516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2459,
											"end": 2516,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2459,
											"end": 2516,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2516,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2459,
											"end": 2516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 2459,
											"end": 2516,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 2459,
											"end": 2516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2516,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 2459,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2459,
											"end": 2516,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2516,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2516,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2516,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2516,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2516,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 2459,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2552,
											"end": 2553,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2530,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2541,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2549,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2525,
											"end": 2549,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2553,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2553,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2576,
											"end": 2586,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2587,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2565,
											"end": 2587,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2587,
											"name": "PUSH",
											"source": 10,
											"value": "F222ABD4EE7AFB02F9450183B95D07AAAB2EA2F2D6748F55525C7E875FDD58A1"
										},
										{
											"begin": 2565,
											"end": 2587,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2587,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2587,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2587,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2587,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2587,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2587,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2587,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2587,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 2425,
											"end": 2593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1092,
											"end": 1099,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1115,
											"end": 1119,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1115,
											"end": 1119,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1115,
											"end": 1119,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1119,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1119,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1119,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1115,
											"end": 1119,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1119,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1119,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1119,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1115,
											"end": 1119,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1129,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1115,
											"end": 1129,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1129,
											"name": "PUSH",
											"source": 10,
											"value": "DD62ED3E"
										},
										{
											"begin": 1130,
											"end": 1134,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1144,
											"end": 1148,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 1115,
											"end": 1150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 1115,
											"end": 1150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 1115,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1108,
											"end": 1150,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1108,
											"end": 1150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2306,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2081,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2197,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2215,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2200,
											"end": 2215,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2215,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 2224,
											"end": 2228,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2238,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2200,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2200,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2239,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2262,
											"end": 2267,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2276,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2298,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2278,
											"end": 2298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2249,
											"end": 2299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2299,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2249,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 5,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3676,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3296,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3431,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3426,
											"end": 3439,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3426,
											"end": 3439,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3426,
											"end": 3439,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 3442,
											"end": 3449,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3451,
											"end": 3456,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3411,
											"end": 3458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3458,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3474,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3498,
											"end": 3503,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3505,
											"end": 3517,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3474,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 3474,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3474,
											"end": 3518,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3474,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3469,
											"end": 3670,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3534,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3554,
											"end": 3559,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3576,
											"end": 3581,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3576,
											"end": 3589,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3576,
											"end": 3589,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3576,
											"end": 3589,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 3592,
											"end": 3599,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3602,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3561,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3534,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3534,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3534,
											"end": 3605,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3534,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3639,
											"end": 3644,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3646,
											"end": 3658,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3619,
											"end": 3659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3659,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3619,
											"end": 3659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3670,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3469,
											"end": 3670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5189,
											"end": 5767,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 5189,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5574,
											"end": 5586,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5588,
											"end": 5611,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5628,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5634,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5615,
											"end": 5634,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5635,
											"end": 5639,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 5615,
											"end": 5640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5640,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5640,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5657,
											"end": 5664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5690,
											"end": 5691,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5669,
											"end": 5679,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5669,
											"end": 5686,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5669,
											"end": 5691,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5669,
											"end": 5725,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5669,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 5669,
											"end": 5725,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5669,
											"end": 5725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5706,
											"end": 5716,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 5695,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5669,
											"end": 5725,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 5669,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5657,
											"end": 5760,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5657,
											"end": 5760,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5657,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 5657,
											"end": 5760,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5657,
											"end": 5760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5759,
											"end": 5760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5738,
											"end": 5743,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5730,
											"end": 5756,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5730,
											"end": 5756,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5730,
											"end": 5756,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 5730,
											"end": 5760,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5657,
											"end": 5760,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 5657,
											"end": 5760,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5650,
											"end": 5760,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5650,
											"end": 5760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5650,
											"end": 5760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5650,
											"end": 5760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5189,
											"end": 5767,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5189,
											"end": 5767,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5189,
											"end": 5767,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5189,
											"end": 5767,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5189,
											"end": 5767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 6,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 6,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 6,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 758,
											"end": 764,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 815,
											"end": 817,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 812,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 794,
											"end": 801,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 786,
											"end": 818,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 783,
											"end": 902,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 783,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 821,
											"end": 900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 821,
											"end": 900,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 783,
											"end": 902,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 941,
											"end": 942,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 1011,
											"end": 1018,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1008,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 991,
											"end": 1000,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 987,
											"end": 1009,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 966,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 912,
											"end": 1029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 1139,
											"end": 1146,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1119,
											"end": 1128,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 1094,
											"end": 1147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1039,
											"end": 1157,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1170,
											"end": 1296,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 1170,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1207,
											"end": 1214,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1289,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1240,
											"end": 1245,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1236,
											"end": 1290,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1290,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1290,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1170,
											"end": 1296,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1170,
											"end": 1296,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1170,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1170,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1362,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 1302,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1330,
											"end": 1333,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1362,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1362,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1362,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1368,
											"end": 1510,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 1368,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1418,
											"end": 1427,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1451,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 1469,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 1496,
											"end": 1501,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 1478,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1469,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 1469,
											"end": 1503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1469,
											"end": 1503,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 1469,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1451,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 1451,
											"end": 1504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1451,
											"end": 1504,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 1451,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1438,
											"end": 1504,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1438,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1368,
											"end": 1510,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1368,
											"end": 1510,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1368,
											"end": 1510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1368,
											"end": 1510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1516,
											"end": 1642,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 1516,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 1630,
											"end": 1635,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 1599,
											"end": 1636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1636,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 1599,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1586,
											"end": 1636,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1586,
											"end": 1636,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1516,
											"end": 1642,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1516,
											"end": 1642,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1516,
											"end": 1642,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1516,
											"end": 1642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1648,
											"end": 1787,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 1648,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1711,
											"end": 1720,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1744,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 1744,
											"end": 1781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1744,
											"end": 1781,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 1744,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1731,
											"end": 1781,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1731,
											"end": 1781,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1648,
											"end": 1787,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1648,
											"end": 1787,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1648,
											"end": 1787,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1648,
											"end": 1787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1793,
											"end": 1950,
											"name": "tag",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 1793,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1893,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 1937,
											"end": 1942,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1893,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 1893,
											"end": 1943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1893,
											"end": 1943,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 1893,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1888,
											"end": 1891,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1881,
											"end": 1944,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1793,
											"end": 1950,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1793,
											"end": 1950,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1793,
											"end": 1950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1956,
											"end": 2204,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 1956,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2062,
											"end": 2066,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2102,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2089,
											"end": 2098,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2085,
											"end": 2103,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2077,
											"end": 2103,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2077,
											"end": 2103,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 2194,
											"end": 2195,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2183,
											"end": 2192,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2179,
											"end": 2196,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2170,
											"end": 2176,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 2113,
											"end": 2197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2197,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 2113,
											"end": 2197,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1956,
											"end": 2204,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1956,
											"end": 2204,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1956,
											"end": 2204,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1956,
											"end": 2204,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1956,
											"end": 2204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2210,
											"end": 2363,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 2210,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2296,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 2351,
											"end": 2356,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 2320,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2357,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 2320,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2357,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2357,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2210,
											"end": 2363,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2210,
											"end": 2363,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2210,
											"end": 2363,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2210,
											"end": 2363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2369,
											"end": 2554,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 2369,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2483,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 2541,
											"end": 2546,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2483,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 2483,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2483,
											"end": 2547,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 2483,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2478,
											"end": 2481,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2471,
											"end": 2548,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2369,
											"end": 2554,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2369,
											"end": 2554,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2369,
											"end": 2554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2560,
											"end": 2836,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 2560,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2680,
											"end": 2684,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2720,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2707,
											"end": 2716,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2703,
											"end": 2721,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2721,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2721,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 2826,
											"end": 2827,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2824,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2811,
											"end": 2828,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 2731,
											"end": 2829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2829,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 2731,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2560,
											"end": 2836,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2560,
											"end": 2836,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2560,
											"end": 2836,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2560,
											"end": 2836,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2560,
											"end": 2836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2842,
											"end": 2938,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 2842,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2879,
											"end": 2886,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2908,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 2908,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2908,
											"end": 2932,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 2908,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2932,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2932,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2842,
											"end": 2938,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2842,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2842,
											"end": 2938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2842,
											"end": 2938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2944,
											"end": 3066,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 2944,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3017,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 3035,
											"end": 3040,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3017,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 3017,
											"end": 3041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3017,
											"end": 3041,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 3017,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3015,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3007,
											"end": 3042,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 2997,
											"end": 3060,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3056,
											"end": 3057,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3053,
											"end": 3054,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3046,
											"end": 3058,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3060,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 2997,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2944,
											"end": 3066,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2944,
											"end": 3066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3211,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 3072,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3123,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3156,
											"end": 3162,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3134,
											"end": 3163,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3134,
											"end": 3163,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3172,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 3199,
											"end": 3204,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3172,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 3172,
											"end": 3205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3172,
											"end": 3205,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 3172,
											"end": 3205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3211,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3211,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3211,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3211,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3217,
											"end": 3546,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 3217,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3276,
											"end": 3282,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3327,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3313,
											"end": 3322,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3304,
											"end": 3311,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3300,
											"end": 3323,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3296,
											"end": 3328,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3293,
											"end": 3412,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3293,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 3293,
											"end": 3412,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3331,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 3331,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 3331,
											"end": 3410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3331,
											"end": 3410,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 3331,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3293,
											"end": 3412,
											"name": "tag",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 3293,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3451,
											"end": 3452,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3476,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 3521,
											"end": 3528,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3512,
											"end": 3518,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3501,
											"end": 3510,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3519,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3476,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 3476,
											"end": 3529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3476,
											"end": 3529,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 3476,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3422,
											"end": 3539,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3217,
											"end": 3546,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3217,
											"end": 3546,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3217,
											"end": 3546,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3217,
											"end": 3546,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3217,
											"end": 3546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3552,
											"end": 3670,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 3552,
											"end": 3670,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3639,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3639,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 3639,
											"end": 3663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3639,
											"end": 3663,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 3639,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3634,
											"end": 3637,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3664,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3552,
											"end": 3670,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3552,
											"end": 3670,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3552,
											"end": 3670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3676,
											"end": 4340,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 3676,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3881,
											"end": 3885,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3919,
											"end": 3922,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 3908,
											"end": 3917,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3904,
											"end": 3923,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3896,
											"end": 3923,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3896,
											"end": 3923,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3933,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 4001,
											"end": 4002,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3990,
											"end": 3999,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3986,
											"end": 4003,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3977,
											"end": 3983,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 3933,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 3933,
											"end": 4004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3933,
											"end": 4004,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 3933,
											"end": 4004,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4014,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 4082,
											"end": 4084,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4071,
											"end": 4080,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4064,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4014,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 4014,
											"end": 4086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4014,
											"end": 4086,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 4014,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4096,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 4164,
											"end": 4166,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4153,
											"end": 4162,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4149,
											"end": 4167,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4140,
											"end": 4146,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4096,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 4096,
											"end": 4168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4096,
											"end": 4168,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 4096,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4178,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 4246,
											"end": 4248,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4235,
											"end": 4244,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4222,
											"end": 4228,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4178,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 4178,
											"end": 4250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4178,
											"end": 4250,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 4178,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 4328,
											"end": 4331,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 4317,
											"end": 4326,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4313,
											"end": 4332,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4304,
											"end": 4310,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 4260,
											"end": 4333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4333,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 4260,
											"end": 4333,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3676,
											"end": 4340,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 3676,
											"end": 4340,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 3676,
											"end": 4340,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3676,
											"end": 4340,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3676,
											"end": 4340,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3676,
											"end": 4340,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3676,
											"end": 4340,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3676,
											"end": 4340,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3676,
											"end": 4340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4346,
											"end": 4568,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 4346,
											"end": 4568,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4439,
											"end": 4443,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4479,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4466,
											"end": 4475,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4462,
											"end": 4480,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4454,
											"end": 4480,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4454,
											"end": 4480,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 4558,
											"end": 4559,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4547,
											"end": 4556,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4543,
											"end": 4560,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4534,
											"end": 4540,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 4490,
											"end": 4561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4561,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 4490,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4346,
											"end": 4568,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4346,
											"end": 4568,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4346,
											"end": 4568,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4346,
											"end": 4568,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4346,
											"end": 4568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4574,
											"end": 4743,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 4574,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4658,
											"end": 4669,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4692,
											"end": 4698,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4687,
											"end": 4690,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4680,
											"end": 4699,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4732,
											"end": 4736,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4727,
											"end": 4730,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4723,
											"end": 4737,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4708,
											"end": 4737,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4708,
											"end": 4737,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4574,
											"end": 4743,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4574,
											"end": 4743,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4574,
											"end": 4743,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4574,
											"end": 4743,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4574,
											"end": 4743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4749,
											"end": 4912,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 4749,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4889,
											"end": 4904,
											"name": "PUSH",
											"source": 11,
											"value": "506C616E20697320657869737400000000000000000000000000000000000000"
										},
										{
											"begin": 4885,
											"end": 4886,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 4883,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4873,
											"end": 4887,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4866,
											"end": 4905,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4749,
											"end": 4912,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4749,
											"end": 4912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4918,
											"end": 5284,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 4918,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5060,
											"end": 5063,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5081,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 5145,
											"end": 5147,
											"name": "PUSH",
											"source": 11,
											"value": "D"
										},
										{
											"begin": 5140,
											"end": 5143,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 5081,
											"end": 5148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5148,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 5081,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5074,
											"end": 5148,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5074,
											"end": 5148,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5157,
											"end": 5250,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 5246,
											"end": 5249,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5157,
											"end": 5250,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 5157,
											"end": 5250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5157,
											"end": 5250,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 5157,
											"end": 5250,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5275,
											"end": 5277,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5270,
											"end": 5273,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5266,
											"end": 5278,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5259,
											"end": 5278,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5259,
											"end": 5278,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4918,
											"end": 5284,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4918,
											"end": 5284,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4918,
											"end": 5284,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4918,
											"end": 5284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5290,
											"end": 5709,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 5290,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5460,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5494,
											"end": 5496,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5483,
											"end": 5492,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5479,
											"end": 5497,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5497,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5497,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5543,
											"end": 5552,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5537,
											"end": 5541,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5533,
											"end": 5553,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5529,
											"end": 5530,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5527,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5514,
											"end": 5531,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5507,
											"end": 5554,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5571,
											"end": 5702,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 5697,
											"end": 5701,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5571,
											"end": 5702,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 5571,
											"end": 5702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5571,
											"end": 5702,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 5571,
											"end": 5702,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5563,
											"end": 5702,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5563,
											"end": 5702,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5290,
											"end": 5709,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5290,
											"end": 5709,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5290,
											"end": 5709,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5290,
											"end": 5709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5715,
											"end": 5897,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 5715,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5855,
											"end": 5889,
											"name": "PUSH",
											"source": 11,
											"value": "4672657175656E6379206D7573742062652067726561746572207468616E2030"
										},
										{
											"begin": 5851,
											"end": 5852,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5843,
											"end": 5849,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5839,
											"end": 5853,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5832,
											"end": 5890,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5715,
											"end": 5897,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5715,
											"end": 5897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5903,
											"end": 6269,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 5903,
											"end": 6269,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6045,
											"end": 6048,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6066,
											"end": 6133,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 6130,
											"end": 6132,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6125,
											"end": 6128,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6066,
											"end": 6133,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 6066,
											"end": 6133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6066,
											"end": 6133,
											"name": "tag",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 6066,
											"end": 6133,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6059,
											"end": 6133,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6059,
											"end": 6133,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6142,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 6231,
											"end": 6234,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6142,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 6142,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6142,
											"end": 6235,
											"name": "tag",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 6142,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6260,
											"end": 6262,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6255,
											"end": 6258,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6251,
											"end": 6263,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5903,
											"end": 6269,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5903,
											"end": 6269,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5903,
											"end": 6269,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5903,
											"end": 6269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6275,
											"end": 6694,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 6275,
											"end": 6694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6441,
											"end": 6445,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6479,
											"end": 6481,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6468,
											"end": 6477,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6464,
											"end": 6482,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6456,
											"end": 6482,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6456,
											"end": 6482,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6528,
											"end": 6537,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6522,
											"end": 6526,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6518,
											"end": 6538,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6514,
											"end": 6515,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6503,
											"end": 6512,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6516,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6492,
											"end": 6539,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6556,
											"end": 6687,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 6682,
											"end": 6686,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6556,
											"end": 6687,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 6556,
											"end": 6687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6556,
											"end": 6687,
											"name": "tag",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 6556,
											"end": 6687,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6548,
											"end": 6687,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6548,
											"end": 6687,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6275,
											"end": 6694,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6275,
											"end": 6694,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6275,
											"end": 6694,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6275,
											"end": 6694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6700,
											"end": 6879,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 6700,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6840,
											"end": 6871,
											"name": "PUSH",
											"source": 11,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 6836,
											"end": 6837,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6834,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6824,
											"end": 6838,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6872,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6700,
											"end": 6879,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6700,
											"end": 6879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6885,
											"end": 7251,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 6885,
											"end": 7251,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7027,
											"end": 7030,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7048,
											"end": 7115,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 7112,
											"end": 7114,
											"name": "PUSH",
											"source": 11,
											"value": "1D"
										},
										{
											"begin": 7107,
											"end": 7110,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7048,
											"end": 7115,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 7048,
											"end": 7115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7048,
											"end": 7115,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 7048,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7041,
											"end": 7115,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7041,
											"end": 7115,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7124,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 7213,
											"end": 7216,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7124,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 7124,
											"end": 7217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7124,
											"end": 7217,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 7124,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7242,
											"end": 7244,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7237,
											"end": 7240,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7233,
											"end": 7245,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7226,
											"end": 7245,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7226,
											"end": 7245,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6885,
											"end": 7251,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6885,
											"end": 7251,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6885,
											"end": 7251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6885,
											"end": 7251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7257,
											"end": 7676,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 7257,
											"end": 7676,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7423,
											"end": 7427,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7461,
											"end": 7463,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7450,
											"end": 7459,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7446,
											"end": 7464,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7464,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7464,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7510,
											"end": 7519,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7504,
											"end": 7508,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7500,
											"end": 7520,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7496,
											"end": 7497,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7485,
											"end": 7494,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7481,
											"end": 7498,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7474,
											"end": 7521,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7538,
											"end": 7669,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 7664,
											"end": 7668,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7538,
											"end": 7669,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 7538,
											"end": 7669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7538,
											"end": 7669,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 7538,
											"end": 7669,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7530,
											"end": 7669,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7530,
											"end": 7669,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7257,
											"end": 7676,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7257,
											"end": 7676,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7257,
											"end": 7676,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7257,
											"end": 7676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 8014,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 7682,
											"end": 8014,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7803,
											"end": 7807,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7841,
											"end": 7843,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7830,
											"end": 7839,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7826,
											"end": 7844,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7818,
											"end": 7844,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7818,
											"end": 7844,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7854,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 7922,
											"end": 7923,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7911,
											"end": 7920,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7907,
											"end": 7924,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7898,
											"end": 7904,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7854,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 7854,
											"end": 7925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7854,
											"end": 7925,
											"name": "tag",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 7854,
											"end": 7925,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7935,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 8003,
											"end": 8005,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7992,
											"end": 8001,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7988,
											"end": 8006,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7979,
											"end": 7985,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7935,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 7935,
											"end": 8007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7935,
											"end": 8007,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 7935,
											"end": 8007,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 8014,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 8014,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 8014,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 8014,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 8014,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 8014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8020,
											"end": 8187,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 8020,
											"end": 8187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8160,
											"end": 8179,
											"name": "PUSH",
											"source": 11,
											"value": "506C616E206973206E6F74206578697374000000000000000000000000000000"
										},
										{
											"begin": 8156,
											"end": 8157,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8148,
											"end": 8154,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8144,
											"end": 8158,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8137,
											"end": 8180,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8020,
											"end": 8187,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8020,
											"end": 8187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8193,
											"end": 8559,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 8193,
											"end": 8559,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8335,
											"end": 8338,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8356,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 8420,
											"end": 8422,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 8415,
											"end": 8418,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8356,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 8356,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8356,
											"end": 8423,
											"name": "tag",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 8356,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8432,
											"end": 8525,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 8521,
											"end": 8524,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8432,
											"end": 8525,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 8432,
											"end": 8525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8432,
											"end": 8525,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 8432,
											"end": 8525,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8550,
											"end": 8552,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8545,
											"end": 8548,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8541,
											"end": 8553,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8534,
											"end": 8553,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8534,
											"end": 8553,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8193,
											"end": 8559,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8193,
											"end": 8559,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8193,
											"end": 8559,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8193,
											"end": 8559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8565,
											"end": 8984,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 8565,
											"end": 8984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8731,
											"end": 8735,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8769,
											"end": 8771,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8758,
											"end": 8767,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8754,
											"end": 8772,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8746,
											"end": 8772,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8746,
											"end": 8772,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8818,
											"end": 8827,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8812,
											"end": 8816,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8808,
											"end": 8828,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8804,
											"end": 8805,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8793,
											"end": 8802,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8789,
											"end": 8806,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8782,
											"end": 8829,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8846,
											"end": 8977,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 8972,
											"end": 8976,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8846,
											"end": 8977,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 8846,
											"end": 8977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8846,
											"end": 8977,
											"name": "tag",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 8846,
											"end": 8977,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8838,
											"end": 8977,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8838,
											"end": 8977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8565,
											"end": 8984,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8565,
											"end": 8984,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8565,
											"end": 8984,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8565,
											"end": 8984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8990,
											"end": 9210,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 8990,
											"end": 9210,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9130,
											"end": 9164,
											"name": "PUSH",
											"source": 11,
											"value": "546F74616C206D7573742062652067726561746572207468616E20616D6F756E"
										},
										{
											"begin": 9126,
											"end": 9127,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9118,
											"end": 9124,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9114,
											"end": 9128,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9107,
											"end": 9165,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9199,
											"end": 9202,
											"name": "PUSH",
											"source": 11,
											"value": "7400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9194,
											"end": 9196,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9186,
											"end": 9192,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9182,
											"end": 9197,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9175,
											"end": 9203,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8990,
											"end": 9210,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8990,
											"end": 9210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9216,
											"end": 9582,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 9216,
											"end": 9582,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9358,
											"end": 9361,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9379,
											"end": 9446,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 9443,
											"end": 9445,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 9438,
											"end": 9441,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9379,
											"end": 9446,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 9379,
											"end": 9446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9379,
											"end": 9446,
											"name": "tag",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 9379,
											"end": 9446,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9446,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9446,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9455,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 9544,
											"end": 9547,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9455,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 9455,
											"end": 9548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9455,
											"end": 9548,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 9455,
											"end": 9548,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9573,
											"end": 9575,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9568,
											"end": 9571,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9564,
											"end": 9576,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9557,
											"end": 9576,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9557,
											"end": 9576,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9216,
											"end": 9582,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9216,
											"end": 9582,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9216,
											"end": 9582,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9216,
											"end": 9582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9588,
											"end": 10007,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 9588,
											"end": 10007,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9754,
											"end": 9758,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9792,
											"end": 9794,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9781,
											"end": 9790,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9777,
											"end": 9795,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9769,
											"end": 9795,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9769,
											"end": 9795,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9841,
											"end": 9850,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9835,
											"end": 9839,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9831,
											"end": 9851,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9827,
											"end": 9828,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9816,
											"end": 9825,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9812,
											"end": 9829,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9805,
											"end": 9852,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9869,
											"end": 10000,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 9995,
											"end": 9999,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9869,
											"end": 10000,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 9869,
											"end": 10000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9869,
											"end": 10000,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 9869,
											"end": 10000,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9861,
											"end": 10000,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9861,
											"end": 10000,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9588,
											"end": 10007,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9588,
											"end": 10007,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9588,
											"end": 10007,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9588,
											"end": 10007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10013,
											"end": 10193,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 10013,
											"end": 10193,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10061,
											"end": 10138,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10058,
											"end": 10059,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10051,
											"end": 10139,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10158,
											"end": 10162,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 10155,
											"end": 10156,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10148,
											"end": 10163,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10182,
											"end": 10186,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10179,
											"end": 10180,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10172,
											"end": 10187,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10199,
											"end": 10432,
											"name": "tag",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 10199,
											"end": 10432,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10238,
											"end": 10241,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10261,
											"end": 10285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 10279,
											"end": 10284,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10261,
											"end": 10285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 10261,
											"end": 10285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10261,
											"end": 10285,
											"name": "tag",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 10261,
											"end": 10285,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10252,
											"end": 10285,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10252,
											"end": 10285,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10307,
											"end": 10373,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10300,
											"end": 10305,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10297,
											"end": 10374,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10294,
											"end": 10397,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 10294,
											"end": 10397,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10377,
											"end": 10395,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 10377,
											"end": 10395,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 10377,
											"end": 10395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10377,
											"end": 10395,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 10377,
											"end": 10395,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10294,
											"end": 10397,
											"name": "tag",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 10294,
											"end": 10397,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10424,
											"end": 10425,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10417,
											"end": 10422,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10413,
											"end": 10426,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10406,
											"end": 10426,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10406,
											"end": 10426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10199,
											"end": 10432,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10199,
											"end": 10432,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10199,
											"end": 10432,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10199,
											"end": 10432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10438,
											"end": 10606,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 10438,
											"end": 10606,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10578,
											"end": 10598,
											"name": "PUSH",
											"source": 11,
											"value": "506C616E206973206E6F74206163746976650000000000000000000000000000"
										},
										{
											"begin": 10574,
											"end": 10575,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10566,
											"end": 10572,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10562,
											"end": 10576,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10555,
											"end": 10599,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10438,
											"end": 10606,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10438,
											"end": 10606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10612,
											"end": 10978,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 10612,
											"end": 10978,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10754,
											"end": 10757,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10775,
											"end": 10842,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 10839,
											"end": 10841,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 10834,
											"end": 10837,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10775,
											"end": 10842,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 10775,
											"end": 10842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10775,
											"end": 10842,
											"name": "tag",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 10775,
											"end": 10842,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10768,
											"end": 10842,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10768,
											"end": 10842,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10851,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 10940,
											"end": 10943,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10851,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 10851,
											"end": 10944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10851,
											"end": 10944,
											"name": "tag",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 10851,
											"end": 10944,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10969,
											"end": 10971,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10964,
											"end": 10967,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10960,
											"end": 10972,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 10972,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 10972,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10612,
											"end": 10978,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10612,
											"end": 10978,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10612,
											"end": 10978,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10612,
											"end": 10978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10984,
											"end": 11403,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 10984,
											"end": 11403,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11150,
											"end": 11154,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11188,
											"end": 11190,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11177,
											"end": 11186,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11173,
											"end": 11191,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11165,
											"end": 11191,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11165,
											"end": 11191,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11237,
											"end": 11246,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11231,
											"end": 11235,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11227,
											"end": 11247,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11223,
											"end": 11224,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11212,
											"end": 11221,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11208,
											"end": 11225,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11201,
											"end": 11248,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11265,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 11391,
											"end": 11395,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11265,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 11265,
											"end": 11396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11265,
											"end": 11396,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 11265,
											"end": 11396,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11257,
											"end": 11396,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11257,
											"end": 11396,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10984,
											"end": 11403,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10984,
											"end": 11403,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10984,
											"end": 11403,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10984,
											"end": 11403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11409,
											"end": 11637,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 11409,
											"end": 11637,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11549,
											"end": 11583,
											"name": "PUSH",
											"source": 11,
											"value": "43616E6E6F742074726967676572206D6F7265207468616E2072656D61696E69"
										},
										{
											"begin": 11545,
											"end": 11546,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11537,
											"end": 11543,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11533,
											"end": 11547,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11526,
											"end": 11584,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11618,
											"end": 11629,
											"name": "PUSH",
											"source": 11,
											"value": "6E6720616D6F756E740000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11613,
											"end": 11615,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11605,
											"end": 11611,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11601,
											"end": 11616,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11594,
											"end": 11630,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11409,
											"end": 11637,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11409,
											"end": 11637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11643,
											"end": 12009,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 11643,
											"end": 12009,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11785,
											"end": 11788,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11806,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 11870,
											"end": 11872,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 11865,
											"end": 11868,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11806,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 11806,
											"end": 11873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11806,
											"end": 11873,
											"name": "tag",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 11806,
											"end": 11873,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11799,
											"end": 11873,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11799,
											"end": 11873,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11882,
											"end": 11975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 11971,
											"end": 11974,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11882,
											"end": 11975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 11882,
											"end": 11975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11882,
											"end": 11975,
											"name": "tag",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 11882,
											"end": 11975,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12000,
											"end": 12002,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11995,
											"end": 11998,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11991,
											"end": 12003,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11984,
											"end": 12003,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11984,
											"end": 12003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11643,
											"end": 12009,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11643,
											"end": 12009,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11643,
											"end": 12009,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11643,
											"end": 12009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12015,
											"end": 12434,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 12015,
											"end": 12434,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12181,
											"end": 12185,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12219,
											"end": 12221,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12208,
											"end": 12217,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12204,
											"end": 12222,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12196,
											"end": 12222,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12196,
											"end": 12222,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12268,
											"end": 12277,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12262,
											"end": 12266,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12258,
											"end": 12278,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12254,
											"end": 12255,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12243,
											"end": 12252,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12239,
											"end": 12256,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12232,
											"end": 12279,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12296,
											"end": 12427,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 12422,
											"end": 12426,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12296,
											"end": 12427,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 12296,
											"end": 12427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12296,
											"end": 12427,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 12296,
											"end": 12427,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12288,
											"end": 12427,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12288,
											"end": 12427,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12015,
											"end": 12434,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12015,
											"end": 12434,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12015,
											"end": 12434,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12015,
											"end": 12434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12440,
											"end": 12850,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 12440,
											"end": 12850,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12480,
											"end": 12487,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12503,
											"end": 12523,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 12521,
											"end": 12522,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12503,
											"end": 12523,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 12503,
											"end": 12523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12503,
											"end": 12523,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 12503,
											"end": 12523,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12498,
											"end": 12523,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12498,
											"end": 12523,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12537,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 12555,
											"end": 12556,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12537,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 12537,
											"end": 12557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12537,
											"end": 12557,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 12537,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12532,
											"end": 12557,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12532,
											"end": 12557,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12592,
											"end": 12593,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12589,
											"end": 12590,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12585,
											"end": 12594,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 12614,
											"end": 12644,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 12632,
											"end": 12643,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12614,
											"end": 12644,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 12614,
											"end": 12644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12614,
											"end": 12644,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 12614,
											"end": 12644,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12603,
											"end": 12644,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12603,
											"end": 12644,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12793,
											"end": 12794,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12784,
											"end": 12791,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12780,
											"end": 12795,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12777,
											"end": 12778,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12774,
											"end": 12796,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 12754,
											"end": 12755,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12747,
											"end": 12756,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12727,
											"end": 12810,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 12704,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 12704,
											"end": 12843,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12823,
											"end": 12841,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 12823,
											"end": 12841,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 12823,
											"end": 12841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12823,
											"end": 12841,
											"name": "tag",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 12823,
											"end": 12841,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12704,
											"end": 12843,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 12704,
											"end": 12843,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12488,
											"end": 12850,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12440,
											"end": 12850,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12440,
											"end": 12850,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12440,
											"end": 12850,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12440,
											"end": 12850,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12440,
											"end": 12850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12856,
											"end": 13047,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 12856,
											"end": 13047,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12896,
											"end": 12899,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12915,
											"end": 12935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 12933,
											"end": 12934,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12915,
											"end": 12935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 12915,
											"end": 12935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12915,
											"end": 12935,
											"name": "tag",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 12915,
											"end": 12935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12910,
											"end": 12935,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12910,
											"end": 12935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12949,
											"end": 12969,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 12967,
											"end": 12968,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12949,
											"end": 12969,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 12949,
											"end": 12969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12949,
											"end": 12969,
											"name": "tag",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 12949,
											"end": 12969,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12944,
											"end": 12969,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12944,
											"end": 12969,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12992,
											"end": 12993,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12989,
											"end": 12990,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12985,
											"end": 12994,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12978,
											"end": 12994,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12978,
											"end": 12994,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13013,
											"end": 13016,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13010,
											"end": 13011,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13007,
											"end": 13017,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 13004,
											"end": 13040,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13004,
											"end": 13040,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 13004,
											"end": 13040,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13020,
											"end": 13038,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 13020,
											"end": 13038,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 13020,
											"end": 13038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13020,
											"end": 13038,
											"name": "tag",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 13020,
											"end": 13038,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13004,
											"end": 13040,
											"name": "tag",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 13004,
											"end": 13040,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12856,
											"end": 13047,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12856,
											"end": 13047,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12856,
											"end": 13047,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12856,
											"end": 13047,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12856,
											"end": 13047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13053,
											"end": 13274,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 13053,
											"end": 13274,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13193,
											"end": 13227,
											"name": "PUSH",
											"source": 11,
											"value": "43616E206F6E6C79207472696767657220706C616E206F6E6365207065722064"
										},
										{
											"begin": 13189,
											"end": 13190,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13181,
											"end": 13187,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13177,
											"end": 13191,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13170,
											"end": 13228,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13262,
											"end": 13266,
											"name": "PUSH",
											"source": 11,
											"value": "6179000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13257,
											"end": 13259,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13249,
											"end": 13255,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13245,
											"end": 13260,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13238,
											"end": 13267,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13053,
											"end": 13274,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13053,
											"end": 13274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13280,
											"end": 13646,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 13280,
											"end": 13646,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13422,
											"end": 13425,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13443,
											"end": 13510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 13507,
											"end": 13509,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 13502,
											"end": 13505,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13443,
											"end": 13510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 13443,
											"end": 13510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13443,
											"end": 13510,
											"name": "tag",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 13443,
											"end": 13510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13436,
											"end": 13510,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13436,
											"end": 13510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13519,
											"end": 13612,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 13608,
											"end": 13611,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13519,
											"end": 13612,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 13519,
											"end": 13612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13519,
											"end": 13612,
											"name": "tag",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 13519,
											"end": 13612,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13637,
											"end": 13639,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13632,
											"end": 13635,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13628,
											"end": 13640,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13621,
											"end": 13640,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13621,
											"end": 13640,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13280,
											"end": 13646,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13280,
											"end": 13646,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13280,
											"end": 13646,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13280,
											"end": 13646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13652,
											"end": 14071,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 13652,
											"end": 14071,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13818,
											"end": 13822,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13856,
											"end": 13858,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13845,
											"end": 13854,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13841,
											"end": 13859,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13833,
											"end": 13859,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13833,
											"end": 13859,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13905,
											"end": 13914,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13899,
											"end": 13903,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13895,
											"end": 13915,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13891,
											"end": 13892,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13880,
											"end": 13889,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13876,
											"end": 13893,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13869,
											"end": 13916,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13933,
											"end": 14064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 14059,
											"end": 14063,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13933,
											"end": 14064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 13933,
											"end": 14064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13933,
											"end": 14064,
											"name": "tag",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 13933,
											"end": 14064,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13925,
											"end": 14064,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13925,
											"end": 14064,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13652,
											"end": 14071,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13652,
											"end": 14071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13652,
											"end": 14071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13652,
											"end": 14071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14077,
											"end": 14257,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 14077,
											"end": 14257,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14125,
											"end": 14202,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14122,
											"end": 14123,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14115,
											"end": 14203,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14222,
											"end": 14226,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 14219,
											"end": 14220,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14212,
											"end": 14227,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14246,
											"end": 14250,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 14243,
											"end": 14244,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14236,
											"end": 14251,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14263,
											"end": 14443,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 14263,
											"end": 14443,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14311,
											"end": 14388,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14308,
											"end": 14309,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14301,
											"end": 14389,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14408,
											"end": 14412,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 14405,
											"end": 14406,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14398,
											"end": 14413,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14432,
											"end": 14436,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 14429,
											"end": 14430,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14422,
											"end": 14437,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14449,
											"end": 14592,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 14449,
											"end": 14592,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14506,
											"end": 14511,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14537,
											"end": 14543,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14531,
											"end": 14544,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14522,
											"end": 14544,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14522,
											"end": 14544,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14553,
											"end": 14586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 14580,
											"end": 14585,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14553,
											"end": 14586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 14553,
											"end": 14586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14553,
											"end": 14586,
											"name": "tag",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 14553,
											"end": 14586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14449,
											"end": 14592,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14449,
											"end": 14592,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14449,
											"end": 14592,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14449,
											"end": 14592,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14449,
											"end": 14592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14598,
											"end": 14949,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 14598,
											"end": 14949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14668,
											"end": 14674,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14717,
											"end": 14719,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14705,
											"end": 14714,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14696,
											"end": 14703,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14692,
											"end": 14715,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14688,
											"end": 14720,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 14685,
											"end": 14804,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14685,
											"end": 14804,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 14685,
											"end": 14804,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14802,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 14723,
											"end": 14802,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 14723,
											"end": 14802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14802,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 14723,
											"end": 14802,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14685,
											"end": 14804,
											"name": "tag",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 14685,
											"end": 14804,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14843,
											"end": 14844,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14868,
											"end": 14932,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 14924,
											"end": 14931,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14915,
											"end": 14921,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14904,
											"end": 14913,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14900,
											"end": 14922,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14868,
											"end": 14932,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 14868,
											"end": 14932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14868,
											"end": 14932,
											"name": "tag",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 14868,
											"end": 14932,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14858,
											"end": 14932,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14858,
											"end": 14932,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14814,
											"end": 14942,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14598,
											"end": 14949,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14598,
											"end": 14949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14598,
											"end": 14949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14598,
											"end": 14949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14598,
											"end": 14949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14955,
											"end": 15040,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 14955,
											"end": 15040,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15000,
											"end": 15007,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15029,
											"end": 15034,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15018,
											"end": 15034,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15018,
											"end": 15034,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14955,
											"end": 15040,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14955,
											"end": 15040,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14955,
											"end": 15040,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14955,
											"end": 15040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15046,
											"end": 15204,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 15046,
											"end": 15204,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15104,
											"end": 15113,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15137,
											"end": 15198,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 15155,
											"end": 15197,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 15164,
											"end": 15196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 15190,
											"end": 15195,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15164,
											"end": 15196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 15164,
											"end": 15196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15164,
											"end": 15196,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 15164,
											"end": 15196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15155,
											"end": 15197,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 15155,
											"end": 15197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15155,
											"end": 15197,
											"name": "tag",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 15155,
											"end": 15197,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15137,
											"end": 15198,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 15137,
											"end": 15198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15137,
											"end": 15198,
											"name": "tag",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 15137,
											"end": 15198,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15124,
											"end": 15198,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15124,
											"end": 15198,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15046,
											"end": 15204,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15046,
											"end": 15204,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15046,
											"end": 15204,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15046,
											"end": 15204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15210,
											"end": 15357,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 15210,
											"end": 15357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15305,
											"end": 15350,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 15344,
											"end": 15349,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15305,
											"end": 15350,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 15305,
											"end": 15350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15305,
											"end": 15350,
											"name": "tag",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 15305,
											"end": 15350,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15300,
											"end": 15303,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15293,
											"end": 15351,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15210,
											"end": 15357,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15210,
											"end": 15357,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15210,
											"end": 15357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15363,
											"end": 15477,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 15363,
											"end": 15477,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15430,
											"end": 15436,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15464,
											"end": 15469,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15458,
											"end": 15470,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 15448,
											"end": 15470,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15448,
											"end": 15470,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15363,
											"end": 15477,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15363,
											"end": 15477,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15363,
											"end": 15477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15363,
											"end": 15477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15483,
											"end": 15667,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 15483,
											"end": 15667,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15582,
											"end": 15593,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15616,
											"end": 15622,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15611,
											"end": 15614,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15604,
											"end": 15623,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15656,
											"end": 15660,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15651,
											"end": 15654,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15647,
											"end": 15661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15632,
											"end": 15661,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15632,
											"end": 15661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15483,
											"end": 15667,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15483,
											"end": 15667,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15483,
											"end": 15667,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15483,
											"end": 15667,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15483,
											"end": 15667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15673,
											"end": 15805,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 15673,
											"end": 15805,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15740,
											"end": 15744,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15763,
											"end": 15766,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15755,
											"end": 15766,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15755,
											"end": 15766,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15793,
											"end": 15797,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15788,
											"end": 15791,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15784,
											"end": 15798,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15776,
											"end": 15798,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15776,
											"end": 15798,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15673,
											"end": 15805,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15673,
											"end": 15805,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15673,
											"end": 15805,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15673,
											"end": 15805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15811,
											"end": 15919,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 15811,
											"end": 15919,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15888,
											"end": 15912,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 15906,
											"end": 15911,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15888,
											"end": 15912,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 15888,
											"end": 15912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15888,
											"end": 15912,
											"name": "tag",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 15888,
											"end": 15912,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15883,
											"end": 15886,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15876,
											"end": 15913,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15811,
											"end": 15919,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15811,
											"end": 15919,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15811,
											"end": 15919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15925,
											"end": 16104,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 15925,
											"end": 16104,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15994,
											"end": 16004,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16015,
											"end": 16061,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 16057,
											"end": 16060,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16049,
											"end": 16055,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16015,
											"end": 16061,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 16015,
											"end": 16061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16015,
											"end": 16061,
											"name": "tag",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 16015,
											"end": 16061,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16093,
											"end": 16097,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16088,
											"end": 16091,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16084,
											"end": 16098,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16070,
											"end": 16098,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16070,
											"end": 16098,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15925,
											"end": 16104,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15925,
											"end": 16104,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15925,
											"end": 16104,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15925,
											"end": 16104,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15925,
											"end": 16104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16110,
											"end": 16223,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 16110,
											"end": 16223,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16180,
											"end": 16184,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16212,
											"end": 16216,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16207,
											"end": 16210,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16203,
											"end": 16217,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16195,
											"end": 16217,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16195,
											"end": 16217,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16110,
											"end": 16223,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16110,
											"end": 16223,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16110,
											"end": 16223,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16110,
											"end": 16223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16259,
											"end": 16991,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 16259,
											"end": 16991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16378,
											"end": 16381,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16407,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 16455,
											"end": 16460,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16407,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 16407,
											"end": 16461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16407,
											"end": 16461,
											"name": "tag",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 16407,
											"end": 16461,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16477,
											"end": 16563,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 16556,
											"end": 16562,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16551,
											"end": 16554,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16477,
											"end": 16563,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 16477,
											"end": 16563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16477,
											"end": 16563,
											"name": "tag",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 16477,
											"end": 16563,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16470,
											"end": 16563,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 16470,
											"end": 16563,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16587,
											"end": 16643,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 16637,
											"end": 16642,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16587,
											"end": 16643,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 16587,
											"end": 16643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16587,
											"end": 16643,
											"name": "tag",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 16587,
											"end": 16643,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16666,
											"end": 16673,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16697,
											"end": 16698,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16682,
											"end": 16966,
											"name": "tag",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 16682,
											"end": 16966,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16707,
											"end": 16713,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16705,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16701,
											"end": 16714,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 16682,
											"end": 16966,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16682,
											"end": 16966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 16682,
											"end": 16966,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16783,
											"end": 16789,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16777,
											"end": 16790,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 16810,
											"end": 16873,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 16869,
											"end": 16872,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 16854,
											"end": 16867,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16810,
											"end": 16873,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 16810,
											"end": 16873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16810,
											"end": 16873,
											"name": "tag",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 16810,
											"end": 16873,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16803,
											"end": 16873,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 16803,
											"end": 16873,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16896,
											"end": 16956,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 16949,
											"end": 16955,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16896,
											"end": 16956,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 16896,
											"end": 16956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16896,
											"end": 16956,
											"name": "tag",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 16896,
											"end": 16956,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16886,
											"end": 16956,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16886,
											"end": 16956,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16742,
											"end": 16966,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16729,
											"end": 16730,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 16726,
											"end": 16727,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16722,
											"end": 16731,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16717,
											"end": 16731,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16717,
											"end": 16731,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16682,
											"end": 16966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 16682,
											"end": 16966,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16682,
											"end": 16966,
											"name": "tag",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 16682,
											"end": 16966,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16686,
											"end": 16700,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16982,
											"end": 16985,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16975,
											"end": 16985,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 16975,
											"end": 16985,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16383,
											"end": 16991,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16383,
											"end": 16991,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16383,
											"end": 16991,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16259,
											"end": 16991,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16259,
											"end": 16991,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16259,
											"end": 16991,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16259,
											"end": 16991,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16259,
											"end": 16991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16997,
											"end": 17115,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 16997,
											"end": 17115,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17084,
											"end": 17108,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 17102,
											"end": 17107,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17084,
											"end": 17108,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 17084,
											"end": 17108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17084,
											"end": 17108,
											"name": "tag",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 17084,
											"end": 17108,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17079,
											"end": 17082,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17072,
											"end": 17109,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16997,
											"end": 17115,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16997,
											"end": 17115,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16997,
											"end": 17115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17121,
											"end": 17952,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 17121,
											"end": 17952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17384,
											"end": 17388,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17422,
											"end": 17425,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 17411,
											"end": 17420,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17407,
											"end": 17426,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17399,
											"end": 17426,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17399,
											"end": 17426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17436,
											"end": 17507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 17504,
											"end": 17505,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17493,
											"end": 17502,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17489,
											"end": 17506,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17480,
											"end": 17486,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 17436,
											"end": 17507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 17436,
											"end": 17507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17436,
											"end": 17507,
											"name": "tag",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 17436,
											"end": 17507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17517,
											"end": 17597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 17593,
											"end": 17595,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17582,
											"end": 17591,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17578,
											"end": 17596,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17569,
											"end": 17575,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 17517,
											"end": 17597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 17517,
											"end": 17597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17517,
											"end": 17597,
											"name": "tag",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 17517,
											"end": 17597,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17644,
											"end": 17653,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17638,
											"end": 17642,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17634,
											"end": 17654,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 17629,
											"end": 17631,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17618,
											"end": 17627,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17614,
											"end": 17632,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17607,
											"end": 17655,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17672,
											"end": 17780,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 17775,
											"end": 17779,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17766,
											"end": 17772,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 17672,
											"end": 17780,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 17672,
											"end": 17780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17672,
											"end": 17780,
											"name": "tag",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 17672,
											"end": 17780,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17664,
											"end": 17780,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17664,
											"end": 17780,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17790,
											"end": 17862,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 17858,
											"end": 17860,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 17847,
											"end": 17856,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17843,
											"end": 17861,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17834,
											"end": 17840,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 17790,
											"end": 17862,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 17790,
											"end": 17862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17790,
											"end": 17862,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 17790,
											"end": 17862,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17872,
											"end": 17945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 17940,
											"end": 17943,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 17929,
											"end": 17938,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17925,
											"end": 17944,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17916,
											"end": 17922,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 17872,
											"end": 17945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 17872,
											"end": 17945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17872,
											"end": 17945,
											"name": "tag",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 17872,
											"end": 17945,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17121,
											"end": 17952,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 17121,
											"end": 17952,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 17121,
											"end": 17952,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17121,
											"end": 17952,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17121,
											"end": 17952,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17121,
											"end": 17952,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17121,
											"end": 17952,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17121,
											"end": 17952,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17121,
											"end": 17952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17958,
											"end": 18075,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 17958,
											"end": 18075,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18067,
											"end": 18068,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18064,
											"end": 18065,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18069,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 18081,
											"end": 18183,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 18081,
											"end": 18183,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18122,
											"end": 18128,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18173,
											"end": 18175,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 18169,
											"end": 18176,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 18164,
											"end": 18166,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 18157,
											"end": 18162,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18153,
											"end": 18167,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18149,
											"end": 18177,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 18139,
											"end": 18177,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18139,
											"end": 18177,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18081,
											"end": 18183,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18081,
											"end": 18183,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18081,
											"end": 18183,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18081,
											"end": 18183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18189,
											"end": 18470,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 18189,
											"end": 18470,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18272,
											"end": 18299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 18294,
											"end": 18298,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18272,
											"end": 18299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 18272,
											"end": 18299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18272,
											"end": 18299,
											"name": "tag",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 18272,
											"end": 18299,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18264,
											"end": 18270,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18260,
											"end": 18300,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18402,
											"end": 18408,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18390,
											"end": 18400,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18387,
											"end": 18409,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 18366,
											"end": 18384,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18354,
											"end": 18364,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18351,
											"end": 18385,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 18348,
											"end": 18410,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 18345,
											"end": 18433,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 18345,
											"end": 18433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 18345,
											"end": 18433,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 18413,
											"end": 18431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 18413,
											"end": 18431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 18413,
											"end": 18431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18413,
											"end": 18431,
											"name": "tag",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 18413,
											"end": 18431,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18345,
											"end": 18433,
											"name": "tag",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 18345,
											"end": 18433,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18453,
											"end": 18463,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 18449,
											"end": 18451,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 18442,
											"end": 18464,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18232,
											"end": 18470,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18189,
											"end": 18470,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18189,
											"end": 18470,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18189,
											"end": 18470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18476,
											"end": 18605,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 18476,
											"end": 18605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18510,
											"end": 18516,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18537,
											"end": 18557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 18537,
											"end": 18557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 18537,
											"end": 18557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18537,
											"end": 18557,
											"name": "tag",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 18537,
											"end": 18557,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18527,
											"end": 18557,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18527,
											"end": 18557,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18566,
											"end": 18599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 18594,
											"end": 18598,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18586,
											"end": 18592,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18566,
											"end": 18599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 18566,
											"end": 18599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18566,
											"end": 18599,
											"name": "tag",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 18566,
											"end": 18599,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18476,
											"end": 18605,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18476,
											"end": 18605,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18476,
											"end": 18605,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18476,
											"end": 18605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18611,
											"end": 18922,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 18611,
											"end": 18922,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18688,
											"end": 18692,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18778,
											"end": 18796,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18770,
											"end": 18776,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18767,
											"end": 18797,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 18764,
											"end": 18820,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 18764,
											"end": 18820,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 18764,
											"end": 18820,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 18800,
											"end": 18818,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 18800,
											"end": 18818,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 18800,
											"end": 18818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18800,
											"end": 18818,
											"name": "tag",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 18800,
											"end": 18818,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18764,
											"end": 18820,
											"name": "tag",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 18764,
											"end": 18820,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18850,
											"end": 18854,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18842,
											"end": 18848,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18838,
											"end": 18855,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 18830,
											"end": 18855,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18830,
											"end": 18855,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18910,
											"end": 18914,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18904,
											"end": 18908,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18900,
											"end": 18915,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18892,
											"end": 18915,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18892,
											"end": 18915,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18611,
											"end": 18922,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18611,
											"end": 18922,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18611,
											"end": 18922,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18611,
											"end": 18922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18928,
											"end": 19045,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 18928,
											"end": 19045,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19037,
											"end": 19038,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19034,
											"end": 19035,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 19027,
											"end": 19039,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 19051,
											"end": 19194,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 19051,
											"end": 19194,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19108,
											"end": 19113,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19139,
											"end": 19145,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19133,
											"end": 19146,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 19124,
											"end": 19146,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19124,
											"end": 19146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19155,
											"end": 19188,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 19182,
											"end": 19187,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19155,
											"end": 19188,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 19155,
											"end": 19188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19155,
											"end": 19188,
											"name": "tag",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 19155,
											"end": 19188,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19051,
											"end": 19194,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 19051,
											"end": 19194,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19051,
											"end": 19194,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19051,
											"end": 19194,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19051,
											"end": 19194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19217,
											"end": 19949,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 19217,
											"end": 19949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19324,
											"end": 19329,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19349,
											"end": 19430,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 19365,
											"end": 19429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 19422,
											"end": 19428,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19365,
											"end": 19429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 19365,
											"end": 19429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19365,
											"end": 19429,
											"name": "tag",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 19365,
											"end": 19429,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19349,
											"end": 19430,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 19349,
											"end": 19430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19349,
											"end": 19430,
											"name": "tag",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 19349,
											"end": 19430,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19340,
											"end": 19430,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19340,
											"end": 19430,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19450,
											"end": 19455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 19479,
											"end": 19485,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19472,
											"end": 19477,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19465,
											"end": 19486,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19513,
											"end": 19517,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19506,
											"end": 19511,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19502,
											"end": 19518,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19495,
											"end": 19518,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19495,
											"end": 19518,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19566,
											"end": 19570,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19558,
											"end": 19564,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19554,
											"end": 19571,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 19546,
											"end": 19552,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19542,
											"end": 19572,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19595,
											"end": 19598,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 19587,
											"end": 19593,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19584,
											"end": 19599,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 19581,
											"end": 19703,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 19581,
											"end": 19703,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 19581,
											"end": 19703,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 19614,
											"end": 19693,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 19614,
											"end": 19693,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 19614,
											"end": 19693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19614,
											"end": 19693,
											"name": "tag",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 19614,
											"end": 19693,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19581,
											"end": 19703,
											"name": "tag",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 19581,
											"end": 19703,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19729,
											"end": 19735,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19712,
											"end": 19943,
											"name": "tag",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 19712,
											"end": 19943,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19746,
											"end": 19752,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19741,
											"end": 19744,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19738,
											"end": 19753,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 19712,
											"end": 19943,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 19712,
											"end": 19943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 19712,
											"end": 19943,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 19821,
											"end": 19824,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 19850,
											"end": 19898,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 19894,
											"end": 19897,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 19882,
											"end": 19892,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19850,
											"end": 19898,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 19850,
											"end": 19898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19850,
											"end": 19898,
											"name": "tag",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 19850,
											"end": 19898,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19845,
											"end": 19848,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19838,
											"end": 19899,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19928,
											"end": 19932,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19923,
											"end": 19926,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19919,
											"end": 19933,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19912,
											"end": 19933,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 19912,
											"end": 19933,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19788,
											"end": 19943,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19772,
											"end": 19776,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19767,
											"end": 19770,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19763,
											"end": 19777,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19756,
											"end": 19777,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19756,
											"end": 19777,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19712,
											"end": 19943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 19712,
											"end": 19943,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19712,
											"end": 19943,
											"name": "tag",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 19712,
											"end": 19943,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19716,
											"end": 19737,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19330,
											"end": 19949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19330,
											"end": 19949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19217,
											"end": 19949,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 19217,
											"end": 19949,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 19217,
											"end": 19949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19217,
											"end": 19949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19217,
											"end": 19949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19217,
											"end": 19949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19972,
											"end": 20357,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 19972,
											"end": 20357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20054,
											"end": 20059,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20103,
											"end": 20106,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20096,
											"end": 20100,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 20088,
											"end": 20094,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20084,
											"end": 20101,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20080,
											"end": 20107,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 20070,
											"end": 20192,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 20070,
											"end": 20192,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 20111,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 20111,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 20111,
											"end": 20190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20111,
											"end": 20190,
											"name": "tag",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 20111,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20070,
											"end": 20192,
											"name": "tag",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 20070,
											"end": 20192,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20221,
											"end": 20227,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20215,
											"end": 20228,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 20246,
											"end": 20351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 20347,
											"end": 20350,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 20339,
											"end": 20345,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20332,
											"end": 20336,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20324,
											"end": 20330,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 20320,
											"end": 20337,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20246,
											"end": 20351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 20246,
											"end": 20351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20246,
											"end": 20351,
											"name": "tag",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 20246,
											"end": 20351,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20237,
											"end": 20351,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20237,
											"end": 20351,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20060,
											"end": 20357,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19972,
											"end": 20357,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 19972,
											"end": 20357,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19972,
											"end": 20357,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19972,
											"end": 20357,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19972,
											"end": 20357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20363,
											"end": 20917,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 20363,
											"end": 20917,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20458,
											"end": 20464,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20507,
											"end": 20509,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20495,
											"end": 20504,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20486,
											"end": 20493,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 20482,
											"end": 20505,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 20478,
											"end": 20510,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 20475,
											"end": 20594,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 20475,
											"end": 20594,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 20475,
											"end": 20594,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 20513,
											"end": 20592,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 20513,
											"end": 20592,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 20513,
											"end": 20592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20513,
											"end": 20592,
											"name": "tag",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 20513,
											"end": 20592,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20475,
											"end": 20594,
											"name": "tag",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 20475,
											"end": 20594,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20654,
											"end": 20655,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20643,
											"end": 20652,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20639,
											"end": 20656,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20633,
											"end": 20657,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 20684,
											"end": 20702,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20676,
											"end": 20682,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20673,
											"end": 20703,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 20670,
											"end": 20787,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 20670,
											"end": 20787,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 20670,
											"end": 20787,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 20706,
											"end": 20785,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 20706,
											"end": 20785,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 20706,
											"end": 20785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20706,
											"end": 20785,
											"name": "tag",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 20706,
											"end": 20785,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20670,
											"end": 20787,
											"name": "tag",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 20670,
											"end": 20787,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20811,
											"end": 20900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 20892,
											"end": 20899,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 20883,
											"end": 20889,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20872,
											"end": 20881,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 20868,
											"end": 20890,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20811,
											"end": 20900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 20811,
											"end": 20900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20811,
											"end": 20900,
											"name": "tag",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 20811,
											"end": 20900,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20801,
											"end": 20900,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20801,
											"end": 20900,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20604,
											"end": 20910,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20363,
											"end": 20917,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 20363,
											"end": 20917,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20363,
											"end": 20917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20363,
											"end": 20917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20363,
											"end": 20917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20923,
											"end": 21255,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 20923,
											"end": 21255,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21044,
											"end": 21048,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21082,
											"end": 21084,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 21071,
											"end": 21080,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21067,
											"end": 21085,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21059,
											"end": 21085,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21059,
											"end": 21085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21095,
											"end": 21166,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 21163,
											"end": 21164,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21152,
											"end": 21161,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21148,
											"end": 21165,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21139,
											"end": 21145,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 21095,
											"end": 21166,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 21095,
											"end": 21166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21095,
											"end": 21166,
											"name": "tag",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 21095,
											"end": 21166,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21176,
											"end": 21248,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 21244,
											"end": 21246,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21233,
											"end": 21242,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21229,
											"end": 21247,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21220,
											"end": 21226,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 21176,
											"end": 21248,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 21176,
											"end": 21248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21176,
											"end": 21248,
											"name": "tag",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 21176,
											"end": 21248,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20923,
											"end": 21255,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 20923,
											"end": 21255,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 20923,
											"end": 21255,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20923,
											"end": 21255,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20923,
											"end": 21255,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20923,
											"end": 21255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21261,
											"end": 21612,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 21261,
											"end": 21612,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21331,
											"end": 21337,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21380,
											"end": 21382,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21368,
											"end": 21377,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21359,
											"end": 21366,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 21355,
											"end": 21378,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 21351,
											"end": 21383,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 21348,
											"end": 21467,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 21348,
											"end": 21467,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 21348,
											"end": 21467,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 21386,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 21386,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 21386,
											"end": 21465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21386,
											"end": 21465,
											"name": "tag",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 21386,
											"end": 21465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21348,
											"end": 21467,
											"name": "tag",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 21348,
											"end": 21467,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21506,
											"end": 21507,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21531,
											"end": 21595,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 21587,
											"end": 21594,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 21578,
											"end": 21584,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21567,
											"end": 21576,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 21563,
											"end": 21585,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21531,
											"end": 21595,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 21531,
											"end": 21595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21531,
											"end": 21595,
											"name": "tag",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 21531,
											"end": 21595,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21521,
											"end": 21595,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21521,
											"end": 21595,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21477,
											"end": 21605,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21261,
											"end": 21612,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 21261,
											"end": 21612,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21261,
											"end": 21612,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21261,
											"end": 21612,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21261,
											"end": 21612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21618,
											"end": 22060,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 21618,
											"end": 22060,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21767,
											"end": 21771,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21805,
											"end": 21807,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 21794,
											"end": 21803,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21790,
											"end": 21808,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21782,
											"end": 21808,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21782,
											"end": 21808,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21818,
											"end": 21889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 21886,
											"end": 21887,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21875,
											"end": 21884,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21871,
											"end": 21888,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21862,
											"end": 21868,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 21818,
											"end": 21889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 21818,
											"end": 21889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21818,
											"end": 21889,
											"name": "tag",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 21818,
											"end": 21889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21899,
											"end": 21971,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 21967,
											"end": 21969,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21956,
											"end": 21965,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21952,
											"end": 21970,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21943,
											"end": 21949,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 21899,
											"end": 21971,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 21899,
											"end": 21971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21899,
											"end": 21971,
											"name": "tag",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 21899,
											"end": 21971,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21981,
											"end": 22053,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 22049,
											"end": 22051,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 22038,
											"end": 22047,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22034,
											"end": 22052,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22025,
											"end": 22031,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 21981,
											"end": 22053,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 21981,
											"end": 22053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21981,
											"end": 22053,
											"name": "tag",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 21981,
											"end": 22053,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21618,
											"end": 22060,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 21618,
											"end": 22060,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 21618,
											"end": 22060,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21618,
											"end": 22060,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21618,
											"end": 22060,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21618,
											"end": 22060,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21618,
											"end": 22060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22066,
											"end": 22398,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 22066,
											"end": 22398,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22187,
											"end": 22191,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22225,
											"end": 22227,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 22214,
											"end": 22223,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22210,
											"end": 22228,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22202,
											"end": 22228,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22202,
											"end": 22228,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22238,
											"end": 22309,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 22306,
											"end": 22307,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22295,
											"end": 22304,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22291,
											"end": 22308,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22282,
											"end": 22288,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 22238,
											"end": 22309,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 22238,
											"end": 22309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22238,
											"end": 22309,
											"name": "tag",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 22238,
											"end": 22309,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22319,
											"end": 22391,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 22387,
											"end": 22389,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 22376,
											"end": 22385,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22372,
											"end": 22390,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22363,
											"end": 22369,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 22319,
											"end": 22391,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 22319,
											"end": 22391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22319,
											"end": 22391,
											"name": "tag",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 22319,
											"end": 22391,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22066,
											"end": 22398,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 22066,
											"end": 22398,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 22066,
											"end": 22398,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22066,
											"end": 22398,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22066,
											"end": 22398,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22066,
											"end": 22398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22404,
											"end": 22494,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 22404,
											"end": 22494,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22438,
											"end": 22445,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22481,
											"end": 22486,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22474,
											"end": 22487,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 22467,
											"end": 22488,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 22456,
											"end": 22488,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22456,
											"end": 22488,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22404,
											"end": 22494,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22404,
											"end": 22494,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22404,
											"end": 22494,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22404,
											"end": 22494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22500,
											"end": 22616,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 22500,
											"end": 22616,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 22585,
											"end": 22590,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 22570,
											"end": 22591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22591,
											"name": "tag",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 22570,
											"end": 22591,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22563,
											"end": 22568,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22560,
											"end": 22592,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 22550,
											"end": 22610,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 22550,
											"end": 22610,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 22606,
											"end": 22607,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22603,
											"end": 22604,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 22596,
											"end": 22608,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 22550,
											"end": 22610,
											"name": "tag",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 22550,
											"end": 22610,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22500,
											"end": 22616,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22500,
											"end": 22616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22622,
											"end": 22759,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 22622,
											"end": 22759,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22676,
											"end": 22681,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22707,
											"end": 22713,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22701,
											"end": 22714,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 22692,
											"end": 22714,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22692,
											"end": 22714,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22723,
											"end": 22753,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 22747,
											"end": 22752,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22723,
											"end": 22753,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 22723,
											"end": 22753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22723,
											"end": 22753,
											"name": "tag",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 22723,
											"end": 22753,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22622,
											"end": 22759,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 22622,
											"end": 22759,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22622,
											"end": 22759,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22622,
											"end": 22759,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22622,
											"end": 22759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22765,
											"end": 23110,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 22765,
											"end": 23110,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22832,
											"end": 22838,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22881,
											"end": 22883,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 22869,
											"end": 22878,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22860,
											"end": 22867,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 22856,
											"end": 22879,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 22852,
											"end": 22884,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 22849,
											"end": 22968,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 22849,
											"end": 22968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 22849,
											"end": 22968,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 22887,
											"end": 22966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "489"
										},
										{
											"begin": 22887,
											"end": 22966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 22887,
											"end": 22966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22887,
											"end": 22966,
											"name": "tag",
											"source": 11,
											"value": "489"
										},
										{
											"begin": 22887,
											"end": 22966,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22849,
											"end": 22968,
											"name": "tag",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 22849,
											"end": 22968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23007,
											"end": 23008,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23032,
											"end": 23093,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 23085,
											"end": 23092,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 23076,
											"end": 23082,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23065,
											"end": 23074,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 23061,
											"end": 23083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23032,
											"end": 23093,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 23032,
											"end": 23093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23032,
											"end": 23093,
											"name": "tag",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 23032,
											"end": 23093,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23022,
											"end": 23093,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 23022,
											"end": 23093,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22978,
											"end": 23103,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22765,
											"end": 23110,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 22765,
											"end": 23110,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22765,
											"end": 23110,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22765,
											"end": 23110,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22765,
											"end": 23110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23116,
											"end": 23338,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 23116,
											"end": 23338,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23209,
											"end": 23213,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23247,
											"end": 23249,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 23236,
											"end": 23245,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23232,
											"end": 23250,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23224,
											"end": 23250,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23224,
											"end": 23250,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23260,
											"end": 23331,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 23328,
											"end": 23329,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23317,
											"end": 23326,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 23313,
											"end": 23330,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23304,
											"end": 23310,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 23260,
											"end": 23331,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 23260,
											"end": 23331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23260,
											"end": 23331,
											"name": "tag",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 23260,
											"end": 23331,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23116,
											"end": 23338,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 23116,
											"end": 23338,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 23116,
											"end": 23338,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23116,
											"end": 23338,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23116,
											"end": 23338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23344,
											"end": 23692,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 23344,
											"end": 23692,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23473,
											"end": 23477,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23511,
											"end": 23513,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 23500,
											"end": 23509,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23496,
											"end": 23514,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23488,
											"end": 23514,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23488,
											"end": 23514,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23524,
											"end": 23595,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 23592,
											"end": 23593,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23581,
											"end": 23590,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 23577,
											"end": 23594,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23568,
											"end": 23574,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 23524,
											"end": 23595,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 23524,
											"end": 23595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23524,
											"end": 23595,
											"name": "tag",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 23524,
											"end": 23595,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23605,
											"end": 23685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "495"
										},
										{
											"begin": 23681,
											"end": 23683,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 23670,
											"end": 23679,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 23666,
											"end": 23684,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23657,
											"end": 23663,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 23605,
											"end": 23685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 23605,
											"end": 23685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23605,
											"end": 23685,
											"name": "tag",
											"source": 11,
											"value": "495"
										},
										{
											"begin": 23605,
											"end": 23685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23344,
											"end": 23692,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 23344,
											"end": 23692,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 23344,
											"end": 23692,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23344,
											"end": 23692,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23344,
											"end": 23692,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23344,
											"end": 23692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23698,
											"end": 23796,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 23698,
											"end": 23796,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23749,
											"end": 23755,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23783,
											"end": 23788,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23777,
											"end": 23789,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 23767,
											"end": 23789,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23767,
											"end": 23789,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23698,
											"end": 23796,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 23698,
											"end": 23796,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23698,
											"end": 23796,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23698,
											"end": 23796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23802,
											"end": 23949,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 23802,
											"end": 23949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23903,
											"end": 23914,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23940,
											"end": 23943,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23925,
											"end": 23943,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23925,
											"end": 23943,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23802,
											"end": 23949,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 23802,
											"end": 23949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 23802,
											"end": 23949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23802,
											"end": 23949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23802,
											"end": 23949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23955,
											"end": 24201,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 23955,
											"end": 24201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24036,
											"end": 24037,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24046,
											"end": 24159,
											"name": "tag",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 24046,
											"end": 24159,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24060,
											"end": 24066,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 24057,
											"end": 24058,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 24054,
											"end": 24067,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 24046,
											"end": 24159,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 24046,
											"end": 24159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "501"
										},
										{
											"begin": 24046,
											"end": 24159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 24145,
											"end": 24146,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 24140,
											"end": 24143,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24136,
											"end": 24147,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24130,
											"end": 24148,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 24126,
											"end": 24127,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 24121,
											"end": 24124,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 24117,
											"end": 24128,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24110,
											"end": 24149,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 24082,
											"end": 24084,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 24079,
											"end": 24080,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 24075,
											"end": 24085,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24070,
											"end": 24085,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24070,
											"end": 24085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24046,
											"end": 24159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 24046,
											"end": 24159,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24046,
											"end": 24159,
											"name": "tag",
											"source": 11,
											"value": "501"
										},
										{
											"begin": 24046,
											"end": 24159,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24193,
											"end": 24194,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24184,
											"end": 24190,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 24179,
											"end": 24182,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 24175,
											"end": 24191,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24168,
											"end": 24195,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 24017,
											"end": 24201,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23955,
											"end": 24201,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23955,
											"end": 24201,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23955,
											"end": 24201,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23955,
											"end": 24201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24207,
											"end": 24593,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 24207,
											"end": 24593,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24311,
											"end": 24314,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24339,
											"end": 24377,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 24371,
											"end": 24376,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24339,
											"end": 24377,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 24339,
											"end": 24377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24339,
											"end": 24377,
											"name": "tag",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 24339,
											"end": 24377,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24393,
											"end": 24481,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "504"
										},
										{
											"begin": 24474,
											"end": 24480,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 24469,
											"end": 24472,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 24393,
											"end": 24481,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 24393,
											"end": 24481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24393,
											"end": 24481,
											"name": "tag",
											"source": 11,
											"value": "504"
										},
										{
											"begin": 24393,
											"end": 24481,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24386,
											"end": 24481,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 24386,
											"end": 24481,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24490,
											"end": 24555,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 24548,
											"end": 24554,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 24543,
											"end": 24546,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 24536,
											"end": 24540,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 24529,
											"end": 24534,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 24525,
											"end": 24541,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24490,
											"end": 24555,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 24490,
											"end": 24555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24490,
											"end": 24555,
											"name": "tag",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 24490,
											"end": 24555,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24580,
											"end": 24586,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 24575,
											"end": 24578,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 24571,
											"end": 24587,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24564,
											"end": 24587,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24564,
											"end": 24587,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24315,
											"end": 24593,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24207,
											"end": 24593,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 24207,
											"end": 24593,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24207,
											"end": 24593,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24207,
											"end": 24593,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24207,
											"end": 24593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24599,
											"end": 24870,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 24599,
											"end": 24870,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24729,
											"end": 24732,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24751,
											"end": 24844,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 24840,
											"end": 24843,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24831,
											"end": 24837,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 24751,
											"end": 24844,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 24751,
											"end": 24844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24751,
											"end": 24844,
											"name": "tag",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 24751,
											"end": 24844,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24744,
											"end": 24844,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24744,
											"end": 24844,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24861,
											"end": 24864,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 24854,
											"end": 24864,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24854,
											"end": 24864,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24599,
											"end": 24870,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 24599,
											"end": 24870,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24599,
											"end": 24870,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24599,
											"end": 24870,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24599,
											"end": 24870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
								"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
								"src/DollarCostAveraging.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"createPlan(uint256,uint256)": "b197df54",
							"getAllowance(address)": "eb5a662e",
							"nonce()": "affed0e0",
							"plans(address)": "86d86d84",
							"startPlan()": "a63661a5",
							"stopPlan()": "d930da60",
							"triggerPlan(address)": "c440fa0f",
							"uniswapRouter()": "735de9f7",
							"updatePlan(uint256,uint256)": "00e1801c",
							"usdt()": "2f48ab7d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"frequency\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PlanCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"PlanStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"PlanStoped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethReceived\",\"type\":\"uint256\"}],\"name\":\"PlanTriggered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"frequency\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PlanUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"frequency\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"createPlan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"plans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"frequency\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastTriggeredAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPlan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopPlan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"triggerPlan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapRouter\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"frequency\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"updatePlan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/DollarCostAveraging.sol\":\"DollarCostAveraging\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]},\"src/DollarCostAveraging.sol\":{\"keccak256\":\"0x5e798457d4730377b20c4be70888a784616d6636afea61acead4e7fa4940cf7c\",\"urls\":[\"bzz-raw://86f0bd32bbc8bc5eba7d72859f910f4a201b6a64599418b90ecaa63a9c98b7b6\",\"dweb:/ipfs/QmVMzRYNbbbS1rBVYxMkos1QhfXi9psE7BjvzLcnRk6gGn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1791,
								"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
								"label": "nonce",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1807,
								"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
								"label": "plans",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Plan)1802_storage)"
							},
							{
								"astId": 1810,
								"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
								"label": "usdt",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(ERC20)651"
							},
							{
								"astId": 1813,
								"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
								"label": "uniswapRouter",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IUniswapV2Router02)1752"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(ERC20)651": {
								"encoding": "inplace",
								"label": "contract ERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IUniswapV2Router02)1752": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Plan)1802_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DollarCostAveraging.Plan)",
								"numberOfBytes": "32",
								"value": "t_struct(Plan)1802_storage"
							},
							"t_struct(Plan)1802_storage": {
								"encoding": "inplace",
								"label": "struct DollarCostAveraging.Plan",
								"members": [
									{
										"astId": 1793,
										"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
										"label": "index",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1795,
										"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
										"label": "frequency",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1797,
										"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
										"label": "amount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1799,
										"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
										"label": "status",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1801,
										"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
										"label": "lastTriggeredAt",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> src/DollarCostAveraging.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "src/DollarCostAveraging.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1356
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 1357,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1356,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1356,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								1356
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							791
						]
					},
					"id": 792,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:4",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 791,
							"linearizedBaseContracts": [
								791
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:4",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3022:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3045:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3070:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3093:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3119:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 768,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3136:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 770,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3155:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 772,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:4"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:4"
									},
									"scope": 791,
									"src": "2997:183:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:4",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 784,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "3501:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:4"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "3539:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:4"
									},
									"scope": 791,
									"src": "3485:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:4",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 790,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:4"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "3791:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 787,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:4"
									},
									"scope": 791,
									"src": "3740:60:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 792,
							"src": "2113:1689:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1334
						],
						"IERC20": [
							729
						],
						"IERC20Permit": [
							791
						],
						"SafeERC20": [
							1081
						]
					},
					"id": 1082,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 793,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 795,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1082,
							"sourceUnit": 730,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 794,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 797,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1082,
							"sourceUnit": 792,
							"src": "179:60:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 796,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 791,
										"src": "187:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 799,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1082,
							"sourceUnit": 1335,
							"src": "240:51:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 798,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1334,
										"src": "248:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 800,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1081,
							"linearizedBaseContracts": [
								1081
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 803,
									"libraryName": {
										"id": 801,
										"name": "Address",
										"nameLocations": [
											"781:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1334,
										"src": "781:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:5",
									"typeName": {
										"id": 802,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:5",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 808,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "907:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:5"
									},
									"src": "876:46:5"
								},
								{
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 817,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "1043:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "1060:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "1086:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:5"
									},
									"src": "1004:109:5"
								},
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "1375:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 829,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "1405:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 832,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "1427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 696,
																	"src": "1427:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 834,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 823,
																			"src": "1444:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 835,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 825,
																			"src": "1448:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 836,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 830,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 828,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "1385:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 839,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:5"
											}
										]
									},
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "1325:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 820,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 819,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "1325:6:5"
													},
													"referencedDeclaration": 729,
													"src": "1325:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "1339:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "1351:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:5"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:5"
									},
									"scope": 1081,
									"src": "1303:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "1792:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 855,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "1822:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 858,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 845,
																		"src": "1844:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 728,
																	"src": "1844:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 860,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 847,
																			"src": "1865:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 861,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 849,
																			"src": "1871:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 862,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 851,
																			"src": "1875:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 863,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 856,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 854,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "1802:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:5"
											}
										]
									},
									"documentation": {
										"id": 842,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1728:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 844,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 843,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "1728:6:5"
													},
													"referencedDeclaration": 729,
													"src": "1728:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1742:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1756:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1768:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:5"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:5"
									},
									"scope": 1081,
									"src": "1702:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "2167:139:5",
										"statements": [
											{
												"assignments": [
													880
												],
												"declarations": [
													{
														"constant": false,
														"id": 880,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 898,
														"src": "2177:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 879,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 889,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 885,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1081",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1081",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 883,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 887,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "2231:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 881,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "2200:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 706,
														"src": "2200:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 891,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "2262:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 892,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "2269:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 893,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "2278:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 894,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "2293:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 890,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "2249:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:5"
											}
										]
									},
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "2112:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 871,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 870,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "2112:6:5"
													},
													"referencedDeclaration": 729,
													"src": "2112:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "2126:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "2143:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:5"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:5"
									},
									"scope": 1081,
									"src": "2081:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "2607:370:5",
										"statements": [
											{
												"id": 940,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:5",
												"statements": [
													{
														"assignments": [
															911
														],
														"declarations": [
															{
																"constant": false,
																"id": 911,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 940,
																"src": "2641:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 910,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 920,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 916,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1081",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1081",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 914,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 918,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "2699:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 912,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "2668:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 706,
																"src": "2668:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 921,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 911,
																"src": "2725:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 922,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "2744:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 931,
														"nodeType": "IfStatement",
														"src": "2721:160:5",
														"trueBody": {
															"id": 930,
															"nodeType": "Block",
															"src": "2763:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 925,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 905,
																				"src": "2821:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 926,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 911,
																				"src": "2830:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 927,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 907,
																				"src": "2848:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 924,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 817,
																			"src": "2788:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 929,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 933,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "2907:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 934,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "2914:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 935,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 911,
																		"src": "2923:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 936,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 907,
																		"src": "2942:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 932,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "2894:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 939,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "2540:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 902,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 901,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "2540:6:5"
													},
													"referencedDeclaration": 729,
													"src": "2540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "2554:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "2571:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:5"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:5"
									},
									"scope": 1081,
									"src": "2509:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "3373:303:5",
										"statements": [
											{
												"assignments": [
													954
												],
												"declarations": [
													{
														"constant": false,
														"id": 954,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 988,
														"src": "3383:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 953,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 963,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 957,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "3426:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 716,
															"src": "3426:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 959,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "3442:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 960,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "3451:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 961,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 955,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:5"
											},
											{
												"condition": {
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 965,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "3498:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 966,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 954,
																"src": "3505:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 964,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "3474:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 987,
												"nodeType": "IfStatement",
												"src": "3469:201:5",
												"trueBody": {
													"id": 986,
													"nodeType": "Block",
													"src": "3520:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 970,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 946,
																		"src": "3554:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 973,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 946,
																					"src": "3576:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$729",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 716,
																				"src": "3576:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 975,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 948,
																						"src": "3592:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 976,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 977,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 971,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 969,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1031,
																	"src": "3534:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 980,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 982,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 946,
																		"src": "3639:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 983,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "3646:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 981,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1031,
																	"src": "3619:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 985,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "3318:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 945,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 944,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "3318:6:5"
													},
													"referencedDeclaration": 729,
													"src": "3318:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "3332:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "3349:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:5"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:5"
									},
									"scope": 1081,
									"src": "3296:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "4129:559:5",
										"statements": [
											{
												"assignments": [
													999
												],
												"declarations": [
													{
														"constant": false,
														"id": 999,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1030,
														"src": "4478:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 998,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1007,
												"initialValue": {
													"arguments": [
														{
															"id": 1005,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "4532:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1002,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "4512:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1000,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:5",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1155,
														"src": "4504:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1008,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 999,
																"src": "4551:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 1014,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 999,
																	"src": "4589:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1016,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 1015,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:5",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1017,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 1012,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:5",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1029,
												"nodeType": "IfStatement",
												"src": "4547:135:5",
												"trueBody": {
													"id": 1028,
													"nodeType": "Block",
													"src": "4610:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1024,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 993,
																				"src": "4664:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$729",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$729",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1022,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1021,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "4631:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1027,
															"nodeType": "RevertStatement",
															"src": "4624:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "4088:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 992,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 991,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "4088:6:5"
													},
													"referencedDeclaration": 729,
													"src": "4088:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "4102:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 994,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:5"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:5"
									},
									"scope": 1081,
									"src": "4059:629:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "5278:489:5",
										"statements": [
											{
												"assignments": [
													1043,
													1045
												],
												"declarations": [
													{
														"constant": false,
														"id": 1043,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1079,
														"src": "5574:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1042,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1045,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1079,
														"src": "5588:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1044,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1053,
												"initialValue": {
													"arguments": [
														{
															"id": 1051,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "5635:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1048,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1035,
																	"src": "5623:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1046,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:5",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1054,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "5657:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1055,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1045,
																				"src": "5669:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:5",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1061,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1045,
																				"src": "5706:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1063,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1062,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1064,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1059,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:5",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1067,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1071,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1035,
																			"src": "5738:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$729",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$729",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1069,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1041,
												"id": 1078,
												"nodeType": "Return",
												"src": "5650:110:5"
											}
										]
									},
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "5222:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1034,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1033,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "5222:6:5"
													},
													"referencedDeclaration": 729,
													"src": "5222:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "5236:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1036,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:5"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "5272:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1039,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:5"
									},
									"scope": 1081,
									"src": "5189:578:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1082,
							"src": "751:5018:5",
							"usedErrors": [
								808,
								817
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1334
						]
					},
					"id": 1335,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1083,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1084,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1334,
							"linearizedBaseContracts": [
								1334
							],
							"name": "Address",
							"nameLocation": "203:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:6",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1089,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "349:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:6"
									},
									"src": "316:50:6"
								},
								{
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:6",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1094,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "475:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:6"
									},
									"src": "452:39:6"
								},
								{
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:6",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1097,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:6"
									},
									"src": "591:24:6"
								},
								{
									"body": {
										"id": 1137,
										"nodeType": "Block",
										"src": "1602:260:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1107,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1334",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1334",
																		"typeString": "library Address"
																	}
																],
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1105,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:6",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1110,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "1640:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1120,
												"nodeType": "IfStatement",
												"src": "1612:109:6",
												"trueBody": {
													"id": 1119,
													"nodeType": "Block",
													"src": "1648:73:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1115,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1334",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1334",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1112,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "1669:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1118,
															"nodeType": "RevertStatement",
															"src": "1662:48:6"
														}
													]
												}
											},
											{
												"assignments": [
													1122,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1122,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1137,
														"src": "1732:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1121,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1129,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1123,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1100,
																"src": "1750:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1125,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1102,
																"src": "1772:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:6"
											},
											{
												"condition": {
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:6",
													"subExpression": {
														"id": 1130,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "1798:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1136,
												"nodeType": "IfStatement",
												"src": "1793:63:6",
												"trueBody": {
													"id": 1135,
													"nodeType": "Block",
													"src": "1807:49:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1132,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "1828:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1134,
															"nodeType": "RevertStatement",
															"src": "1821:24:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "1550:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "1577:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:6"
									},
									"returnParameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:6"
									},
									"scope": 1334,
									"src": "1531:331:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "2794:62:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1149,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "2833:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1150,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "2841:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1148,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "2811:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1147,
												"id": 1153,
												"nodeType": "Return",
												"src": "2804:45:6"
											}
										]
									},
									"documentation": {
										"id": 1139,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2727:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2743:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1142,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:6"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2780:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1145,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:6"
									},
									"scope": 1334,
									"src": "2705:151:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1200,
										"nodeType": "Block",
										"src": "3293:279:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1169,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1334",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1334",
																		"typeString": "library Address"
																	}
																],
																"id": 1168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1167,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:6",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1172,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "3331:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1182,
												"nodeType": "IfStatement",
												"src": "3303:108:6",
												"trueBody": {
													"id": 1181,
													"nodeType": "Block",
													"src": "3338:73:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1177,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1334",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1334",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1175,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1174,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "3359:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1180,
															"nodeType": "RevertStatement",
															"src": "3352:48:6"
														}
													]
												}
											},
											{
												"assignments": [
													1184,
													1186
												],
												"declarations": [
													{
														"constant": false,
														"id": 1184,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1200,
														"src": "3421:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1183,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1186,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1200,
														"src": "3435:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1185,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1193,
												"initialValue": {
													"arguments": [
														{
															"id": 1191,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "3488:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1187,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1158,
																"src": "3462:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1189,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "3481:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1195,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "3537:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1196,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "3545:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1197,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "3554:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1194,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "3510:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1166,
												"id": 1199,
												"nodeType": "Return",
												"src": "3503:62:6"
											}
										]
									},
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "3211:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "3227:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1159,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "3246:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:6"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "3279:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:6"
									},
									"scope": 1334,
									"src": "3180:392:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "3811:154:6",
										"statements": [
											{
												"assignments": [
													1212,
													1214
												],
												"declarations": [
													{
														"constant": false,
														"id": 1212,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1226,
														"src": "3822:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1211,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1214,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1226,
														"src": "3836:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1213,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1219,
												"initialValue": {
													"arguments": [
														{
															"id": 1217,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "3881:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1215,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "3863:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1221,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "3930:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1222,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "3938:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1223,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "3947:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1220,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "3903:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1210,
												"id": 1225,
												"nodeType": "Return",
												"src": "3896:62:6"
											}
										]
									},
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3739:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3755:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1205,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:6"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3797:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1208,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:6"
									},
									"scope": 1334,
									"src": "3711:254:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1252,
										"nodeType": "Block",
										"src": "4203:156:6",
										"statements": [
											{
												"assignments": [
													1238,
													1240
												],
												"declarations": [
													{
														"constant": false,
														"id": 1238,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1252,
														"src": "4214:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1237,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1240,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1252,
														"src": "4228:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1239,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1245,
												"initialValue": {
													"arguments": [
														{
															"id": 1243,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "4275:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1241,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "4255:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1247,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "4324:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1248,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "4332:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1249,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "4341:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1246,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "4297:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1236,
												"id": 1251,
												"nodeType": "Return",
												"src": "4290:62:6"
											}
										]
									},
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "4136:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "4152:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1231,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:6"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "4189:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1234,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:6"
									},
									"scope": 1334,
									"src": "4106:253:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1292,
										"nodeType": "Block",
										"src": "4783:424:6",
										"statements": [
											{
												"condition": {
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:6",
													"subExpression": {
														"id": 1265,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "4798:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1290,
													"nodeType": "Block",
													"src": "4857:344:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1272,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1260,
																			"src": "5045:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1276,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1256,
																				"src": "5071:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1287,
															"nodeType": "IfStatement",
															"src": "5041:119:6",
															"trueBody": {
																"id": 1286,
																"nodeType": "Block",
																"src": "5096:64:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1283,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1256,
																					"src": "5138:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1282,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1094,
																				"src": "5121:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1285,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1288,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1260,
																"src": "5180:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1264,
															"id": 1289,
															"nodeType": "Return",
															"src": "5173:17:6"
														}
													]
												},
												"id": 1291,
												"nodeType": "IfStatement",
												"src": "4793:408:6",
												"trueBody": {
													"id": 1271,
													"nodeType": "Block",
													"src": "4807:44:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1268,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1260,
																		"src": "4829:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1267,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1333,
																	"src": "4821:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1270,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1254,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:6",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "4670:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "4694:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1257,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "4716:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1259,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:6"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "4769:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1262,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:6"
									},
									"scope": 1334,
									"src": "4625:582:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "5509:122:6",
										"statements": [
											{
												"condition": {
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:6",
													"subExpression": {
														"id": 1303,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "5524:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1312,
													"nodeType": "Block",
													"src": "5583:42:6",
													"statements": [
														{
															"expression": {
																"id": 1310,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1298,
																"src": "5604:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1302,
															"id": 1311,
															"nodeType": "Return",
															"src": "5597:17:6"
														}
													]
												},
												"id": 1313,
												"nodeType": "IfStatement",
												"src": "5519:106:6",
												"trueBody": {
													"id": 1309,
													"nodeType": "Block",
													"src": "5533:44:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1306,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1298,
																		"src": "5555:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1305,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1333,
																	"src": "5547:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1308,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:6",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "5433:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1295,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "5447:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1297,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:6"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "5495:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1300,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:6"
									},
									"scope": 1334,
									"src": "5407:224:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1332,
										"nodeType": "Block",
										"src": "5798:461:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1321,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "5874:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1330,
													"nodeType": "Block",
													"src": "6204:49:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1327,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "6225:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1329,
															"nodeType": "RevertStatement",
															"src": "6218:24:6"
														}
													]
												},
												"id": 1331,
												"nodeType": "IfStatement",
												"src": "5870:383:6",
												"trueBody": {
													"id": 1326,
													"nodeType": "Block",
													"src": "5897:301:6",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:6",
																"nodeType": "YulBlock",
																"src": "6055:133:6",
																"statements": [
																	{
																		"nativeSrc": "6073:40:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:6"
																			},
																			"nativeSrc": "6096:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:6"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:6",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:6",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:6",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:6"
																					},
																					"nativeSrc": "6137:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:6"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:6",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:6"
																			},
																			"nativeSrc": "6130:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:6"
																		},
																		"nativeSrc": "6130:44:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:6"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1318,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:6",
																	"valueSize": 1
																},
																{
																	"declaration": 1318,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:6",
																	"valueSize": 1
																}
															],
															"id": 1325,
															"nodeType": "InlineAssembly",
															"src": "6046:142:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:6",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "5760:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1317,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:6"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:6"
									},
									"scope": 1334,
									"src": "5743:516:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1335,
							"src": "195:6066:6",
							"usedErrors": [
								1089,
								1094,
								1097
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1356
						]
					},
					"id": 1357,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1336,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1337,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1356,
							"linearizedBaseContracts": [
								1356
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1345,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1342,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1341,
												"id": 1344,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1356,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1354,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1351,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1350,
												"id": 1353,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1356,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1357,
							"src": "624:235:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:7"
				},
				"id": 7
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1664
						]
					},
					"id": 1665,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1358,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Router01",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1664,
							"linearizedBaseContracts": [
								1664
							],
							"name": "IUniswapV2Router01",
							"nameLocation": "36:18:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "70:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "77:2:8"
									},
									"returnParameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "103:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "103:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "102:9:8"
									},
									"scope": 1664,
									"src": "61:51:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1368,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "126:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "130:2:8"
									},
									"returnParameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "156:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "156:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "155:9:8"
									},
									"scope": 1664,
									"src": "117:48:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 1393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "180:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "210:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "202:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "234:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "226:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "255:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "250:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "250:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "284:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "279:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1375,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "279:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "313:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "308:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "338:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "333:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "333:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "366:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "358:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "383:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "378:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "378:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:205:8"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "421:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "416:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1386,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "416:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "435:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "430:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "430:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "449:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "444:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "444:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:44:8"
									},
									"scope": 1664,
									"src": "171:289:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 1414,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "474:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "507:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "499:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "527:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "522:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "522:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "560:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "555:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1398,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "589:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "584:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1400,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "584:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "619:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "611:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "636:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "631:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "631:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:161:8"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "682:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "677:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1407,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "677:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "700:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "695:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "695:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "716:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "711:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "711:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:50:8"
									},
									"scope": 1664,
									"src": "465:262:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 1435,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "741:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "774:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "766:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "798:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "790:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "819:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "814:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "814:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "843:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "838:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "868:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "863:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "863:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "896:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "888:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "913:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "908:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "908:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:171:8"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "951:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "946:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1430,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "946:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "965:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "960:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:28:8"
									},
									"scope": 1664,
									"src": "732:242:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 1454,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nameLocation": "988:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1024:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "1016:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1044:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "1039:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1068:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "1063:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1097:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "1092:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1092:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1127:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "1119:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1144:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "1139:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1446,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1139:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1006:152:8"
									},
									"returnParameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1182:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "1177:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1177:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1200:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "1195:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1195:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:34:8"
									},
									"scope": 1664,
									"src": "979:232:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 1483,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nameLocation": "1225:25:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1268:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1260:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1292:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1284:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1313:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1308:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1308:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1337:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1332:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1332:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1362:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1357:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1463,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1357:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1390:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1382:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1407:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1402:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1402:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1430:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1425:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1469,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1425:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1448:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1442:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1471,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1442:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1459:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1451:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1473,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1470:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1462:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1475,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:227:8"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1501:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1496:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1496:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1515:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1510:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1510:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:28:8"
									},
									"scope": 1664,
									"src": "1216:308:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 1510,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nameLocation": "1538:28:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1584:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "1576:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1604:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "1599:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1599:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1628:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "1623:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1488,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1623:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1657:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "1652:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1652:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1687:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "1679:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1679:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1704:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "1699:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1494,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1699:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1727:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "1722:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1496,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1722:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1745:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "1739:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1498,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1739:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1756:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "1748:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1500,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1767:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "1759:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1502,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:208:8"
									},
									"returnParameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1798:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "1793:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1793:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1816:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "1811:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1507,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1811:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1792:34:8"
									},
									"scope": 1664,
									"src": "1529:298:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 1527,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "1841:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1880:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "1875:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1875:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1903:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "1898:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1898:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1944:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "1925:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1515,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1925:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1516,
													"nodeType": "ArrayTypeName",
													"src": "1925:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1966:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "1958:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1983:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "1978:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1978:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:132:8"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2030:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "2016:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1523,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2016:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1524,
													"nodeType": "ArrayTypeName",
													"src": "2016:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2015:23:8"
									},
									"scope": 1664,
									"src": "1832:207:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 1544,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "2053:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2092:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "2087:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2087:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2116:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "2111:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2111:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2156:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "2137:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1532,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2137:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1533,
													"nodeType": "ArrayTypeName",
													"src": "2137:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2178:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "2170:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2195:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "2190:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2190:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2077:132:8"
									},
									"returnParameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2242:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "2228:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1540,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2228:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1541,
													"nodeType": "ArrayTypeName",
													"src": "2228:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:23:8"
									},
									"scope": 1664,
									"src": "2044:207:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 1559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "2265:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2292:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "2287:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1545,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2287:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2325:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "2306:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1547,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2306:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1548,
													"nodeType": "ArrayTypeName",
													"src": "2306:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2339:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "2331:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2348:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "2343:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1552,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2343:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2286:71:8"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2422:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "2408:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1555,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2408:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1556,
													"nodeType": "ArrayTypeName",
													"src": "2408:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:23:8"
									},
									"scope": 1664,
									"src": "2256:175:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 1576,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nameLocation": "2445:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2472:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2467:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2467:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2488:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2483:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2483:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2520:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2501:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1564,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2501:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1565,
													"nodeType": "ArrayTypeName",
													"src": "2501:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2534:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2526:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2526:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2543:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2538:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2538:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:86:8"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2601:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2587:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1572,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2587:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1573,
													"nodeType": "ArrayTypeName",
													"src": "2587:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:23:8"
									},
									"scope": 1664,
									"src": "2436:174:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 1593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "2624:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2651:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "2646:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2646:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2666:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "2661:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2661:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2699:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "2680:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1581,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2680:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1582,
													"nodeType": "ArrayTypeName",
													"src": "2680:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2713:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "2705:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2722:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "2717:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1586,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2717:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:86:8"
									},
									"returnParameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2780:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "2766:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1589,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2766:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1590,
													"nodeType": "ArrayTypeName",
													"src": "2766:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2765:23:8"
									},
									"scope": 1664,
									"src": "2615:174:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 1608,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nameLocation": "2803:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2830:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2825:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2825:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2860:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2841:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1596,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2841:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1597,
													"nodeType": "ArrayTypeName",
													"src": "2841:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2874:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2866:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2866:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2883:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2878:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1601,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2878:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2824:68:8"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2957:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2943:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1604,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2943:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1605,
													"nodeType": "ArrayTypeName",
													"src": "2943:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2942:23:8"
									},
									"scope": 1664,
									"src": "2794:172:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 1619,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "2981:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "2992:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "2987:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1609,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2987:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "3006:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "3001:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3001:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "3021:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "3016:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1613,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3016:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2986:44:8"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3059:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "3054:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1616,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3054:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3053:14:8"
									},
									"scope": 1664,
									"src": "2972:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 1630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "3082:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3100:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "3095:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1620,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3095:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3115:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "3110:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1622,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3110:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3131:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "3126:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3126:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3094:48:8"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3171:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "3166:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3166:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:16:8"
									},
									"scope": 1664,
									"src": "3073:109:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 1641,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "3196:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3213:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "3208:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1631,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3208:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3229:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "3224:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1633,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3224:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3245:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "3240:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3240:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3207:49:8"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3285:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "3280:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3280:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3279:15:8"
									},
									"scope": 1664,
									"src": "3187:108:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 1652,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "3309:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3328:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "3323:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1642,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3323:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3357:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "3338:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1644,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3338:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1645,
													"nodeType": "ArrayTypeName",
													"src": "3338:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:40:8"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3400:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "3386:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1648,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3386:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1649,
													"nodeType": "ArrayTypeName",
													"src": "3386:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:23:8"
									},
									"scope": 1664,
									"src": "3300:109:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 1663,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "3423:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3441:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "3436:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1653,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3436:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3471:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "3452:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1655,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3452:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1656,
													"nodeType": "ArrayTypeName",
													"src": "3452:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:41:8"
									},
									"returnParameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3514:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "3500:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1659,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3500:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1660,
													"nodeType": "ArrayTypeName",
													"src": "3500:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3499:23:8"
									},
									"scope": 1664,
									"src": "3414:109:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1665,
							"src": "26:3499:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:3526:8"
				},
				"id": 8
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1664
						],
						"IUniswapV2Router02": [
							1752
						]
					},
					"id": 1753,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1666,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:9"
						},
						{
							"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
							"file": "./IUniswapV2Router01.sol",
							"id": 1667,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1753,
							"sourceUnit": 1665,
							"src": "26:34:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1668,
										"name": "IUniswapV2Router01",
										"nameLocations": [
											"94:18:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1664,
										"src": "94:18:9"
									},
									"id": 1669,
									"nodeType": "InheritanceSpecifier",
									"src": "94:18:9"
								}
							],
							"canonicalName": "IUniswapV2Router02",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1752,
							"linearizedBaseContracts": [
								1752,
								1664
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "72:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "af2979eb",
									"id": 1686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nameLocation": "128:47:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "193:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "185:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "213:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "208:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1672,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "208:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "237:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "232:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "232:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "266:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "261:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1676,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "261:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "296:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "288:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "313:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "308:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1680,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "175:152:9"
									},
									"returnParameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "351:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "346:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1683,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "346:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:16:9"
									},
									"scope": 1752,
									"src": "119:243:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0d5984",
									"id": 1711,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nameLocation": "376:57:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "451:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "443:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "471:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "466:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1689,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "466:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "495:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "490:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1691,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "490:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "524:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "519:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1693,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "519:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "554:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "546:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "571:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "566:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1697,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "566:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "594:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "589:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1699,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "589:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "612:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "606:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1701,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "606:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "623:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "615:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1703,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "634:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "626:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1705,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "433:208:9"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "665:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "660:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "660:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "659:16:9"
									},
									"scope": 1752,
									"src": "367:309:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 1725,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "691:53:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "759:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "754:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1712,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "754:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "782:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "777:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "777:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "823:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "804:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1716,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "804:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1717,
													"nodeType": "ArrayTypeName",
													"src": "804:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "845:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "837:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "862:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "857:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1721,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "857:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:132:9"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "885:0:9"
									},
									"scope": 1752,
									"src": "682:204:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 1737,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "900:50:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "965:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "960:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1006:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "987:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1728,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "987:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1729,
													"nodeType": "ArrayTypeName",
													"src": "987:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1028:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "1020:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1045:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "1040:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1733,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1040:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:109:9"
									},
									"returnParameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1076:0:9"
									},
									"scope": 1752,
									"src": "891:186:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 1751,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "1091:50:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1156:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "1151:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1738,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1151:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1179:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "1174:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1174:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1220:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "1201:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1742,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1201:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1743,
													"nodeType": "ArrayTypeName",
													"src": "1201:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1242:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "1234:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1259:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "1254:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1254:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:132:9"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1282:0:9"
									},
									"scope": 1752,
									"src": "1082:201:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1753,
							"src": "62:1223:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:1286:9"
				},
				"id": 9
			},
			"src/DollarCostAveraging.sol": {
				"ast": {
					"absolutePath": "src/DollarCostAveraging.sol",
					"exportedSymbols": {
						"Address": [
							1334
						],
						"Context": [
							1356
						],
						"DollarCostAveraging": [
							2202
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"IERC20Permit": [
							791
						],
						"IUniswapV2Router01": [
							1664
						],
						"IUniswapV2Router02": [
							1752
						],
						"SafeERC20": [
							1081
						]
					},
					"id": 2203,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1754,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1755,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2203,
							"sourceUnit": 652,
							"src": "28:55:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1756,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2203,
							"sourceUnit": 1082,
							"src": "85:65:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
							"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
							"id": 1757,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2203,
							"sourceUnit": 1753,
							"src": "152:75:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DollarCostAveraging",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2202,
							"linearizedBaseContracts": [
								2202
							],
							"name": "DollarCostAveraging",
							"nameLocation": "240:19:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "89d3f1cdfad4e5c26535ac23dc61cf9e975667801747518f01b1b653545d736a",
									"id": 1765,
									"name": "PlanCreated",
									"nameLocation": "273:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "301:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "285:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "285:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"indexed": false,
												"mutability": "mutable",
												"name": "frequency",
												"nameLocation": "315:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "307:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1763,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "334:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "326:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "284:57:10"
									},
									"src": "267:75:10"
								},
								{
									"anonymous": false,
									"eventSelector": "c8108639f5e0627bac90449607e60d516a5082452e397808a067b57f755515fc",
									"id": 1773,
									"name": "PlanUpdated",
									"nameLocation": "352:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "380:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "364:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "364:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1769,
												"indexed": false,
												"mutability": "mutable",
												"name": "frequency",
												"nameLocation": "394:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "386:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "386:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1771,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "413:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "405:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "363:57:10"
									},
									"src": "346:75:10"
								},
								{
									"anonymous": false,
									"eventSelector": "f222abd4ee7afb02f9450183b95d07aaab2ea2f2d6748f55525c7e875fdd58a1",
									"id": 1777,
									"name": "PlanStoped",
									"nameLocation": "431:10:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "458:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "442:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:22:10"
									},
									"src": "425:39:10"
								},
								{
									"anonymous": false,
									"eventSelector": "a806cf17be1fb3cff26c4a6a46b735ddbf2ac07c138bdedb6d2ace798a2cfd40",
									"id": 1781,
									"name": "PlanStarted",
									"nameLocation": "474:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "502:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "486:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "486:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "485:22:10"
									},
									"src": "468:40:10"
								},
								{
									"anonymous": false,
									"eventSelector": "1a3abf7e0a472651ebe2c79a31a5f4660c7ea65e3086ee1742d7502999bbf5b5",
									"id": 1789,
									"name": "PlanTriggered",
									"nameLocation": "518:13:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "548:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "532:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "562:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "554:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"indexed": false,
												"mutability": "mutable",
												"name": "ethReceived",
												"nameLocation": "578:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "570:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "570:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "531:59:10"
									},
									"src": "512:79:10"
								},
								{
									"constant": false,
									"functionSelector": "affed0e0",
									"id": 1791,
									"mutability": "mutable",
									"name": "nonce",
									"nameLocation": "612:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 2202,
									"src": "597:20:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1790,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "597:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "DollarCostAveraging.Plan",
									"id": 1802,
									"members": [
										{
											"constant": false,
											"id": 1793,
											"mutability": "mutable",
											"name": "index",
											"nameLocation": "651:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1802,
											"src": "643:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1792,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "643:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1795,
											"mutability": "mutable",
											"name": "frequency",
											"nameLocation": "671:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1802,
											"src": "663:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1794,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "663:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1797,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "695:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1802,
											"src": "687:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1796,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "687:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1799,
											"mutability": "mutable",
											"name": "status",
											"nameLocation": "713:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1802,
											"src": "708:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1798,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "708:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1801,
											"mutability": "mutable",
											"name": "lastTriggeredAt",
											"nameLocation": "734:15:10",
											"nodeType": "VariableDeclaration",
											"scope": 1802,
											"src": "726:23:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1800,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "726:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Plan",
									"nameLocation": "631:4:10",
									"nodeType": "StructDefinition",
									"scope": 2202,
									"src": "624:131:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "86d86d84",
									"id": 1807,
									"mutability": "mutable",
									"name": "plans",
									"nameLocation": "793:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 2202,
									"src": "761:37:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$1802_storage_$",
										"typeString": "mapping(address => struct DollarCostAveraging.Plan)"
									},
									"typeName": {
										"id": 1806,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1803,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "769:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "761:24:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$1802_storage_$",
											"typeString": "mapping(address => struct DollarCostAveraging.Plan)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1805,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1804,
												"name": "Plan",
												"nameLocations": [
													"780:4:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1802,
												"src": "780:4:10"
											},
											"referencedDeclaration": 1802,
											"src": "780:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Plan_$1802_storage_ptr",
												"typeString": "struct DollarCostAveraging.Plan"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2f48ab7d",
									"id": 1810,
									"mutability": "mutable",
									"name": "usdt",
									"nameLocation": "818:4:10",
									"nodeType": "VariableDeclaration",
									"scope": 2202,
									"src": "805:17:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$651",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 1809,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1808,
											"name": "ERC20",
											"nameLocations": [
												"805:5:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 651,
											"src": "805:5:10"
										},
										"referencedDeclaration": 651,
										"src": "805:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$651",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "735de9f7",
									"id": 1813,
									"mutability": "mutable",
									"name": "uniswapRouter",
									"nameLocation": "853:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 2202,
									"src": "827:39:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$1752",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 1812,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1811,
											"name": "IUniswapV2Router02",
											"nameLocations": [
												"827:18:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1752,
											"src": "827:18:10"
										},
										"referencedDeclaration": 1752,
										"src": "827:18:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$1752",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1836,
										"nodeType": "Block",
										"src": "924:105:10",
										"statements": [
											{
												"expression": {
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1820,
														"name": "usdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1810,
														"src": "931:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$651",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1822,
																"name": "_usdt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1815,
																"src": "944:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1821,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "938:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																"typeString": "type(contract ERC20)"
															}
														},
														"id": 1823,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "938:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$651",
															"typeString": "contract ERC20"
														}
													},
													"src": "931:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$651",
														"typeString": "contract ERC20"
													}
												},
												"id": 1825,
												"nodeType": "ExpressionStatement",
												"src": "931:19:10"
											},
											{
												"expression": {
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1826,
														"name": "uniswapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1813,
														"src": "957:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1752",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1828,
																"name": "_uniswapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1817,
																"src": "992:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1827,
															"name": "IUniswapV2Router02",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1752,
															"src": "973:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$1752_$",
																"typeString": "type(contract IUniswapV2Router02)"
															}
														},
														"id": 1829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "973:34:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1752",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "957:50:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$1752",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 1831,
												"nodeType": "ExpressionStatement",
												"src": "957:50:10"
											},
											{
												"expression": {
													"id": 1834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1832,
														"name": "nonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1791,
														"src": "1014:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1833,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1022:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1014:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1835,
												"nodeType": "ExpressionStatement",
												"src": "1014:9:10"
											}
										]
									},
									"id": 1837,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "_usdt",
												"nameLocation": "893:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "885:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "_uniswapRouter",
												"nameLocation": "908:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "900:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "884:39:10"
									},
									"returnParameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "924:0:10"
									},
									"scope": 2202,
									"src": "873:156:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1853,
										"nodeType": "Block",
										"src": "1101:55:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1846,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "1130:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1849,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1144:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DollarCostAveraging_$2202",
																		"typeString": "contract DollarCostAveraging"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DollarCostAveraging_$2202",
																		"typeString": "contract DollarCostAveraging"
																	}
																],
																"id": 1848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1136:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1847,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1136:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1136:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1844,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "1115:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 1845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1120:9:10",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 278,
														"src": "1115:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1115:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1843,
												"id": 1852,
												"nodeType": "Return",
												"src": "1108:42:10"
											}
										]
									},
									"functionSelector": "eb5a662e",
									"id": 1854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllowance",
									"nameLocation": "1044:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1065:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1057:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1056:14:10"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1092:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1091:9:10"
									},
									"scope": 2202,
									"src": "1035:121:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1910,
										"nodeType": "Block",
										"src": "1224:428:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1862,
																		"name": "plans",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1807,
																		"src": "1239:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$1802_storage_$",
																			"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																		}
																	},
																	"id": 1865,
																	"indexExpression": {
																		"expression": {
																			"id": 1863,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1245:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1249:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1245:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1239:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Plan_$1802_storage",
																		"typeString": "struct DollarCostAveraging.Plan storage ref"
																	}
																},
																"id": 1866,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1257:5:10",
																"memberName": "index",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1793,
																"src": "1239:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1266:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1239:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c616e206973206578697374",
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1269:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad",
																"typeString": "literal_string \"Plan is exist\""
															},
															"value": "Plan is exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad",
																"typeString": "literal_string \"Plan is exist\""
															}
														],
														"id": 1861,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1231:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1231:54:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1871,
												"nodeType": "ExpressionStatement",
												"src": "1231:54:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1873,
																"name": "frequency",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1856,
																"src": "1300:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1874,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1312:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1300:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4672657175656e6379206d7573742062652067726561746572207468616e2030",
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1315:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016",
																"typeString": "literal_string \"Frequency must be greater than 0\""
															},
															"value": "Frequency must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016",
																"typeString": "literal_string \"Frequency must be greater than 0\""
															}
														],
														"id": 1872,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1292:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1292:58:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1878,
												"nodeType": "ExpressionStatement",
												"src": "1292:58:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1880,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1858,
																"src": "1365:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1374:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1365:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1377:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 1879,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1357:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1357:52:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1885,
												"nodeType": "ExpressionStatement",
												"src": "1357:52:10"
											},
											{
												"expression": {
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1886,
															"name": "plans",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "1418:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$1802_storage_$",
																"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
															}
														},
														"id": 1889,
														"indexExpression": {
															"expression": {
																"id": 1887,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1424:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1428:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1424:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1418:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Plan_$1802_storage",
															"typeString": "struct DollarCostAveraging.Plan storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1459:7:10",
																"subExpression": {
																	"id": 1891,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1791,
																	"src": "1459:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1893,
																"name": "frequency",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1856,
																"src": "1486:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1894,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1858,
																"src": "1512:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 1895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1535:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1562:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1890,
															"name": "Plan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1802,
															"src": "1438:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Plan_$1802_storage_ptr_$",
																"typeString": "type(struct DollarCostAveraging.Plan storage pointer)"
															}
														},
														"id": 1897,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"1452:5:10",
															"1475:9:10",
															"1504:6:10",
															"1527:6:10",
															"1545:15:10"
														],
														"names": [
															"index",
															"frequency",
															"amount",
															"status",
															"lastTriggeredAt"
														],
														"nodeType": "FunctionCall",
														"src": "1438:133:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Plan_$1802_memory_ptr",
															"typeString": "struct DollarCostAveraging.Plan memory"
														}
													},
													"src": "1418:153:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Plan_$1802_storage",
														"typeString": "struct DollarCostAveraging.Plan storage ref"
													}
												},
												"id": 1899,
												"nodeType": "ExpressionStatement",
												"src": "1418:153:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1901,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1595:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1599:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1595:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1903,
															"name": "frequency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1856,
															"src": "1607:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1904,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1858,
															"src": "1618:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1900,
														"name": "PlanCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1765,
														"src": "1583:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1583:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1906,
												"nodeType": "EmitStatement",
												"src": "1578:47:10"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1907,
														"name": "startPlan",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2020,
														"src": "1635:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1635:11:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1909,
												"nodeType": "ExpressionStatement",
												"src": "1635:11:10"
											}
										]
									},
									"functionSelector": "b197df54",
									"id": 1911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createPlan",
									"nameLocation": "1171:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "frequency",
												"nameLocation": "1190:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "1182:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1182:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1209:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "1201:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1201:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1181:35:10"
									},
									"returnParameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1224:0:10"
									},
									"scope": 2202,
									"src": "1162:490:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1966,
										"nodeType": "Block",
										"src": "1720:334:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1919,
																		"name": "plans",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1807,
																		"src": "1735:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$1802_storage_$",
																			"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																		}
																	},
																	"id": 1922,
																	"indexExpression": {
																		"expression": {
																			"id": 1920,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1741:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1745:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1741:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1735:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Plan_$1802_storage",
																		"typeString": "struct DollarCostAveraging.Plan storage ref"
																	}
																},
																"id": 1923,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1753:5:10",
																"memberName": "index",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1793,
																"src": "1735:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1761:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1735:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c616e206973206578697374",
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1764:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad",
																"typeString": "literal_string \"Plan is exist\""
															},
															"value": "Plan is exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad",
																"typeString": "literal_string \"Plan is exist\""
															}
														],
														"id": 1918,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1727:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1727:53:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1928,
												"nodeType": "ExpressionStatement",
												"src": "1727:53:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1930,
																"name": "frequency",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1913,
																"src": "1795:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1807:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1795:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4672657175656e6379206d7573742062652067726561746572207468616e2030",
															"id": 1933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1810:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016",
																"typeString": "literal_string \"Frequency must be greater than 0\""
															},
															"value": "Frequency must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016",
																"typeString": "literal_string \"Frequency must be greater than 0\""
															}
														],
														"id": 1929,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1787:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1787:58:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1935,
												"nodeType": "ExpressionStatement",
												"src": "1787:58:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1937,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1915,
																"src": "1860:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1869:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1860:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1940,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1872:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 1936,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1852:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1852:52:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1942,
												"nodeType": "ExpressionStatement",
												"src": "1852:52:10"
											},
											{
												"expression": {
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1943,
																"name": "plans",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1807,
																"src": "1913:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$1802_storage_$",
																	"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																}
															},
															"id": 1946,
															"indexExpression": {
																"expression": {
																	"id": 1944,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1919:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1923:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1919:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1913:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Plan_$1802_storage",
																"typeString": "struct DollarCostAveraging.Plan storage ref"
															}
														},
														"id": 1947,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1931:6:10",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1797,
														"src": "1913:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1948,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1915,
														"src": "1940:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1913:33:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1950,
												"nodeType": "ExpressionStatement",
												"src": "1913:33:10"
											},
											{
												"expression": {
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1951,
																"name": "plans",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1807,
																"src": "1953:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$1802_storage_$",
																	"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																}
															},
															"id": 1954,
															"indexExpression": {
																"expression": {
																	"id": 1952,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1959:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1963:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1959:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1953:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Plan_$1802_storage",
																"typeString": "struct DollarCostAveraging.Plan storage ref"
															}
														},
														"id": 1955,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1971:9:10",
														"memberName": "frequency",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1795,
														"src": "1953:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1956,
														"name": "frequency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1913,
														"src": "1983:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1953:39:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1958,
												"nodeType": "ExpressionStatement",
												"src": "1953:39:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1960,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2018:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2022:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2018:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1962,
															"name": "frequency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1913,
															"src": "2030:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1963,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "2041:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1959,
														"name": "PlanUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1773,
														"src": "2006:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2006:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1965,
												"nodeType": "EmitStatement",
												"src": "2001:47:10"
											}
										]
									},
									"functionSelector": "00e1801c",
									"id": 1967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePlan",
									"nameLocation": "1667:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "frequency",
												"nameLocation": "1686:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "1678:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1678:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1705:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "1697:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1697:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1677:35:10"
									},
									"returnParameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1720:0:10"
									},
									"scope": 2202,
									"src": "1658:396:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2019,
										"nodeType": "Block",
										"src": "2088:331:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1971,
																		"name": "plans",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1807,
																		"src": "2107:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$1802_storage_$",
																			"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																		}
																	},
																	"id": 1974,
																	"indexExpression": {
																		"expression": {
																			"id": 1972,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2113:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2117:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2113:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2107:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Plan_$1802_storage",
																		"typeString": "struct DollarCostAveraging.Plan storage ref"
																	}
																},
																"id": 1975,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2125:5:10",
																"memberName": "index",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1793,
																"src": "2107:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1976,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2133:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2107:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c616e206973206e6f74206578697374",
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2136:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2",
																"typeString": "literal_string \"Plan is not exist\""
															},
															"value": "Plan is not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2",
																"typeString": "literal_string \"Plan is not exist\""
															}
														],
														"id": 1970,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2099:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2099:57:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1980,
												"nodeType": "ExpressionStatement",
												"src": "2099:57:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1982,
																		"name": "plans",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1807,
																		"src": "2171:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$1802_storage_$",
																			"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																		}
																	},
																	"id": 1985,
																	"indexExpression": {
																		"expression": {
																			"id": 1983,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2177:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2181:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2177:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2171:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Plan_$1802_storage",
																		"typeString": "struct DollarCostAveraging.Plan storage ref"
																	}
																},
																"id": 1986,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2189:6:10",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1797,
																"src": "2171:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2198:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2171:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2201:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 1981,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2163:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:70:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1991,
												"nodeType": "ExpressionStatement",
												"src": "2163:70:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1994,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2261:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2265:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2261:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1993,
																	"name": "getAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1854,
																	"src": "2248:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2248:24:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1997,
																		"name": "plans",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1807,
																		"src": "2275:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$1802_storage_$",
																			"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																		}
																	},
																	"id": 2000,
																	"indexExpression": {
																		"expression": {
																			"id": 1998,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2281:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2285:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2281:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2275:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Plan_$1802_storage",
																		"typeString": "struct DollarCostAveraging.Plan storage ref"
																	}
																},
																"id": 2001,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2293:6:10",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1797,
																"src": "2275:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2248:51:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f74616c206d7573742062652067726561746572207468616e20616d6f756e74",
															"id": 2003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2301:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa",
																"typeString": "literal_string \"Total must be greater than amount\""
															},
															"value": "Total must be greater than amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa",
																"typeString": "literal_string \"Total must be greater than amount\""
															}
														],
														"id": 1992,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2240:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2240:97:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2005,
												"nodeType": "ExpressionStatement",
												"src": "2240:97:10"
											},
											{
												"expression": {
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2006,
																"name": "plans",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1807,
																"src": "2350:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$1802_storage_$",
																	"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																}
															},
															"id": 2009,
															"indexExpression": {
																"expression": {
																	"id": 2007,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2356:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2360:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2356:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2350:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Plan_$1802_storage",
																"typeString": "struct DollarCostAveraging.Plan storage ref"
															}
														},
														"id": 2010,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2368:6:10",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1799,
														"src": "2350:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 2011,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2377:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2350:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2013,
												"nodeType": "ExpressionStatement",
												"src": "2350:28:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2015,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2402:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2406:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2402:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2014,
														"name": "PlanStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1781,
														"src": "2390:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2390:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2018,
												"nodeType": "EmitStatement",
												"src": "2385:28:10"
											}
										]
									},
									"functionSelector": "a63661a5",
									"id": 2020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startPlan",
									"nameLocation": "2069:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2078:2:10"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2088:0:10"
									},
									"scope": 2202,
									"src": "2060:359:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2047,
										"nodeType": "Block",
										"src": "2452:141:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2024,
																		"name": "plans",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1807,
																		"src": "2467:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$1802_storage_$",
																			"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																		}
																	},
																	"id": 2027,
																	"indexExpression": {
																		"expression": {
																			"id": 2025,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2473:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2477:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2473:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2467:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Plan_$1802_storage",
																		"typeString": "struct DollarCostAveraging.Plan storage ref"
																	}
																},
																"id": 2028,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2485:5:10",
																"memberName": "index",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1793,
																"src": "2467:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2493:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2467:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c616e206973206e6f74206578697374",
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2496:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2",
																"typeString": "literal_string \"Plan is not exist\""
															},
															"value": "Plan is not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2",
																"typeString": "literal_string \"Plan is not exist\""
															}
														],
														"id": 2023,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2459:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2459:57:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2033,
												"nodeType": "ExpressionStatement",
												"src": "2459:57:10"
											},
											{
												"expression": {
													"id": 2040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2034,
																"name": "plans",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1807,
																"src": "2525:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$1802_storage_$",
																	"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																}
															},
															"id": 2037,
															"indexExpression": {
																"expression": {
																	"id": 2035,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2531:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2535:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2531:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2525:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Plan_$1802_storage",
																"typeString": "struct DollarCostAveraging.Plan storage ref"
															}
														},
														"id": 2038,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2543:6:10",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1799,
														"src": "2525:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2039,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2552:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2525:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2041,
												"nodeType": "ExpressionStatement",
												"src": "2525:28:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2043,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2576:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2580:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2576:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2042,
														"name": "PlanStoped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "2565:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2565:22:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2046,
												"nodeType": "EmitStatement",
												"src": "2560:27:10"
											}
										]
									},
									"functionSelector": "d930da60",
									"id": 2048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stopPlan",
									"nameLocation": "2434:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2442:2:10"
									},
									"returnParameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2452:0:10"
									},
									"scope": 2202,
									"src": "2425:168:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2200,
										"nodeType": "Block",
										"src": "2641:1211:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2054,
																		"name": "plans",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1807,
																		"src": "2656:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$1802_storage_$",
																			"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																		}
																	},
																	"id": 2056,
																	"indexExpression": {
																		"id": 2055,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2050,
																		"src": "2662:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2656:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Plan_$1802_storage",
																		"typeString": "struct DollarCostAveraging.Plan storage ref"
																	}
																},
																"id": 2057,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2668:6:10",
																"memberName": "status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1799,
																"src": "2656:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 2058,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2678:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2656:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c616e206973206e6f7420616374697665",
															"id": 2060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2681:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c",
																"typeString": "literal_string \"Plan is not active\""
															},
															"value": "Plan is not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c",
																"typeString": "literal_string \"Plan is not active\""
															}
														],
														"id": 2053,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2648:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2648:54:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2062,
												"nodeType": "ExpressionStatement",
												"src": "2648:54:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2065,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2730:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2734:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2730:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2064,
																	"name": "getAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1854,
																	"src": "2717:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 2067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2717:24:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2068,
																		"name": "plans",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1807,
																		"src": "2744:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$1802_storage_$",
																			"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																		}
																	},
																	"id": 2070,
																	"indexExpression": {
																		"id": 2069,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2050,
																		"src": "2750:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2744:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Plan_$1802_storage",
																		"typeString": "struct DollarCostAveraging.Plan storage ref"
																	}
																},
																"id": 2071,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2756:6:10",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1797,
																"src": "2744:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2717:45:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742074726967676572206d6f7265207468616e2072656d61696e696e6720616d6f756e74",
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2764:43:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24",
																"typeString": "literal_string \"Cannot trigger more than remaining amount\""
															},
															"value": "Cannot trigger more than remaining amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24",
																"typeString": "literal_string \"Cannot trigger more than remaining amount\""
															}
														],
														"id": 2063,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2709:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2709:99:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2075,
												"nodeType": "ExpressionStatement",
												"src": "2709:99:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2077,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2823:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2829:9:10",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2823:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2079,
																			"name": "plans",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1807,
																			"src": "2842:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$1802_storage_$",
																				"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																			}
																		},
																		"id": 2081,
																		"indexExpression": {
																			"id": 2080,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2050,
																			"src": "2848:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2842:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Plan_$1802_storage",
																			"typeString": "struct DollarCostAveraging.Plan storage ref"
																		}
																	},
																	"id": 2082,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2854:15:10",
																	"memberName": "lastTriggeredAt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1801,
																	"src": "2842:27:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2083,
																				"name": "plans",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1807,
																				"src": "2872:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$1802_storage_$",
																					"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																				}
																			},
																			"id": 2085,
																			"indexExpression": {
																				"id": 2084,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2050,
																				"src": "2878:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2872:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Plan_$1802_storage",
																				"typeString": "struct DollarCostAveraging.Plan storage ref"
																			}
																		},
																		"id": 2086,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2884:9:10",
																		"memberName": "frequency",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1795,
																		"src": "2872:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3234",
																		"id": 2087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2896:8:10",
																		"subdenomination": "hours",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_86400_by_1",
																			"typeString": "int_const 86400"
																		},
																		"value": "24"
																	},
																	"src": "2872:32:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2842:62:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2823:81:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e206f6e6c79207472696767657220706c616e206f6e63652070657220646179",
															"id": 2091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2906:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d0ccbf0fb388ef2019a4c569d6a5318305b2bf4cf0afc9067c0a6b28559054d",
																"typeString": "literal_string \"Can only trigger plan once per day\""
															},
															"value": "Can only trigger plan once per day"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d0ccbf0fb388ef2019a4c569d6a5318305b2bf4cf0afc9067c0a6b28559054d",
																"typeString": "literal_string \"Can only trigger plan once per day\""
															}
														],
														"id": 2076,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2815:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2815:128:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2093,
												"nodeType": "ExpressionStatement",
												"src": "2815:128:10"
											},
											{
												"assignments": [
													2095
												],
												"declarations": [
													{
														"constant": false,
														"id": 2095,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "2960:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2200,
														"src": "2952:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2094,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2952:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2100,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 2096,
															"name": "plans",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "2969:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$1802_storage_$",
																"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
															}
														},
														"id": 2098,
														"indexExpression": {
															"id": 2097,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2050,
															"src": "2975:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2969:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Plan_$1802_storage",
															"typeString": "struct DollarCostAveraging.Plan storage ref"
														}
													},
													"id": 2099,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2981:6:10",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1797,
													"src": "2969:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2952:35:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2104,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "3081:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														{
															"id": 2105,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2050,
															"src": "3087:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2108,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3101:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DollarCostAveraging_$2202",
																		"typeString": "contract DollarCostAveraging"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DollarCostAveraging_$2202",
																		"typeString": "contract DollarCostAveraging"
																	}
																],
																"id": 2107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3093:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2106,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3093:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3093:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2110,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2095,
															"src": "3108:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2101,
															"name": "SafeERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "3054:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeERC20_$1081_$",
																"typeString": "type(library SafeERC20)"
															}
														},
														"id": 2103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3064:16:10",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 868,
														"src": "3054:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3054:61:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2112,
												"nodeType": "ExpressionStatement",
												"src": "3054:61:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2116,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "3203:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														{
															"arguments": [
																{
																	"id": 2119,
																	"name": "uniswapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1813,
																	"src": "3217:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1752",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1752",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 2118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3209:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2117,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3209:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3209:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2121,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2095,
															"src": "3233:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2113,
															"name": "SafeERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "3171:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeERC20_$1081_$",
																"typeString": "type(library SafeERC20)"
															}
														},
														"id": 2115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3181:21:10",
														"memberName": "safeIncreaseAllowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 899,
														"src": "3171:31:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3171:69:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2123,
												"nodeType": "ExpressionStatement",
												"src": "3171:69:10"
											},
											{
												"assignments": [
													2128
												],
												"declarations": [
													{
														"constant": false,
														"id": 2128,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "3293:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 2200,
														"src": "3276:21:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2126,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3276:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2127,
															"nodeType": "ArrayTypeName",
															"src": "3276:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2134,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 2132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3314:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 2131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3300:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2129,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3304:7:10",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2130,
															"nodeType": "ArrayTypeName",
															"src": "3304:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 2133,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3300:16:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3276:40:10"
											},
											{
												"expression": {
													"id": 2142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2135,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2128,
															"src": "3323:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2137,
														"indexExpression": {
															"hexValue": "30",
															"id": 2136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3328:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3323:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2140,
																"name": "usdt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1810,
																"src": "3341:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ERC20_$651",
																	"typeString": "contract ERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_ERC20_$651",
																	"typeString": "contract ERC20"
																}
															],
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3333:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2138,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3333:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 2141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3333:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3323:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2143,
												"nodeType": "ExpressionStatement",
												"src": "3323:23:10"
											},
											{
												"expression": {
													"id": 2150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2144,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2128,
															"src": "3367:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2146,
														"indexExpression": {
															"hexValue": "31",
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3372:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3367:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 2147,
																"name": "uniswapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "3377:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$1752",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 2148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3391:4:10",
															"memberName": "WETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1368,
															"src": "3377:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																"typeString": "function () pure external returns (address)"
															}
														},
														"id": 2149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3377:20:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3367:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2151,
												"nodeType": "ExpressionStatement",
												"src": "3367:30:10"
											},
											{
												"assignments": [
													2156
												],
												"declarations": [
													{
														"constant": false,
														"id": 2156,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "3470:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2200,
														"src": "3456:21:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2154,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3456:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2155,
															"nodeType": "ArrayTypeName",
															"src": "3456:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2171,
												"initialValue": {
													"arguments": [
														{
															"id": 2159,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2095,
															"src": "3517:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 2160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3525:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2161,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2128,
															"src": "3528:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 2164,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3542:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DollarCostAveraging_$2202",
																		"typeString": "contract DollarCostAveraging"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DollarCostAveraging_$2202",
																		"typeString": "contract DollarCostAveraging"
																	}
																],
																"id": 2163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3534:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2162,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3534:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3534:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2166,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3549:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3555:9:10",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3549:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3567:7:10",
																"subdenomination": "hours",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "1"
															},
															"src": "3549:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2157,
															"name": "uniswapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "3481:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$1752",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"id": 2158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3495:21:10",
														"memberName": "swapExactTokensForETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1593,
														"src": "3481:35:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
														}
													},
													"id": 2170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3481:94:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3455:120:10"
											},
											{
												"assignments": [
													2173
												],
												"declarations": [
													{
														"constant": false,
														"id": 2173,
														"mutability": "mutable",
														"name": "ethReceived",
														"nameLocation": "3592:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 2200,
														"src": "3584:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3584:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2177,
												"initialValue": {
													"baseExpression": {
														"id": 2174,
														"name": "amounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2156,
														"src": "3606:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 2176,
													"indexExpression": {
														"hexValue": "31",
														"id": 2175,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3614:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3606:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3584:32:10"
											},
											{
												"expression": {
													"id": 2184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2178,
																"name": "plans",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1807,
																"src": "3657:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$1802_storage_$",
																	"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																}
															},
															"id": 2180,
															"indexExpression": {
																"id": 2179,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2050,
																"src": "3663:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3657:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Plan_$1802_storage",
																"typeString": "struct DollarCostAveraging.Plan storage ref"
															}
														},
														"id": 2181,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3669:15:10",
														"memberName": "lastTriggeredAt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1801,
														"src": "3657:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2182,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3687:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3693:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3687:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:45:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2185,
												"nodeType": "ExpressionStatement",
												"src": "3657:45:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2187,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2050,
															"src": "3730:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2188,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2095,
															"src": "3736:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2189,
															"name": "ethReceived",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2173,
															"src": "3744:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2186,
														"name": "PlanTriggered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1789,
														"src": "3716:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3716:40:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2191,
												"nodeType": "EmitStatement",
												"src": "3711:45:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2195,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "3822:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														{
															"id": 2196,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2050,
															"src": "3828:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2197,
															"name": "ethReceived",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2173,
															"src": "3834:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2192,
															"name": "SafeERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "3799:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeERC20_$1081_$",
																"typeString": "type(library SafeERC20)"
															}
														},
														"id": 2194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3809:12:10",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 841,
														"src": "3799:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3799:47:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2199,
												"nodeType": "ExpressionStatement",
												"src": "3799:47:10"
											}
										]
									},
									"functionSelector": "c440fa0f",
									"id": 2201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "triggerPlan",
									"nameLocation": "2608:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2628:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "2620:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2620:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2619:14:10"
									},
									"returnParameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2641:0:10"
									},
									"scope": 2202,
									"src": "2599:1253:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2203,
							"src": "231:3624:10",
							"usedErrors": [
								808,
								1089,
								1094,
								1097
							],
							"usedEvents": [
								1765,
								1773,
								1777,
								1781,
								1789
							]
						}
					],
					"src": "0:3855:10"
				},
				"id": 10
			}
		}
	}
}