{
	"id": "5b00aeedee72fae066295efa2e5a6f1d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/DollarCostAveraging.sol": {
				"content": "pragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\";\r\n\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\";\r\n\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\";\r\n\r\nimport \"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\";\r\n\r\ncontract DollarCostAveraging  is VRFConsumerBaseV2, AutomationCompatibleInterface {\r\n\r\n  event PlanCreated(address indexed user, uint256 frequency, uint256 amount);\r\n  event PlanUpdated(address indexed user, uint256 frequency, uint256 amount);\r\n  event PlanStoped(address indexed user);\r\n  event PlanStarted(address indexed user);\r\n  event PlanTriggered(address indexed user, uint256 amount, uint256 ethReceived);\r\n\r\n\r\n\r\n  struct Plan {\r\n    uint256 index;\r\n    uint256 frequency;\r\n    uint256 amount;\r\n    uint startAt;\r\n    uint times;\r\n    uint status;\r\n  }\r\n\r\n  mapping(address => Plan) public plans;\r\n  mapping(uint256 => address) public users;\r\n  // 存储用户的随机数和定投计划的下次触发时间\r\n  mapping(uint256 => address) public userRandomRequestId;\r\n  mapping(address => uint256) public nextTriggerTime;\r\n\r\n  ERC20 public usdt;\r\n  LinkTokenInterface public link;\r\n  VRFCoordinatorV2Interface public coordinator;\r\n  uint64 subscriptionId;\r\n  IUniswapV2Router02 public uniswapRouter;\r\n  AggregatorV2V3Interface public oracle;\r\n  uint256 public nonce;\r\n\r\n  bytes32 internal keyHash;\r\n  uint256 internal fee;\r\n\r\n  constructor(\r\n        address _usdt,\r\n        address _uniswapRouter,\r\n        address _oracle,\r\n        address _vrfCoordinator,\r\n        uint64 _subscriptionId,\r\n        address _link,\r\n        bytes32 _keyHash,\r\n        uint256 _fee\r\n    ) VRFConsumerBaseV2(_vrfCoordinator) {\r\n    usdt = ERC20(_usdt);\r\n    uniswapRouter = IUniswapV2Router02(_uniswapRouter);\r\n    oracle = AggregatorV2V3Interface(_oracle);\r\n    nonce = 1;\r\n    keyHash = _keyHash;\r\n    fee = _fee;\r\n\r\n    link = LinkTokenInterface(_link);\r\n    coordinator = VRFCoordinatorV2Interface(_vrfCoordinator);\r\n    subscriptionId = _subscriptionId;\r\n\r\n    // link.increaseApproval(_vrfCoordinator, type(uint256).max);\r\n  }\r\n\r\n  function getAllowance(address user) public view returns (uint256) {\r\n    return usdt.allowance(user, address(this));\r\n  }\r\n\r\n  function createPlan(uint256 frequency, uint256 amount) public {\r\n    require(plans[msg.sender].index == 0, \"Plan is exist\");\r\n    require(frequency > 0, \"Frequency must be greater than 0\");\r\n    require(amount > 0, \"Amount must be greater than 0\");\r\n\r\n    users[nonce] = msg.sender;\r\n    \r\n    plans[msg.sender] = Plan({\r\n      index: nonce++,\r\n      frequency: frequency,\r\n      amount: amount,\r\n      startAt: block.timestamp,\r\n      times: 0,\r\n      status: 0\r\n    });\r\n    emit PlanCreated(msg.sender, frequency, amount);\r\n \r\n    startPlan();\r\n  }\r\n\r\n  function updatePlan(uint256 frequency, uint256 amount) public {\r\n    require(plans[msg.sender].index > 0, \"Plan is exist\");\r\n    require(frequency > 0, \"Frequency must be greater than 0\");\r\n    require(amount > 0, \"Amount must be greater than 0\");\r\n\r\n    plans[msg.sender].amount = amount;\r\n    plans[msg.sender].frequency = frequency;\r\n\r\n    emit PlanUpdated(msg.sender, frequency, amount);\r\n  }\r\n\r\n  function startPlan() public {    \r\n    require(plans[msg.sender].index > 0, \"Plan is not exist\");\r\n    require(plans[msg.sender].amount > 0, \"Amount must be greater than 0\");\r\n    require(getAllowance(msg.sender) > plans[msg.sender].amount, \"Total must be greater than amount\");\r\n    \r\n\r\n    plans[msg.sender].startAt = block.timestamp;\r\n    plans[msg.sender].times = 0;\r\n    plans[msg.sender].status = 1;\r\n    emit PlanStarted(msg.sender);\r\n\r\n    requestRandom(msg.sender);\r\n  }\r\n\r\n  function stopPlan() public {\r\n    require(plans[msg.sender].index > 0, \"Plan is not exist\");\r\n\r\n    plans[msg.sender].status = 0;\r\n    emit PlanStoped(msg.sender);\r\n  }\r\n\r\n  function requestRandom(address user) private {\r\n    // 请求 Chainlink VRF 获取随机数\r\n    // require(link.balanceOf(address(this)) >= fee, \"Not enough LINK\");\r\n\r\n    uint256 requestId = coordinator.requestRandomWords(\r\n        keyHash,\r\n        subscriptionId,\r\n        3,\r\n        350000,\r\n        1\r\n       );\r\n    userRandomRequestId[requestId] = user;\r\n  }\r\n\r\n  function triggerPlan(address user) public {\r\n    require(plans[user].status == 1, \"Plan is not active\");\r\n    require(getAllowance(user) > plans[user].amount, \"Cannot trigger more than remaining amount\");\r\n    require(block.timestamp >=  nextTriggerTime[user], \"Cannot trigger before next trigger time\");\r\n\r\n    uint256 amount = plans[user].amount;\r\n\r\n    (, int256 ethPrice, , , ) = oracle.latestRoundData();\r\n\r\n    // decimals\r\n    uint256 ethPriceDecimals = oracle.decimals();\r\n\r\n    uint256 ethAmount = (amount * 1e18) / uint256(ethPrice) /  10 ** (18 - ethPriceDecimals);\r\n\r\n    uint256 slippage = (ethAmount * 5) / 1000;\r\n\r\n    uint256 minEthAmount = ethAmount - slippage;\r\n\r\n    // 将用户amount数量的USDT转移到合约地址\r\n    SafeERC20.safeTransferFrom(usdt, user, address(this), amount);\r\n\r\n    // 授权 Uniswap V2 Router02 花费 USDT\r\n    SafeERC20.safeIncreaseAllowance(usdt, address(uniswapRouter), amount);\r\n\r\n    // 定义交易路径\r\n    address[] memory path = new address[](2);\r\n    path[0] = address(usdt); // USDT地址\r\n    path[1] = uniswapRouter.WETH(); // WETH地址\r\n    // 从 Uniswap V2 上购买 eth\r\n    (uint[] memory amounts) = uniswapRouter.swapExactTokensForETH(amount, minEthAmount, path, address(this), block.timestamp + 1 hours);\r\n\r\n    uint256 ethReceived = amounts[1];  // 获取接收到的ETH数量\r\n\r\n    plans[user].times++;\r\n\r\n    emit PlanTriggered(user, amount, ethReceived);\r\n\r\n    // 将 eth 发送给用户\r\n    payable(user).transfer(ethReceived);\r\n\r\n    // 请求 Chainlink VRF 获取随机数\r\n    requestRandom(user);\r\n  }\r\n\r\n   // Chainlink VRF 回调函数，用于处理随机数\r\n  function fulfillRandomWords(uint256 _requestId, uint256[] memory _randomWords) internal override {\r\n      address user = userRandomRequestId[_requestId];\r\n      nextTriggerTime[user] = plans[user].startAt + plans[user].times * plans[user].frequency + (_randomWords[0] % plans[user].frequency);\r\n  }\r\n\r\n    function checkUpkeep(\r\n        bytes calldata /* checkData */\r\n    )\r\n        external\r\n        view\r\n        override\r\n        returns (bool upkeepNeeded, bytes memory performData)\r\n    {\r\n      address user = users[block.number % (nonce - 1) + 1];\r\n      upkeepNeeded = false;\r\n      if(block.timestamp > nextTriggerTime[user] && nextTriggerTime[user] > 0){\r\n        upkeepNeeded = true;\r\n      }\r\n      \r\n      performData = abi.encode(user);\r\n      return (upkeepNeeded, performData);\r\n    }\r\n\r\n    function performUpkeep(bytes calldata performData) external override {\r\n        (address user) = abi.decode(\r\n            performData,\r\n            (address)\r\n        );\r\n        triggerPlan(user);\r\n    }\r\n\r\n  receive() external payable {}\r\n}"
			},
			"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AutomationCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n"
			},
			"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(\n    uint64 subId\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint64 subId) external view returns (bool);\n}\n"
			},
			"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface LinkTokenInterface {\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\n\n  function approve(address spender, uint256 value) external returns (bool success);\n\n  function balanceOf(address owner) external view returns (uint256 balance);\n\n  function decimals() external view returns (uint8 decimalPlaces);\n\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\n\n  function increaseApproval(address spender, uint256 subtractedValue) external;\n\n  function name() external view returns (string memory tokenName);\n\n  function symbol() external view returns (string memory tokenSymbol);\n\n  function totalSupply() external view returns (uint256 totalTokensIssued);\n\n  function transfer(address to, uint256 value) external returns (bool success);\n\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\n\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\n}\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./AggregatorInterface.sol\";\nimport \"./AggregatorV3Interface.sol\";\n\ninterface AggregatorV2V3Interface is AggregatorInterface, AggregatorV3Interface {}\n"
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"content": "pragma solidity >=0.6.2;\n\nimport './IUniswapV2Router01.sol';\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"content": "pragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorInterface {\n  function latestAnswer() external view returns (int256);\n\n  function latestTimestamp() external view returns (uint256);\n\n  function latestRound() external view returns (uint256);\n\n  function getAnswer(uint256 roundId) external view returns (int256);\n\n  function getTimestamp(uint256 roundId) external view returns (uint256);\n\n  event AnswerUpdated(int256 indexed current, uint256 indexed roundId, uint256 updatedAt);\n\n  event NewRound(uint256 indexed roundId, address indexed startedBy, uint256 startedAt);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
				"AutomationCompatibleInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "checkData",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "upkeepNeeded",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"checkUpkeep(bytes)": {
								"details": "To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.",
								"params": {
									"checkData": "specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."
								},
								"returns": {
									"performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.",
									"upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
								}
							},
							"performUpkeep(bytes)": {
								"details": "The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.",
								"params": {
									"performData": "is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkUpkeep(bytes)": "6e04ff0d",
							"performUpkeep(bytes)": "4585e33b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":\"AutomationCompatibleInterface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b738dba680a6fbc4afc85819743f13f5b7f4790ec8634c9894e1160327b11b6e\",\"dweb:/ipfs/Qmbv3euvQppeBm2g61khcJSRMZWi78xUWzbnjKAvDBnka4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"checkUpkeep(bytes)": {
								"notice": "method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."
							},
							"performUpkeep(bytes)": {
								"notice": "method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."
							}
						},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol": {
				"AggregatorInterface": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "int256",
									"name": "current",
									"type": "int256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								}
							],
							"name": "AnswerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "startedBy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								}
							],
							"name": "NewRound",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								}
							],
							"name": "getAnswer",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								}
							],
							"name": "getTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestAnswer",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAnswer(uint256)": "b5ab58dc",
							"getTimestamp(uint256)": "b633620c",
							"latestAnswer()": "50d25bcd",
							"latestRound()": "668a0f02",
							"latestTimestamp()": "8205bf6a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"name\":\"AnswerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"startedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"}],\"name\":\"NewRound\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":\"AggregatorInterface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465\",\"dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol": {
				"AggregatorV2V3Interface": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "int256",
									"name": "current",
									"type": "int256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								}
							],
							"name": "AnswerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "startedBy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								}
							],
							"name": "NewRound",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								}
							],
							"name": "getAnswer",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								}
							],
							"name": "getTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestAnswer",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getAnswer(uint256)": "b5ab58dc",
							"getRoundData(uint80)": "9a6fc8f5",
							"getTimestamp(uint256)": "b633620c",
							"latestAnswer()": "50d25bcd",
							"latestRound()": "668a0f02",
							"latestRoundData()": "feaf968c",
							"latestTimestamp()": "8205bf6a",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"name\":\"AnswerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"startedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"}],\"name\":\"NewRound\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\":\"AggregatorV2V3Interface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465\",\"dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a\"]},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b\",\"dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG\"]},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol": {
				"VRFCoordinatorV2Interface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								}
							],
							"name": "acceptSubscriptionOwnerTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "consumer",
									"type": "address"
								}
							],
							"name": "addConsumer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "cancelSubscription",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "createSubscription",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRequestConfig",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								},
								{
									"internalType": "bytes32[]",
									"name": "",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								}
							],
							"name": "getSubscription",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "balance",
									"type": "uint96"
								},
								{
									"internalType": "uint64",
									"name": "reqCount",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "consumers",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								}
							],
							"name": "pendingRequestExists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "consumer",
									"type": "address"
								}
							],
							"name": "removeConsumer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "keyHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								},
								{
									"internalType": "uint16",
									"name": "minimumRequestConfirmations",
									"type": "uint16"
								},
								{
									"internalType": "uint32",
									"name": "callbackGasLimit",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "numWords",
									"type": "uint32"
								}
							],
							"name": "requestRandomWords",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "requestSubscriptionOwnerTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"acceptSubscriptionOwnerTransfer(uint64)": {
								"details": "will revert if original owner of subId has not requested that msg.sender become the new owner.",
								"params": {
									"subId": "- ID of the subscription"
								}
							},
							"addConsumer(uint64,address)": {
								"params": {
									"consumer": "- New consumer which can use the subscription",
									"subId": "- ID of the subscription"
								}
							},
							"cancelSubscription(uint64,address)": {
								"params": {
									"subId": "- ID of the subscription",
									"to": "- Where to send the remaining LINK to"
								}
							},
							"createSubscription()": {
								"details": "You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));",
								"returns": {
									"subId": "- A unique subscription id."
								}
							},
							"getRequestConfig()": {
								"returns": {
									"_0": "minimumRequestConfirmations global min for request confirmations",
									"_1": "maxGasLimit global max for request gas limit",
									"_2": "s_provingKeyHashes list of registered key hashes"
								}
							},
							"getSubscription(uint64)": {
								"params": {
									"subId": "- ID of the subscription"
								},
								"returns": {
									"balance": "- LINK balance of the subscription in juels.",
									"consumers": "- list of consumer address which are able to use this subscription.",
									"owner": "- owner of the subscription.",
									"reqCount": "- number of requests for this subscription, determines fee tier."
								}
							},
							"removeConsumer(uint64,address)": {
								"params": {
									"consumer": "- Consumer to remove from the subscription",
									"subId": "- ID of the subscription"
								}
							},
							"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)": {
								"params": {
									"callbackGasLimit": "- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]",
									"keyHash": "- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.",
									"minimumRequestConfirmations": "- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].",
									"numWords": "- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.",
									"subId": "- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."
								},
								"returns": {
									"requestId": "- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."
								}
							},
							"requestSubscriptionOwnerTransfer(uint64,address)": {
								"params": {
									"newOwner": "- proposed new owner of the subscription",
									"subId": "- ID of the subscription"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptSubscriptionOwnerTransfer(uint64)": "82359740",
							"addConsumer(uint64,address)": "7341c10c",
							"cancelSubscription(uint64,address)": "d7ae1d30",
							"createSubscription()": "a21a23e4",
							"getRequestConfig()": "00012291",
							"getSubscription(uint64)": "a47c7696",
							"pendingRequestExists(uint64)": "e82ad7d4",
							"removeConsumer(uint64,address)": "9f87fad7",
							"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)": "5d3b1d30",
							"requestSubscriptionOwnerTransfer(uint64,address)": "04c357cb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d66b2096987616cda4611c109d9904863872ca5852d736b30f0e19e49afde35f\",\"dweb:/ipfs/Qmc6jpm3k3YuJG7U2s3FWr81Vk2rdQBhdqD9sA6b8Cr9BE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptSubscriptionOwnerTransfer(uint64)": {
								"notice": "Request subscription owner transfer."
							},
							"addConsumer(uint64,address)": {
								"notice": "Add a consumer to a VRF subscription."
							},
							"cancelSubscription(uint64,address)": {
								"notice": "Cancel a subscription"
							},
							"createSubscription()": {
								"notice": "Create a VRF subscription."
							},
							"getRequestConfig()": {
								"notice": "Get configuration relevant for making requests"
							},
							"getSubscription(uint64)": {
								"notice": "Get a VRF subscription."
							},
							"removeConsumer(uint64,address)": {
								"notice": "Remove a consumer from a VRF subscription."
							},
							"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)": {
								"notice": "Request a set of random words."
							},
							"requestSubscriptionOwnerTransfer(uint64,address)": {
								"notice": "Request subscription owner transfer."
							}
						},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol": {
				"LinkTokenInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "remaining",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "decimalPlaces",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseApproval",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "increaseApproval",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "tokenName",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "tokenSymbol",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalTokensIssued",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseApproval(address,uint256)": "66188463",
							"increaseApproval(address,uint256)": "d73dd623",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokensIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":\"LinkTokenInterface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xac02fbc0c7d194e525a71f524d1f7c472df73e19c2b527d7b529badaeaf0ec51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://301fa881df623882941bdc7a807807df436c5c7da499fa1a4bbe490738109845\",\"dweb:/ipfs/QmV2W4NYpe6uk4s34sCyrFJHfPEjYAkvHUposWkXrRNtbj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol": {
				"VRFConsumerBaseV2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "have",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "want",
									"type": "address"
								}
							],
							"name": "OnlyCoordinatorCanFulfill",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "randomWords",
									"type": "uint256[]"
								}
							],
							"name": "rawFulfillRandomWords",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).",
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_vrfCoordinator": "address of VRFCoordinator contract"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"rawFulfillRandomWords(uint256,uint256[])": "1fe543e3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://038eef992d813c20737fbe94e3a36e5d541d1aa736158dd2a43dd5b840b8c360\",\"dweb:/ipfs/QmZWJ25Yr1sUSAsfJRKvTMDmGkmy63hHhB495CUL1bpNz4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "****************************************************************************Interface for contracts using VRF randomness *****************************************************************************",
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 530,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 536,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 538,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 540,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 542,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xD84D22D1835A3CA1124D5EF32EE0684F33800771 DUP1 0xC5 0xEA PUSH32 0xE8765448DE492764736F6C634300081600330000000000000000000000000000 ",
							"sourceMap": "751:5018:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xD84D22D1835A3CA1124D5EF32EE0684F33800771 DUP1 0xC5 0xEA PUSH32 0xE8765448DE492764736F6C634300081600330000000000000000000000000000 ",
							"sourceMap": "751:5018:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
								"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
								"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
								"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
								"src/DollarCostAveraging.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xC4 0xE3 MSTORE SELFBALANCE MSTORE 0xC 0xDD DUP6 0xD4 POP SELFBALANCE CALLCODE DUP8 PUSH32 0x29A37F5EEC48FFFAA17CB54307A6A87D8464736F6C6343000816003300000000 ",
							"sourceMap": "195:6066:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xC4 0xE3 MSTORE SELFBALANCE MSTORE 0xC 0xDD DUP6 0xD4 POP SELFBALANCE CALLCODE DUP8 PUSH32 0x29A37F5EEC48FFFAA17CB54307A6A87D8464736F6C6343000816003300000000 ",
							"sourceMap": "195:6066:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
								"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
								"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
								"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
								"src/DollarCostAveraging.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/DollarCostAveraging.sol": {
				"DollarCostAveraging": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_usdt",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_uniswapRouter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_oracle",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_vrfCoordinator",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "_subscriptionId",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "_link",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_keyHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "have",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "want",
									"type": "address"
								}
							],
							"name": "OnlyCoordinatorCanFulfill",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "frequency",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PlanCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "PlanStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "PlanStoped",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ethReceived",
									"type": "uint256"
								}
							],
							"name": "PlanTriggered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "frequency",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PlanUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "upkeepNeeded",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "coordinator",
							"outputs": [
								{
									"internalType": "contract VRFCoordinatorV2Interface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "frequency",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "createPlan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getAllowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "link",
							"outputs": [
								{
									"internalType": "contract LinkTokenInterface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nextTriggerTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "oracle",
							"outputs": [
								{
									"internalType": "contract AggregatorV2V3Interface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "plans",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "frequency",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "times",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "status",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "randomWords",
									"type": "uint256[]"
								}
							],
							"name": "rawFulfillRandomWords",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startPlan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopPlan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "triggerPlan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapRouter",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "frequency",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "updatePlan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdt",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userRandomRequestId",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "users",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"performUpkeep(bytes)": {
								"details": "The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.",
								"params": {
									"performData": "is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/DollarCostAveraging.sol\":645:7292  contract DollarCostAveraging  is VRFConsumerBaseV2, AutomationCompatibleInterface {... */\n  mstore(0x40, 0xa0)\n    /* \"src/DollarCostAveraging.sol\":1782:2467  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/DollarCostAveraging.sol\":2043:2058  _vrfCoordinator */\n  dup5\n    /* \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":5616:5631  _vrfCoordinator */\n  dup1\n    /* \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":5599:5631  vrfCoordinator = _vrfCoordinator */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":5556:5636  constructor(address _vrfCoordinator) {... */\n  pop\n    /* \"src/DollarCostAveraging.sol\":2080:2085  _usdt */\n  dup8\n    /* \"src/DollarCostAveraging.sol\":2067:2071  usdt */\n  0x04\n  0x00\n    /* \"src/DollarCostAveraging.sol\":2067:2086  usdt = ERC20(_usdt) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/DollarCostAveraging.sol\":2128:2142  _uniswapRouter */\n  dup7\n    /* \"src/DollarCostAveraging.sol\":2093:2106  uniswapRouter */\n  0x07\n  0x00\n    /* \"src/DollarCostAveraging.sol\":2093:2143  uniswapRouter = IUniswapV2Router02(_uniswapRouter) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/DollarCostAveraging.sol\":2183:2190  _oracle */\n  dup6\n    /* \"src/DollarCostAveraging.sol\":2150:2156  oracle */\n  0x08\n  0x00\n    /* \"src/DollarCostAveraging.sol\":2150:2191  oracle = AggregatorV2V3Interface(_oracle) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/DollarCostAveraging.sol\":2206:2207  1 */\n  0x01\n    /* \"src/DollarCostAveraging.sol\":2198:2203  nonce */\n  0x09\n    /* \"src/DollarCostAveraging.sol\":2198:2207  nonce = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/DollarCostAveraging.sol\":2224:2232  _keyHash */\n  dup2\n    /* \"src/DollarCostAveraging.sol\":2214:2221  keyHash */\n  0x0a\n    /* \"src/DollarCostAveraging.sol\":2214:2232  keyHash = _keyHash */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/DollarCostAveraging.sol\":2245:2249  _fee */\n  dup1\n    /* \"src/DollarCostAveraging.sol\":2239:2242  fee */\n  0x0b\n    /* \"src/DollarCostAveraging.sol\":2239:2249  fee = _fee */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/DollarCostAveraging.sol\":2284:2289  _link */\n  dup3\n    /* \"src/DollarCostAveraging.sol\":2258:2262  link */\n  0x05\n  0x00\n    /* \"src/DollarCostAveraging.sol\":2258:2290  link = LinkTokenInterface(_link) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/DollarCostAveraging.sol\":2337:2352  _vrfCoordinator */\n  dup5\n    /* \"src/DollarCostAveraging.sol\":2297:2308  coordinator */\n  0x06\n  0x00\n    /* \"src/DollarCostAveraging.sol\":2297:2353  coordinator = VRFCoordinatorV2Interface(_vrfCoordinator) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/DollarCostAveraging.sol\":2377:2392  _subscriptionId */\n  dup4\n    /* \"src/DollarCostAveraging.sol\":2360:2374  subscriptionId */\n  0x06\n  0x14\n    /* \"src/DollarCostAveraging.sol\":2360:2392  subscriptionId = _subscriptionId */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/DollarCostAveraging.sol\":1782:2467  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"src/DollarCostAveraging.sol\":645:7292  contract DollarCostAveraging  is VRFConsumerBaseV2, AutomationCompatibleInterface {... */\n  jump(tag_8)\n    /* \"#utility.yul\":88:205   */\ntag_10:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_12:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_13:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_31\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_12\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_14:\n    /* \"#utility.yul\":641:665   */\n  tag_33\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_13\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_34:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_15:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_36\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_14\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:946   */\ntag_16:\n    /* \"#utility.yul\":881:888   */\n  0x00\n    /* \"#utility.yul\":921:939   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":914:919   */\n  dup3\n    /* \"#utility.yul\":910:940   */\n  and\n    /* \"#utility.yul\":899:940   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:946   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":952:1072   */\ntag_17:\n    /* \"#utility.yul\":1024:1047   */\n  tag_39\n    /* \"#utility.yul\":1041:1046   */\n  dup2\n    /* \"#utility.yul\":1024:1047   */\n  tag_16\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1017:1022   */\n  dup2\n    /* \"#utility.yul\":1014:1048   */\n  eq\n    /* \"#utility.yul\":1004:1066   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1062:1063   */\n  0x00\n    /* \"#utility.yul\":1059:1060   */\n  dup1\n    /* \"#utility.yul\":1052:1064   */\n  revert\n    /* \"#utility.yul\":1004:1066   */\ntag_40:\n    /* \"#utility.yul\":952:1072   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1078:1219   */\ntag_18:\n    /* \"#utility.yul\":1134:1139   */\n  0x00\n    /* \"#utility.yul\":1165:1171   */\n  dup2\n    /* \"#utility.yul\":1159:1172   */\n  mload\n    /* \"#utility.yul\":1150:1172   */\n  swap1\n  pop\n    /* \"#utility.yul\":1181:1213   */\n  tag_42\n    /* \"#utility.yul\":1207:1212   */\n  dup2\n    /* \"#utility.yul\":1181:1213   */\n  tag_17\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1078:1219   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1225:1302   */\ntag_19:\n    /* \"#utility.yul\":1262:1269   */\n  0x00\n    /* \"#utility.yul\":1291:1296   */\n  dup2\n    /* \"#utility.yul\":1280:1296   */\n  swap1\n  pop\n    /* \"#utility.yul\":1225:1302   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1308:1430   */\ntag_20:\n    /* \"#utility.yul\":1381:1405   */\n  tag_45\n    /* \"#utility.yul\":1399:1404   */\n  dup2\n    /* \"#utility.yul\":1381:1405   */\n  tag_19\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1374:1379   */\n  dup2\n    /* \"#utility.yul\":1371:1406   */\n  eq\n    /* \"#utility.yul\":1361:1424   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":1420:1421   */\n  0x00\n    /* \"#utility.yul\":1417:1418   */\n  dup1\n    /* \"#utility.yul\":1410:1422   */\n  revert\n    /* \"#utility.yul\":1361:1424   */\ntag_46:\n    /* \"#utility.yul\":1308:1430   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1436:1579   */\ntag_21:\n    /* \"#utility.yul\":1493:1498   */\n  0x00\n    /* \"#utility.yul\":1524:1530   */\n  dup2\n    /* \"#utility.yul\":1518:1531   */\n  mload\n    /* \"#utility.yul\":1509:1531   */\n  swap1\n  pop\n    /* \"#utility.yul\":1540:1573   */\n  tag_48\n    /* \"#utility.yul\":1567:1572   */\n  dup2\n    /* \"#utility.yul\":1540:1573   */\n  tag_20\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1436:1579   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1585:1662   */\ntag_22:\n    /* \"#utility.yul\":1622:1629   */\n  0x00\n    /* \"#utility.yul\":1651:1656   */\n  dup2\n    /* \"#utility.yul\":1640:1656   */\n  swap1\n  pop\n    /* \"#utility.yul\":1585:1662   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1668:1790   */\ntag_23:\n    /* \"#utility.yul\":1741:1765   */\n  tag_51\n    /* \"#utility.yul\":1759:1764   */\n  dup2\n    /* \"#utility.yul\":1741:1765   */\n  tag_22\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1734:1739   */\n  dup2\n    /* \"#utility.yul\":1731:1766   */\n  eq\n    /* \"#utility.yul\":1721:1784   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1780:1781   */\n  0x00\n    /* \"#utility.yul\":1777:1778   */\n  dup1\n    /* \"#utility.yul\":1770:1782   */\n  revert\n    /* \"#utility.yul\":1721:1784   */\ntag_52:\n    /* \"#utility.yul\":1668:1790   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1796:1939   */\ntag_24:\n    /* \"#utility.yul\":1853:1858   */\n  0x00\n    /* \"#utility.yul\":1884:1890   */\n  dup2\n    /* \"#utility.yul\":1878:1891   */\n  mload\n    /* \"#utility.yul\":1869:1891   */\n  swap1\n  pop\n    /* \"#utility.yul\":1900:1933   */\n  tag_54\n    /* \"#utility.yul\":1927:1932   */\n  dup2\n    /* \"#utility.yul\":1900:1933   */\n  tag_23\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1796:1939   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1945:3391   */\ntag_3:\n    /* \"#utility.yul\":2077:2083   */\n  0x00\n    /* \"#utility.yul\":2085:2091   */\n  dup1\n    /* \"#utility.yul\":2093:2099   */\n  0x00\n    /* \"#utility.yul\":2101:2107   */\n  dup1\n    /* \"#utility.yul\":2109:2115   */\n  0x00\n    /* \"#utility.yul\":2117:2123   */\n  dup1\n    /* \"#utility.yul\":2125:2131   */\n  0x00\n    /* \"#utility.yul\":2133:2139   */\n  dup1\n    /* \"#utility.yul\":2182:2185   */\n  0x0100\n    /* \"#utility.yul\":2170:2179   */\n  dup10\n    /* \"#utility.yul\":2161:2168   */\n  dup12\n    /* \"#utility.yul\":2157:2180   */\n  sub\n    /* \"#utility.yul\":2153:2186   */\n  slt\n    /* \"#utility.yul\":2150:2270   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":2189:2268   */\n  tag_57\n  tag_10\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2150:2270   */\ntag_56:\n    /* \"#utility.yul\":2309:2310   */\n  0x00\n    /* \"#utility.yul\":2334:2398   */\n  tag_58\n    /* \"#utility.yul\":2390:2397   */\n  dup12\n    /* \"#utility.yul\":2381:2387   */\n  dup3\n    /* \"#utility.yul\":2370:2379   */\n  dup13\n    /* \"#utility.yul\":2366:2388   */\n  add\n    /* \"#utility.yul\":2334:2398   */\n  tag_15\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2324:2398   */\n  swap9\n  pop\n    /* \"#utility.yul\":2280:2408   */\n  pop\n    /* \"#utility.yul\":2447:2449   */\n  0x20\n    /* \"#utility.yul\":2473:2537   */\n  tag_59\n    /* \"#utility.yul\":2529:2536   */\n  dup12\n    /* \"#utility.yul\":2520:2526   */\n  dup3\n    /* \"#utility.yul\":2509:2518   */\n  dup13\n    /* \"#utility.yul\":2505:2527   */\n  add\n    /* \"#utility.yul\":2473:2537   */\n  tag_15\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2463:2537   */\n  swap8\n  pop\n    /* \"#utility.yul\":2418:2547   */\n  pop\n    /* \"#utility.yul\":2586:2588   */\n  0x40\n    /* \"#utility.yul\":2612:2676   */\n  tag_60\n    /* \"#utility.yul\":2668:2675   */\n  dup12\n    /* \"#utility.yul\":2659:2665   */\n  dup3\n    /* \"#utility.yul\":2648:2657   */\n  dup13\n    /* \"#utility.yul\":2644:2666   */\n  add\n    /* \"#utility.yul\":2612:2676   */\n  tag_15\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2602:2676   */\n  swap7\n  pop\n    /* \"#utility.yul\":2557:2686   */\n  pop\n    /* \"#utility.yul\":2725:2727   */\n  0x60\n    /* \"#utility.yul\":2751:2815   */\n  tag_61\n    /* \"#utility.yul\":2807:2814   */\n  dup12\n    /* \"#utility.yul\":2798:2804   */\n  dup3\n    /* \"#utility.yul\":2787:2796   */\n  dup13\n    /* \"#utility.yul\":2783:2805   */\n  add\n    /* \"#utility.yul\":2751:2815   */\n  tag_15\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2741:2815   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2825   */\n  pop\n    /* \"#utility.yul\":2864:2867   */\n  0x80\n    /* \"#utility.yul\":2891:2954   */\n  tag_62\n    /* \"#utility.yul\":2946:2953   */\n  dup12\n    /* \"#utility.yul\":2937:2943   */\n  dup3\n    /* \"#utility.yul\":2926:2935   */\n  dup13\n    /* \"#utility.yul\":2922:2944   */\n  add\n    /* \"#utility.yul\":2891:2954   */\n  tag_18\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2881:2954   */\n  swap5\n  pop\n    /* \"#utility.yul\":2835:2964   */\n  pop\n    /* \"#utility.yul\":3003:3006   */\n  0xa0\n    /* \"#utility.yul\":3030:3094   */\n  tag_63\n    /* \"#utility.yul\":3086:3093   */\n  dup12\n    /* \"#utility.yul\":3077:3083   */\n  dup3\n    /* \"#utility.yul\":3066:3075   */\n  dup13\n    /* \"#utility.yul\":3062:3084   */\n  add\n    /* \"#utility.yul\":3030:3094   */\n  tag_15\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":3020:3094   */\n  swap4\n  pop\n    /* \"#utility.yul\":2974:3104   */\n  pop\n    /* \"#utility.yul\":3143:3146   */\n  0xc0\n    /* \"#utility.yul\":3170:3234   */\n  tag_64\n    /* \"#utility.yul\":3226:3233   */\n  dup12\n    /* \"#utility.yul\":3217:3223   */\n  dup3\n    /* \"#utility.yul\":3206:3215   */\n  dup13\n    /* \"#utility.yul\":3202:3224   */\n  add\n    /* \"#utility.yul\":3170:3234   */\n  tag_21\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":3160:3234   */\n  swap3\n  pop\n    /* \"#utility.yul\":3114:3244   */\n  pop\n    /* \"#utility.yul\":3283:3286   */\n  0xe0\n    /* \"#utility.yul\":3310:3374   */\n  tag_65\n    /* \"#utility.yul\":3366:3373   */\n  dup12\n    /* \"#utility.yul\":3357:3363   */\n  dup3\n    /* \"#utility.yul\":3346:3355   */\n  dup13\n    /* \"#utility.yul\":3342:3364   */\n  add\n    /* \"#utility.yul\":3310:3374   */\n  tag_24\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":3300:3374   */\n  swap2\n  pop\n    /* \"#utility.yul\":3254:3384   */\n  pop\n    /* \"#utility.yul\":1945:3391   */\n  swap3\n  swap6\n  swap9\n  pop\n  swap3\n  swap6\n  swap9\n  swap1\n  swap4\n  swap7\n  pop\n  jump\t// out\n    /* \"src/DollarCostAveraging.sol\":645:7292  contract DollarCostAveraging  is VRFConsumerBaseV2, AutomationCompatibleInterface {... */\ntag_8:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x8586db4d455815a39f944c6482f8b7cc335b89167bd8c878a6c267d22cff219e\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/DollarCostAveraging.sol\":645:7292  contract DollarCostAveraging  is VRFConsumerBaseV2, AutomationCompatibleInterface {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7dc0d1d0\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xb197df54\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xb197df54\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc440fa0f\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc966494e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd930da60\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xeb5a662e\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x7dc0d1d0\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x83ceae8d\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x86d86d84\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa63661a5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xaffed0e0\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x2f48ab7d\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x2f48ab7d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x365b98b2\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4585e33b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6e04ff0d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x735de9f7\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0xe1801c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0a009097\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1c4695f4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1fe543e3\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/DollarCostAveraging.sol\":3157:3553  function updatePlan(uint256 frequency, uint256 amount) public {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"src/DollarCostAveraging.sol\":1538:1582  VRFCoordinatorV2Interface public coordinator */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DollarCostAveraging.sol\":1503:1533  LinkTokenInterface public link */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":6618:6874  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"src/DollarCostAveraging.sol\":1481:1498  ERC20 public usdt */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DollarCostAveraging.sol\":1253:1293  mapping(uint256 => address) public users */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DollarCostAveraging.sol\":7050:7254  function performUpkeep(bytes calldata performData) external override {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      stop\n        /* \"src/DollarCostAveraging.sol\":6547:7042  function checkUpkeep(... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_68\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DollarCostAveraging.sol\":1613:1652  IUniswapV2Router02 public uniswapRouter */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DollarCostAveraging.sol\":1657:1694  AggregatorV2V3Interface public oracle */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DollarCostAveraging.sol\":1424:1474  mapping(address => uint256) public nextTriggerTime */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DollarCostAveraging.sol\":1211:1248  mapping(address => Plan) public plans */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_91\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DollarCostAveraging.sol\":3559:4038  function startPlan() public {    ... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      stop\n        /* \"src/DollarCostAveraging.sol\":1699:1719  uint256 public nonce */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DollarCostAveraging.sol\":2600:3151  function createPlan(uint256 frequency, uint256 amount) public {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      stop\n        /* \"src/DollarCostAveraging.sol\":4591:6177  function triggerPlan(address user) public {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      stop\n        /* \"src/DollarCostAveraging.sol\":1365:1419  mapping(uint256 => address) public userRandomRequestId */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DollarCostAveraging.sol\":4044:4212  function stopPlan() public {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      stop\n        /* \"src/DollarCostAveraging.sol\":2473:2594  function getAllowance(address user) public view returns (uint256) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_117\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DollarCostAveraging.sol\":3157:3553  function updatePlan(uint256 frequency, uint256 amount) public {... */\n    tag_31:\n        /* \"src/DollarCostAveraging.sol\":3260:3261  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":3234:3239  plans */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":3234:3251  plans[msg.sender] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":3240:3250  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":3234:3251  plans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":3234:3257  plans[msg.sender].index */\n      0x00\n      add\n      sload\n        /* \"src/DollarCostAveraging.sol\":3234:3261  plans[msg.sender].index > 0 */\n      gt\n        /* \"src/DollarCostAveraging.sol\":3226:3279  require(plans[msg.sender].index > 0, \"Plan is exist\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"src/DollarCostAveraging.sol\":3306:3307  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":3294:3303  frequency */\n      dup3\n        /* \"src/DollarCostAveraging.sol\":3294:3307  frequency > 0 */\n      gt\n        /* \"src/DollarCostAveraging.sol\":3286:3344  require(frequency > 0, \"Frequency must be greater than 0\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"src/DollarCostAveraging.sol\":3368:3369  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":3359:3365  amount */\n      dup2\n        /* \"src/DollarCostAveraging.sol\":3359:3369  amount > 0 */\n      gt\n        /* \"src/DollarCostAveraging.sol\":3351:3403  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"src/DollarCostAveraging.sol\":3439:3445  amount */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":3412:3417  plans */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":3412:3429  plans[msg.sender] */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":3418:3428  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":3412:3429  plans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":3412:3436  plans[msg.sender].amount */\n      0x02\n      add\n        /* \"src/DollarCostAveraging.sol\":3412:3445  plans[msg.sender].amount = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/DollarCostAveraging.sol\":3482:3491  frequency */\n      dup2\n        /* \"src/DollarCostAveraging.sol\":3452:3457  plans */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":3452:3469  plans[msg.sender] */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":3458:3468  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":3452:3469  plans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":3452:3479  plans[msg.sender].frequency */\n      0x01\n      add\n        /* \"src/DollarCostAveraging.sol\":3452:3491  plans[msg.sender].frequency = frequency */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/DollarCostAveraging.sol\":3517:3527  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":3505:3547  PlanUpdated(msg.sender, frequency, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc8108639f5e0627bac90449607e60d516a5082452e397808a067b57f755515fc\n        /* \"src/DollarCostAveraging.sol\":3529:3538  frequency */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":3540:3546  amount */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":3505:3547  PlanUpdated(msg.sender, frequency, amount) */\n      mload(0x40)\n      tag_131\n      swap3\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/DollarCostAveraging.sol\":3157:3553  function updatePlan(uint256 frequency, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":1538:1582  VRFCoordinatorV2Interface public coordinator */\n    tag_34:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":1503:1533  LinkTokenInterface public link */\n    tag_39:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":6618:6874  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {... */\n    tag_46:\n        /* \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":6731:6745  vrfCoordinator */\n      immutable(\"0x8586db4d455815a39f944c6482f8b7cc335b89167bd8c878a6c267d22cff219e\")\n        /* \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":6717:6745  msg.sender != vrfCoordinator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":6717:6727  msg.sender */\n      caller\n        /* \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":6717:6745  msg.sender != vrfCoordinator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":6713:6822  if (msg.sender != vrfCoordinator) {... */\n      tag_134\n      jumpi\n        /* \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":6788:6798  msg.sender */\n      caller\n        /* \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":6800:6814  vrfCoordinator */\n      immutable(\"0x8586db4d455815a39f944c6482f8b7cc335b89167bd8c878a6c267d22cff219e\")\n        /* \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":6762:6815  OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator) */\n      mload(0x40)\n      0x1cf993f400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap3\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":6713:6822  if (msg.sender != vrfCoordinator) {... */\n    tag_134:\n        /* \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":6827:6869  fulfillRandomWords(requestId, randomWords) */\n      tag_137\n        /* \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":6846:6855  requestId */\n      dup3\n        /* \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":6857:6868  randomWords */\n      dup3\n        /* \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":6827:6845  fulfillRandomWords */\n      tag_138\n        /* \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":6827:6869  fulfillRandomWords(requestId, randomWords) */\n      jump\t// in\n    tag_137:\n        /* \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":6618:6874  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":1481:1498  ERC20 public usdt */\n    tag_49:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":1253:1293  mapping(uint256 => address) public users */\n    tag_56:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":7050:7254  function performUpkeep(bytes calldata performData) external override {... */\n    tag_63:\n        /* \"src/DollarCostAveraging.sol\":7131:7143  address user */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":7172:7183  performData */\n      dup3\n      dup3\n        /* \"src/DollarCostAveraging.sol\":7147:7218  abi.decode(... */\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"src/DollarCostAveraging.sol\":7130:7218  (address user) = abi.decode(... */\n      swap1\n      pop\n        /* \"src/DollarCostAveraging.sol\":7229:7246  triggerPlan(user) */\n      tag_142\n        /* \"src/DollarCostAveraging.sol\":7241:7245  user */\n      dup2\n        /* \"src/DollarCostAveraging.sol\":7229:7240  triggerPlan */\n      tag_107\n        /* \"src/DollarCostAveraging.sol\":7229:7246  triggerPlan(user) */\n      jump\t// in\n    tag_142:\n        /* \"src/DollarCostAveraging.sol\":7119:7254  {... */\n      pop\n        /* \"src/DollarCostAveraging.sol\":7050:7254  function performUpkeep(bytes calldata performData) external override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":6547:7042  function checkUpkeep(... */\n    tag_67:\n        /* \"src/DollarCostAveraging.sol\":6684:6701  bool upkeepNeeded */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":6703:6727  bytes memory performData */\n      0x60\n        /* \"src/DollarCostAveraging.sol\":6743:6755  address user */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":6758:6763  users */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":6758:6795  users[block.number % (nonce - 1) + 1] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":6793:6794  1 */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":6788:6789  1 */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":6780:6785  nonce */\n      sload(0x09)\n        /* \"src/DollarCostAveraging.sol\":6780:6789  nonce - 1 */\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"src/DollarCostAveraging.sol\":6764:6776  block.number */\n      number\n        /* \"src/DollarCostAveraging.sol\":6764:6790  block.number % (nonce - 1) */\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"src/DollarCostAveraging.sol\":6764:6794  block.number % (nonce - 1) + 1 */\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"src/DollarCostAveraging.sol\":6758:6795  users[block.number % (nonce - 1) + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DollarCostAveraging.sol\":6743:6795  address user = users[block.number % (nonce - 1) + 1] */\n      swap1\n      pop\n        /* \"src/DollarCostAveraging.sol\":6819:6824  false */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":6804:6824  upkeepNeeded = false */\n      swap3\n      pop\n        /* \"src/DollarCostAveraging.sol\":6854:6869  nextTriggerTime */\n      0x03\n        /* \"src/DollarCostAveraging.sol\":6854:6875  nextTriggerTime[user] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":6870:6874  user */\n      dup3\n        /* \"src/DollarCostAveraging.sol\":6854:6875  nextTriggerTime[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/DollarCostAveraging.sol\":6836:6851  block.timestamp */\n      timestamp\n        /* \"src/DollarCostAveraging.sol\":6836:6875  block.timestamp > nextTriggerTime[user] */\n      gt\n        /* \"src/DollarCostAveraging.sol\":6836:6904  block.timestamp > nextTriggerTime[user] && nextTriggerTime[user] > 0 */\n      dup1\n      iszero\n      tag_150\n      jumpi\n      pop\n        /* \"src/DollarCostAveraging.sol\":6903:6904  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":6879:6894  nextTriggerTime */\n      0x03\n        /* \"src/DollarCostAveraging.sol\":6879:6900  nextTriggerTime[user] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":6895:6899  user */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":6879:6900  nextTriggerTime[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/DollarCostAveraging.sol\":6879:6904  nextTriggerTime[user] > 0 */\n      gt\n        /* \"src/DollarCostAveraging.sol\":6836:6904  block.timestamp > nextTriggerTime[user] && nextTriggerTime[user] > 0 */\n    tag_150:\n        /* \"src/DollarCostAveraging.sol\":6833:6945  if(block.timestamp > nextTriggerTime[user] && nextTriggerTime[user] > 0){... */\n      iszero\n      tag_151\n      jumpi\n        /* \"src/DollarCostAveraging.sol\":6931:6935  true */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":6916:6935  upkeepNeeded = true */\n      swap3\n      pop\n        /* \"src/DollarCostAveraging.sol\":6833:6945  if(block.timestamp > nextTriggerTime[user] && nextTriggerTime[user] > 0){... */\n    tag_151:\n        /* \"src/DollarCostAveraging.sol\":6986:6990  user */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":6975:6991  abi.encode(user) */\n      add(0x20, mload(0x40))\n      tag_152\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/DollarCostAveraging.sol\":6961:6991  performData = abi.encode(user) */\n      swap2\n      pop\n        /* \"src/DollarCostAveraging.sol\":7000:7034  return (upkeepNeeded, performData) */\n      pop\n        /* \"src/DollarCostAveraging.sol\":6547:7042  function checkUpkeep(... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":1613:1652  IUniswapV2Router02 public uniswapRouter */\n    tag_72:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":1657:1694  AggregatorV2V3Interface public oracle */\n    tag_77:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":1424:1474  mapping(address => uint256) public nextTriggerTime */\n    tag_84:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":1211:1248  mapping(address => Plan) public plans */\n    tag_90:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      pop\n      dup7\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":3559:4038  function startPlan() public {    ... */\n    tag_95:\n        /* \"src/DollarCostAveraging.sol\":3632:3633  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":3606:3611  plans */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":3606:3623  plans[msg.sender] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":3612:3622  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":3606:3623  plans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":3606:3629  plans[msg.sender].index */\n      0x00\n      add\n      sload\n        /* \"src/DollarCostAveraging.sol\":3606:3633  plans[msg.sender].index > 0 */\n      gt\n        /* \"src/DollarCostAveraging.sol\":3598:3655  require(plans[msg.sender].index > 0, \"Plan is not exist\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n        /* \"src/DollarCostAveraging.sol\":3697:3698  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":3670:3675  plans */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":3670:3687  plans[msg.sender] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":3676:3686  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":3670:3687  plans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":3670:3694  plans[msg.sender].amount */\n      0x02\n      add\n      sload\n        /* \"src/DollarCostAveraging.sol\":3670:3698  plans[msg.sender].amount > 0 */\n      gt\n        /* \"src/DollarCostAveraging.sol\":3662:3732  require(plans[msg.sender].amount > 0, \"Amount must be greater than 0\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_130\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"src/DollarCostAveraging.sol\":3774:3779  plans */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":3774:3791  plans[msg.sender] */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":3780:3790  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":3774:3791  plans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":3774:3798  plans[msg.sender].amount */\n      0x02\n      add\n      sload\n        /* \"src/DollarCostAveraging.sol\":3747:3771  getAllowance(msg.sender) */\n      tag_159\n        /* \"src/DollarCostAveraging.sol\":3760:3770  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":3747:3759  getAllowance */\n      tag_119\n        /* \"src/DollarCostAveraging.sol\":3747:3771  getAllowance(msg.sender) */\n      jump\t// in\n    tag_159:\n        /* \"src/DollarCostAveraging.sol\":3747:3798  getAllowance(msg.sender) > plans[msg.sender].amount */\n      gt\n        /* \"src/DollarCostAveraging.sol\":3739:3836  require(getAllowance(msg.sender) > plans[msg.sender].amount, \"Total must be greater than amount\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"src/DollarCostAveraging.sol\":3879:3894  block.timestamp */\n      timestamp\n        /* \"src/DollarCostAveraging.sol\":3851:3856  plans */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":3851:3868  plans[msg.sender] */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":3857:3867  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":3851:3868  plans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":3851:3876  plans[msg.sender].startAt */\n      0x03\n      add\n        /* \"src/DollarCostAveraging.sol\":3851:3894  plans[msg.sender].startAt = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/DollarCostAveraging.sol\":3927:3928  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":3901:3906  plans */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":3901:3918  plans[msg.sender] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":3907:3917  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":3901:3918  plans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":3901:3924  plans[msg.sender].times */\n      0x04\n      add\n        /* \"src/DollarCostAveraging.sol\":3901:3928  plans[msg.sender].times = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/DollarCostAveraging.sol\":3962:3963  1 */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":3935:3940  plans */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":3935:3952  plans[msg.sender] */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":3941:3951  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":3935:3952  plans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":3935:3959  plans[msg.sender].status */\n      0x05\n      add\n        /* \"src/DollarCostAveraging.sol\":3935:3963  plans[msg.sender].status = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/DollarCostAveraging.sol\":3987:3997  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":3975:3998  PlanStarted(msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa806cf17be1fb3cff26c4a6a46b735ddbf2ac07c138bdedb6d2ace798a2cfd40\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/DollarCostAveraging.sol\":4007:4032  requestRandom(msg.sender) */\n      tag_163\n        /* \"src/DollarCostAveraging.sol\":4021:4031  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":4007:4020  requestRandom */\n      tag_164\n        /* \"src/DollarCostAveraging.sol\":4007:4032  requestRandom(msg.sender) */\n      jump\t// in\n    tag_163:\n        /* \"src/DollarCostAveraging.sol\":3559:4038  function startPlan() public {    ... */\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":1699:1719  uint256 public nonce */\n    tag_98:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":2600:3151  function createPlan(uint256 frequency, uint256 amount) public {... */\n    tag_103:\n        /* \"src/DollarCostAveraging.sol\":2704:2705  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2677:2682  plans */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":2677:2694  plans[msg.sender] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2683:2693  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":2677:2694  plans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":2677:2700  plans[msg.sender].index */\n      0x00\n      add\n      sload\n        /* \"src/DollarCostAveraging.sol\":2677:2705  plans[msg.sender].index == 0 */\n      eq\n        /* \"src/DollarCostAveraging.sol\":2669:2723  require(plans[msg.sender].index == 0, \"Plan is exist\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap1\n      tag_124\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"src/DollarCostAveraging.sol\":2750:2751  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2738:2747  frequency */\n      dup3\n        /* \"src/DollarCostAveraging.sol\":2738:2751  frequency > 0 */\n      gt\n        /* \"src/DollarCostAveraging.sol\":2730:2788  require(frequency > 0, \"Frequency must be greater than 0\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_127\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"src/DollarCostAveraging.sol\":2812:2813  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2803:2809  amount */\n      dup2\n        /* \"src/DollarCostAveraging.sol\":2803:2813  amount > 0 */\n      gt\n        /* \"src/DollarCostAveraging.sol\":2795:2847  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_130\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"src/DollarCostAveraging.sol\":2871:2881  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":2856:2861  users */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":2856:2868  users[nonce] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2862:2867  nonce */\n      sload(0x09)\n        /* \"src/DollarCostAveraging.sol\":2856:2868  users[nonce] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2856:2881  users[nonce] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/DollarCostAveraging.sol\":2914:3070  Plan({... */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"src/DollarCostAveraging.sol\":2935:2940  nonce */\n      0x09\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2935:2942  nonce++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_172\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"src/DollarCostAveraging.sol\":2914:3070  Plan({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/DollarCostAveraging.sol\":2962:2971  frequency */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":2914:3070  Plan({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/DollarCostAveraging.sol\":2988:2994  amount */\n      dup3\n        /* \"src/DollarCostAveraging.sol\":2914:3070  Plan({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/DollarCostAveraging.sol\":3012:3027  block.timestamp */\n      timestamp\n        /* \"src/DollarCostAveraging.sol\":2914:3070  Plan({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/DollarCostAveraging.sol\":3043:3044  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2914:3070  Plan({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/DollarCostAveraging.sol\":3061:3062  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2914:3070  Plan({... */\n      dup2\n      mstore\n      pop\n        /* \"src/DollarCostAveraging.sol\":2894:2899  plans */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2894:2911  plans[msg.sender] */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":2900:2910  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":2894:2911  plans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":2894:3070  plans[msg.sender] = Plan({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"src/DollarCostAveraging.sol\":3094:3104  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":3082:3124  PlanCreated(msg.sender, frequency, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x89d3f1cdfad4e5c26535ac23dc61cf9e975667801747518f01b1b653545d736a\n        /* \"src/DollarCostAveraging.sol\":3106:3115  frequency */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":3117:3123  amount */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":3082:3124  PlanCreated(msg.sender, frequency, amount) */\n      mload(0x40)\n      tag_174\n      swap3\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/DollarCostAveraging.sol\":3134:3145  startPlan() */\n      tag_175\n        /* \"src/DollarCostAveraging.sol\":3134:3143  startPlan */\n      tag_95\n        /* \"src/DollarCostAveraging.sol\":3134:3145  startPlan() */\n      jump\t// in\n    tag_175:\n        /* \"src/DollarCostAveraging.sol\":2600:3151  function createPlan(uint256 frequency, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":4591:6177  function triggerPlan(address user) public {... */\n    tag_107:\n        /* \"src/DollarCostAveraging.sol\":4670:4671  1 */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":4648:4653  plans */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":4648:4659  plans[user] */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":4654:4658  user */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":4648:4659  plans[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":4648:4666  plans[user].status */\n      0x05\n      add\n      sload\n        /* \"src/DollarCostAveraging.sol\":4648:4671  plans[user].status == 1 */\n      eq\n        /* \"src/DollarCostAveraging.sol\":4640:4694  require(plans[user].status == 1, \"Plan is not active\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"src/DollarCostAveraging.sol\":4730:4735  plans */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":4730:4741  plans[user] */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":4736:4740  user */\n      dup3\n        /* \"src/DollarCostAveraging.sol\":4730:4741  plans[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":4730:4748  plans[user].amount */\n      0x02\n      add\n      sload\n        /* \"src/DollarCostAveraging.sol\":4709:4727  getAllowance(user) */\n      tag_180\n        /* \"src/DollarCostAveraging.sol\":4722:4726  user */\n      dup3\n        /* \"src/DollarCostAveraging.sol\":4709:4721  getAllowance */\n      tag_119\n        /* \"src/DollarCostAveraging.sol\":4709:4727  getAllowance(user) */\n      jump\t// in\n    tag_180:\n        /* \"src/DollarCostAveraging.sol\":4709:4748  getAllowance(user) > plans[user].amount */\n      gt\n        /* \"src/DollarCostAveraging.sol\":4701:4794  require(getAllowance(user) > plans[user].amount, \"Cannot trigger more than remaining amount\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"src/DollarCostAveraging.sol\":4829:4844  nextTriggerTime */\n      0x03\n        /* \"src/DollarCostAveraging.sol\":4829:4850  nextTriggerTime[user] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":4845:4849  user */\n      dup3\n        /* \"src/DollarCostAveraging.sol\":4829:4850  nextTriggerTime[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/DollarCostAveraging.sol\":4809:4824  block.timestamp */\n      timestamp\n        /* \"src/DollarCostAveraging.sol\":4809:4850  block.timestamp >=  nextTriggerTime[user] */\n      lt\n      iszero\n        /* \"src/DollarCostAveraging.sol\":4801:4894  require(block.timestamp >=  nextTriggerTime[user], \"Cannot trigger before next trigger time\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"src/DollarCostAveraging.sol\":4903:4917  uint256 amount */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":4920:4925  plans */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":4920:4931  plans[user] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":4926:4930  user */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":4920:4931  plans[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":4920:4938  plans[user].amount */\n      0x02\n      add\n      sload\n        /* \"src/DollarCostAveraging.sol\":4903:4938  uint256 amount = plans[user].amount */\n      swap1\n      pop\n        /* \"src/DollarCostAveraging.sol\":4950:4965  int256 ethPrice */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":4975:4981  oracle */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DollarCostAveraging.sol\":4975:4997  oracle.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"src/DollarCostAveraging.sol\":4975:4999  oracle.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_188\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_188:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_189\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"src/DollarCostAveraging.sol\":4947:4999  (, int256 ethPrice, , , ) = oracle.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"src/DollarCostAveraging.sol\":5025:5049  uint256 ethPriceDecimals */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":5052:5058  oracle */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DollarCostAveraging.sol\":5052:5067  oracle.decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"src/DollarCostAveraging.sol\":5052:5069  oracle.decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_192\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_192:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_193\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n        /* \"src/DollarCostAveraging.sol\":5025:5069  uint256 ethPriceDecimals = oracle.decimals() */\n      0xff\n      and\n      swap1\n      pop\n        /* \"src/DollarCostAveraging.sol\":5078:5095  uint256 ethAmount */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":5149:5165  ethPriceDecimals */\n      dup2\n        /* \"src/DollarCostAveraging.sol\":5144:5146  18 */\n      0x12\n        /* \"src/DollarCostAveraging.sol\":5144:5165  18 - ethPriceDecimals */\n      tag_195\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_195:\n        /* \"src/DollarCostAveraging.sol\":5137:5139  10 */\n      0x0a\n        /* \"src/DollarCostAveraging.sol\":5137:5166  10 ** (18 - ethPriceDecimals) */\n      tag_196\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"src/DollarCostAveraging.sol\":5124:5132  ethPrice */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":5108:5112  1e18 */\n      0x0de0b6b3a7640000\n        /* \"src/DollarCostAveraging.sol\":5099:5105  amount */\n      dup7\n        /* \"src/DollarCostAveraging.sol\":5099:5112  amount * 1e18 */\n      tag_198\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"src/DollarCostAveraging.sol\":5098:5133  (amount * 1e18) / uint256(ethPrice) */\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n        /* \"src/DollarCostAveraging.sol\":5098:5166  (amount * 1e18) / uint256(ethPrice) /  10 ** (18 - ethPriceDecimals) */\n      tag_202\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_202:\n        /* \"src/DollarCostAveraging.sol\":5078:5166  uint256 ethAmount = (amount * 1e18) / uint256(ethPrice) /  10 ** (18 - ethPriceDecimals) */\n      swap1\n      pop\n        /* \"src/DollarCostAveraging.sol\":5175:5191  uint256 slippage */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":5212:5216  1000 */\n      0x03e8\n        /* \"src/DollarCostAveraging.sol\":5207:5208  5 */\n      0x05\n        /* \"src/DollarCostAveraging.sol\":5195:5204  ethAmount */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":5195:5208  ethAmount * 5 */\n      tag_203\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_203:\n        /* \"src/DollarCostAveraging.sol\":5194:5216  (ethAmount * 5) / 1000 */\n      tag_204\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_204:\n        /* \"src/DollarCostAveraging.sol\":5175:5216  uint256 slippage = (ethAmount * 5) / 1000 */\n      swap1\n      pop\n        /* \"src/DollarCostAveraging.sol\":5225:5245  uint256 minEthAmount */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":5260:5268  slippage */\n      dup2\n        /* \"src/DollarCostAveraging.sol\":5248:5257  ethAmount */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":5248:5268  ethAmount - slippage */\n      tag_205\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_205:\n        /* \"src/DollarCostAveraging.sol\":5225:5268  uint256 minEthAmount = ethAmount - slippage */\n      swap1\n      pop\n        /* \"src/DollarCostAveraging.sol\":5335:5396  SafeERC20.safeTransferFrom(usdt, user, address(this), amount) */\n      tag_206\n        /* \"src/DollarCostAveraging.sol\":5362:5366  usdt */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DollarCostAveraging.sol\":5368:5372  user */\n      dup9\n        /* \"src/DollarCostAveraging.sol\":5382:5386  this */\n      address\n        /* \"src/DollarCostAveraging.sol\":5389:5395  amount */\n      dup10\n        /* \"src/DollarCostAveraging.sol\":5335:5361  SafeERC20.safeTransferFrom */\n      tag_207\n        /* \"src/DollarCostAveraging.sol\":5335:5396  SafeERC20.safeTransferFrom(usdt, user, address(this), amount) */\n      jump\t// in\n    tag_206:\n        /* \"src/DollarCostAveraging.sol\":5452:5521  SafeERC20.safeIncreaseAllowance(usdt, address(uniswapRouter), amount) */\n      tag_208\n        /* \"src/DollarCostAveraging.sol\":5484:5488  usdt */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DollarCostAveraging.sol\":5498:5511  uniswapRouter */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DollarCostAveraging.sol\":5514:5520  amount */\n      dup9\n        /* \"src/DollarCostAveraging.sol\":5452:5483  SafeERC20.safeIncreaseAllowance */\n      tag_209\n        /* \"src/DollarCostAveraging.sol\":5452:5521  SafeERC20.safeIncreaseAllowance(usdt, address(uniswapRouter), amount) */\n      jump\t// in\n    tag_208:\n        /* \"src/DollarCostAveraging.sol\":5557:5578  address[] memory path */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":5595:5596  2 */\n      0x02\n        /* \"src/DollarCostAveraging.sol\":5581:5597  new address[](2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_210\n      jumpi\n      tag_211\n      tag_212\n      jump\t// in\n    tag_211:\n    tag_210:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_213\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_213:\n      pop\n        /* \"src/DollarCostAveraging.sol\":5557:5597  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"src/DollarCostAveraging.sol\":5622:5626  usdt */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DollarCostAveraging.sol\":5604:5608  path */\n      dup2\n        /* \"src/DollarCostAveraging.sol\":5609:5610  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":5604:5611  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_214\n      jumpi\n      tag_215\n      tag_216\n      jump\t// in\n    tag_215:\n    tag_214:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"src/DollarCostAveraging.sol\":5604:5627  path[0] = address(usdt) */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"src/DollarCostAveraging.sol\":5658:5671  uniswapRouter */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DollarCostAveraging.sol\":5658:5676  uniswapRouter.WETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xad5c4648\n        /* \"src/DollarCostAveraging.sol\":5658:5678  uniswapRouter.WETH() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_218\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_218:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_219\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n        /* \"src/DollarCostAveraging.sol\":5648:5652  path */\n      dup2\n        /* \"src/DollarCostAveraging.sol\":5653:5654  1 */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":5648:5655  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_221\n      jumpi\n      tag_222\n      tag_216\n      jump\t// in\n    tag_222:\n    tag_221:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"src/DollarCostAveraging.sol\":5648:5678  path[1] = uniswapRouter.WETH() */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"src/DollarCostAveraging.sol\":5737:5758  uint[] memory amounts */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":5762:5775  uniswapRouter */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DollarCostAveraging.sol\":5762:5797  uniswapRouter.swapExactTokensForETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18cbafe5\n        /* \"src/DollarCostAveraging.sol\":5798:5804  amount */\n      dup10\n        /* \"src/DollarCostAveraging.sol\":5806:5818  minEthAmount */\n      dup6\n        /* \"src/DollarCostAveraging.sol\":5820:5824  path */\n      dup6\n        /* \"src/DollarCostAveraging.sol\":5834:5838  this */\n      address\n        /* \"src/DollarCostAveraging.sol\":5859:5866  1 hours */\n      0x0e10\n        /* \"src/DollarCostAveraging.sol\":5841:5856  block.timestamp */\n      timestamp\n        /* \"src/DollarCostAveraging.sol\":5841:5866  block.timestamp + 1 hours */\n      tag_223\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_223:\n        /* \"src/DollarCostAveraging.sol\":5762:5867  uniswapRouter.swapExactTokensForETH(amount, minEthAmount, path, address(this), block.timestamp + 1 hours) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_227\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_227:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_228\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"src/DollarCostAveraging.sol\":5736:5867  (uint[] memory amounts) = uniswapRouter.swapExactTokensForETH(amount, minEthAmount, path, address(this), block.timestamp + 1 hours) */\n      swap1\n      pop\n        /* \"src/DollarCostAveraging.sol\":5876:5895  uint256 ethReceived */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":5898:5905  amounts */\n      dup2\n        /* \"src/DollarCostAveraging.sol\":5906:5907  1 */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":5898:5908  amounts[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_230\n      jumpi\n      tag_231\n      tag_216\n      jump\t// in\n    tag_231:\n    tag_230:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"src/DollarCostAveraging.sol\":5876:5908  uint256 ethReceived = amounts[1] */\n      swap1\n      pop\n        /* \"src/DollarCostAveraging.sol\":5949:5954  plans */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":5949:5960  plans[user] */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":5955:5959  user */\n      dup12\n        /* \"src/DollarCostAveraging.sol\":5949:5960  plans[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":5949:5966  plans[user].times */\n      0x04\n      add\n      0x00\n        /* \"src/DollarCostAveraging.sol\":5949:5968  plans[user].times++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_232\n      swap1\n      tag_173\n      jump\t// in\n    tag_232:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"src/DollarCostAveraging.sol\":5996:6000  user */\n      dup10\n        /* \"src/DollarCostAveraging.sol\":5982:6022  PlanTriggered(user, amount, ethReceived) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1a3abf7e0a472651ebe2c79a31a5f4660c7ea65e3086ee1742d7502999bbf5b5\n        /* \"src/DollarCostAveraging.sol\":6002:6008  amount */\n      dup11\n        /* \"src/DollarCostAveraging.sol\":6010:6021  ethReceived */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":5982:6022  PlanTriggered(user, amount, ethReceived) */\n      mload(0x40)\n      tag_233\n      swap3\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/DollarCostAveraging.sol\":6071:6075  user */\n      dup10\n        /* \"src/DollarCostAveraging.sol\":6063:6085  payable(user).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DollarCostAveraging.sol\":6063:6098  payable(user).transfer(ethReceived) */\n      0x08fc\n        /* \"src/DollarCostAveraging.sol\":6086:6097  ethReceived */\n      dup3\n        /* \"src/DollarCostAveraging.sol\":6063:6098  payable(user).transfer(ethReceived) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_235\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_235:\n      pop\n        /* \"src/DollarCostAveraging.sol\":6152:6171  requestRandom(user) */\n      tag_236\n        /* \"src/DollarCostAveraging.sol\":6166:6170  user */\n      dup11\n        /* \"src/DollarCostAveraging.sol\":6152:6165  requestRandom */\n      tag_164\n        /* \"src/DollarCostAveraging.sol\":6152:6171  requestRandom(user) */\n      jump\t// in\n    tag_236:\n        /* \"src/DollarCostAveraging.sol\":4633:6177  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/DollarCostAveraging.sol\":4591:6177  function triggerPlan(address user) public {... */\n      pop\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":1365:1419  mapping(uint256 => address) public userRandomRequestId */\n    tag_111:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":4044:4212  function stopPlan() public {... */\n    tag_115:\n        /* \"src/DollarCostAveraging.sol\":4112:4113  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":4086:4091  plans */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":4086:4103  plans[msg.sender] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":4092:4102  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":4086:4103  plans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":4086:4109  plans[msg.sender].index */\n      0x00\n      add\n      sload\n        /* \"src/DollarCostAveraging.sol\":4086:4113  plans[msg.sender].index > 0 */\n      gt\n        /* \"src/DollarCostAveraging.sol\":4078:4135  require(plans[msg.sender].index > 0, \"Plan is not exist\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap1\n      tag_156\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_238:\n        /* \"src/DollarCostAveraging.sol\":4171:4172  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":4144:4149  plans */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":4144:4161  plans[msg.sender] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":4150:4160  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":4144:4161  plans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":4144:4168  plans[msg.sender].status */\n      0x05\n      add\n        /* \"src/DollarCostAveraging.sol\":4144:4172  plans[msg.sender].status = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/DollarCostAveraging.sol\":4195:4205  msg.sender */\n      caller\n        /* \"src/DollarCostAveraging.sol\":4184:4206  PlanStoped(msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf222abd4ee7afb02f9450183b95d07aaab2ea2f2d6748f55525c7e875fdd58a1\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/DollarCostAveraging.sol\":4044:4212  function stopPlan() public {... */\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":2473:2594  function getAllowance(address user) public view returns (uint256) {... */\n    tag_119:\n        /* \"src/DollarCostAveraging.sol\":2530:2537  uint256 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":2553:2557  usdt */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DollarCostAveraging.sol\":2553:2567  usdt.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"src/DollarCostAveraging.sol\":2568:2572  user */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":2582:2586  this */\n      address\n        /* \"src/DollarCostAveraging.sol\":2553:2588  usdt.allowance(user, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap3\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_241:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_243\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_243:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_244\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n        /* \"src/DollarCostAveraging.sol\":2546:2588  return usdt.allowance(user, address(this)) */\n      swap1\n      pop\n        /* \"src/DollarCostAveraging.sol\":2473:2594  function getAllowance(address user) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":6241:6539  function fulfillRandomWords(uint256 _requestId, uint256[] memory _randomWords) internal override {... */\n    tag_138:\n        /* \"src/DollarCostAveraging.sol\":6347:6359  address user */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":6362:6381  userRandomRequestId */\n      0x02\n        /* \"src/DollarCostAveraging.sol\":6362:6393  userRandomRequestId[_requestId] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":6382:6392  _requestId */\n      dup5\n        /* \"src/DollarCostAveraging.sol\":6362:6393  userRandomRequestId[_requestId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DollarCostAveraging.sol\":6347:6393  address user = userRandomRequestId[_requestId] */\n      swap1\n      pop\n        /* \"src/DollarCostAveraging.sol\":6511:6516  plans */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":6511:6522  plans[user] */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":6517:6521  user */\n      dup3\n        /* \"src/DollarCostAveraging.sol\":6511:6522  plans[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":6511:6532  plans[user].frequency */\n      0x01\n      add\n      sload\n        /* \"src/DollarCostAveraging.sol\":6493:6505  _randomWords */\n      dup3\n        /* \"src/DollarCostAveraging.sol\":6506:6507  0 */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":6493:6508  _randomWords[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_247\n      jumpi\n      tag_248\n      tag_216\n      jump\t// in\n    tag_248:\n    tag_247:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"src/DollarCostAveraging.sol\":6493:6532  _randomWords[0] % plans[user].frequency */\n      tag_249\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_249:\n        /* \"src/DollarCostAveraging.sol\":6468:6473  plans */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":6468:6479  plans[user] */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":6474:6478  user */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":6468:6479  plans[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":6468:6489  plans[user].frequency */\n      0x01\n      add\n      sload\n        /* \"src/DollarCostAveraging.sol\":6448:6453  plans */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":6448:6459  plans[user] */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":6454:6458  user */\n      dup5\n        /* \"src/DollarCostAveraging.sol\":6448:6459  plans[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":6448:6465  plans[user].times */\n      0x04\n      add\n      sload\n        /* \"src/DollarCostAveraging.sol\":6448:6489  plans[user].times * plans[user].frequency */\n      tag_250\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_250:\n        /* \"src/DollarCostAveraging.sol\":6426:6431  plans */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":6426:6437  plans[user] */\n      dup1\n        /* \"src/DollarCostAveraging.sol\":6432:6436  user */\n      dup5\n        /* \"src/DollarCostAveraging.sol\":6426:6437  plans[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":6426:6445  plans[user].startAt */\n      0x03\n      add\n      sload\n        /* \"src/DollarCostAveraging.sol\":6426:6489  plans[user].startAt + plans[user].times * plans[user].frequency */\n      tag_251\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_251:\n        /* \"src/DollarCostAveraging.sol\":6426:6533  plans[user].startAt + plans[user].times * plans[user].frequency + (_randomWords[0] % plans[user].frequency) */\n      tag_252\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_252:\n        /* \"src/DollarCostAveraging.sol\":6402:6417  nextTriggerTime */\n      0x03\n        /* \"src/DollarCostAveraging.sol\":6402:6423  nextTriggerTime[user] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":6418:6422  user */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":6402:6423  nextTriggerTime[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DollarCostAveraging.sol\":6402:6533  nextTriggerTime[user] = plans[user].startAt + plans[user].times * plans[user].frequency + (_randomWords[0] % plans[user].frequency) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/DollarCostAveraging.sol\":6338:6539  {... */\n      pop\n        /* \"src/DollarCostAveraging.sol\":6241:6539  function fulfillRandomWords(uint256 _requestId, uint256[] memory _randomWords) internal override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/DollarCostAveraging.sol\":4218:4585  function requestRandom(address user) private {... */\n    tag_164:\n        /* \"src/DollarCostAveraging.sol\":4391:4408  uint256 requestId */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":4411:4422  coordinator */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DollarCostAveraging.sol\":4411:4441  coordinator.requestRandomWords */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5d3b1d30\n        /* \"src/DollarCostAveraging.sol\":4452:4459  keyHash */\n      sload(0x0a)\n        /* \"src/DollarCostAveraging.sol\":4470:4484  subscriptionId */\n      0x06\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"src/DollarCostAveraging.sol\":4495:4496  3 */\n      0x03\n        /* \"src/DollarCostAveraging.sol\":4507:4513  350000 */\n      0x055730\n        /* \"src/DollarCostAveraging.sol\":4524:4525  1 */\n      0x01\n        /* \"src/DollarCostAveraging.sol\":4411:4535  coordinator.requestRandomWords(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_257\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_257:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_258\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_258:\n        /* \"src/DollarCostAveraging.sol\":4391:4535  uint256 requestId = coordinator.requestRandomWords(... */\n      swap1\n      pop\n        /* \"src/DollarCostAveraging.sol\":4575:4579  user */\n      dup2\n        /* \"src/DollarCostAveraging.sol\":4542:4561  userRandomRequestId */\n      0x02\n        /* \"src/DollarCostAveraging.sol\":4542:4572  userRandomRequestId[requestId] */\n      0x00\n        /* \"src/DollarCostAveraging.sol\":4562:4571  requestId */\n      dup4\n        /* \"src/DollarCostAveraging.sol\":4542:4572  userRandomRequestId[requestId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/DollarCostAveraging.sol\":4542:4579  userRandomRequestId[requestId] = user */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/DollarCostAveraging.sol\":4263:4585  {... */\n      pop\n        /* \"src/DollarCostAveraging.sol\":4218:4585  function requestRandom(address user) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_260\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_261\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_262\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2081:2306  function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2177:2197  uint256 oldAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2200:2205  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2200:2215  token.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2224:2228  this */\n      address\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2231:2238  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2200:2239  token.allowance(address(this), spender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap3\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_265:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_267\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_267:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_268\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2177:2239  uint256 oldAllowance = token.allowance(address(this), spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2249:2299  forceApprove(token, spender, oldAllowance + value) */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2262:2267  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2269:2276  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2293:2298  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2278:2290  oldAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2278:2298  oldAllowance + value */\n      tag_270\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2249:2261  forceApprove */\n      tag_271\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2249:2299  forceApprove(token, spender, oldAllowance + value) */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2167:2306  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2081:2306  function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_274\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_275\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_276\n      swap2\n      swap1\n      tag_277\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3296:3676  function forceApprove(IERC20 token, address spender, uint256 value) internal {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3383:3408  bytes memory approvalCall */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3426:3431  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3426:3439  token.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3442:3449  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3451:3456  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3411:3458  abi.encodeCall(token.approve, (spender, value)) */\n      add(0x24, mload(0x40))\n      tag_281\n      swap3\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3383:3458  bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3474:3518  _callOptionalReturnBool(token, approvalCall) */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3498:3503  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3505:3517  approvalCall */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3474:3497  _callOptionalReturnBool */\n      tag_284\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3474:3518  _callOptionalReturnBool(token, approvalCall) */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3469:3670  if (!_callOptionalReturnBool(token, approvalCall)) {... */\n      tag_285\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3534:3605  _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0))) */\n      tag_286\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3554:3559  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3576:3581  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3576:3589  token.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3592:3599  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3601:3602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3561:3604  abi.encodeCall(token.approve, (spender, 0)) */\n      add(0x24, mload(0x40))\n      tag_287\n      swap3\n      swap2\n      swap1\n      tag_288\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3534:3553  _callOptionalReturn */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3534:3605  _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0))) */\n      jump\t// in\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3619:3659  _callOptionalReturn(token, approvalCall) */\n      tag_289\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3639:3644  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3646:3658  approvalCall */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3619:3638  _callOptionalReturn */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3619:3659  _callOptionalReturn(token, approvalCall) */\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3469:3670  if (!_callOptionalReturnBool(token, approvalCall)) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3373:3676  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3296:3676  function forceApprove(IERC20 token, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_291\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_292\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5189:5767  function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5272:5276  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5574:5586  bool success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5588:5611  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5623:5628  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5615:5634  address(token).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5635:5639  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5615:5640  address(token).call(data) */\n      mload(0x40)\n      tag_294\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_294:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_298\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_297)\n    tag_298:\n      0x60\n      swap2\n      pop\n    tag_297:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5573:5640  (bool success, bytes memory returndata) = address(token).call(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5657:5664  success */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5657:5726  success && (returndata.length == 0 || abi.decode(returndata, (bool))) */\n      dup1\n      iszero\n      tag_299\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5690:5691  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5669:5679  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5669:5686  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5669:5691  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5669:5725  returndata.length == 0 || abi.decode(returndata, (bool)) */\n      dup1\n      tag_300\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5706:5716  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5695:5725  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_301\n      swap2\n      swap1\n      tag_277\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5669:5725  returndata.length == 0 || abi.decode(returndata, (bool)) */\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5657:5726  success && (returndata.length == 0 || abi.decode(returndata, (bool))) */\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5657:5760  success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0 */\n      dup1\n      iszero\n      tag_302\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5759:5760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5738:5743  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5730:5756  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5730:5760  address(token).code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5657:5760  success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0 */\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5650:5760  return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5189:5767  function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_305\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_306\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_306:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_309\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_308)\n    tag_309:\n      0x60\n      swap2\n      pop\n    tag_308:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_310\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_311\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_310:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_311:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_313\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_314\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_315\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_316)\n    tag_313:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_317\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_317:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_319\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_312)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_316:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_312:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_315:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_321\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_321:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:82   */\n    tag_323:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_324:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_325:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_326:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_327:\n        /* \"#utility.yul\":490:514   */\n      tag_437\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_326\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_438\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_438:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_328:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_440\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_327\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1164   */\n    tag_30:\n        /* \"#utility.yul\":758:764   */\n      0x00\n        /* \"#utility.yul\":766:772   */\n      dup1\n        /* \"#utility.yul\":815:817   */\n      0x40\n        /* \"#utility.yul\":803:812   */\n      dup4\n        /* \"#utility.yul\":794:801   */\n      dup6\n        /* \"#utility.yul\":790:813   */\n      sub\n        /* \"#utility.yul\":786:818   */\n      slt\n        /* \"#utility.yul\":783:902   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":821:900   */\n      tag_443\n      tag_324\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":783:902   */\n    tag_442:\n        /* \"#utility.yul\":941:942   */\n      0x00\n        /* \"#utility.yul\":966:1019   */\n      tag_444\n        /* \"#utility.yul\":1011:1018   */\n      dup6\n        /* \"#utility.yul\":1002:1008   */\n      dup3\n        /* \"#utility.yul\":991:1000   */\n      dup7\n        /* \"#utility.yul\":987:1009   */\n      add\n        /* \"#utility.yul\":966:1019   */\n      tag_328\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":956:1019   */\n      swap3\n      pop\n        /* \"#utility.yul\":912:1029   */\n      pop\n        /* \"#utility.yul\":1068:1070   */\n      0x20\n        /* \"#utility.yul\":1094:1147   */\n      tag_445\n        /* \"#utility.yul\":1139:1146   */\n      dup6\n        /* \"#utility.yul\":1130:1136   */\n      dup3\n        /* \"#utility.yul\":1119:1128   */\n      dup7\n        /* \"#utility.yul\":1115:1137   */\n      add\n        /* \"#utility.yul\":1094:1147   */\n      tag_328\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":1084:1147   */\n      swap2\n      pop\n        /* \"#utility.yul\":1039:1157   */\n      pop\n        /* \"#utility.yul\":690:1164   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1170:1296   */\n    tag_329:\n        /* \"#utility.yul\":1207:1214   */\n      0x00\n        /* \"#utility.yul\":1247:1289   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1240:1245   */\n      dup3\n        /* \"#utility.yul\":1236:1290   */\n      and\n        /* \"#utility.yul\":1225:1290   */\n      swap1\n      pop\n        /* \"#utility.yul\":1170:1296   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1362   */\n    tag_330:\n        /* \"#utility.yul\":1330:1333   */\n      0x00\n        /* \"#utility.yul\":1351:1356   */\n      dup2\n        /* \"#utility.yul\":1344:1356   */\n      swap1\n      pop\n        /* \"#utility.yul\":1302:1362   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1368:1510   */\n    tag_331:\n        /* \"#utility.yul\":1418:1427   */\n      0x00\n        /* \"#utility.yul\":1451:1504   */\n      tag_449\n        /* \"#utility.yul\":1469:1503   */\n      tag_450\n        /* \"#utility.yul\":1478:1502   */\n      tag_451\n        /* \"#utility.yul\":1496:1501   */\n      dup5\n        /* \"#utility.yul\":1478:1502   */\n      tag_329\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":1469:1503   */\n      tag_330\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":1451:1504   */\n      tag_329\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":1438:1504   */\n      swap1\n      pop\n        /* \"#utility.yul\":1368:1510   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1516:1642   */\n    tag_332:\n        /* \"#utility.yul\":1566:1575   */\n      0x00\n        /* \"#utility.yul\":1599:1636   */\n      tag_453\n        /* \"#utility.yul\":1630:1635   */\n      dup3\n        /* \"#utility.yul\":1599:1636   */\n      tag_331\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":1586:1636   */\n      swap1\n      pop\n        /* \"#utility.yul\":1516:1642   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1648:1807   */\n    tag_333:\n        /* \"#utility.yul\":1731:1740   */\n      0x00\n        /* \"#utility.yul\":1764:1801   */\n      tag_455\n        /* \"#utility.yul\":1795:1800   */\n      dup3\n        /* \"#utility.yul\":1764:1801   */\n      tag_332\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":1751:1801   */\n      swap1\n      pop\n        /* \"#utility.yul\":1648:1807   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1813:2010   */\n    tag_334:\n        /* \"#utility.yul\":1933:2003   */\n      tag_457\n        /* \"#utility.yul\":1997:2002   */\n      dup2\n        /* \"#utility.yul\":1933:2003   */\n      tag_333\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":1928:1931   */\n      dup3\n        /* \"#utility.yul\":1921:2004   */\n      mstore\n        /* \"#utility.yul\":1813:2010   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2016:2304   */\n    tag_36:\n        /* \"#utility.yul\":2142:2146   */\n      0x00\n        /* \"#utility.yul\":2180:2182   */\n      0x20\n        /* \"#utility.yul\":2169:2178   */\n      dup3\n        /* \"#utility.yul\":2165:2183   */\n      add\n        /* \"#utility.yul\":2157:2183   */\n      swap1\n      pop\n        /* \"#utility.yul\":2193:2297   */\n      tag_459\n        /* \"#utility.yul\":2294:2295   */\n      0x00\n        /* \"#utility.yul\":2283:2292   */\n      dup4\n        /* \"#utility.yul\":2279:2296   */\n      add\n        /* \"#utility.yul\":2270:2276   */\n      dup5\n        /* \"#utility.yul\":2193:2297   */\n      tag_334\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":2016:2304   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2462   */\n    tag_335:\n        /* \"#utility.yul\":2386:2395   */\n      0x00\n        /* \"#utility.yul\":2419:2456   */\n      tag_461\n        /* \"#utility.yul\":2450:2455   */\n      dup3\n        /* \"#utility.yul\":2419:2456   */\n      tag_332\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":2406:2456   */\n      swap1\n      pop\n        /* \"#utility.yul\":2310:2462   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2468:2651   */\n    tag_336:\n        /* \"#utility.yul\":2581:2644   */\n      tag_463\n        /* \"#utility.yul\":2638:2643   */\n      dup2\n        /* \"#utility.yul\":2581:2644   */\n      tag_335\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":2576:2579   */\n      dup3\n        /* \"#utility.yul\":2569:2645   */\n      mstore\n        /* \"#utility.yul\":2468:2651   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2657:2931   */\n    tag_41:\n        /* \"#utility.yul\":2776:2780   */\n      0x00\n        /* \"#utility.yul\":2814:2816   */\n      0x20\n        /* \"#utility.yul\":2803:2812   */\n      dup3\n        /* \"#utility.yul\":2799:2817   */\n      add\n        /* \"#utility.yul\":2791:2817   */\n      swap1\n      pop\n        /* \"#utility.yul\":2827:2924   */\n      tag_465\n        /* \"#utility.yul\":2921:2922   */\n      0x00\n        /* \"#utility.yul\":2910:2919   */\n      dup4\n        /* \"#utility.yul\":2906:2923   */\n      add\n        /* \"#utility.yul\":2897:2903   */\n      dup5\n        /* \"#utility.yul\":2827:2924   */\n      tag_336\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":2657:2931   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2937:3054   */\n    tag_337:\n        /* \"#utility.yul\":3046:3047   */\n      0x00\n        /* \"#utility.yul\":3043:3044   */\n      dup1\n        /* \"#utility.yul\":3036:3048   */\n      revert\n        /* \"#utility.yul\":3060:3162   */\n    tag_338:\n        /* \"#utility.yul\":3101:3107   */\n      0x00\n        /* \"#utility.yul\":3152:3154   */\n      0x1f\n        /* \"#utility.yul\":3148:3155   */\n      not\n        /* \"#utility.yul\":3143:3145   */\n      0x1f\n        /* \"#utility.yul\":3136:3141   */\n      dup4\n        /* \"#utility.yul\":3132:3146   */\n      add\n        /* \"#utility.yul\":3128:3156   */\n      and\n        /* \"#utility.yul\":3118:3156   */\n      swap1\n      pop\n        /* \"#utility.yul\":3060:3162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3168:3348   */\n    tag_212:\n        /* \"#utility.yul\":3216:3293   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3213:3214   */\n      0x00\n        /* \"#utility.yul\":3206:3294   */\n      mstore\n        /* \"#utility.yul\":3313:3317   */\n      0x41\n        /* \"#utility.yul\":3310:3311   */\n      0x04\n        /* \"#utility.yul\":3303:3318   */\n      mstore\n        /* \"#utility.yul\":3337:3341   */\n      0x24\n        /* \"#utility.yul\":3334:3335   */\n      0x00\n        /* \"#utility.yul\":3327:3342   */\n      revert\n        /* \"#utility.yul\":3354:3635   */\n    tag_339:\n        /* \"#utility.yul\":3437:3464   */\n      tag_470\n        /* \"#utility.yul\":3459:3463   */\n      dup3\n        /* \"#utility.yul\":3437:3464   */\n      tag_338\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":3429:3435   */\n      dup2\n        /* \"#utility.yul\":3425:3465   */\n      add\n        /* \"#utility.yul\":3567:3573   */\n      dup2\n        /* \"#utility.yul\":3555:3565   */\n      dup2\n        /* \"#utility.yul\":3552:3574   */\n      lt\n        /* \"#utility.yul\":3531:3549   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3519:3529   */\n      dup3\n        /* \"#utility.yul\":3516:3550   */\n      gt\n        /* \"#utility.yul\":3513:3575   */\n      or\n        /* \"#utility.yul\":3510:3598   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":3578:3596   */\n      tag_472\n      tag_212\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":3510:3598   */\n    tag_471:\n        /* \"#utility.yul\":3618:3628   */\n      dup1\n        /* \"#utility.yul\":3614:3616   */\n      0x40\n        /* \"#utility.yul\":3607:3629   */\n      mstore\n        /* \"#utility.yul\":3397:3635   */\n      pop\n        /* \"#utility.yul\":3354:3635   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3641:3770   */\n    tag_340:\n        /* \"#utility.yul\":3675:3681   */\n      0x00\n        /* \"#utility.yul\":3702:3722   */\n      tag_474\n      tag_323\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":3692:3722   */\n      swap1\n      pop\n        /* \"#utility.yul\":3731:3764   */\n      tag_475\n        /* \"#utility.yul\":3759:3763   */\n      dup3\n        /* \"#utility.yul\":3751:3757   */\n      dup3\n        /* \"#utility.yul\":3731:3764   */\n      tag_339\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":3641:3770   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3776:4087   */\n    tag_341:\n        /* \"#utility.yul\":3853:3857   */\n      0x00\n        /* \"#utility.yul\":3943:3961   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3935:3941   */\n      dup3\n        /* \"#utility.yul\":3932:3962   */\n      gt\n        /* \"#utility.yul\":3929:3985   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":3965:3983   */\n      tag_478\n      tag_212\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":3929:3985   */\n    tag_477:\n        /* \"#utility.yul\":4015:4019   */\n      0x20\n        /* \"#utility.yul\":4007:4013   */\n      dup3\n        /* \"#utility.yul\":4003:4020   */\n      mul\n        /* \"#utility.yul\":3995:4020   */\n      swap1\n      pop\n        /* \"#utility.yul\":4075:4079   */\n      0x20\n        /* \"#utility.yul\":4069:4073   */\n      dup2\n        /* \"#utility.yul\":4065:4080   */\n      add\n        /* \"#utility.yul\":4057:4080   */\n      swap1\n      pop\n        /* \"#utility.yul\":3776:4087   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4093:4210   */\n    tag_342:\n        /* \"#utility.yul\":4202:4203   */\n      0x00\n        /* \"#utility.yul\":4199:4200   */\n      dup1\n        /* \"#utility.yul\":4192:4204   */\n      revert\n        /* \"#utility.yul\":4233:4943   */\n    tag_343:\n        /* \"#utility.yul\":4329:4334   */\n      0x00\n        /* \"#utility.yul\":4354:4435   */\n      tag_481\n        /* \"#utility.yul\":4370:4434   */\n      tag_482\n        /* \"#utility.yul\":4427:4433   */\n      dup5\n        /* \"#utility.yul\":4370:4434   */\n      tag_341\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":4354:4435   */\n      tag_340\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":4345:4435   */\n      swap1\n      pop\n        /* \"#utility.yul\":4455:4460   */\n      dup1\n        /* \"#utility.yul\":4484:4490   */\n      dup4\n        /* \"#utility.yul\":4477:4482   */\n      dup3\n        /* \"#utility.yul\":4470:4491   */\n      mstore\n        /* \"#utility.yul\":4518:4522   */\n      0x20\n        /* \"#utility.yul\":4511:4516   */\n      dup3\n        /* \"#utility.yul\":4507:4523   */\n      add\n        /* \"#utility.yul\":4500:4523   */\n      swap1\n      pop\n        /* \"#utility.yul\":4571:4575   */\n      0x20\n        /* \"#utility.yul\":4563:4569   */\n      dup5\n        /* \"#utility.yul\":4559:4576   */\n      mul\n        /* \"#utility.yul\":4551:4557   */\n      dup4\n        /* \"#utility.yul\":4547:4577   */\n      add\n        /* \"#utility.yul\":4600:4603   */\n      dup6\n        /* \"#utility.yul\":4592:4598   */\n      dup2\n        /* \"#utility.yul\":4589:4604   */\n      gt\n        /* \"#utility.yul\":4586:4708   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":4619:4698   */\n      tag_484\n      tag_342\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":4586:4708   */\n    tag_483:\n        /* \"#utility.yul\":4734:4740   */\n      dup4\n        /* \"#utility.yul\":4717:4937   */\n    tag_485:\n        /* \"#utility.yul\":4751:4757   */\n      dup2\n        /* \"#utility.yul\":4746:4749   */\n      dup2\n        /* \"#utility.yul\":4743:4758   */\n      lt\n        /* \"#utility.yul\":4717:4937   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":4826:4829   */\n      dup1\n        /* \"#utility.yul\":4855:4892   */\n      tag_488\n        /* \"#utility.yul\":4888:4891   */\n      dup9\n        /* \"#utility.yul\":4876:4886   */\n      dup3\n        /* \"#utility.yul\":4855:4892   */\n      tag_328\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":4850:4853   */\n      dup5\n        /* \"#utility.yul\":4843:4893   */\n      mstore\n        /* \"#utility.yul\":4922:4926   */\n      0x20\n        /* \"#utility.yul\":4917:4920   */\n      dup5\n        /* \"#utility.yul\":4913:4927   */\n      add\n        /* \"#utility.yul\":4906:4927   */\n      swap4\n      pop\n        /* \"#utility.yul\":4793:4937   */\n      pop\n        /* \"#utility.yul\":4777:4781   */\n      0x20\n        /* \"#utility.yul\":4772:4775   */\n      dup2\n        /* \"#utility.yul\":4768:4782   */\n      add\n        /* \"#utility.yul\":4761:4782   */\n      swap1\n      pop\n        /* \"#utility.yul\":4717:4937   */\n      jump(tag_485)\n    tag_487:\n        /* \"#utility.yul\":4721:4742   */\n      pop\n        /* \"#utility.yul\":4335:4943   */\n      pop\n      pop\n        /* \"#utility.yul\":4233:4943   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4966:5336   */\n    tag_344:\n        /* \"#utility.yul\":5037:5042   */\n      0x00\n        /* \"#utility.yul\":5086:5089   */\n      dup3\n        /* \"#utility.yul\":5079:5083   */\n      0x1f\n        /* \"#utility.yul\":5071:5077   */\n      dup4\n        /* \"#utility.yul\":5067:5084   */\n      add\n        /* \"#utility.yul\":5063:5090   */\n      slt\n        /* \"#utility.yul\":5053:5175   */\n      tag_490\n      jumpi\n        /* \"#utility.yul\":5094:5173   */\n      tag_491\n      tag_337\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":5053:5175   */\n    tag_490:\n        /* \"#utility.yul\":5211:5217   */\n      dup2\n        /* \"#utility.yul\":5198:5218   */\n      calldataload\n        /* \"#utility.yul\":5236:5330   */\n      tag_492\n        /* \"#utility.yul\":5326:5329   */\n      dup5\n        /* \"#utility.yul\":5318:5324   */\n      dup3\n        /* \"#utility.yul\":5311:5315   */\n      0x20\n        /* \"#utility.yul\":5303:5309   */\n      dup7\n        /* \"#utility.yul\":5299:5316   */\n      add\n        /* \"#utility.yul\":5236:5330   */\n      tag_343\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":5227:5330   */\n      swap2\n      pop\n        /* \"#utility.yul\":5043:5336   */\n      pop\n        /* \"#utility.yul\":4966:5336   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5342:6026   */\n    tag_45:\n        /* \"#utility.yul\":5435:5441   */\n      0x00\n        /* \"#utility.yul\":5443:5449   */\n      dup1\n        /* \"#utility.yul\":5492:5494   */\n      0x40\n        /* \"#utility.yul\":5480:5489   */\n      dup4\n        /* \"#utility.yul\":5471:5478   */\n      dup6\n        /* \"#utility.yul\":5467:5490   */\n      sub\n        /* \"#utility.yul\":5463:5495   */\n      slt\n        /* \"#utility.yul\":5460:5579   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":5498:5577   */\n      tag_495\n      tag_324\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":5460:5579   */\n    tag_494:\n        /* \"#utility.yul\":5618:5619   */\n      0x00\n        /* \"#utility.yul\":5643:5696   */\n      tag_496\n        /* \"#utility.yul\":5688:5695   */\n      dup6\n        /* \"#utility.yul\":5679:5685   */\n      dup3\n        /* \"#utility.yul\":5668:5677   */\n      dup7\n        /* \"#utility.yul\":5664:5686   */\n      add\n        /* \"#utility.yul\":5643:5696   */\n      tag_328\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":5633:5696   */\n      swap3\n      pop\n        /* \"#utility.yul\":5589:5706   */\n      pop\n        /* \"#utility.yul\":5773:5775   */\n      0x20\n        /* \"#utility.yul\":5762:5771   */\n      dup4\n        /* \"#utility.yul\":5758:5776   */\n      add\n        /* \"#utility.yul\":5745:5777   */\n      calldataload\n        /* \"#utility.yul\":5804:5822   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5796:5802   */\n      dup2\n        /* \"#utility.yul\":5793:5823   */\n      gt\n        /* \"#utility.yul\":5790:5907   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":5826:5905   */\n      tag_498\n      tag_325\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":5790:5907   */\n    tag_497:\n        /* \"#utility.yul\":5931:6009   */\n      tag_499\n        /* \"#utility.yul\":6001:6008   */\n      dup6\n        /* \"#utility.yul\":5992:5998   */\n      dup3\n        /* \"#utility.yul\":5981:5990   */\n      dup7\n        /* \"#utility.yul\":5977:5999   */\n      add\n        /* \"#utility.yul\":5931:6009   */\n      tag_344\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":5921:6009   */\n      swap2\n      pop\n        /* \"#utility.yul\":5716:6019   */\n      pop\n        /* \"#utility.yul\":5342:6026   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6032:6172   */\n    tag_345:\n        /* \"#utility.yul\":6096:6105   */\n      0x00\n        /* \"#utility.yul\":6129:6166   */\n      tag_501\n        /* \"#utility.yul\":6160:6165   */\n      dup3\n        /* \"#utility.yul\":6129:6166   */\n      tag_332\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":6116:6166   */\n      swap1\n      pop\n        /* \"#utility.yul\":6032:6172   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6178:6337   */\n    tag_346:\n        /* \"#utility.yul\":6279:6330   */\n      tag_503\n        /* \"#utility.yul\":6324:6329   */\n      dup2\n        /* \"#utility.yul\":6279:6330   */\n      tag_345\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":6274:6277   */\n      dup3\n        /* \"#utility.yul\":6267:6331   */\n      mstore\n        /* \"#utility.yul\":6178:6337   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6343:6593   */\n    tag_51:\n        /* \"#utility.yul\":6450:6454   */\n      0x00\n        /* \"#utility.yul\":6488:6490   */\n      0x20\n        /* \"#utility.yul\":6477:6486   */\n      dup3\n        /* \"#utility.yul\":6473:6491   */\n      add\n        /* \"#utility.yul\":6465:6491   */\n      swap1\n      pop\n        /* \"#utility.yul\":6501:6586   */\n      tag_505\n        /* \"#utility.yul\":6583:6584   */\n      0x00\n        /* \"#utility.yul\":6572:6581   */\n      dup4\n        /* \"#utility.yul\":6568:6585   */\n      add\n        /* \"#utility.yul\":6559:6565   */\n      dup5\n        /* \"#utility.yul\":6501:6586   */\n      tag_346\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":6343:6593   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6599:6928   */\n    tag_55:\n        /* \"#utility.yul\":6658:6664   */\n      0x00\n        /* \"#utility.yul\":6707:6709   */\n      0x20\n        /* \"#utility.yul\":6695:6704   */\n      dup3\n        /* \"#utility.yul\":6686:6693   */\n      dup5\n        /* \"#utility.yul\":6682:6705   */\n      sub\n        /* \"#utility.yul\":6678:6710   */\n      slt\n        /* \"#utility.yul\":6675:6794   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":6713:6792   */\n      tag_508\n      tag_324\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":6675:6794   */\n    tag_507:\n        /* \"#utility.yul\":6833:6834   */\n      0x00\n        /* \"#utility.yul\":6858:6911   */\n      tag_509\n        /* \"#utility.yul\":6903:6910   */\n      dup5\n        /* \"#utility.yul\":6894:6900   */\n      dup3\n        /* \"#utility.yul\":6883:6892   */\n      dup6\n        /* \"#utility.yul\":6879:6901   */\n      add\n        /* \"#utility.yul\":6858:6911   */\n      tag_328\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":6848:6911   */\n      swap2\n      pop\n        /* \"#utility.yul\":6804:6921   */\n      pop\n        /* \"#utility.yul\":6599:6928   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6934:7030   */\n    tag_347:\n        /* \"#utility.yul\":6971:6978   */\n      0x00\n        /* \"#utility.yul\":7000:7024   */\n      tag_511\n        /* \"#utility.yul\":7018:7023   */\n      dup3\n        /* \"#utility.yul\":7000:7024   */\n      tag_329\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":6989:7024   */\n      swap1\n      pop\n        /* \"#utility.yul\":6934:7030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7036:7154   */\n    tag_348:\n        /* \"#utility.yul\":7123:7147   */\n      tag_513\n        /* \"#utility.yul\":7141:7146   */\n      dup2\n        /* \"#utility.yul\":7123:7147   */\n      tag_347\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":7118:7121   */\n      dup3\n        /* \"#utility.yul\":7111:7148   */\n      mstore\n        /* \"#utility.yul\":7036:7154   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7160:7382   */\n    tag_58:\n        /* \"#utility.yul\":7253:7257   */\n      0x00\n        /* \"#utility.yul\":7291:7293   */\n      0x20\n        /* \"#utility.yul\":7280:7289   */\n      dup3\n        /* \"#utility.yul\":7276:7294   */\n      add\n        /* \"#utility.yul\":7268:7294   */\n      swap1\n      pop\n        /* \"#utility.yul\":7304:7375   */\n      tag_515\n        /* \"#utility.yul\":7372:7373   */\n      0x00\n        /* \"#utility.yul\":7361:7370   */\n      dup4\n        /* \"#utility.yul\":7357:7374   */\n      add\n        /* \"#utility.yul\":7348:7354   */\n      dup5\n        /* \"#utility.yul\":7304:7375   */\n      tag_348\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":7160:7382   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7388:7505   */\n    tag_349:\n        /* \"#utility.yul\":7497:7498   */\n      0x00\n        /* \"#utility.yul\":7494:7495   */\n      dup1\n        /* \"#utility.yul\":7487:7499   */\n      revert\n        /* \"#utility.yul\":7524:8076   */\n    tag_350:\n        /* \"#utility.yul\":7581:7589   */\n      0x00\n        /* \"#utility.yul\":7591:7597   */\n      dup1\n        /* \"#utility.yul\":7641:7644   */\n      dup4\n        /* \"#utility.yul\":7634:7638   */\n      0x1f\n        /* \"#utility.yul\":7626:7632   */\n      dup5\n        /* \"#utility.yul\":7622:7639   */\n      add\n        /* \"#utility.yul\":7618:7645   */\n      slt\n        /* \"#utility.yul\":7608:7730   */\n      tag_518\n      jumpi\n        /* \"#utility.yul\":7649:7728   */\n      tag_519\n      tag_337\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":7608:7730   */\n    tag_518:\n        /* \"#utility.yul\":7762:7768   */\n      dup3\n        /* \"#utility.yul\":7749:7769   */\n      calldataload\n        /* \"#utility.yul\":7739:7769   */\n      swap1\n      pop\n        /* \"#utility.yul\":7792:7810   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7784:7790   */\n      dup2\n        /* \"#utility.yul\":7781:7811   */\n      gt\n        /* \"#utility.yul\":7778:7895   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":7814:7893   */\n      tag_521\n      tag_349\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":7778:7895   */\n    tag_520:\n        /* \"#utility.yul\":7928:7932   */\n      0x20\n        /* \"#utility.yul\":7920:7926   */\n      dup4\n        /* \"#utility.yul\":7916:7933   */\n      add\n        /* \"#utility.yul\":7904:7933   */\n      swap2\n      pop\n        /* \"#utility.yul\":7982:7985   */\n      dup4\n        /* \"#utility.yul\":7974:7978   */\n      0x01\n        /* \"#utility.yul\":7966:7972   */\n      dup3\n        /* \"#utility.yul\":7962:7979   */\n      mul\n        /* \"#utility.yul\":7952:7960   */\n      dup4\n        /* \"#utility.yul\":7948:7980   */\n      add\n        /* \"#utility.yul\":7945:7986   */\n      gt\n        /* \"#utility.yul\":7942:8070   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":7989:8068   */\n      tag_523\n      tag_342\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":7942:8070   */\n    tag_522:\n        /* \"#utility.yul\":7524:8076   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8082:8609   */\n    tag_62:\n        /* \"#utility.yul\":8152:8158   */\n      0x00\n        /* \"#utility.yul\":8160:8166   */\n      dup1\n        /* \"#utility.yul\":8209:8211   */\n      0x20\n        /* \"#utility.yul\":8197:8206   */\n      dup4\n        /* \"#utility.yul\":8188:8195   */\n      dup6\n        /* \"#utility.yul\":8184:8207   */\n      sub\n        /* \"#utility.yul\":8180:8212   */\n      slt\n        /* \"#utility.yul\":8177:8296   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":8215:8294   */\n      tag_526\n      tag_324\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":8177:8296   */\n    tag_525:\n        /* \"#utility.yul\":8363:8364   */\n      0x00\n        /* \"#utility.yul\":8352:8361   */\n      dup4\n        /* \"#utility.yul\":8348:8365   */\n      add\n        /* \"#utility.yul\":8335:8366   */\n      calldataload\n        /* \"#utility.yul\":8393:8411   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8385:8391   */\n      dup2\n        /* \"#utility.yul\":8382:8412   */\n      gt\n        /* \"#utility.yul\":8379:8496   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":8415:8494   */\n      tag_528\n      tag_325\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":8379:8496   */\n    tag_527:\n        /* \"#utility.yul\":8528:8592   */\n      tag_529\n        /* \"#utility.yul\":8584:8591   */\n      dup6\n        /* \"#utility.yul\":8575:8581   */\n      dup3\n        /* \"#utility.yul\":8564:8573   */\n      dup7\n        /* \"#utility.yul\":8560:8582   */\n      add\n        /* \"#utility.yul\":8528:8592   */\n      tag_350\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":8510:8592   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":8306:8602   */\n      pop\n        /* \"#utility.yul\":8082:8609   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8615:8705   */\n    tag_351:\n        /* \"#utility.yul\":8649:8656   */\n      0x00\n        /* \"#utility.yul\":8692:8697   */\n      dup2\n        /* \"#utility.yul\":8685:8698   */\n      iszero\n        /* \"#utility.yul\":8678:8699   */\n      iszero\n        /* \"#utility.yul\":8667:8699   */\n      swap1\n      pop\n        /* \"#utility.yul\":8615:8705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8711:8820   */\n    tag_352:\n        /* \"#utility.yul\":8792:8813   */\n      tag_532\n        /* \"#utility.yul\":8807:8812   */\n      dup2\n        /* \"#utility.yul\":8792:8813   */\n      tag_351\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":8787:8790   */\n      dup3\n        /* \"#utility.yul\":8780:8814   */\n      mstore\n        /* \"#utility.yul\":8711:8820   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8826:8924   */\n    tag_353:\n        /* \"#utility.yul\":8877:8883   */\n      0x00\n        /* \"#utility.yul\":8911:8916   */\n      dup2\n        /* \"#utility.yul\":8905:8917   */\n      mload\n        /* \"#utility.yul\":8895:8917   */\n      swap1\n      pop\n        /* \"#utility.yul\":8826:8924   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8930:9098   */\n    tag_354:\n        /* \"#utility.yul\":9013:9024   */\n      0x00\n        /* \"#utility.yul\":9047:9053   */\n      dup3\n        /* \"#utility.yul\":9042:9045   */\n      dup3\n        /* \"#utility.yul\":9035:9054   */\n      mstore\n        /* \"#utility.yul\":9087:9091   */\n      0x20\n        /* \"#utility.yul\":9082:9085   */\n      dup3\n        /* \"#utility.yul\":9078:9092   */\n      add\n        /* \"#utility.yul\":9063:9092   */\n      swap1\n      pop\n        /* \"#utility.yul\":8930:9098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9104:9350   */\n    tag_355:\n        /* \"#utility.yul\":9185:9186   */\n      0x00\n        /* \"#utility.yul\":9195:9308   */\n    tag_536:\n        /* \"#utility.yul\":9209:9215   */\n      dup4\n        /* \"#utility.yul\":9206:9207   */\n      dup2\n        /* \"#utility.yul\":9203:9216   */\n      lt\n        /* \"#utility.yul\":9195:9308   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":9294:9295   */\n      dup1\n        /* \"#utility.yul\":9289:9292   */\n      dup3\n        /* \"#utility.yul\":9285:9296   */\n      add\n        /* \"#utility.yul\":9279:9297   */\n      mload\n        /* \"#utility.yul\":9275:9276   */\n      dup2\n        /* \"#utility.yul\":9270:9273   */\n      dup5\n        /* \"#utility.yul\":9266:9277   */\n      add\n        /* \"#utility.yul\":9259:9298   */\n      mstore\n        /* \"#utility.yul\":9231:9233   */\n      0x20\n        /* \"#utility.yul\":9228:9229   */\n      dup2\n        /* \"#utility.yul\":9224:9234   */\n      add\n        /* \"#utility.yul\":9219:9234   */\n      swap1\n      pop\n        /* \"#utility.yul\":9195:9308   */\n      jump(tag_536)\n    tag_538:\n        /* \"#utility.yul\":9342:9343   */\n      0x00\n        /* \"#utility.yul\":9333:9339   */\n      dup5\n        /* \"#utility.yul\":9328:9331   */\n      dup5\n        /* \"#utility.yul\":9324:9340   */\n      add\n        /* \"#utility.yul\":9317:9344   */\n      mstore\n        /* \"#utility.yul\":9166:9350   */\n      pop\n        /* \"#utility.yul\":9104:9350   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9356:9729   */\n    tag_356:\n        /* \"#utility.yul\":9442:9445   */\n      0x00\n        /* \"#utility.yul\":9470:9508   */\n      tag_540\n        /* \"#utility.yul\":9502:9507   */\n      dup3\n        /* \"#utility.yul\":9470:9508   */\n      tag_353\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":9524:9594   */\n      tag_541\n        /* \"#utility.yul\":9587:9593   */\n      dup2\n        /* \"#utility.yul\":9582:9585   */\n      dup6\n        /* \"#utility.yul\":9524:9594   */\n      tag_354\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":9517:9594   */\n      swap4\n      pop\n        /* \"#utility.yul\":9603:9668   */\n      tag_542\n        /* \"#utility.yul\":9661:9667   */\n      dup2\n        /* \"#utility.yul\":9656:9659   */\n      dup6\n        /* \"#utility.yul\":9649:9653   */\n      0x20\n        /* \"#utility.yul\":9642:9647   */\n      dup7\n        /* \"#utility.yul\":9638:9654   */\n      add\n        /* \"#utility.yul\":9603:9668   */\n      tag_355\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":9693:9722   */\n      tag_543\n        /* \"#utility.yul\":9715:9721   */\n      dup2\n        /* \"#utility.yul\":9693:9722   */\n      tag_338\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":9688:9691   */\n      dup5\n        /* \"#utility.yul\":9684:9723   */\n      add\n        /* \"#utility.yul\":9677:9723   */\n      swap2\n      pop\n        /* \"#utility.yul\":9446:9729   */\n      pop\n        /* \"#utility.yul\":9356:9729   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9735:10142   */\n    tag_69:\n        /* \"#utility.yul\":9868:9872   */\n      0x00\n        /* \"#utility.yul\":9906:9908   */\n      0x40\n        /* \"#utility.yul\":9895:9904   */\n      dup3\n        /* \"#utility.yul\":9891:9909   */\n      add\n        /* \"#utility.yul\":9883:9909   */\n      swap1\n      pop\n        /* \"#utility.yul\":9919:9984   */\n      tag_545\n        /* \"#utility.yul\":9981:9982   */\n      0x00\n        /* \"#utility.yul\":9970:9979   */\n      dup4\n        /* \"#utility.yul\":9966:9983   */\n      add\n        /* \"#utility.yul\":9957:9963   */\n      dup6\n        /* \"#utility.yul\":9919:9984   */\n      tag_352\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":10031:10040   */\n      dup2\n        /* \"#utility.yul\":10025:10029   */\n      dup2\n        /* \"#utility.yul\":10021:10041   */\n      sub\n        /* \"#utility.yul\":10016:10018   */\n      0x20\n        /* \"#utility.yul\":10005:10014   */\n      dup4\n        /* \"#utility.yul\":10001:10019   */\n      add\n        /* \"#utility.yul\":9994:10042   */\n      mstore\n        /* \"#utility.yul\":10059:10135   */\n      tag_546\n        /* \"#utility.yul\":10130:10134   */\n      dup2\n        /* \"#utility.yul\":10121:10127   */\n      dup5\n        /* \"#utility.yul\":10059:10135   */\n      tag_356\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":10051:10135   */\n      swap1\n      pop\n        /* \"#utility.yul\":9735:10142   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10148:10301   */\n    tag_357:\n        /* \"#utility.yul\":10225:10234   */\n      0x00\n        /* \"#utility.yul\":10258:10295   */\n      tag_548\n        /* \"#utility.yul\":10289:10294   */\n      dup3\n        /* \"#utility.yul\":10258:10295   */\n      tag_332\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":10245:10295   */\n      swap1\n      pop\n        /* \"#utility.yul\":10148:10301   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10307:10492   */\n    tag_358:\n        /* \"#utility.yul\":10421:10485   */\n      tag_550\n        /* \"#utility.yul\":10479:10484   */\n      dup2\n        /* \"#utility.yul\":10421:10485   */\n      tag_357\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":10416:10419   */\n      dup3\n        /* \"#utility.yul\":10409:10486   */\n      mstore\n        /* \"#utility.yul\":10307:10492   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10498:10774   */\n    tag_74:\n        /* \"#utility.yul\":10618:10622   */\n      0x00\n        /* \"#utility.yul\":10656:10658   */\n      0x20\n        /* \"#utility.yul\":10645:10654   */\n      dup3\n        /* \"#utility.yul\":10641:10659   */\n      add\n        /* \"#utility.yul\":10633:10659   */\n      swap1\n      pop\n        /* \"#utility.yul\":10669:10767   */\n      tag_552\n        /* \"#utility.yul\":10764:10765   */\n      0x00\n        /* \"#utility.yul\":10753:10762   */\n      dup4\n        /* \"#utility.yul\":10749:10766   */\n      add\n        /* \"#utility.yul\":10740:10746   */\n      dup5\n        /* \"#utility.yul\":10669:10767   */\n      tag_358\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":10498:10774   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10780:10936   */\n    tag_359:\n        /* \"#utility.yul\":10860:10869   */\n      0x00\n        /* \"#utility.yul\":10893:10930   */\n      tag_554\n        /* \"#utility.yul\":10924:10929   */\n      dup3\n        /* \"#utility.yul\":10893:10930   */\n      tag_332\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":10880:10930   */\n      swap1\n      pop\n        /* \"#utility.yul\":10780:10936   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10942:11133   */\n    tag_360:\n        /* \"#utility.yul\":11059:11126   */\n      tag_556\n        /* \"#utility.yul\":11120:11125   */\n      dup2\n        /* \"#utility.yul\":11059:11126   */\n      tag_359\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":11054:11057   */\n      dup3\n        /* \"#utility.yul\":11047:11127   */\n      mstore\n        /* \"#utility.yul\":10942:11133   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11139:11421   */\n    tag_79:\n        /* \"#utility.yul\":11262:11266   */\n      0x00\n        /* \"#utility.yul\":11300:11302   */\n      0x20\n        /* \"#utility.yul\":11289:11298   */\n      dup3\n        /* \"#utility.yul\":11285:11303   */\n      add\n        /* \"#utility.yul\":11277:11303   */\n      swap1\n      pop\n        /* \"#utility.yul\":11313:11414   */\n      tag_558\n        /* \"#utility.yul\":11411:11412   */\n      0x00\n        /* \"#utility.yul\":11400:11409   */\n      dup4\n        /* \"#utility.yul\":11396:11413   */\n      add\n        /* \"#utility.yul\":11387:11393   */\n      dup5\n        /* \"#utility.yul\":11313:11414   */\n      tag_360\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":11139:11421   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11427:11549   */\n    tag_361:\n        /* \"#utility.yul\":11500:11524   */\n      tag_560\n        /* \"#utility.yul\":11518:11523   */\n      dup2\n        /* \"#utility.yul\":11500:11524   */\n      tag_347\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":11493:11498   */\n      dup2\n        /* \"#utility.yul\":11490:11525   */\n      eq\n        /* \"#utility.yul\":11480:11543   */\n      tag_561\n      jumpi\n        /* \"#utility.yul\":11539:11540   */\n      0x00\n        /* \"#utility.yul\":11536:11537   */\n      dup1\n        /* \"#utility.yul\":11529:11541   */\n      revert\n        /* \"#utility.yul\":11480:11543   */\n    tag_561:\n        /* \"#utility.yul\":11427:11549   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11555:11694   */\n    tag_362:\n        /* \"#utility.yul\":11601:11606   */\n      0x00\n        /* \"#utility.yul\":11639:11645   */\n      dup2\n        /* \"#utility.yul\":11626:11646   */\n      calldataload\n        /* \"#utility.yul\":11617:11646   */\n      swap1\n      pop\n        /* \"#utility.yul\":11655:11688   */\n      tag_563\n        /* \"#utility.yul\":11682:11687   */\n      dup2\n        /* \"#utility.yul\":11655:11688   */\n      tag_361\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":11555:11694   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11700:12029   */\n    tag_83:\n        /* \"#utility.yul\":11759:11765   */\n      0x00\n        /* \"#utility.yul\":11808:11810   */\n      0x20\n        /* \"#utility.yul\":11796:11805   */\n      dup3\n        /* \"#utility.yul\":11787:11794   */\n      dup5\n        /* \"#utility.yul\":11783:11806   */\n      sub\n        /* \"#utility.yul\":11779:11811   */\n      slt\n        /* \"#utility.yul\":11776:11895   */\n      iszero\n      tag_565\n      jumpi\n        /* \"#utility.yul\":11814:11893   */\n      tag_566\n      tag_324\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":11776:11895   */\n    tag_565:\n        /* \"#utility.yul\":11934:11935   */\n      0x00\n        /* \"#utility.yul\":11959:12012   */\n      tag_567\n        /* \"#utility.yul\":12004:12011   */\n      dup5\n        /* \"#utility.yul\":11995:12001   */\n      dup3\n        /* \"#utility.yul\":11984:11993   */\n      dup6\n        /* \"#utility.yul\":11980:12002   */\n      add\n        /* \"#utility.yul\":11959:12012   */\n      tag_362\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":11949:12012   */\n      swap2\n      pop\n        /* \"#utility.yul\":11905:12022   */\n      pop\n        /* \"#utility.yul\":11700:12029   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12035:12153   */\n    tag_363:\n        /* \"#utility.yul\":12122:12146   */\n      tag_569\n        /* \"#utility.yul\":12140:12145   */\n      dup2\n        /* \"#utility.yul\":12122:12146   */\n      tag_326\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":12117:12120   */\n      dup3\n        /* \"#utility.yul\":12110:12147   */\n      mstore\n        /* \"#utility.yul\":12035:12153   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12159:12381   */\n    tag_86:\n        /* \"#utility.yul\":12252:12256   */\n      0x00\n        /* \"#utility.yul\":12290:12292   */\n      0x20\n        /* \"#utility.yul\":12279:12288   */\n      dup3\n        /* \"#utility.yul\":12275:12293   */\n      add\n        /* \"#utility.yul\":12267:12293   */\n      swap1\n      pop\n        /* \"#utility.yul\":12303:12374   */\n      tag_571\n        /* \"#utility.yul\":12371:12372   */\n      0x00\n        /* \"#utility.yul\":12360:12369   */\n      dup4\n        /* \"#utility.yul\":12356:12373   */\n      add\n        /* \"#utility.yul\":12347:12353   */\n      dup5\n        /* \"#utility.yul\":12303:12374   */\n      tag_363\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":12159:12381   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12387:13162   */\n    tag_92:\n        /* \"#utility.yul\":12620:12624   */\n      0x00\n        /* \"#utility.yul\":12658:12661   */\n      0xc0\n        /* \"#utility.yul\":12647:12656   */\n      dup3\n        /* \"#utility.yul\":12643:12662   */\n      add\n        /* \"#utility.yul\":12635:12662   */\n      swap1\n      pop\n        /* \"#utility.yul\":12672:12743   */\n      tag_573\n        /* \"#utility.yul\":12740:12741   */\n      0x00\n        /* \"#utility.yul\":12729:12738   */\n      dup4\n        /* \"#utility.yul\":12725:12742   */\n      add\n        /* \"#utility.yul\":12716:12722   */\n      dup10\n        /* \"#utility.yul\":12672:12743   */\n      tag_363\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":12753:12825   */\n      tag_574\n        /* \"#utility.yul\":12821:12823   */\n      0x20\n        /* \"#utility.yul\":12810:12819   */\n      dup4\n        /* \"#utility.yul\":12806:12824   */\n      add\n        /* \"#utility.yul\":12797:12803   */\n      dup9\n        /* \"#utility.yul\":12753:12825   */\n      tag_363\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":12835:12907   */\n      tag_575\n        /* \"#utility.yul\":12903:12905   */\n      0x40\n        /* \"#utility.yul\":12892:12901   */\n      dup4\n        /* \"#utility.yul\":12888:12906   */\n      add\n        /* \"#utility.yul\":12879:12885   */\n      dup8\n        /* \"#utility.yul\":12835:12907   */\n      tag_363\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":12917:12989   */\n      tag_576\n        /* \"#utility.yul\":12985:12987   */\n      0x60\n        /* \"#utility.yul\":12974:12983   */\n      dup4\n        /* \"#utility.yul\":12970:12988   */\n      add\n        /* \"#utility.yul\":12961:12967   */\n      dup7\n        /* \"#utility.yul\":12917:12989   */\n      tag_363\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":12999:13072   */\n      tag_577\n        /* \"#utility.yul\":13067:13070   */\n      0x80\n        /* \"#utility.yul\":13056:13065   */\n      dup4\n        /* \"#utility.yul\":13052:13071   */\n      add\n        /* \"#utility.yul\":13043:13049   */\n      dup6\n        /* \"#utility.yul\":12999:13072   */\n      tag_363\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":13082:13155   */\n      tag_578\n        /* \"#utility.yul\":13150:13153   */\n      0xa0\n        /* \"#utility.yul\":13139:13148   */\n      dup4\n        /* \"#utility.yul\":13135:13154   */\n      add\n        /* \"#utility.yul\":13126:13132   */\n      dup5\n        /* \"#utility.yul\":13082:13155   */\n      tag_363\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":12387:13162   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13168:13337   */\n    tag_364:\n        /* \"#utility.yul\":13252:13263   */\n      0x00\n        /* \"#utility.yul\":13286:13292   */\n      dup3\n        /* \"#utility.yul\":13281:13284   */\n      dup3\n        /* \"#utility.yul\":13274:13293   */\n      mstore\n        /* \"#utility.yul\":13326:13330   */\n      0x20\n        /* \"#utility.yul\":13321:13324   */\n      dup3\n        /* \"#utility.yul\":13317:13331   */\n      add\n        /* \"#utility.yul\":13302:13331   */\n      swap1\n      pop\n        /* \"#utility.yul\":13168:13337   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13343:13506   */\n    tag_365:\n        /* \"#utility.yul\":13483:13498   */\n      0x506c616e20697320657869737400000000000000000000000000000000000000\n        /* \"#utility.yul\":13479:13480   */\n      0x00\n        /* \"#utility.yul\":13471:13477   */\n      dup3\n        /* \"#utility.yul\":13467:13481   */\n      add\n        /* \"#utility.yul\":13460:13499   */\n      mstore\n        /* \"#utility.yul\":13343:13506   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13512:13878   */\n    tag_366:\n        /* \"#utility.yul\":13654:13657   */\n      0x00\n        /* \"#utility.yul\":13675:13742   */\n      tag_582\n        /* \"#utility.yul\":13739:13741   */\n      0x0d\n        /* \"#utility.yul\":13734:13737   */\n      dup4\n        /* \"#utility.yul\":13675:13742   */\n      tag_364\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":13668:13742   */\n      swap2\n      pop\n        /* \"#utility.yul\":13751:13844   */\n      tag_583\n        /* \"#utility.yul\":13840:13843   */\n      dup3\n        /* \"#utility.yul\":13751:13844   */\n      tag_365\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":13869:13871   */\n      0x20\n        /* \"#utility.yul\":13864:13867   */\n      dup3\n        /* \"#utility.yul\":13860:13872   */\n      add\n        /* \"#utility.yul\":13853:13872   */\n      swap1\n      pop\n        /* \"#utility.yul\":13512:13878   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13884:14303   */\n    tag_124:\n        /* \"#utility.yul\":14050:14054   */\n      0x00\n        /* \"#utility.yul\":14088:14090   */\n      0x20\n        /* \"#utility.yul\":14077:14086   */\n      dup3\n        /* \"#utility.yul\":14073:14091   */\n      add\n        /* \"#utility.yul\":14065:14091   */\n      swap1\n      pop\n        /* \"#utility.yul\":14137:14146   */\n      dup2\n        /* \"#utility.yul\":14131:14135   */\n      dup2\n        /* \"#utility.yul\":14127:14147   */\n      sub\n        /* \"#utility.yul\":14123:14124   */\n      0x00\n        /* \"#utility.yul\":14112:14121   */\n      dup4\n        /* \"#utility.yul\":14108:14125   */\n      add\n        /* \"#utility.yul\":14101:14148   */\n      mstore\n        /* \"#utility.yul\":14165:14296   */\n      tag_585\n        /* \"#utility.yul\":14291:14295   */\n      dup2\n        /* \"#utility.yul\":14165:14296   */\n      tag_366\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":14157:14296   */\n      swap1\n      pop\n        /* \"#utility.yul\":13884:14303   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14309:14491   */\n    tag_367:\n        /* \"#utility.yul\":14449:14483   */\n      0x4672657175656e6379206d7573742062652067726561746572207468616e2030\n        /* \"#utility.yul\":14445:14446   */\n      0x00\n        /* \"#utility.yul\":14437:14443   */\n      dup3\n        /* \"#utility.yul\":14433:14447   */\n      add\n        /* \"#utility.yul\":14426:14484   */\n      mstore\n        /* \"#utility.yul\":14309:14491   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14497:14863   */\n    tag_368:\n        /* \"#utility.yul\":14639:14642   */\n      0x00\n        /* \"#utility.yul\":14660:14727   */\n      tag_588\n        /* \"#utility.yul\":14724:14726   */\n      0x20\n        /* \"#utility.yul\":14719:14722   */\n      dup4\n        /* \"#utility.yul\":14660:14727   */\n      tag_364\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":14653:14727   */\n      swap2\n      pop\n        /* \"#utility.yul\":14736:14829   */\n      tag_589\n        /* \"#utility.yul\":14825:14828   */\n      dup3\n        /* \"#utility.yul\":14736:14829   */\n      tag_367\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":14854:14856   */\n      0x20\n        /* \"#utility.yul\":14849:14852   */\n      dup3\n        /* \"#utility.yul\":14845:14857   */\n      add\n        /* \"#utility.yul\":14838:14857   */\n      swap1\n      pop\n        /* \"#utility.yul\":14497:14863   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14869:15288   */\n    tag_127:\n        /* \"#utility.yul\":15035:15039   */\n      0x00\n        /* \"#utility.yul\":15073:15075   */\n      0x20\n        /* \"#utility.yul\":15062:15071   */\n      dup3\n        /* \"#utility.yul\":15058:15076   */\n      add\n        /* \"#utility.yul\":15050:15076   */\n      swap1\n      pop\n        /* \"#utility.yul\":15122:15131   */\n      dup2\n        /* \"#utility.yul\":15116:15120   */\n      dup2\n        /* \"#utility.yul\":15112:15132   */\n      sub\n        /* \"#utility.yul\":15108:15109   */\n      0x00\n        /* \"#utility.yul\":15097:15106   */\n      dup4\n        /* \"#utility.yul\":15093:15110   */\n      add\n        /* \"#utility.yul\":15086:15133   */\n      mstore\n        /* \"#utility.yul\":15150:15281   */\n      tag_591\n        /* \"#utility.yul\":15276:15280   */\n      dup2\n        /* \"#utility.yul\":15150:15281   */\n      tag_368\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":15142:15281   */\n      swap1\n      pop\n        /* \"#utility.yul\":14869:15288   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15294:15473   */\n    tag_369:\n        /* \"#utility.yul\":15434:15465   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":15430:15431   */\n      0x00\n        /* \"#utility.yul\":15422:15428   */\n      dup3\n        /* \"#utility.yul\":15418:15432   */\n      add\n        /* \"#utility.yul\":15411:15466   */\n      mstore\n        /* \"#utility.yul\":15294:15473   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15479:15845   */\n    tag_370:\n        /* \"#utility.yul\":15621:15624   */\n      0x00\n        /* \"#utility.yul\":15642:15709   */\n      tag_594\n        /* \"#utility.yul\":15706:15708   */\n      0x1d\n        /* \"#utility.yul\":15701:15704   */\n      dup4\n        /* \"#utility.yul\":15642:15709   */\n      tag_364\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":15635:15709   */\n      swap2\n      pop\n        /* \"#utility.yul\":15718:15811   */\n      tag_595\n        /* \"#utility.yul\":15807:15810   */\n      dup3\n        /* \"#utility.yul\":15718:15811   */\n      tag_369\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":15836:15838   */\n      0x20\n        /* \"#utility.yul\":15831:15834   */\n      dup3\n        /* \"#utility.yul\":15827:15839   */\n      add\n        /* \"#utility.yul\":15820:15839   */\n      swap1\n      pop\n        /* \"#utility.yul\":15479:15845   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15851:16270   */\n    tag_130:\n        /* \"#utility.yul\":16017:16021   */\n      0x00\n        /* \"#utility.yul\":16055:16057   */\n      0x20\n        /* \"#utility.yul\":16044:16053   */\n      dup3\n        /* \"#utility.yul\":16040:16058   */\n      add\n        /* \"#utility.yul\":16032:16058   */\n      swap1\n      pop\n        /* \"#utility.yul\":16104:16113   */\n      dup2\n        /* \"#utility.yul\":16098:16102   */\n      dup2\n        /* \"#utility.yul\":16094:16114   */\n      sub\n        /* \"#utility.yul\":16090:16091   */\n      0x00\n        /* \"#utility.yul\":16079:16088   */\n      dup4\n        /* \"#utility.yul\":16075:16092   */\n      add\n        /* \"#utility.yul\":16068:16115   */\n      mstore\n        /* \"#utility.yul\":16132:16263   */\n      tag_597\n        /* \"#utility.yul\":16258:16262   */\n      dup2\n        /* \"#utility.yul\":16132:16263   */\n      tag_370\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":16124:16263   */\n      swap1\n      pop\n        /* \"#utility.yul\":15851:16270   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16276:16608   */\n    tag_132:\n        /* \"#utility.yul\":16397:16401   */\n      0x00\n        /* \"#utility.yul\":16435:16437   */\n      0x40\n        /* \"#utility.yul\":16424:16433   */\n      dup3\n        /* \"#utility.yul\":16420:16438   */\n      add\n        /* \"#utility.yul\":16412:16438   */\n      swap1\n      pop\n        /* \"#utility.yul\":16448:16519   */\n      tag_599\n        /* \"#utility.yul\":16516:16517   */\n      0x00\n        /* \"#utility.yul\":16505:16514   */\n      dup4\n        /* \"#utility.yul\":16501:16518   */\n      add\n        /* \"#utility.yul\":16492:16498   */\n      dup6\n        /* \"#utility.yul\":16448:16519   */\n      tag_363\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":16529:16601   */\n      tag_600\n        /* \"#utility.yul\":16597:16599   */\n      0x20\n        /* \"#utility.yul\":16586:16595   */\n      dup4\n        /* \"#utility.yul\":16582:16600   */\n      add\n        /* \"#utility.yul\":16573:16579   */\n      dup5\n        /* \"#utility.yul\":16529:16601   */\n      tag_363\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":16276:16608   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16614:16946   */\n    tag_136:\n        /* \"#utility.yul\":16735:16739   */\n      0x00\n        /* \"#utility.yul\":16773:16775   */\n      0x40\n        /* \"#utility.yul\":16762:16771   */\n      dup3\n        /* \"#utility.yul\":16758:16776   */\n      add\n        /* \"#utility.yul\":16750:16776   */\n      swap1\n      pop\n        /* \"#utility.yul\":16786:16857   */\n      tag_602\n        /* \"#utility.yul\":16854:16855   */\n      0x00\n        /* \"#utility.yul\":16843:16852   */\n      dup4\n        /* \"#utility.yul\":16839:16856   */\n      add\n        /* \"#utility.yul\":16830:16836   */\n      dup6\n        /* \"#utility.yul\":16786:16857   */\n      tag_348\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":16867:16939   */\n      tag_603\n        /* \"#utility.yul\":16935:16937   */\n      0x20\n        /* \"#utility.yul\":16924:16933   */\n      dup4\n        /* \"#utility.yul\":16920:16938   */\n      add\n        /* \"#utility.yul\":16911:16917   */\n      dup5\n        /* \"#utility.yul\":16867:16939   */\n      tag_348\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":16614:16946   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16952:17056   */\n    tag_371:\n        /* \"#utility.yul\":16997:17004   */\n      0x00\n        /* \"#utility.yul\":17026:17050   */\n      tag_605\n        /* \"#utility.yul\":17044:17049   */\n      dup3\n        /* \"#utility.yul\":17026:17050   */\n      tag_329\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":17015:17050   */\n      swap1\n      pop\n        /* \"#utility.yul\":16952:17056   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17062:17200   */\n    tag_372:\n        /* \"#utility.yul\":17143:17175   */\n      tag_607\n        /* \"#utility.yul\":17169:17174   */\n      dup2\n        /* \"#utility.yul\":17143:17175   */\n      tag_371\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":17136:17141   */\n      dup2\n        /* \"#utility.yul\":17133:17176   */\n      eq\n        /* \"#utility.yul\":17123:17194   */\n      tag_608\n      jumpi\n        /* \"#utility.yul\":17190:17191   */\n      0x00\n        /* \"#utility.yul\":17187:17188   */\n      dup1\n        /* \"#utility.yul\":17180:17192   */\n      revert\n        /* \"#utility.yul\":17123:17194   */\n    tag_608:\n        /* \"#utility.yul\":17062:17200   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17206:17361   */\n    tag_373:\n        /* \"#utility.yul\":17260:17265   */\n      0x00\n        /* \"#utility.yul\":17298:17304   */\n      dup2\n        /* \"#utility.yul\":17285:17305   */\n      calldataload\n        /* \"#utility.yul\":17276:17305   */\n      swap1\n      pop\n        /* \"#utility.yul\":17314:17355   */\n      tag_610\n        /* \"#utility.yul\":17349:17354   */\n      dup2\n        /* \"#utility.yul\":17314:17355   */\n      tag_372\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":17206:17361   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17367:17712   */\n    tag_141:\n        /* \"#utility.yul\":17434:17440   */\n      0x00\n        /* \"#utility.yul\":17483:17485   */\n      0x20\n        /* \"#utility.yul\":17471:17480   */\n      dup3\n        /* \"#utility.yul\":17462:17469   */\n      dup5\n        /* \"#utility.yul\":17458:17481   */\n      sub\n        /* \"#utility.yul\":17454:17486   */\n      slt\n        /* \"#utility.yul\":17451:17570   */\n      iszero\n      tag_612\n      jumpi\n        /* \"#utility.yul\":17489:17568   */\n      tag_613\n      tag_324\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":17451:17570   */\n    tag_612:\n        /* \"#utility.yul\":17609:17610   */\n      0x00\n        /* \"#utility.yul\":17634:17695   */\n      tag_614\n        /* \"#utility.yul\":17687:17694   */\n      dup5\n        /* \"#utility.yul\":17678:17684   */\n      dup3\n        /* \"#utility.yul\":17667:17676   */\n      dup6\n        /* \"#utility.yul\":17663:17685   */\n      add\n        /* \"#utility.yul\":17634:17695   */\n      tag_373\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":17624:17695   */\n      swap2\n      pop\n        /* \"#utility.yul\":17580:17705   */\n      pop\n        /* \"#utility.yul\":17367:17712   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17718:17898   */\n    tag_374:\n        /* \"#utility.yul\":17766:17843   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17763:17764   */\n      0x00\n        /* \"#utility.yul\":17756:17844   */\n      mstore\n        /* \"#utility.yul\":17863:17867   */\n      0x11\n        /* \"#utility.yul\":17860:17861   */\n      0x04\n        /* \"#utility.yul\":17853:17868   */\n      mstore\n        /* \"#utility.yul\":17887:17891   */\n      0x24\n        /* \"#utility.yul\":17884:17885   */\n      0x00\n        /* \"#utility.yul\":17877:17892   */\n      revert\n        /* \"#utility.yul\":17904:18098   */\n    tag_145:\n        /* \"#utility.yul\":17944:17948   */\n      0x00\n        /* \"#utility.yul\":17964:17984   */\n      tag_617\n        /* \"#utility.yul\":17982:17983   */\n      dup3\n        /* \"#utility.yul\":17964:17984   */\n      tag_326\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":17959:17984   */\n      swap2\n      pop\n        /* \"#utility.yul\":17998:18018   */\n      tag_618\n        /* \"#utility.yul\":18016:18017   */\n      dup4\n        /* \"#utility.yul\":17998:18018   */\n      tag_326\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":17993:18018   */\n      swap3\n      pop\n        /* \"#utility.yul\":18042:18043   */\n      dup3\n        /* \"#utility.yul\":18039:18040   */\n      dup3\n        /* \"#utility.yul\":18035:18044   */\n      sub\n        /* \"#utility.yul\":18027:18044   */\n      swap1\n      pop\n        /* \"#utility.yul\":18066:18067   */\n      dup2\n        /* \"#utility.yul\":18060:18064   */\n      dup2\n        /* \"#utility.yul\":18057:18068   */\n      gt\n        /* \"#utility.yul\":18054:18091   */\n      iszero\n      tag_619\n      jumpi\n        /* \"#utility.yul\":18071:18089   */\n      tag_620\n      tag_374\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":18054:18091   */\n    tag_619:\n        /* \"#utility.yul\":17904:18098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18104:18284   */\n    tag_375:\n        /* \"#utility.yul\":18152:18229   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18149:18150   */\n      0x00\n        /* \"#utility.yul\":18142:18230   */\n      mstore\n        /* \"#utility.yul\":18249:18253   */\n      0x12\n        /* \"#utility.yul\":18246:18247   */\n      0x04\n        /* \"#utility.yul\":18239:18254   */\n      mstore\n        /* \"#utility.yul\":18273:18277   */\n      0x24\n        /* \"#utility.yul\":18270:18271   */\n      0x00\n        /* \"#utility.yul\":18263:18278   */\n      revert\n        /* \"#utility.yul\":18290:18466   */\n    tag_147:\n        /* \"#utility.yul\":18322:18323   */\n      0x00\n        /* \"#utility.yul\":18339:18359   */\n      tag_623\n        /* \"#utility.yul\":18357:18358   */\n      dup3\n        /* \"#utility.yul\":18339:18359   */\n      tag_326\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":18334:18359   */\n      swap2\n      pop\n        /* \"#utility.yul\":18373:18393   */\n      tag_624\n        /* \"#utility.yul\":18391:18392   */\n      dup4\n        /* \"#utility.yul\":18373:18393   */\n      tag_326\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":18368:18393   */\n      swap3\n      pop\n        /* \"#utility.yul\":18412:18413   */\n      dup3\n        /* \"#utility.yul\":18402:18437   */\n      tag_625\n      jumpi\n        /* \"#utility.yul\":18417:18435   */\n      tag_626\n      tag_375\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":18402:18437   */\n    tag_625:\n        /* \"#utility.yul\":18458:18459   */\n      dup3\n        /* \"#utility.yul\":18455:18456   */\n      dup3\n        /* \"#utility.yul\":18451:18460   */\n      mod\n        /* \"#utility.yul\":18446:18460   */\n      swap1\n      pop\n        /* \"#utility.yul\":18290:18466   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18472:18663   */\n    tag_149:\n        /* \"#utility.yul\":18512:18515   */\n      0x00\n        /* \"#utility.yul\":18531:18551   */\n      tag_628\n        /* \"#utility.yul\":18549:18550   */\n      dup3\n        /* \"#utility.yul\":18531:18551   */\n      tag_326\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":18526:18551   */\n      swap2\n      pop\n        /* \"#utility.yul\":18565:18585   */\n      tag_629\n        /* \"#utility.yul\":18583:18584   */\n      dup4\n        /* \"#utility.yul\":18565:18585   */\n      tag_326\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":18560:18585   */\n      swap3\n      pop\n        /* \"#utility.yul\":18608:18609   */\n      dup3\n        /* \"#utility.yul\":18605:18606   */\n      dup3\n        /* \"#utility.yul\":18601:18610   */\n      add\n        /* \"#utility.yul\":18594:18610   */\n      swap1\n      pop\n        /* \"#utility.yul\":18629:18632   */\n      dup1\n        /* \"#utility.yul\":18626:18627   */\n      dup3\n        /* \"#utility.yul\":18623:18633   */\n      gt\n        /* \"#utility.yul\":18620:18656   */\n      iszero\n      tag_630\n      jumpi\n        /* \"#utility.yul\":18636:18654   */\n      tag_631\n      tag_374\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":18620:18656   */\n    tag_630:\n        /* \"#utility.yul\":18472:18663   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18669:18836   */\n    tag_376:\n        /* \"#utility.yul\":18809:18828   */\n      0x506c616e206973206e6f74206578697374000000000000000000000000000000\n        /* \"#utility.yul\":18805:18806   */\n      0x00\n        /* \"#utility.yul\":18797:18803   */\n      dup3\n        /* \"#utility.yul\":18793:18807   */\n      add\n        /* \"#utility.yul\":18786:18829   */\n      mstore\n        /* \"#utility.yul\":18669:18836   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18842:19208   */\n    tag_377:\n        /* \"#utility.yul\":18984:18987   */\n      0x00\n        /* \"#utility.yul\":19005:19072   */\n      tag_634\n        /* \"#utility.yul\":19069:19071   */\n      0x11\n        /* \"#utility.yul\":19064:19067   */\n      dup4\n        /* \"#utility.yul\":19005:19072   */\n      tag_364\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":18998:19072   */\n      swap2\n      pop\n        /* \"#utility.yul\":19081:19174   */\n      tag_635\n        /* \"#utility.yul\":19170:19173   */\n      dup3\n        /* \"#utility.yul\":19081:19174   */\n      tag_376\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":19199:19201   */\n      0x20\n        /* \"#utility.yul\":19194:19197   */\n      dup3\n        /* \"#utility.yul\":19190:19202   */\n      add\n        /* \"#utility.yul\":19183:19202   */\n      swap1\n      pop\n        /* \"#utility.yul\":18842:19208   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19214:19633   */\n    tag_156:\n        /* \"#utility.yul\":19380:19384   */\n      0x00\n        /* \"#utility.yul\":19418:19420   */\n      0x20\n        /* \"#utility.yul\":19407:19416   */\n      dup3\n        /* \"#utility.yul\":19403:19421   */\n      add\n        /* \"#utility.yul\":19395:19421   */\n      swap1\n      pop\n        /* \"#utility.yul\":19467:19476   */\n      dup2\n        /* \"#utility.yul\":19461:19465   */\n      dup2\n        /* \"#utility.yul\":19457:19477   */\n      sub\n        /* \"#utility.yul\":19453:19454   */\n      0x00\n        /* \"#utility.yul\":19442:19451   */\n      dup4\n        /* \"#utility.yul\":19438:19455   */\n      add\n        /* \"#utility.yul\":19431:19478   */\n      mstore\n        /* \"#utility.yul\":19495:19626   */\n      tag_637\n        /* \"#utility.yul\":19621:19625   */\n      dup2\n        /* \"#utility.yul\":19495:19626   */\n      tag_377\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":19487:19626   */\n      swap1\n      pop\n        /* \"#utility.yul\":19214:19633   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19639:19859   */\n    tag_378:\n        /* \"#utility.yul\":19779:19813   */\n      0x546f74616c206d7573742062652067726561746572207468616e20616d6f756e\n        /* \"#utility.yul\":19775:19776   */\n      0x00\n        /* \"#utility.yul\":19767:19773   */\n      dup3\n        /* \"#utility.yul\":19763:19777   */\n      add\n        /* \"#utility.yul\":19756:19814   */\n      mstore\n        /* \"#utility.yul\":19848:19851   */\n      0x7400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19843:19845   */\n      0x20\n        /* \"#utility.yul\":19835:19841   */\n      dup3\n        /* \"#utility.yul\":19831:19846   */\n      add\n        /* \"#utility.yul\":19824:19852   */\n      mstore\n        /* \"#utility.yul\":19639:19859   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19865:20231   */\n    tag_379:\n        /* \"#utility.yul\":20007:20010   */\n      0x00\n        /* \"#utility.yul\":20028:20095   */\n      tag_640\n        /* \"#utility.yul\":20092:20094   */\n      0x21\n        /* \"#utility.yul\":20087:20090   */\n      dup4\n        /* \"#utility.yul\":20028:20095   */\n      tag_364\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":20021:20095   */\n      swap2\n      pop\n        /* \"#utility.yul\":20104:20197   */\n      tag_641\n        /* \"#utility.yul\":20193:20196   */\n      dup3\n        /* \"#utility.yul\":20104:20197   */\n      tag_378\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":20222:20224   */\n      0x40\n        /* \"#utility.yul\":20217:20220   */\n      dup3\n        /* \"#utility.yul\":20213:20225   */\n      add\n        /* \"#utility.yul\":20206:20225   */\n      swap1\n      pop\n        /* \"#utility.yul\":19865:20231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20237:20656   */\n    tag_162:\n        /* \"#utility.yul\":20403:20407   */\n      0x00\n        /* \"#utility.yul\":20441:20443   */\n      0x20\n        /* \"#utility.yul\":20430:20439   */\n      dup3\n        /* \"#utility.yul\":20426:20444   */\n      add\n        /* \"#utility.yul\":20418:20444   */\n      swap1\n      pop\n        /* \"#utility.yul\":20490:20499   */\n      dup2\n        /* \"#utility.yul\":20484:20488   */\n      dup2\n        /* \"#utility.yul\":20480:20500   */\n      sub\n        /* \"#utility.yul\":20476:20477   */\n      0x00\n        /* \"#utility.yul\":20465:20474   */\n      dup4\n        /* \"#utility.yul\":20461:20478   */\n      add\n        /* \"#utility.yul\":20454:20501   */\n      mstore\n        /* \"#utility.yul\":20518:20649   */\n      tag_643\n        /* \"#utility.yul\":20644:20648   */\n      dup2\n        /* \"#utility.yul\":20518:20649   */\n      tag_379\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":20510:20649   */\n      swap1\n      pop\n        /* \"#utility.yul\":20237:20656   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20662:20895   */\n    tag_173:\n        /* \"#utility.yul\":20701:20704   */\n      0x00\n        /* \"#utility.yul\":20724:20748   */\n      tag_645\n        /* \"#utility.yul\":20742:20747   */\n      dup3\n        /* \"#utility.yul\":20724:20748   */\n      tag_326\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":20715:20748   */\n      swap2\n      pop\n        /* \"#utility.yul\":20770:20836   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20763:20768   */\n      dup3\n        /* \"#utility.yul\":20760:20837   */\n      sub\n        /* \"#utility.yul\":20757:20860   */\n      tag_646\n      jumpi\n        /* \"#utility.yul\":20840:20858   */\n      tag_647\n      tag_374\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":20757:20860   */\n    tag_646:\n        /* \"#utility.yul\":20887:20888   */\n      0x01\n        /* \"#utility.yul\":20880:20885   */\n      dup3\n        /* \"#utility.yul\":20876:20889   */\n      add\n        /* \"#utility.yul\":20869:20889   */\n      swap1\n      pop\n        /* \"#utility.yul\":20662:20895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20901:21069   */\n    tag_380:\n        /* \"#utility.yul\":21041:21061   */\n      0x506c616e206973206e6f74206163746976650000000000000000000000000000\n        /* \"#utility.yul\":21037:21038   */\n      0x00\n        /* \"#utility.yul\":21029:21035   */\n      dup3\n        /* \"#utility.yul\":21025:21039   */\n      add\n        /* \"#utility.yul\":21018:21062   */\n      mstore\n        /* \"#utility.yul\":20901:21069   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21075:21441   */\n    tag_381:\n        /* \"#utility.yul\":21217:21220   */\n      0x00\n        /* \"#utility.yul\":21238:21305   */\n      tag_650\n        /* \"#utility.yul\":21302:21304   */\n      0x12\n        /* \"#utility.yul\":21297:21300   */\n      dup4\n        /* \"#utility.yul\":21238:21305   */\n      tag_364\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":21231:21305   */\n      swap2\n      pop\n        /* \"#utility.yul\":21314:21407   */\n      tag_651\n        /* \"#utility.yul\":21403:21406   */\n      dup3\n        /* \"#utility.yul\":21314:21407   */\n      tag_380\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":21432:21434   */\n      0x20\n        /* \"#utility.yul\":21427:21430   */\n      dup3\n        /* \"#utility.yul\":21423:21435   */\n      add\n        /* \"#utility.yul\":21416:21435   */\n      swap1\n      pop\n        /* \"#utility.yul\":21075:21441   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21447:21866   */\n    tag_179:\n        /* \"#utility.yul\":21613:21617   */\n      0x00\n        /* \"#utility.yul\":21651:21653   */\n      0x20\n        /* \"#utility.yul\":21640:21649   */\n      dup3\n        /* \"#utility.yul\":21636:21654   */\n      add\n        /* \"#utility.yul\":21628:21654   */\n      swap1\n      pop\n        /* \"#utility.yul\":21700:21709   */\n      dup2\n        /* \"#utility.yul\":21694:21698   */\n      dup2\n        /* \"#utility.yul\":21690:21710   */\n      sub\n        /* \"#utility.yul\":21686:21687   */\n      0x00\n        /* \"#utility.yul\":21675:21684   */\n      dup4\n        /* \"#utility.yul\":21671:21688   */\n      add\n        /* \"#utility.yul\":21664:21711   */\n      mstore\n        /* \"#utility.yul\":21728:21859   */\n      tag_653\n        /* \"#utility.yul\":21854:21858   */\n      dup2\n        /* \"#utility.yul\":21728:21859   */\n      tag_381\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":21720:21859   */\n      swap1\n      pop\n        /* \"#utility.yul\":21447:21866   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21872:22100   */\n    tag_382:\n        /* \"#utility.yul\":22012:22046   */\n      0x43616e6e6f742074726967676572206d6f7265207468616e2072656d61696e69\n        /* \"#utility.yul\":22008:22009   */\n      0x00\n        /* \"#utility.yul\":22000:22006   */\n      dup3\n        /* \"#utility.yul\":21996:22010   */\n      add\n        /* \"#utility.yul\":21989:22047   */\n      mstore\n        /* \"#utility.yul\":22081:22092   */\n      0x6e6720616d6f756e740000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22076:22078   */\n      0x20\n        /* \"#utility.yul\":22068:22074   */\n      dup3\n        /* \"#utility.yul\":22064:22079   */\n      add\n        /* \"#utility.yul\":22057:22093   */\n      mstore\n        /* \"#utility.yul\":21872:22100   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22106:22472   */\n    tag_383:\n        /* \"#utility.yul\":22248:22251   */\n      0x00\n        /* \"#utility.yul\":22269:22336   */\n      tag_656\n        /* \"#utility.yul\":22333:22335   */\n      0x29\n        /* \"#utility.yul\":22328:22331   */\n      dup4\n        /* \"#utility.yul\":22269:22336   */\n      tag_364\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":22262:22336   */\n      swap2\n      pop\n        /* \"#utility.yul\":22345:22438   */\n      tag_657\n        /* \"#utility.yul\":22434:22437   */\n      dup3\n        /* \"#utility.yul\":22345:22438   */\n      tag_382\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":22463:22465   */\n      0x40\n        /* \"#utility.yul\":22458:22461   */\n      dup3\n        /* \"#utility.yul\":22454:22466   */\n      add\n        /* \"#utility.yul\":22447:22466   */\n      swap1\n      pop\n        /* \"#utility.yul\":22106:22472   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22478:22897   */\n    tag_183:\n        /* \"#utility.yul\":22644:22648   */\n      0x00\n        /* \"#utility.yul\":22682:22684   */\n      0x20\n        /* \"#utility.yul\":22671:22680   */\n      dup3\n        /* \"#utility.yul\":22667:22685   */\n      add\n        /* \"#utility.yul\":22659:22685   */\n      swap1\n      pop\n        /* \"#utility.yul\":22731:22740   */\n      dup2\n        /* \"#utility.yul\":22725:22729   */\n      dup2\n        /* \"#utility.yul\":22721:22741   */\n      sub\n        /* \"#utility.yul\":22717:22718   */\n      0x00\n        /* \"#utility.yul\":22706:22715   */\n      dup4\n        /* \"#utility.yul\":22702:22719   */\n      add\n        /* \"#utility.yul\":22695:22742   */\n      mstore\n        /* \"#utility.yul\":22759:22890   */\n      tag_659\n        /* \"#utility.yul\":22885:22889   */\n      dup2\n        /* \"#utility.yul\":22759:22890   */\n      tag_383\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":22751:22890   */\n      swap1\n      pop\n        /* \"#utility.yul\":22478:22897   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22903:23129   */\n    tag_384:\n        /* \"#utility.yul\":23043:23077   */\n      0x43616e6e6f742074726967676572206265666f7265206e657874207472696767\n        /* \"#utility.yul\":23039:23040   */\n      0x00\n        /* \"#utility.yul\":23031:23037   */\n      dup3\n        /* \"#utility.yul\":23027:23041   */\n      add\n        /* \"#utility.yul\":23020:23078   */\n      mstore\n        /* \"#utility.yul\":23112:23121   */\n      0x65722074696d6500000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23107:23109   */\n      0x20\n        /* \"#utility.yul\":23099:23105   */\n      dup3\n        /* \"#utility.yul\":23095:23110   */\n      add\n        /* \"#utility.yul\":23088:23122   */\n      mstore\n        /* \"#utility.yul\":22903:23129   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23135:23501   */\n    tag_385:\n        /* \"#utility.yul\":23277:23280   */\n      0x00\n        /* \"#utility.yul\":23298:23365   */\n      tag_662\n        /* \"#utility.yul\":23362:23364   */\n      0x27\n        /* \"#utility.yul\":23357:23360   */\n      dup4\n        /* \"#utility.yul\":23298:23365   */\n      tag_364\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":23291:23365   */\n      swap2\n      pop\n        /* \"#utility.yul\":23374:23467   */\n      tag_663\n        /* \"#utility.yul\":23463:23466   */\n      dup3\n        /* \"#utility.yul\":23374:23467   */\n      tag_384\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":23492:23494   */\n      0x40\n        /* \"#utility.yul\":23487:23490   */\n      dup3\n        /* \"#utility.yul\":23483:23495   */\n      add\n        /* \"#utility.yul\":23476:23495   */\n      swap1\n      pop\n        /* \"#utility.yul\":23135:23501   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23507:23926   */\n    tag_186:\n        /* \"#utility.yul\":23673:23677   */\n      0x00\n        /* \"#utility.yul\":23711:23713   */\n      0x20\n        /* \"#utility.yul\":23700:23709   */\n      dup3\n        /* \"#utility.yul\":23696:23714   */\n      add\n        /* \"#utility.yul\":23688:23714   */\n      swap1\n      pop\n        /* \"#utility.yul\":23760:23769   */\n      dup2\n        /* \"#utility.yul\":23754:23758   */\n      dup2\n        /* \"#utility.yul\":23750:23770   */\n      sub\n        /* \"#utility.yul\":23746:23747   */\n      0x00\n        /* \"#utility.yul\":23735:23744   */\n      dup4\n        /* \"#utility.yul\":23731:23748   */\n      add\n        /* \"#utility.yul\":23724:23771   */\n      mstore\n        /* \"#utility.yul\":23788:23919   */\n      tag_665\n        /* \"#utility.yul\":23914:23918   */\n      dup2\n        /* \"#utility.yul\":23788:23919   */\n      tag_385\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":23780:23919   */\n      swap1\n      pop\n        /* \"#utility.yul\":23507:23926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23932:24037   */\n    tag_386:\n        /* \"#utility.yul\":23968:23975   */\n      0x00\n        /* \"#utility.yul\":24008:24030   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":24001:24006   */\n      dup3\n        /* \"#utility.yul\":23997:24031   */\n      and\n        /* \"#utility.yul\":23986:24031   */\n      swap1\n      pop\n        /* \"#utility.yul\":23932:24037   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24043:24163   */\n    tag_387:\n        /* \"#utility.yul\":24115:24138   */\n      tag_668\n        /* \"#utility.yul\":24132:24137   */\n      dup2\n        /* \"#utility.yul\":24115:24138   */\n      tag_386\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":24108:24113   */\n      dup2\n        /* \"#utility.yul\":24105:24139   */\n      eq\n        /* \"#utility.yul\":24095:24157   */\n      tag_669\n      jumpi\n        /* \"#utility.yul\":24153:24154   */\n      0x00\n        /* \"#utility.yul\":24150:24151   */\n      dup1\n        /* \"#utility.yul\":24143:24155   */\n      revert\n        /* \"#utility.yul\":24095:24157   */\n    tag_669:\n        /* \"#utility.yul\":24043:24163   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24169:24310   */\n    tag_388:\n        /* \"#utility.yul\":24225:24230   */\n      0x00\n        /* \"#utility.yul\":24256:24262   */\n      dup2\n        /* \"#utility.yul\":24250:24263   */\n      mload\n        /* \"#utility.yul\":24241:24263   */\n      swap1\n      pop\n        /* \"#utility.yul\":24272:24304   */\n      tag_671\n        /* \"#utility.yul\":24298:24303   */\n      dup2\n        /* \"#utility.yul\":24272:24304   */\n      tag_387\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":24169:24310   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24316:24392   */\n    tag_389:\n        /* \"#utility.yul\":24352:24359   */\n      0x00\n        /* \"#utility.yul\":24381:24386   */\n      dup2\n        /* \"#utility.yul\":24370:24386   */\n      swap1\n      pop\n        /* \"#utility.yul\":24316:24392   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24398:24518   */\n    tag_390:\n        /* \"#utility.yul\":24470:24493   */\n      tag_674\n        /* \"#utility.yul\":24487:24492   */\n      dup2\n        /* \"#utility.yul\":24470:24493   */\n      tag_389\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":24463:24468   */\n      dup2\n        /* \"#utility.yul\":24460:24494   */\n      eq\n        /* \"#utility.yul\":24450:24512   */\n      tag_675\n      jumpi\n        /* \"#utility.yul\":24508:24509   */\n      0x00\n        /* \"#utility.yul\":24505:24506   */\n      dup1\n        /* \"#utility.yul\":24498:24510   */\n      revert\n        /* \"#utility.yul\":24450:24512   */\n    tag_675:\n        /* \"#utility.yul\":24398:24518   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24524:24665   */\n    tag_391:\n        /* \"#utility.yul\":24580:24585   */\n      0x00\n        /* \"#utility.yul\":24611:24617   */\n      dup2\n        /* \"#utility.yul\":24605:24618   */\n      mload\n        /* \"#utility.yul\":24596:24618   */\n      swap1\n      pop\n        /* \"#utility.yul\":24627:24659   */\n      tag_677\n        /* \"#utility.yul\":24653:24658   */\n      dup2\n        /* \"#utility.yul\":24627:24659   */\n      tag_390\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":24524:24665   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24671:24814   */\n    tag_392:\n        /* \"#utility.yul\":24728:24733   */\n      0x00\n        /* \"#utility.yul\":24759:24765   */\n      dup2\n        /* \"#utility.yul\":24753:24766   */\n      mload\n        /* \"#utility.yul\":24744:24766   */\n      swap1\n      pop\n        /* \"#utility.yul\":24775:24808   */\n      tag_679\n        /* \"#utility.yul\":24802:24807   */\n      dup2\n        /* \"#utility.yul\":24775:24808   */\n      tag_327\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":24671:24814   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24820:25791   */\n    tag_190:\n        /* \"#utility.yul\":24923:24929   */\n      0x00\n        /* \"#utility.yul\":24931:24937   */\n      dup1\n        /* \"#utility.yul\":24939:24945   */\n      0x00\n        /* \"#utility.yul\":24947:24953   */\n      dup1\n        /* \"#utility.yul\":24955:24961   */\n      0x00\n        /* \"#utility.yul\":25004:25007   */\n      0xa0\n        /* \"#utility.yul\":24992:25001   */\n      dup7\n        /* \"#utility.yul\":24983:24990   */\n      dup9\n        /* \"#utility.yul\":24979:25002   */\n      sub\n        /* \"#utility.yul\":24975:25008   */\n      slt\n        /* \"#utility.yul\":24972:25092   */\n      iszero\n      tag_681\n      jumpi\n        /* \"#utility.yul\":25011:25090   */\n      tag_682\n      tag_324\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":24972:25092   */\n    tag_681:\n        /* \"#utility.yul\":25131:25132   */\n      0x00\n        /* \"#utility.yul\":25156:25219   */\n      tag_683\n        /* \"#utility.yul\":25211:25218   */\n      dup9\n        /* \"#utility.yul\":25202:25208   */\n      dup3\n        /* \"#utility.yul\":25191:25200   */\n      dup10\n        /* \"#utility.yul\":25187:25209   */\n      add\n        /* \"#utility.yul\":25156:25219   */\n      tag_388\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":25146:25219   */\n      swap6\n      pop\n        /* \"#utility.yul\":25102:25229   */\n      pop\n        /* \"#utility.yul\":25268:25270   */\n      0x20\n        /* \"#utility.yul\":25294:25357   */\n      tag_684\n        /* \"#utility.yul\":25349:25356   */\n      dup9\n        /* \"#utility.yul\":25340:25346   */\n      dup3\n        /* \"#utility.yul\":25329:25338   */\n      dup10\n        /* \"#utility.yul\":25325:25347   */\n      add\n        /* \"#utility.yul\":25294:25357   */\n      tag_391\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":25284:25357   */\n      swap5\n      pop\n        /* \"#utility.yul\":25239:25367   */\n      pop\n        /* \"#utility.yul\":25406:25408   */\n      0x40\n        /* \"#utility.yul\":25432:25496   */\n      tag_685\n        /* \"#utility.yul\":25488:25495   */\n      dup9\n        /* \"#utility.yul\":25479:25485   */\n      dup3\n        /* \"#utility.yul\":25468:25477   */\n      dup10\n        /* \"#utility.yul\":25464:25486   */\n      add\n        /* \"#utility.yul\":25432:25496   */\n      tag_392\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":25422:25496   */\n      swap4\n      pop\n        /* \"#utility.yul\":25377:25506   */\n      pop\n        /* \"#utility.yul\":25545:25547   */\n      0x60\n        /* \"#utility.yul\":25571:25635   */\n      tag_686\n        /* \"#utility.yul\":25627:25634   */\n      dup9\n        /* \"#utility.yul\":25618:25624   */\n      dup3\n        /* \"#utility.yul\":25607:25616   */\n      dup10\n        /* \"#utility.yul\":25603:25625   */\n      add\n        /* \"#utility.yul\":25571:25635   */\n      tag_392\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":25561:25635   */\n      swap3\n      pop\n        /* \"#utility.yul\":25516:25645   */\n      pop\n        /* \"#utility.yul\":25684:25687   */\n      0x80\n        /* \"#utility.yul\":25711:25774   */\n      tag_687\n        /* \"#utility.yul\":25766:25773   */\n      dup9\n        /* \"#utility.yul\":25757:25763   */\n      dup3\n        /* \"#utility.yul\":25746:25755   */\n      dup10\n        /* \"#utility.yul\":25742:25764   */\n      add\n        /* \"#utility.yul\":25711:25774   */\n      tag_388\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":25701:25774   */\n      swap2\n      pop\n        /* \"#utility.yul\":25655:25784   */\n      pop\n        /* \"#utility.yul\":24820:25791   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25797:25883   */\n    tag_393:\n        /* \"#utility.yul\":25832:25839   */\n      0x00\n        /* \"#utility.yul\":25872:25876   */\n      0xff\n        /* \"#utility.yul\":25865:25870   */\n      dup3\n        /* \"#utility.yul\":25861:25877   */\n      and\n        /* \"#utility.yul\":25850:25877   */\n      swap1\n      pop\n        /* \"#utility.yul\":25797:25883   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25889:26007   */\n    tag_394:\n        /* \"#utility.yul\":25960:25982   */\n      tag_690\n        /* \"#utility.yul\":25976:25981   */\n      dup2\n        /* \"#utility.yul\":25960:25982   */\n      tag_393\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":25953:25958   */\n      dup2\n        /* \"#utility.yul\":25950:25983   */\n      eq\n        /* \"#utility.yul\":25940:26001   */\n      tag_691\n      jumpi\n        /* \"#utility.yul\":25997:25998   */\n      0x00\n        /* \"#utility.yul\":25994:25995   */\n      dup1\n        /* \"#utility.yul\":25987:25999   */\n      revert\n        /* \"#utility.yul\":25940:26001   */\n    tag_691:\n        /* \"#utility.yul\":25889:26007   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26013:26152   */\n    tag_395:\n        /* \"#utility.yul\":26068:26073   */\n      0x00\n        /* \"#utility.yul\":26099:26105   */\n      dup2\n        /* \"#utility.yul\":26093:26106   */\n      mload\n        /* \"#utility.yul\":26084:26106   */\n      swap1\n      pop\n        /* \"#utility.yul\":26115:26146   */\n      tag_693\n        /* \"#utility.yul\":26140:26145   */\n      dup2\n        /* \"#utility.yul\":26115:26146   */\n      tag_394\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":26013:26152   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26158:26505   */\n    tag_194:\n        /* \"#utility.yul\":26226:26232   */\n      0x00\n        /* \"#utility.yul\":26275:26277   */\n      0x20\n        /* \"#utility.yul\":26263:26272   */\n      dup3\n        /* \"#utility.yul\":26254:26261   */\n      dup5\n        /* \"#utility.yul\":26250:26273   */\n      sub\n        /* \"#utility.yul\":26246:26278   */\n      slt\n        /* \"#utility.yul\":26243:26362   */\n      iszero\n      tag_695\n      jumpi\n        /* \"#utility.yul\":26281:26360   */\n      tag_696\n      tag_324\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":26243:26362   */\n    tag_695:\n        /* \"#utility.yul\":26401:26402   */\n      0x00\n        /* \"#utility.yul\":26426:26488   */\n      tag_697\n        /* \"#utility.yul\":26480:26487   */\n      dup5\n        /* \"#utility.yul\":26471:26477   */\n      dup3\n        /* \"#utility.yul\":26460:26469   */\n      dup6\n        /* \"#utility.yul\":26456:26478   */\n      add\n        /* \"#utility.yul\":26426:26488   */\n      tag_395\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":26416:26488   */\n      swap2\n      pop\n        /* \"#utility.yul\":26372:26498   */\n      pop\n        /* \"#utility.yul\":26158:26505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26511:26613   */\n    tag_396:\n        /* \"#utility.yul\":26553:26561   */\n      0x00\n        /* \"#utility.yul\":26600:26605   */\n      dup2\n        /* \"#utility.yul\":26597:26598   */\n      0x01\n        /* \"#utility.yul\":26593:26606   */\n      shr\n        /* \"#utility.yul\":26572:26606   */\n      swap1\n      pop\n        /* \"#utility.yul\":26511:26613   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26619:27467   */\n    tag_397:\n        /* \"#utility.yul\":26680:26685   */\n      0x00\n        /* \"#utility.yul\":26687:26691   */\n      dup1\n        /* \"#utility.yul\":26711:26717   */\n      dup3\n        /* \"#utility.yul\":26702:26717   */\n      swap2\n      pop\n        /* \"#utility.yul\":26735:26740   */\n      dup4\n        /* \"#utility.yul\":26726:26740   */\n      swap1\n      pop\n        /* \"#utility.yul\":26749:27461   */\n    tag_700:\n        /* \"#utility.yul\":26770:26771   */\n      0x01\n        /* \"#utility.yul\":26760:26768   */\n      dup6\n        /* \"#utility.yul\":26757:26772   */\n      gt\n        /* \"#utility.yul\":26749:27461   */\n      iszero\n      tag_702\n      jumpi\n        /* \"#utility.yul\":26865:26869   */\n      dup1\n        /* \"#utility.yul\":26860:26863   */\n      dup7\n        /* \"#utility.yul\":26856:26870   */\n      div\n        /* \"#utility.yul\":26850:26854   */\n      dup2\n        /* \"#utility.yul\":26847:26871   */\n      gt\n        /* \"#utility.yul\":26844:26894   */\n      iszero\n      tag_703\n      jumpi\n        /* \"#utility.yul\":26874:26892   */\n      tag_704\n      tag_374\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":26844:26894   */\n    tag_703:\n        /* \"#utility.yul\":26924:26925   */\n      0x01\n        /* \"#utility.yul\":26914:26922   */\n      dup6\n        /* \"#utility.yul\":26910:26926   */\n      and\n        /* \"#utility.yul\":26907:27358   */\n      iszero\n      tag_705\n      jumpi\n        /* \"#utility.yul\":27339:27343   */\n      dup1\n        /* \"#utility.yul\":27332:27337   */\n      dup3\n        /* \"#utility.yul\":27328:27344   */\n      mul\n        /* \"#utility.yul\":27319:27344   */\n      swap2\n      pop\n        /* \"#utility.yul\":26907:27358   */\n    tag_705:\n        /* \"#utility.yul\":27389:27393   */\n      dup1\n        /* \"#utility.yul\":27383:27387   */\n      dup2\n        /* \"#utility.yul\":27379:27394   */\n      mul\n        /* \"#utility.yul\":27371:27394   */\n      swap1\n      pop\n        /* \"#utility.yul\":27419:27451   */\n      tag_706\n        /* \"#utility.yul\":27442:27450   */\n      dup6\n        /* \"#utility.yul\":27419:27451   */\n      tag_396\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":27407:27451   */\n      swap5\n      pop\n        /* \"#utility.yul\":26749:27461   */\n      jump(tag_700)\n    tag_702:\n        /* \"#utility.yul\":26619:27467   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27473:28546   */\n    tag_398:\n        /* \"#utility.yul\":27527:27532   */\n      0x00\n        /* \"#utility.yul\":27718:27726   */\n      dup3\n        /* \"#utility.yul\":27708:27748   */\n      tag_708\n      jumpi\n        /* \"#utility.yul\":27739:27740   */\n      0x01\n        /* \"#utility.yul\":27730:27740   */\n      swap1\n      pop\n        /* \"#utility.yul\":27741:27746   */\n      jump(tag_707)\n        /* \"#utility.yul\":27708:27748   */\n    tag_708:\n        /* \"#utility.yul\":27767:27771   */\n      dup2\n        /* \"#utility.yul\":27757:27793   */\n      tag_709\n      jumpi\n        /* \"#utility.yul\":27784:27785   */\n      0x00\n        /* \"#utility.yul\":27775:27785   */\n      swap1\n      pop\n        /* \"#utility.yul\":27786:27791   */\n      jump(tag_707)\n        /* \"#utility.yul\":27757:27793   */\n    tag_709:\n        /* \"#utility.yul\":27853:27857   */\n      dup2\n        /* \"#utility.yul\":27901:27902   */\n      0x01\n        /* \"#utility.yul\":27896:27923   */\n      dup2\n      eq\n      tag_711\n      jumpi\n        /* \"#utility.yul\":27937:27938   */\n      0x02\n        /* \"#utility.yul\":27932:28123   */\n      dup2\n      eq\n      tag_712\n      jumpi\n        /* \"#utility.yul\":27846:28123   */\n      jump(tag_710)\n        /* \"#utility.yul\":27896:27923   */\n    tag_711:\n        /* \"#utility.yul\":27914:27915   */\n      0x01\n        /* \"#utility.yul\":27905:27915   */\n      swap2\n      pop\n        /* \"#utility.yul\":27916:27921   */\n      pop\n      jump(tag_707)\n        /* \"#utility.yul\":27932:28123   */\n    tag_712:\n        /* \"#utility.yul\":27977:27980   */\n      0xff\n        /* \"#utility.yul\":27967:27975   */\n      dup5\n        /* \"#utility.yul\":27964:27981   */\n      gt\n        /* \"#utility.yul\":27961:28004   */\n      iszero\n      tag_713\n      jumpi\n        /* \"#utility.yul\":27984:28002   */\n      tag_714\n      tag_374\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":27961:28004   */\n    tag_713:\n        /* \"#utility.yul\":28033:28041   */\n      dup4\n        /* \"#utility.yul\":28030:28031   */\n      0x02\n        /* \"#utility.yul\":28026:28042   */\n      exp\n        /* \"#utility.yul\":28017:28042   */\n      swap2\n      pop\n        /* \"#utility.yul\":28068:28071   */\n      dup5\n        /* \"#utility.yul\":28061:28066   */\n      dup3\n        /* \"#utility.yul\":28058:28072   */\n      gt\n        /* \"#utility.yul\":28055:28095   */\n      iszero\n      tag_715\n      jumpi\n        /* \"#utility.yul\":28075:28093   */\n      tag_716\n      tag_374\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":28055:28095   */\n    tag_715:\n        /* \"#utility.yul\":28108:28113   */\n      pop\n      jump(tag_707)\n        /* \"#utility.yul\":27846:28123   */\n    tag_710:\n      pop\n        /* \"#utility.yul\":28232:28234   */\n      0x20\n        /* \"#utility.yul\":28222:28230   */\n      dup4\n        /* \"#utility.yul\":28219:28235   */\n      lt\n        /* \"#utility.yul\":28213:28216   */\n      0x0133\n        /* \"#utility.yul\":28207:28211   */\n      dup4\n        /* \"#utility.yul\":28204:28217   */\n      lt\n        /* \"#utility.yul\":28200:28236   */\n      and\n        /* \"#utility.yul\":28182:28184   */\n      0x4e\n        /* \"#utility.yul\":28172:28180   */\n      dup5\n        /* \"#utility.yul\":28169:28185   */\n      lt\n        /* \"#utility.yul\":28164:28166   */\n      0x0b\n        /* \"#utility.yul\":28158:28162   */\n      dup5\n        /* \"#utility.yul\":28155:28167   */\n      lt\n        /* \"#utility.yul\":28151:28186   */\n      and\n        /* \"#utility.yul\":28135:28246   */\n      or\n        /* \"#utility.yul\":28132:28378   */\n      iszero\n      tag_717\n      jumpi\n        /* \"#utility.yul\":28288:28296   */\n      dup3\n        /* \"#utility.yul\":28282:28286   */\n      dup3\n        /* \"#utility.yul\":28278:28297   */\n      exp\n        /* \"#utility.yul\":28269:28297   */\n      swap1\n      pop\n        /* \"#utility.yul\":28323:28326   */\n      dup4\n        /* \"#utility.yul\":28316:28321   */\n      dup2\n        /* \"#utility.yul\":28313:28327   */\n      gt\n        /* \"#utility.yul\":28310:28350   */\n      iszero\n      tag_718\n      jumpi\n        /* \"#utility.yul\":28330:28348   */\n      tag_719\n      tag_374\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":28310:28350   */\n    tag_718:\n        /* \"#utility.yul\":28363:28368   */\n      jump(tag_707)\n        /* \"#utility.yul\":28132:28378   */\n    tag_717:\n        /* \"#utility.yul\":28403:28445   */\n      tag_720\n        /* \"#utility.yul\":28441:28444   */\n      dup5\n        /* \"#utility.yul\":28431:28439   */\n      dup5\n        /* \"#utility.yul\":28425:28429   */\n      dup5\n        /* \"#utility.yul\":28422:28423   */\n      0x01\n        /* \"#utility.yul\":28403:28445   */\n      tag_397\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":28388:28445   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":28477:28481   */\n      dup2\n        /* \"#utility.yul\":28472:28475   */\n      dup5\n        /* \"#utility.yul\":28468:28482   */\n      div\n        /* \"#utility.yul\":28461:28466   */\n      dup2\n        /* \"#utility.yul\":28458:28483   */\n      gt\n        /* \"#utility.yul\":28455:28506   */\n      iszero\n      tag_721\n      jumpi\n        /* \"#utility.yul\":28486:28504   */\n      tag_722\n      tag_374\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":28455:28506   */\n    tag_721:\n        /* \"#utility.yul\":28535:28539   */\n      dup2\n        /* \"#utility.yul\":28528:28533   */\n      dup2\n        /* \"#utility.yul\":28524:28540   */\n      mul\n        /* \"#utility.yul\":28515:28540   */\n      swap1\n      pop\n        /* \"#utility.yul\":27473:28546   */\n    tag_707:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28552:28837   */\n    tag_197:\n        /* \"#utility.yul\":28612:28617   */\n      0x00\n        /* \"#utility.yul\":28636:28659   */\n      tag_724\n        /* \"#utility.yul\":28654:28658   */\n      dup3\n        /* \"#utility.yul\":28636:28659   */\n      tag_326\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":28628:28659   */\n      swap2\n      pop\n        /* \"#utility.yul\":28680:28707   */\n      tag_725\n        /* \"#utility.yul\":28698:28706   */\n      dup4\n        /* \"#utility.yul\":28680:28707   */\n      tag_326\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":28668:28707   */\n      swap3\n      pop\n        /* \"#utility.yul\":28726:28830   */\n      tag_726\n        /* \"#utility.yul\":28763:28829   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":28753:28761   */\n      dup5\n        /* \"#utility.yul\":28747:28751   */\n      dup5\n        /* \"#utility.yul\":28726:28830   */\n      tag_398\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":28717:28830   */\n      swap1\n      pop\n        /* \"#utility.yul\":28552:28837   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28843:29253   */\n    tag_199:\n        /* \"#utility.yul\":28883:28890   */\n      0x00\n        /* \"#utility.yul\":28906:28926   */\n      tag_728\n        /* \"#utility.yul\":28924:28925   */\n      dup3\n        /* \"#utility.yul\":28906:28926   */\n      tag_326\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":28901:28926   */\n      swap2\n      pop\n        /* \"#utility.yul\":28940:28960   */\n      tag_729\n        /* \"#utility.yul\":28958:28959   */\n      dup4\n        /* \"#utility.yul\":28940:28960   */\n      tag_326\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":28935:28960   */\n      swap3\n      pop\n        /* \"#utility.yul\":28995:28996   */\n      dup3\n        /* \"#utility.yul\":28992:28993   */\n      dup3\n        /* \"#utility.yul\":28988:28997   */\n      mul\n        /* \"#utility.yul\":29017:29047   */\n      tag_730\n        /* \"#utility.yul\":29035:29046   */\n      dup2\n        /* \"#utility.yul\":29017:29047   */\n      tag_326\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":29006:29047   */\n      swap2\n      pop\n        /* \"#utility.yul\":29196:29197   */\n      dup3\n        /* \"#utility.yul\":29187:29194   */\n      dup3\n        /* \"#utility.yul\":29183:29198   */\n      div\n        /* \"#utility.yul\":29180:29181   */\n      dup5\n        /* \"#utility.yul\":29177:29199   */\n      eq\n        /* \"#utility.yul\":29157:29158   */\n      dup4\n        /* \"#utility.yul\":29150:29159   */\n      iszero\n        /* \"#utility.yul\":29130:29213   */\n      or\n        /* \"#utility.yul\":29107:29246   */\n      tag_731\n      jumpi\n        /* \"#utility.yul\":29226:29244   */\n      tag_732\n      tag_374\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":29107:29246   */\n    tag_731:\n        /* \"#utility.yul\":28891:29253   */\n      pop\n        /* \"#utility.yul\":28843:29253   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29259:29444   */\n    tag_201:\n        /* \"#utility.yul\":29299:29300   */\n      0x00\n        /* \"#utility.yul\":29316:29336   */\n      tag_734\n        /* \"#utility.yul\":29334:29335   */\n      dup3\n        /* \"#utility.yul\":29316:29336   */\n      tag_326\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":29311:29336   */\n      swap2\n      pop\n        /* \"#utility.yul\":29350:29370   */\n      tag_735\n        /* \"#utility.yul\":29368:29369   */\n      dup4\n        /* \"#utility.yul\":29350:29370   */\n      tag_326\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":29345:29370   */\n      swap3\n      pop\n        /* \"#utility.yul\":29389:29390   */\n      dup3\n        /* \"#utility.yul\":29379:29414   */\n      tag_736\n      jumpi\n        /* \"#utility.yul\":29394:29412   */\n      tag_737\n      tag_375\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":29379:29414   */\n    tag_736:\n        /* \"#utility.yul\":29436:29437   */\n      dup3\n        /* \"#utility.yul\":29433:29434   */\n      dup3\n        /* \"#utility.yul\":29429:29438   */\n      div\n        /* \"#utility.yul\":29424:29438   */\n      swap1\n      pop\n        /* \"#utility.yul\":29259:29444   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29450:29630   */\n    tag_216:\n        /* \"#utility.yul\":29498:29575   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29495:29496   */\n      0x00\n        /* \"#utility.yul\":29488:29576   */\n      mstore\n        /* \"#utility.yul\":29595:29599   */\n      0x32\n        /* \"#utility.yul\":29592:29593   */\n      0x04\n        /* \"#utility.yul\":29585:29600   */\n      mstore\n        /* \"#utility.yul\":29619:29623   */\n      0x24\n        /* \"#utility.yul\":29616:29617   */\n      0x00\n        /* \"#utility.yul\":29609:29624   */\n      revert\n        /* \"#utility.yul\":29636:29779   */\n    tag_399:\n        /* \"#utility.yul\":29693:29698   */\n      0x00\n        /* \"#utility.yul\":29724:29730   */\n      dup2\n        /* \"#utility.yul\":29718:29731   */\n      mload\n        /* \"#utility.yul\":29709:29731   */\n      swap1\n      pop\n        /* \"#utility.yul\":29740:29773   */\n      tag_740\n        /* \"#utility.yul\":29767:29772   */\n      dup2\n        /* \"#utility.yul\":29740:29773   */\n      tag_361\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":29636:29779   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29785:30136   */\n    tag_220:\n        /* \"#utility.yul\":29855:29861   */\n      0x00\n        /* \"#utility.yul\":29904:29906   */\n      0x20\n        /* \"#utility.yul\":29892:29901   */\n      dup3\n        /* \"#utility.yul\":29883:29890   */\n      dup5\n        /* \"#utility.yul\":29879:29902   */\n      sub\n        /* \"#utility.yul\":29875:29907   */\n      slt\n        /* \"#utility.yul\":29872:29991   */\n      iszero\n      tag_742\n      jumpi\n        /* \"#utility.yul\":29910:29989   */\n      tag_743\n      tag_324\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":29872:29991   */\n    tag_742:\n        /* \"#utility.yul\":30030:30031   */\n      0x00\n        /* \"#utility.yul\":30055:30119   */\n      tag_744\n        /* \"#utility.yul\":30111:30118   */\n      dup5\n        /* \"#utility.yul\":30102:30108   */\n      dup3\n        /* \"#utility.yul\":30091:30100   */\n      dup6\n        /* \"#utility.yul\":30087:30109   */\n      add\n        /* \"#utility.yul\":30055:30119   */\n      tag_399\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":30045:30119   */\n      swap2\n      pop\n        /* \"#utility.yul\":30001:30129   */\n      pop\n        /* \"#utility.yul\":29785:30136   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30142:30256   */\n    tag_400:\n        /* \"#utility.yul\":30209:30215   */\n      0x00\n        /* \"#utility.yul\":30243:30248   */\n      dup2\n        /* \"#utility.yul\":30237:30249   */\n      mload\n        /* \"#utility.yul\":30227:30249   */\n      swap1\n      pop\n        /* \"#utility.yul\":30142:30256   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30262:30446   */\n    tag_401:\n        /* \"#utility.yul\":30361:30372   */\n      0x00\n        /* \"#utility.yul\":30395:30401   */\n      dup3\n        /* \"#utility.yul\":30390:30393   */\n      dup3\n        /* \"#utility.yul\":30383:30402   */\n      mstore\n        /* \"#utility.yul\":30435:30439   */\n      0x20\n        /* \"#utility.yul\":30430:30433   */\n      dup3\n        /* \"#utility.yul\":30426:30440   */\n      add\n        /* \"#utility.yul\":30411:30440   */\n      swap1\n      pop\n        /* \"#utility.yul\":30262:30446   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30452:30584   */\n    tag_402:\n        /* \"#utility.yul\":30519:30523   */\n      0x00\n        /* \"#utility.yul\":30542:30545   */\n      dup2\n        /* \"#utility.yul\":30534:30545   */\n      swap1\n      pop\n        /* \"#utility.yul\":30572:30576   */\n      0x20\n        /* \"#utility.yul\":30567:30570   */\n      dup3\n        /* \"#utility.yul\":30563:30577   */\n      add\n        /* \"#utility.yul\":30555:30577   */\n      swap1\n      pop\n        /* \"#utility.yul\":30452:30584   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30590:30698   */\n    tag_403:\n        /* \"#utility.yul\":30667:30691   */\n      tag_749\n        /* \"#utility.yul\":30685:30690   */\n      dup2\n        /* \"#utility.yul\":30667:30691   */\n      tag_347\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":30662:30665   */\n      dup3\n        /* \"#utility.yul\":30655:30692   */\n      mstore\n        /* \"#utility.yul\":30590:30698   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30704:30883   */\n    tag_404:\n        /* \"#utility.yul\":30773:30783   */\n      0x00\n        /* \"#utility.yul\":30794:30840   */\n      tag_751\n        /* \"#utility.yul\":30836:30839   */\n      dup4\n        /* \"#utility.yul\":30828:30834   */\n      dup4\n        /* \"#utility.yul\":30794:30840   */\n      tag_403\n      jump\t// in\n    tag_751:\n        /* \"#utility.yul\":30872:30876   */\n      0x20\n        /* \"#utility.yul\":30867:30870   */\n      dup4\n        /* \"#utility.yul\":30863:30877   */\n      add\n        /* \"#utility.yul\":30849:30877   */\n      swap1\n      pop\n        /* \"#utility.yul\":30704:30883   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30889:31002   */\n    tag_405:\n        /* \"#utility.yul\":30959:30963   */\n      0x00\n        /* \"#utility.yul\":30991:30995   */\n      0x20\n        /* \"#utility.yul\":30986:30989   */\n      dup3\n        /* \"#utility.yul\":30982:30996   */\n      add\n        /* \"#utility.yul\":30974:30996   */\n      swap1\n      pop\n        /* \"#utility.yul\":30889:31002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31038:31770   */\n    tag_406:\n        /* \"#utility.yul\":31157:31160   */\n      0x00\n        /* \"#utility.yul\":31186:31240   */\n      tag_754\n        /* \"#utility.yul\":31234:31239   */\n      dup3\n        /* \"#utility.yul\":31186:31240   */\n      tag_400\n      jump\t// in\n    tag_754:\n        /* \"#utility.yul\":31256:31342   */\n      tag_755\n        /* \"#utility.yul\":31335:31341   */\n      dup2\n        /* \"#utility.yul\":31330:31333   */\n      dup6\n        /* \"#utility.yul\":31256:31342   */\n      tag_401\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":31249:31342   */\n      swap4\n      pop\n        /* \"#utility.yul\":31366:31422   */\n      tag_756\n        /* \"#utility.yul\":31416:31421   */\n      dup4\n        /* \"#utility.yul\":31366:31422   */\n      tag_402\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":31445:31452   */\n      dup1\n        /* \"#utility.yul\":31476:31477   */\n      0x00\n        /* \"#utility.yul\":31461:31745   */\n    tag_757:\n        /* \"#utility.yul\":31486:31492   */\n      dup4\n        /* \"#utility.yul\":31483:31484   */\n      dup2\n        /* \"#utility.yul\":31480:31493   */\n      lt\n        /* \"#utility.yul\":31461:31745   */\n      iszero\n      tag_759\n      jumpi\n        /* \"#utility.yul\":31562:31568   */\n      dup2\n        /* \"#utility.yul\":31556:31569   */\n      mload\n        /* \"#utility.yul\":31589:31652   */\n      tag_760\n        /* \"#utility.yul\":31648:31651   */\n      dup9\n        /* \"#utility.yul\":31633:31646   */\n      dup3\n        /* \"#utility.yul\":31589:31652   */\n      tag_404\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":31582:31652   */\n      swap8\n      pop\n        /* \"#utility.yul\":31675:31735   */\n      tag_761\n        /* \"#utility.yul\":31728:31734   */\n      dup4\n        /* \"#utility.yul\":31675:31735   */\n      tag_405\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":31665:31735   */\n      swap3\n      pop\n        /* \"#utility.yul\":31521:31745   */\n      pop\n        /* \"#utility.yul\":31508:31509   */\n      0x01\n        /* \"#utility.yul\":31505:31506   */\n      dup2\n        /* \"#utility.yul\":31501:31510   */\n      add\n        /* \"#utility.yul\":31496:31510   */\n      swap1\n      pop\n        /* \"#utility.yul\":31461:31745   */\n      jump(tag_757)\n    tag_759:\n        /* \"#utility.yul\":31465:31479   */\n      pop\n        /* \"#utility.yul\":31761:31764   */\n      dup6\n        /* \"#utility.yul\":31754:31764   */\n      swap4\n      pop\n        /* \"#utility.yul\":31162:31770   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":31038:31770   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31776:32591   */\n    tag_225:\n        /* \"#utility.yul\":32031:32035   */\n      0x00\n        /* \"#utility.yul\":32069:32072   */\n      0xa0\n        /* \"#utility.yul\":32058:32067   */\n      dup3\n        /* \"#utility.yul\":32054:32073   */\n      add\n        /* \"#utility.yul\":32046:32073   */\n      swap1\n      pop\n        /* \"#utility.yul\":32083:32154   */\n      tag_763\n        /* \"#utility.yul\":32151:32152   */\n      0x00\n        /* \"#utility.yul\":32140:32149   */\n      dup4\n        /* \"#utility.yul\":32136:32153   */\n      add\n        /* \"#utility.yul\":32127:32133   */\n      dup9\n        /* \"#utility.yul\":32083:32154   */\n      tag_363\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":32164:32236   */\n      tag_764\n        /* \"#utility.yul\":32232:32234   */\n      0x20\n        /* \"#utility.yul\":32221:32230   */\n      dup4\n        /* \"#utility.yul\":32217:32235   */\n      add\n        /* \"#utility.yul\":32208:32214   */\n      dup8\n        /* \"#utility.yul\":32164:32236   */\n      tag_363\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":32283:32292   */\n      dup2\n        /* \"#utility.yul\":32277:32281   */\n      dup2\n        /* \"#utility.yul\":32273:32293   */\n      sub\n        /* \"#utility.yul\":32268:32270   */\n      0x40\n        /* \"#utility.yul\":32257:32266   */\n      dup4\n        /* \"#utility.yul\":32253:32271   */\n      add\n        /* \"#utility.yul\":32246:32294   */\n      mstore\n        /* \"#utility.yul\":32311:32419   */\n      tag_765\n        /* \"#utility.yul\":32414:32418   */\n      dup2\n        /* \"#utility.yul\":32405:32411   */\n      dup7\n        /* \"#utility.yul\":32311:32419   */\n      tag_406\n      jump\t// in\n    tag_765:\n        /* \"#utility.yul\":32303:32419   */\n      swap1\n      pop\n        /* \"#utility.yul\":32429:32501   */\n      tag_766\n        /* \"#utility.yul\":32497:32499   */\n      0x60\n        /* \"#utility.yul\":32486:32495   */\n      dup4\n        /* \"#utility.yul\":32482:32500   */\n      add\n        /* \"#utility.yul\":32473:32479   */\n      dup6\n        /* \"#utility.yul\":32429:32501   */\n      tag_348\n      jump\t// in\n    tag_766:\n        /* \"#utility.yul\":32511:32584   */\n      tag_767\n        /* \"#utility.yul\":32579:32582   */\n      0x80\n        /* \"#utility.yul\":32568:32577   */\n      dup4\n        /* \"#utility.yul\":32564:32583   */\n      add\n        /* \"#utility.yul\":32555:32561   */\n      dup5\n        /* \"#utility.yul\":32511:32584   */\n      tag_363\n      jump\t// in\n    tag_767:\n        /* \"#utility.yul\":31776:32591   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32614:33346   */\n    tag_407:\n        /* \"#utility.yul\":32721:32726   */\n      0x00\n        /* \"#utility.yul\":32746:32827   */\n      tag_769\n        /* \"#utility.yul\":32762:32826   */\n      tag_770\n        /* \"#utility.yul\":32819:32825   */\n      dup5\n        /* \"#utility.yul\":32762:32826   */\n      tag_341\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":32746:32827   */\n      tag_340\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":32737:32827   */\n      swap1\n      pop\n        /* \"#utility.yul\":32847:32852   */\n      dup1\n        /* \"#utility.yul\":32876:32882   */\n      dup4\n        /* \"#utility.yul\":32869:32874   */\n      dup3\n        /* \"#utility.yul\":32862:32883   */\n      mstore\n        /* \"#utility.yul\":32910:32914   */\n      0x20\n        /* \"#utility.yul\":32903:32908   */\n      dup3\n        /* \"#utility.yul\":32899:32915   */\n      add\n        /* \"#utility.yul\":32892:32915   */\n      swap1\n      pop\n        /* \"#utility.yul\":32963:32967   */\n      0x20\n        /* \"#utility.yul\":32955:32961   */\n      dup5\n        /* \"#utility.yul\":32951:32968   */\n      mul\n        /* \"#utility.yul\":32943:32949   */\n      dup4\n        /* \"#utility.yul\":32939:32969   */\n      add\n        /* \"#utility.yul\":32992:32995   */\n      dup6\n        /* \"#utility.yul\":32984:32990   */\n      dup2\n        /* \"#utility.yul\":32981:32996   */\n      gt\n        /* \"#utility.yul\":32978:33100   */\n      iszero\n      tag_771\n      jumpi\n        /* \"#utility.yul\":33011:33090   */\n      tag_772\n      tag_342\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":32978:33100   */\n    tag_771:\n        /* \"#utility.yul\":33126:33132   */\n      dup4\n        /* \"#utility.yul\":33109:33340   */\n    tag_773:\n        /* \"#utility.yul\":33143:33149   */\n      dup2\n        /* \"#utility.yul\":33138:33141   */\n      dup2\n        /* \"#utility.yul\":33135:33150   */\n      lt\n        /* \"#utility.yul\":33109:33340   */\n      iszero\n      tag_775\n      jumpi\n        /* \"#utility.yul\":33218:33221   */\n      dup1\n        /* \"#utility.yul\":33247:33295   */\n      tag_776\n        /* \"#utility.yul\":33291:33294   */\n      dup9\n        /* \"#utility.yul\":33279:33289   */\n      dup3\n        /* \"#utility.yul\":33247:33295   */\n      tag_392\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":33242:33245   */\n      dup5\n        /* \"#utility.yul\":33235:33296   */\n      mstore\n        /* \"#utility.yul\":33325:33329   */\n      0x20\n        /* \"#utility.yul\":33320:33323   */\n      dup5\n        /* \"#utility.yul\":33316:33330   */\n      add\n        /* \"#utility.yul\":33309:33330   */\n      swap4\n      pop\n        /* \"#utility.yul\":33185:33340   */\n      pop\n        /* \"#utility.yul\":33169:33173   */\n      0x20\n        /* \"#utility.yul\":33164:33167   */\n      dup2\n        /* \"#utility.yul\":33160:33174   */\n      add\n        /* \"#utility.yul\":33153:33174   */\n      swap1\n      pop\n        /* \"#utility.yul\":33109:33340   */\n      jump(tag_773)\n    tag_775:\n        /* \"#utility.yul\":33113:33134   */\n      pop\n        /* \"#utility.yul\":32727:33346   */\n      pop\n      pop\n        /* \"#utility.yul\":32614:33346   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33369:33754   */\n    tag_408:\n        /* \"#utility.yul\":33451:33456   */\n      0x00\n        /* \"#utility.yul\":33500:33503   */\n      dup3\n        /* \"#utility.yul\":33493:33497   */\n      0x1f\n        /* \"#utility.yul\":33485:33491   */\n      dup4\n        /* \"#utility.yul\":33481:33498   */\n      add\n        /* \"#utility.yul\":33477:33504   */\n      slt\n        /* \"#utility.yul\":33467:33589   */\n      tag_778\n      jumpi\n        /* \"#utility.yul\":33508:33587   */\n      tag_779\n      tag_337\n      jump\t// in\n    tag_779:\n        /* \"#utility.yul\":33467:33589   */\n    tag_778:\n        /* \"#utility.yul\":33618:33624   */\n      dup2\n        /* \"#utility.yul\":33612:33625   */\n      mload\n        /* \"#utility.yul\":33643:33748   */\n      tag_780\n        /* \"#utility.yul\":33744:33747   */\n      dup5\n        /* \"#utility.yul\":33736:33742   */\n      dup3\n        /* \"#utility.yul\":33729:33733   */\n      0x20\n        /* \"#utility.yul\":33721:33727   */\n      dup7\n        /* \"#utility.yul\":33717:33734   */\n      add\n        /* \"#utility.yul\":33643:33748   */\n      tag_407\n      jump\t// in\n    tag_780:\n        /* \"#utility.yul\":33634:33748   */\n      swap2\n      pop\n        /* \"#utility.yul\":33457:33754   */\n      pop\n        /* \"#utility.yul\":33369:33754   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33760:34314   */\n    tag_229:\n        /* \"#utility.yul\":33855:33861   */\n      0x00\n        /* \"#utility.yul\":33904:33906   */\n      0x20\n        /* \"#utility.yul\":33892:33901   */\n      dup3\n        /* \"#utility.yul\":33883:33890   */\n      dup5\n        /* \"#utility.yul\":33879:33902   */\n      sub\n        /* \"#utility.yul\":33875:33907   */\n      slt\n        /* \"#utility.yul\":33872:33991   */\n      iszero\n      tag_782\n      jumpi\n        /* \"#utility.yul\":33910:33989   */\n      tag_783\n      tag_324\n      jump\t// in\n    tag_783:\n        /* \"#utility.yul\":33872:33991   */\n    tag_782:\n        /* \"#utility.yul\":34051:34052   */\n      0x00\n        /* \"#utility.yul\":34040:34049   */\n      dup3\n        /* \"#utility.yul\":34036:34053   */\n      add\n        /* \"#utility.yul\":34030:34054   */\n      mload\n        /* \"#utility.yul\":34081:34099   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":34073:34079   */\n      dup2\n        /* \"#utility.yul\":34070:34100   */\n      gt\n        /* \"#utility.yul\":34067:34184   */\n      iszero\n      tag_784\n      jumpi\n        /* \"#utility.yul\":34103:34182   */\n      tag_785\n      tag_325\n      jump\t// in\n    tag_785:\n        /* \"#utility.yul\":34067:34184   */\n    tag_784:\n        /* \"#utility.yul\":34208:34297   */\n      tag_786\n        /* \"#utility.yul\":34289:34296   */\n      dup5\n        /* \"#utility.yul\":34280:34286   */\n      dup3\n        /* \"#utility.yul\":34269:34278   */\n      dup6\n        /* \"#utility.yul\":34265:34287   */\n      add\n        /* \"#utility.yul\":34208:34297   */\n      tag_408\n      jump\t// in\n    tag_786:\n        /* \"#utility.yul\":34198:34297   */\n      swap2\n      pop\n        /* \"#utility.yul\":34001:34307   */\n      pop\n        /* \"#utility.yul\":33760:34314   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34320:34671   */\n    tag_245:\n        /* \"#utility.yul\":34390:34396   */\n      0x00\n        /* \"#utility.yul\":34439:34441   */\n      0x20\n        /* \"#utility.yul\":34427:34436   */\n      dup3\n        /* \"#utility.yul\":34418:34425   */\n      dup5\n        /* \"#utility.yul\":34414:34437   */\n      sub\n        /* \"#utility.yul\":34410:34442   */\n      slt\n        /* \"#utility.yul\":34407:34526   */\n      iszero\n      tag_788\n      jumpi\n        /* \"#utility.yul\":34445:34524   */\n      tag_789\n      tag_324\n      jump\t// in\n    tag_789:\n        /* \"#utility.yul\":34407:34526   */\n    tag_788:\n        /* \"#utility.yul\":34565:34566   */\n      0x00\n        /* \"#utility.yul\":34590:34654   */\n      tag_790\n        /* \"#utility.yul\":34646:34653   */\n      dup5\n        /* \"#utility.yul\":34637:34643   */\n      dup3\n        /* \"#utility.yul\":34626:34635   */\n      dup6\n        /* \"#utility.yul\":34622:34644   */\n      add\n        /* \"#utility.yul\":34590:34654   */\n      tag_392\n      jump\t// in\n    tag_790:\n        /* \"#utility.yul\":34580:34654   */\n      swap2\n      pop\n        /* \"#utility.yul\":34536:34664   */\n      pop\n        /* \"#utility.yul\":34320:34671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34677:34754   */\n    tag_409:\n        /* \"#utility.yul\":34714:34721   */\n      0x00\n        /* \"#utility.yul\":34743:34748   */\n      dup2\n        /* \"#utility.yul\":34732:34748   */\n      swap1\n      pop\n        /* \"#utility.yul\":34677:34754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34760:34878   */\n    tag_410:\n        /* \"#utility.yul\":34847:34871   */\n      tag_793\n        /* \"#utility.yul\":34865:34870   */\n      dup2\n        /* \"#utility.yul\":34847:34871   */\n      tag_409\n      jump\t// in\n    tag_793:\n        /* \"#utility.yul\":34842:34845   */\n      dup3\n        /* \"#utility.yul\":34835:34872   */\n      mstore\n        /* \"#utility.yul\":34760:34878   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34884:34985   */\n    tag_411:\n        /* \"#utility.yul\":34920:34927   */\n      0x00\n        /* \"#utility.yul\":34960:34978   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":34953:34958   */\n      dup3\n        /* \"#utility.yul\":34949:34979   */\n      and\n        /* \"#utility.yul\":34938:34979   */\n      swap1\n      pop\n        /* \"#utility.yul\":34884:34985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34991:35106   */\n    tag_412:\n        /* \"#utility.yul\":35076:35099   */\n      tag_796\n        /* \"#utility.yul\":35093:35098   */\n      dup2\n        /* \"#utility.yul\":35076:35099   */\n      tag_411\n      jump\t// in\n    tag_796:\n        /* \"#utility.yul\":35071:35074   */\n      dup3\n        /* \"#utility.yul\":35064:35100   */\n      mstore\n        /* \"#utility.yul\":34991:35106   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35112:35197   */\n    tag_413:\n        /* \"#utility.yul\":35157:35164   */\n      0x00\n        /* \"#utility.yul\":35186:35191   */\n      dup2\n        /* \"#utility.yul\":35175:35191   */\n      swap1\n      pop\n        /* \"#utility.yul\":35112:35197   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35203:35292   */\n    tag_414:\n        /* \"#utility.yul\":35239:35246   */\n      0x00\n        /* \"#utility.yul\":35279:35285   */\n      0xffff\n        /* \"#utility.yul\":35272:35277   */\n      dup3\n        /* \"#utility.yul\":35268:35286   */\n      and\n        /* \"#utility.yul\":35257:35286   */\n      swap1\n      pop\n        /* \"#utility.yul\":35203:35292   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35298:35454   */\n    tag_415:\n        /* \"#utility.yul\":35355:35364   */\n      0x00\n        /* \"#utility.yul\":35388:35448   */\n      tag_800\n        /* \"#utility.yul\":35405:35447   */\n      tag_801\n        /* \"#utility.yul\":35414:35446   */\n      tag_802\n        /* \"#utility.yul\":35440:35445   */\n      dup5\n        /* \"#utility.yul\":35414:35446   */\n      tag_413\n      jump\t// in\n    tag_802:\n        /* \"#utility.yul\":35405:35447   */\n      tag_330\n      jump\t// in\n    tag_801:\n        /* \"#utility.yul\":35388:35448   */\n      tag_414\n      jump\t// in\n    tag_800:\n        /* \"#utility.yul\":35375:35448   */\n      swap1\n      pop\n        /* \"#utility.yul\":35298:35454   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35460:35605   */\n    tag_416:\n        /* \"#utility.yul\":35554:35598   */\n      tag_804\n        /* \"#utility.yul\":35592:35597   */\n      dup2\n        /* \"#utility.yul\":35554:35598   */\n      tag_415\n      jump\t// in\n    tag_804:\n        /* \"#utility.yul\":35549:35552   */\n      dup3\n        /* \"#utility.yul\":35542:35599   */\n      mstore\n        /* \"#utility.yul\":35460:35605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35611:35701   */\n    tag_417:\n        /* \"#utility.yul\":35661:35668   */\n      0x00\n        /* \"#utility.yul\":35690:35695   */\n      dup2\n        /* \"#utility.yul\":35679:35695   */\n      swap1\n      pop\n        /* \"#utility.yul\":35611:35701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35707:35800   */\n    tag_418:\n        /* \"#utility.yul\":35743:35750   */\n      0x00\n        /* \"#utility.yul\":35783:35793   */\n      0xffffffff\n        /* \"#utility.yul\":35776:35781   */\n      dup3\n        /* \"#utility.yul\":35772:35794   */\n      and\n        /* \"#utility.yul\":35761:35794   */\n      swap1\n      pop\n        /* \"#utility.yul\":35707:35800   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35806:35972   */\n    tag_419:\n        /* \"#utility.yul\":35868:35877   */\n      0x00\n        /* \"#utility.yul\":35901:35966   */\n      tag_808\n        /* \"#utility.yul\":35918:35965   */\n      tag_809\n        /* \"#utility.yul\":35927:35964   */\n      tag_810\n        /* \"#utility.yul\":35958:35963   */\n      dup5\n        /* \"#utility.yul\":35927:35964   */\n      tag_417\n      jump\t// in\n    tag_810:\n        /* \"#utility.yul\":35918:35965   */\n      tag_330\n      jump\t// in\n    tag_809:\n        /* \"#utility.yul\":35901:35966   */\n      tag_418\n      jump\t// in\n    tag_808:\n        /* \"#utility.yul\":35888:35966   */\n      swap1\n      pop\n        /* \"#utility.yul\":35806:35972   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35978:36133   */\n    tag_420:\n        /* \"#utility.yul\":36077:36126   */\n      tag_812\n        /* \"#utility.yul\":36120:36125   */\n      dup2\n        /* \"#utility.yul\":36077:36126   */\n      tag_419\n      jump\t// in\n    tag_812:\n        /* \"#utility.yul\":36072:36075   */\n      dup3\n        /* \"#utility.yul\":36065:36127   */\n      mstore\n        /* \"#utility.yul\":35978:36133   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":36139:36224   */\n    tag_421:\n        /* \"#utility.yul\":36184:36191   */\n      0x00\n        /* \"#utility.yul\":36213:36218   */\n      dup2\n        /* \"#utility.yul\":36202:36218   */\n      swap1\n      pop\n        /* \"#utility.yul\":36139:36224   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":36230:36386   */\n    tag_422:\n        /* \"#utility.yul\":36287:36296   */\n      0x00\n        /* \"#utility.yul\":36320:36380   */\n      tag_815\n        /* \"#utility.yul\":36337:36379   */\n      tag_816\n        /* \"#utility.yul\":36346:36378   */\n      tag_817\n        /* \"#utility.yul\":36372:36377   */\n      dup5\n        /* \"#utility.yul\":36346:36378   */\n      tag_421\n      jump\t// in\n    tag_817:\n        /* \"#utility.yul\":36337:36379   */\n      tag_330\n      jump\t// in\n    tag_816:\n        /* \"#utility.yul\":36320:36380   */\n      tag_418\n      jump\t// in\n    tag_815:\n        /* \"#utility.yul\":36307:36380   */\n      swap1\n      pop\n        /* \"#utility.yul\":36230:36386   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":36392:36537   */\n    tag_423:\n        /* \"#utility.yul\":36486:36530   */\n      tag_819\n        /* \"#utility.yul\":36524:36529   */\n      dup2\n        /* \"#utility.yul\":36486:36530   */\n      tag_422\n      jump\t// in\n    tag_819:\n        /* \"#utility.yul\":36481:36484   */\n      dup3\n        /* \"#utility.yul\":36474:36531   */\n      mstore\n        /* \"#utility.yul\":36392:36537   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":36543:37255   */\n    tag_255:\n        /* \"#utility.yul\":36772:36776   */\n      0x00\n        /* \"#utility.yul\":36810:36813   */\n      0xa0\n        /* \"#utility.yul\":36799:36808   */\n      dup3\n        /* \"#utility.yul\":36795:36814   */\n      add\n        /* \"#utility.yul\":36787:36814   */\n      swap1\n      pop\n        /* \"#utility.yul\":36824:36895   */\n      tag_821\n        /* \"#utility.yul\":36892:36893   */\n      0x00\n        /* \"#utility.yul\":36881:36890   */\n      dup4\n        /* \"#utility.yul\":36877:36894   */\n      add\n        /* \"#utility.yul\":36868:36874   */\n      dup9\n        /* \"#utility.yul\":36824:36895   */\n      tag_410\n      jump\t// in\n    tag_821:\n        /* \"#utility.yul\":36905:36975   */\n      tag_822\n        /* \"#utility.yul\":36971:36973   */\n      0x20\n        /* \"#utility.yul\":36960:36969   */\n      dup4\n        /* \"#utility.yul\":36956:36974   */\n      add\n        /* \"#utility.yul\":36947:36953   */\n      dup8\n        /* \"#utility.yul\":36905:36975   */\n      tag_412\n      jump\t// in\n    tag_822:\n        /* \"#utility.yul\":36985:37064   */\n      tag_823\n        /* \"#utility.yul\":37060:37062   */\n      0x40\n        /* \"#utility.yul\":37049:37058   */\n      dup4\n        /* \"#utility.yul\":37045:37063   */\n      add\n        /* \"#utility.yul\":37036:37042   */\n      dup7\n        /* \"#utility.yul\":36985:37064   */\n      tag_416\n      jump\t// in\n    tag_823:\n        /* \"#utility.yul\":37074:37158   */\n      tag_824\n        /* \"#utility.yul\":37154:37156   */\n      0x60\n        /* \"#utility.yul\":37143:37152   */\n      dup4\n        /* \"#utility.yul\":37139:37157   */\n      add\n        /* \"#utility.yul\":37130:37136   */\n      dup6\n        /* \"#utility.yul\":37074:37158   */\n      tag_420\n      jump\t// in\n    tag_824:\n        /* \"#utility.yul\":37168:37248   */\n      tag_825\n        /* \"#utility.yul\":37243:37246   */\n      0x80\n        /* \"#utility.yul\":37232:37241   */\n      dup4\n        /* \"#utility.yul\":37228:37247   */\n      add\n        /* \"#utility.yul\":37219:37225   */\n      dup5\n        /* \"#utility.yul\":37168:37248   */\n      tag_423\n      jump\t// in\n    tag_825:\n        /* \"#utility.yul\":36543:37255   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":37261:37703   */\n    tag_262:\n        /* \"#utility.yul\":37410:37414   */\n      0x00\n        /* \"#utility.yul\":37448:37450   */\n      0x60\n        /* \"#utility.yul\":37437:37446   */\n      dup3\n        /* \"#utility.yul\":37433:37451   */\n      add\n        /* \"#utility.yul\":37425:37451   */\n      swap1\n      pop\n        /* \"#utility.yul\":37461:37532   */\n      tag_827\n        /* \"#utility.yul\":37529:37530   */\n      0x00\n        /* \"#utility.yul\":37518:37527   */\n      dup4\n        /* \"#utility.yul\":37514:37531   */\n      add\n        /* \"#utility.yul\":37505:37511   */\n      dup7\n        /* \"#utility.yul\":37461:37532   */\n      tag_348\n      jump\t// in\n    tag_827:\n        /* \"#utility.yul\":37542:37614   */\n      tag_828\n        /* \"#utility.yul\":37610:37612   */\n      0x20\n        /* \"#utility.yul\":37599:37608   */\n      dup4\n        /* \"#utility.yul\":37595:37613   */\n      add\n        /* \"#utility.yul\":37586:37592   */\n      dup6\n        /* \"#utility.yul\":37542:37614   */\n      tag_348\n      jump\t// in\n    tag_828:\n        /* \"#utility.yul\":37624:37696   */\n      tag_829\n        /* \"#utility.yul\":37692:37694   */\n      0x40\n        /* \"#utility.yul\":37681:37690   */\n      dup4\n        /* \"#utility.yul\":37677:37695   */\n      add\n        /* \"#utility.yul\":37668:37674   */\n      dup5\n        /* \"#utility.yul\":37624:37696   */\n      tag_363\n      jump\t// in\n    tag_829:\n        /* \"#utility.yul\":37261:37703   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":37709:37825   */\n    tag_424:\n        /* \"#utility.yul\":37779:37800   */\n      tag_831\n        /* \"#utility.yul\":37794:37799   */\n      dup2\n        /* \"#utility.yul\":37779:37800   */\n      tag_351\n      jump\t// in\n    tag_831:\n        /* \"#utility.yul\":37772:37777   */\n      dup2\n        /* \"#utility.yul\":37769:37801   */\n      eq\n        /* \"#utility.yul\":37759:37819   */\n      tag_832\n      jumpi\n        /* \"#utility.yul\":37815:37816   */\n      0x00\n        /* \"#utility.yul\":37812:37813   */\n      dup1\n        /* \"#utility.yul\":37805:37817   */\n      revert\n        /* \"#utility.yul\":37759:37819   */\n    tag_832:\n        /* \"#utility.yul\":37709:37825   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":37831:37968   */\n    tag_425:\n        /* \"#utility.yul\":37885:37890   */\n      0x00\n        /* \"#utility.yul\":37916:37922   */\n      dup2\n        /* \"#utility.yul\":37910:37923   */\n      mload\n        /* \"#utility.yul\":37901:37923   */\n      swap1\n      pop\n        /* \"#utility.yul\":37932:37962   */\n      tag_834\n        /* \"#utility.yul\":37956:37961   */\n      dup2\n        /* \"#utility.yul\":37932:37962   */\n      tag_424\n      jump\t// in\n    tag_834:\n        /* \"#utility.yul\":37831:37968   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":37974:38319   */\n    tag_277:\n        /* \"#utility.yul\":38041:38047   */\n      0x00\n        /* \"#utility.yul\":38090:38092   */\n      0x20\n        /* \"#utility.yul\":38078:38087   */\n      dup3\n        /* \"#utility.yul\":38069:38076   */\n      dup5\n        /* \"#utility.yul\":38065:38088   */\n      sub\n        /* \"#utility.yul\":38061:38093   */\n      slt\n        /* \"#utility.yul\":38058:38177   */\n      iszero\n      tag_836\n      jumpi\n        /* \"#utility.yul\":38096:38175   */\n      tag_837\n      tag_324\n      jump\t// in\n    tag_837:\n        /* \"#utility.yul\":38058:38177   */\n    tag_836:\n        /* \"#utility.yul\":38216:38217   */\n      0x00\n        /* \"#utility.yul\":38241:38302   */\n      tag_838\n        /* \"#utility.yul\":38294:38301   */\n      dup5\n        /* \"#utility.yul\":38285:38291   */\n      dup3\n        /* \"#utility.yul\":38274:38283   */\n      dup6\n        /* \"#utility.yul\":38270:38292   */\n      add\n        /* \"#utility.yul\":38241:38302   */\n      tag_425\n      jump\t// in\n    tag_838:\n        /* \"#utility.yul\":38231:38302   */\n      swap2\n      pop\n        /* \"#utility.yul\":38187:38312   */\n      pop\n        /* \"#utility.yul\":37974:38319   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":38325:38657   */\n    tag_282:\n        /* \"#utility.yul\":38446:38450   */\n      0x00\n        /* \"#utility.yul\":38484:38486   */\n      0x40\n        /* \"#utility.yul\":38473:38482   */\n      dup3\n        /* \"#utility.yul\":38469:38487   */\n      add\n        /* \"#utility.yul\":38461:38487   */\n      swap1\n      pop\n        /* \"#utility.yul\":38497:38568   */\n      tag_840\n        /* \"#utility.yul\":38565:38566   */\n      0x00\n        /* \"#utility.yul\":38554:38563   */\n      dup4\n        /* \"#utility.yul\":38550:38567   */\n      add\n        /* \"#utility.yul\":38541:38547   */\n      dup6\n        /* \"#utility.yul\":38497:38568   */\n      tag_348\n      jump\t// in\n    tag_840:\n        /* \"#utility.yul\":38578:38650   */\n      tag_841\n        /* \"#utility.yul\":38646:38648   */\n      0x20\n        /* \"#utility.yul\":38635:38644   */\n      dup4\n        /* \"#utility.yul\":38631:38649   */\n      add\n        /* \"#utility.yul\":38622:38628   */\n      dup5\n        /* \"#utility.yul\":38578:38650   */\n      tag_363\n      jump\t// in\n    tag_841:\n        /* \"#utility.yul\":38325:38657   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":38663:38748   */\n    tag_426:\n        /* \"#utility.yul\":38708:38715   */\n      0x00\n        /* \"#utility.yul\":38737:38742   */\n      dup2\n        /* \"#utility.yul\":38726:38742   */\n      swap1\n      pop\n        /* \"#utility.yul\":38663:38748   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":38754:38912   */\n    tag_427:\n        /* \"#utility.yul\":38812:38821   */\n      0x00\n        /* \"#utility.yul\":38845:38906   */\n      tag_844\n        /* \"#utility.yul\":38863:38905   */\n      tag_845\n        /* \"#utility.yul\":38872:38904   */\n      tag_846\n        /* \"#utility.yul\":38898:38903   */\n      dup5\n        /* \"#utility.yul\":38872:38904   */\n      tag_426\n      jump\t// in\n    tag_846:\n        /* \"#utility.yul\":38863:38905   */\n      tag_330\n      jump\t// in\n    tag_845:\n        /* \"#utility.yul\":38845:38906   */\n      tag_326\n      jump\t// in\n    tag_844:\n        /* \"#utility.yul\":38832:38906   */\n      swap1\n      pop\n        /* \"#utility.yul\":38754:38912   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":38918:39065   */\n    tag_428:\n        /* \"#utility.yul\":39013:39058   */\n      tag_848\n        /* \"#utility.yul\":39052:39057   */\n      dup2\n        /* \"#utility.yul\":39013:39058   */\n      tag_427\n      jump\t// in\n    tag_848:\n        /* \"#utility.yul\":39008:39011   */\n      dup3\n        /* \"#utility.yul\":39001:39059   */\n      mstore\n        /* \"#utility.yul\":38918:39065   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":39071:39419   */\n    tag_288:\n        /* \"#utility.yul\":39200:39204   */\n      0x00\n        /* \"#utility.yul\":39238:39240   */\n      0x40\n        /* \"#utility.yul\":39227:39236   */\n      dup3\n        /* \"#utility.yul\":39223:39241   */\n      add\n        /* \"#utility.yul\":39215:39241   */\n      swap1\n      pop\n        /* \"#utility.yul\":39251:39322   */\n      tag_850\n        /* \"#utility.yul\":39319:39320   */\n      0x00\n        /* \"#utility.yul\":39308:39317   */\n      dup4\n        /* \"#utility.yul\":39304:39321   */\n      add\n        /* \"#utility.yul\":39295:39301   */\n      dup6\n        /* \"#utility.yul\":39251:39322   */\n      tag_348\n      jump\t// in\n    tag_850:\n        /* \"#utility.yul\":39332:39412   */\n      tag_851\n        /* \"#utility.yul\":39408:39410   */\n      0x20\n        /* \"#utility.yul\":39397:39406   */\n      dup4\n        /* \"#utility.yul\":39393:39411   */\n      add\n        /* \"#utility.yul\":39384:39390   */\n      dup5\n        /* \"#utility.yul\":39332:39412   */\n      tag_428\n      jump\t// in\n    tag_851:\n        /* \"#utility.yul\":39071:39419   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":39425:39572   */\n    tag_429:\n        /* \"#utility.yul\":39526:39537   */\n      0x00\n        /* \"#utility.yul\":39563:39566   */\n      dup2\n        /* \"#utility.yul\":39548:39566   */\n      swap1\n      pop\n        /* \"#utility.yul\":39425:39572   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":39578:39964   */\n    tag_430:\n        /* \"#utility.yul\":39682:39685   */\n      0x00\n        /* \"#utility.yul\":39710:39748   */\n      tag_854\n        /* \"#utility.yul\":39742:39747   */\n      dup3\n        /* \"#utility.yul\":39710:39748   */\n      tag_353\n      jump\t// in\n    tag_854:\n        /* \"#utility.yul\":39764:39852   */\n      tag_855\n        /* \"#utility.yul\":39845:39851   */\n      dup2\n        /* \"#utility.yul\":39840:39843   */\n      dup6\n        /* \"#utility.yul\":39764:39852   */\n      tag_429\n      jump\t// in\n    tag_855:\n        /* \"#utility.yul\":39757:39852   */\n      swap4\n      pop\n        /* \"#utility.yul\":39861:39926   */\n      tag_856\n        /* \"#utility.yul\":39919:39925   */\n      dup2\n        /* \"#utility.yul\":39914:39917   */\n      dup6\n        /* \"#utility.yul\":39907:39911   */\n      0x20\n        /* \"#utility.yul\":39900:39905   */\n      dup7\n        /* \"#utility.yul\":39896:39912   */\n      add\n        /* \"#utility.yul\":39861:39926   */\n      tag_355\n      jump\t// in\n    tag_856:\n        /* \"#utility.yul\":39951:39957   */\n      dup1\n        /* \"#utility.yul\":39946:39949   */\n      dup5\n        /* \"#utility.yul\":39942:39958   */\n      add\n        /* \"#utility.yul\":39935:39958   */\n      swap2\n      pop\n        /* \"#utility.yul\":39686:39964   */\n      pop\n        /* \"#utility.yul\":39578:39964   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":39970:40241   */\n    tag_295:\n        /* \"#utility.yul\":40100:40103   */\n      0x00\n        /* \"#utility.yul\":40122:40215   */\n      tag_858\n        /* \"#utility.yul\":40211:40214   */\n      dup3\n        /* \"#utility.yul\":40202:40208   */\n      dup5\n        /* \"#utility.yul\":40122:40215   */\n      tag_430\n      jump\t// in\n    tag_858:\n        /* \"#utility.yul\":40115:40215   */\n      swap2\n      pop\n        /* \"#utility.yul\":40232:40235   */\n      dup2\n        /* \"#utility.yul\":40225:40235   */\n      swap1\n      pop\n        /* \"#utility.yul\":39970:40241   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202d368352843315e3b1000b350c619f136bd47be8c8112a7e4b4c627e03e21b1364736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2291": {
									"entryPoint": null,
									"id": 2291,
									"parameterSlots": 8,
									"returnSlots": 0
								},
								"@_334": {
									"entryPoint": null,
									"id": 334,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint64_fromMemory": {
									"entryPoint": 650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint64t_addresst_bytes32t_uint256_fromMemory": {
									"entryPoint": 784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 505,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint64": {
									"entryPoint": 625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3394:18",
										"nodeType": "YulBlock",
										"src": "0:3394:18",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:18",
													"nodeType": "YulBlock",
													"src": "47:35:18",
													"statements": [
														{
															"nativeSrc": "57:19:18",
															"nodeType": "YulAssignment",
															"src": "57:19:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:18",
																		"nodeType": "YulLiteral",
																		"src": "73:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:18"
																},
																"nativeSrc": "67:9:18",
																"nodeType": "YulFunctionCall",
																"src": "67:9:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:18"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:18",
														"nodeType": "YulTypedName",
														"src": "40:6:18",
														"type": ""
													}
												],
												"src": "7:75:18"
											},
											{
												"body": {
													"nativeSrc": "177:28:18",
													"nodeType": "YulBlock",
													"src": "177:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:18",
																		"nodeType": "YulLiteral",
																		"src": "194:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:18",
																		"nodeType": "YulLiteral",
																		"src": "197:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:18"
																},
																"nativeSrc": "187:12:18",
																"nodeType": "YulFunctionCall",
																"src": "187:12:18"
															},
															"nativeSrc": "187:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:18"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:18"
											},
											{
												"body": {
													"nativeSrc": "300:28:18",
													"nodeType": "YulBlock",
													"src": "300:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:18",
																		"nodeType": "YulLiteral",
																		"src": "317:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:18",
																		"nodeType": "YulLiteral",
																		"src": "320:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:18"
																},
																"nativeSrc": "310:12:18",
																"nodeType": "YulFunctionCall",
																"src": "310:12:18"
															},
															"nativeSrc": "310:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:18"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:18"
											},
											{
												"body": {
													"nativeSrc": "379:81:18",
													"nodeType": "YulBlock",
													"src": "379:81:18",
													"statements": [
														{
															"nativeSrc": "389:65:18",
															"nodeType": "YulAssignment",
															"src": "389:65:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:18",
																		"nodeType": "YulLiteral",
																		"src": "411:42:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:18"
																},
																"nativeSrc": "400:54:18",
																"nodeType": "YulFunctionCall",
																"src": "400:54:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:18",
														"nodeType": "YulTypedName",
														"src": "361:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:18",
														"nodeType": "YulTypedName",
														"src": "371:7:18",
														"type": ""
													}
												],
												"src": "334:126:18"
											},
											{
												"body": {
													"nativeSrc": "511:51:18",
													"nodeType": "YulBlock",
													"src": "511:51:18",
													"statements": [
														{
															"nativeSrc": "521:35:18",
															"nodeType": "YulAssignment",
															"src": "521:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:18"
																},
																"nativeSrc": "532:24:18",
																"nodeType": "YulFunctionCall",
																"src": "532:24:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:18",
														"nodeType": "YulTypedName",
														"src": "493:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:18",
														"nodeType": "YulTypedName",
														"src": "503:7:18",
														"type": ""
													}
												],
												"src": "466:96:18"
											},
											{
												"body": {
													"nativeSrc": "611:79:18",
													"nodeType": "YulBlock",
													"src": "611:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:18",
																"nodeType": "YulBlock",
																"src": "668:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:18",
																					"nodeType": "YulLiteral",
																					"src": "677:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:18",
																					"nodeType": "YulLiteral",
																					"src": "680:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:18"
																			},
																			"nativeSrc": "670:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:18"
																		},
																		"nativeSrc": "670:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:18"
																				},
																				"nativeSrc": "641:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:18"
																		},
																		"nativeSrc": "631:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:18"
																},
																"nativeSrc": "624:43:18",
																"nodeType": "YulFunctionCall",
																"src": "624:43:18"
															},
															"nativeSrc": "621:63:18",
															"nodeType": "YulIf",
															"src": "621:63:18"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:18",
														"nodeType": "YulTypedName",
														"src": "604:5:18",
														"type": ""
													}
												],
												"src": "568:122:18"
											},
											{
												"body": {
													"nativeSrc": "759:80:18",
													"nodeType": "YulBlock",
													"src": "759:80:18",
													"statements": [
														{
															"nativeSrc": "769:22:18",
															"nodeType": "YulAssignment",
															"src": "769:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:18"
																},
																"nativeSrc": "778:13:18",
																"nodeType": "YulFunctionCall",
																"src": "778:13:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:18"
																},
																"nativeSrc": "800:33:18",
																"nodeType": "YulFunctionCall",
																"src": "800:33:18"
															},
															"nativeSrc": "800:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:18"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:18",
														"nodeType": "YulTypedName",
														"src": "737:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:18",
														"nodeType": "YulTypedName",
														"src": "745:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:18",
														"nodeType": "YulTypedName",
														"src": "753:5:18",
														"type": ""
													}
												],
												"src": "696:143:18"
											},
											{
												"body": {
													"nativeSrc": "889:57:18",
													"nodeType": "YulBlock",
													"src": "889:57:18",
													"statements": [
														{
															"nativeSrc": "899:41:18",
															"nodeType": "YulAssignment",
															"src": "899:41:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "914:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "914:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "921:18:18",
																		"nodeType": "YulLiteral",
																		"src": "921:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "910:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "910:3:18"
																},
																"nativeSrc": "910:30:18",
																"nodeType": "YulFunctionCall",
																"src": "910:30:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "899:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "899:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "845:101:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "871:5:18",
														"nodeType": "YulTypedName",
														"src": "871:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "881:7:18",
														"nodeType": "YulTypedName",
														"src": "881:7:18",
														"type": ""
													}
												],
												"src": "845:101:18"
											},
											{
												"body": {
													"nativeSrc": "994:78:18",
													"nodeType": "YulBlock",
													"src": "994:78:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1050:16:18",
																"nodeType": "YulBlock",
																"src": "1050:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1059:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1059:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1062:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1062:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1052:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1052:6:18"
																			},
																			"nativeSrc": "1052:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1052:12:18"
																		},
																		"nativeSrc": "1052:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1052:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1017:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1017:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1041:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "1041:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint64",
																					"nativeSrc": "1024:16:18",
																					"nodeType": "YulIdentifier",
																					"src": "1024:16:18"
																				},
																				"nativeSrc": "1024:23:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1024:23:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1014:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "1014:2:18"
																		},
																		"nativeSrc": "1014:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1014:34:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1007:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1007:6:18"
																},
																"nativeSrc": "1007:42:18",
																"nodeType": "YulFunctionCall",
																"src": "1007:42:18"
															},
															"nativeSrc": "1004:62:18",
															"nodeType": "YulIf",
															"src": "1004:62:18"
														}
													]
												},
												"name": "validator_revert_t_uint64",
												"nativeSrc": "952:120:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "987:5:18",
														"nodeType": "YulTypedName",
														"src": "987:5:18",
														"type": ""
													}
												],
												"src": "952:120:18"
											},
											{
												"body": {
													"nativeSrc": "1140:79:18",
													"nodeType": "YulBlock",
													"src": "1140:79:18",
													"statements": [
														{
															"nativeSrc": "1150:22:18",
															"nodeType": "YulAssignment",
															"src": "1150:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1165:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1165:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1159:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1159:5:18"
																},
																"nativeSrc": "1159:13:18",
																"nodeType": "YulFunctionCall",
																"src": "1159:13:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1150:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1150:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1207:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1207:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint64",
																	"nativeSrc": "1181:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "1181:25:18"
																},
																"nativeSrc": "1181:32:18",
																"nodeType": "YulFunctionCall",
																"src": "1181:32:18"
															},
															"nativeSrc": "1181:32:18",
															"nodeType": "YulExpressionStatement",
															"src": "1181:32:18"
														}
													]
												},
												"name": "abi_decode_t_uint64_fromMemory",
												"nativeSrc": "1078:141:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1118:6:18",
														"nodeType": "YulTypedName",
														"src": "1118:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1126:3:18",
														"nodeType": "YulTypedName",
														"src": "1126:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1134:5:18",
														"nodeType": "YulTypedName",
														"src": "1134:5:18",
														"type": ""
													}
												],
												"src": "1078:141:18"
											},
											{
												"body": {
													"nativeSrc": "1270:32:18",
													"nodeType": "YulBlock",
													"src": "1270:32:18",
													"statements": [
														{
															"nativeSrc": "1280:16:18",
															"nodeType": "YulAssignment",
															"src": "1280:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "1291:5:18",
																"nodeType": "YulIdentifier",
																"src": "1291:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1280:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "1280:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "1225:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1252:5:18",
														"nodeType": "YulTypedName",
														"src": "1252:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1262:7:18",
														"nodeType": "YulTypedName",
														"src": "1262:7:18",
														"type": ""
													}
												],
												"src": "1225:77:18"
											},
											{
												"body": {
													"nativeSrc": "1351:79:18",
													"nodeType": "YulBlock",
													"src": "1351:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1408:16:18",
																"nodeType": "YulBlock",
																"src": "1408:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1417:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1417:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1420:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1420:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1410:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1410:6:18"
																			},
																			"nativeSrc": "1410:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1410:12:18"
																		},
																		"nativeSrc": "1410:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1410:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1374:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1374:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1399:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "1399:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "1381:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "1381:17:18"
																				},
																				"nativeSrc": "1381:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1381:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1371:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "1371:2:18"
																		},
																		"nativeSrc": "1371:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1371:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1364:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1364:6:18"
																},
																"nativeSrc": "1364:43:18",
																"nodeType": "YulFunctionCall",
																"src": "1364:43:18"
															},
															"nativeSrc": "1361:63:18",
															"nodeType": "YulIf",
															"src": "1361:63:18"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "1308:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1344:5:18",
														"nodeType": "YulTypedName",
														"src": "1344:5:18",
														"type": ""
													}
												],
												"src": "1308:122:18"
											},
											{
												"body": {
													"nativeSrc": "1499:80:18",
													"nodeType": "YulBlock",
													"src": "1499:80:18",
													"statements": [
														{
															"nativeSrc": "1509:22:18",
															"nodeType": "YulAssignment",
															"src": "1509:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1524:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1524:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1518:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1518:5:18"
																},
																"nativeSrc": "1518:13:18",
																"nodeType": "YulFunctionCall",
																"src": "1518:13:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1509:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1509:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1567:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1567:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "1540:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "1540:26:18"
																},
																"nativeSrc": "1540:33:18",
																"nodeType": "YulFunctionCall",
																"src": "1540:33:18"
															},
															"nativeSrc": "1540:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "1540:33:18"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nativeSrc": "1436:143:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1477:6:18",
														"nodeType": "YulTypedName",
														"src": "1477:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1485:3:18",
														"nodeType": "YulTypedName",
														"src": "1485:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1493:5:18",
														"nodeType": "YulTypedName",
														"src": "1493:5:18",
														"type": ""
													}
												],
												"src": "1436:143:18"
											},
											{
												"body": {
													"nativeSrc": "1630:32:18",
													"nodeType": "YulBlock",
													"src": "1630:32:18",
													"statements": [
														{
															"nativeSrc": "1640:16:18",
															"nodeType": "YulAssignment",
															"src": "1640:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "1651:5:18",
																"nodeType": "YulIdentifier",
																"src": "1651:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1640:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "1640:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1585:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1612:5:18",
														"nodeType": "YulTypedName",
														"src": "1612:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1622:7:18",
														"nodeType": "YulTypedName",
														"src": "1622:7:18",
														"type": ""
													}
												],
												"src": "1585:77:18"
											},
											{
												"body": {
													"nativeSrc": "1711:79:18",
													"nodeType": "YulBlock",
													"src": "1711:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1768:16:18",
																"nodeType": "YulBlock",
																"src": "1768:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1777:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1777:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1780:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1780:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1770:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1770:6:18"
																			},
																			"nativeSrc": "1770:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1770:12:18"
																		},
																		"nativeSrc": "1770:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1770:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1734:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1734:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1759:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "1759:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1741:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "1741:17:18"
																				},
																				"nativeSrc": "1741:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1741:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1731:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "1731:2:18"
																		},
																		"nativeSrc": "1731:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1731:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1724:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1724:6:18"
																},
																"nativeSrc": "1724:43:18",
																"nodeType": "YulFunctionCall",
																"src": "1724:43:18"
															},
															"nativeSrc": "1721:63:18",
															"nodeType": "YulIf",
															"src": "1721:63:18"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1668:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1704:5:18",
														"nodeType": "YulTypedName",
														"src": "1704:5:18",
														"type": ""
													}
												],
												"src": "1668:122:18"
											},
											{
												"body": {
													"nativeSrc": "1859:80:18",
													"nodeType": "YulBlock",
													"src": "1859:80:18",
													"statements": [
														{
															"nativeSrc": "1869:22:18",
															"nodeType": "YulAssignment",
															"src": "1869:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1884:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1884:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1878:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1878:5:18"
																},
																"nativeSrc": "1878:13:18",
																"nodeType": "YulFunctionCall",
																"src": "1878:13:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1869:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1869:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1927:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1927:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1900:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "1900:26:18"
																},
																"nativeSrc": "1900:33:18",
																"nodeType": "YulFunctionCall",
																"src": "1900:33:18"
															},
															"nativeSrc": "1900:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "1900:33:18"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1796:143:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1837:6:18",
														"nodeType": "YulTypedName",
														"src": "1837:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1845:3:18",
														"nodeType": "YulTypedName",
														"src": "1845:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1853:5:18",
														"nodeType": "YulTypedName",
														"src": "1853:5:18",
														"type": ""
													}
												],
												"src": "1796:143:18"
											},
											{
												"body": {
													"nativeSrc": "2140:1251:18",
													"nodeType": "YulBlock",
													"src": "2140:1251:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2187:83:18",
																"nodeType": "YulBlock",
																"src": "2187:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2189:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "2189:77:18"
																			},
																			"nativeSrc": "2189:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2189:79:18"
																		},
																		"nativeSrc": "2189:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2189:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2161:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2161:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2170:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2170:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2157:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2157:3:18"
																		},
																		"nativeSrc": "2157:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2157:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2182:3:18",
																		"nodeType": "YulLiteral",
																		"src": "2182:3:18",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2153:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:18"
																},
																"nativeSrc": "2153:33:18",
																"nodeType": "YulFunctionCall",
																"src": "2153:33:18"
															},
															"nativeSrc": "2150:120:18",
															"nodeType": "YulIf",
															"src": "2150:120:18"
														},
														{
															"nativeSrc": "2280:128:18",
															"nodeType": "YulBlock",
															"src": "2280:128:18",
															"statements": [
																{
																	"nativeSrc": "2295:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2295:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2309:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2309:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2299:6:18",
																			"nodeType": "YulTypedName",
																			"src": "2299:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2324:74:18",
																	"nodeType": "YulAssignment",
																	"src": "2324:74:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2370:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "2370:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2381:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2381:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2366:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2366:3:18"
																				},
																				"nativeSrc": "2366:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2366:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2390:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2390:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "2334:31:18",
																			"nodeType": "YulIdentifier",
																			"src": "2334:31:18"
																		},
																		"nativeSrc": "2334:64:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2334:64:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2324:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "2324:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2418:129:18",
															"nodeType": "YulBlock",
															"src": "2418:129:18",
															"statements": [
																{
																	"nativeSrc": "2433:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2433:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2447:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2447:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2437:6:18",
																			"nodeType": "YulTypedName",
																			"src": "2437:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2463:74:18",
																	"nodeType": "YulAssignment",
																	"src": "2463:74:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2509:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "2509:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2520:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2520:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2505:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2505:3:18"
																				},
																				"nativeSrc": "2505:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2505:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2529:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2529:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "2473:31:18",
																			"nodeType": "YulIdentifier",
																			"src": "2473:31:18"
																		},
																		"nativeSrc": "2473:64:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2473:64:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2463:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "2463:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2557:129:18",
															"nodeType": "YulBlock",
															"src": "2557:129:18",
															"statements": [
																{
																	"nativeSrc": "2572:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2572:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2586:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2586:2:18",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2576:6:18",
																			"nodeType": "YulTypedName",
																			"src": "2576:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2602:74:18",
																	"nodeType": "YulAssignment",
																	"src": "2602:74:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2648:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "2648:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2659:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2659:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2644:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2644:3:18"
																				},
																				"nativeSrc": "2644:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2644:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2668:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2668:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "2612:31:18",
																			"nodeType": "YulIdentifier",
																			"src": "2612:31:18"
																		},
																		"nativeSrc": "2612:64:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2612:64:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2602:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "2602:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2696:129:18",
															"nodeType": "YulBlock",
															"src": "2696:129:18",
															"statements": [
																{
																	"nativeSrc": "2711:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2711:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2725:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2725:2:18",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2715:6:18",
																			"nodeType": "YulTypedName",
																			"src": "2715:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2741:74:18",
																	"nodeType": "YulAssignment",
																	"src": "2741:74:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2787:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "2787:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2798:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2798:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2783:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2783:3:18"
																				},
																				"nativeSrc": "2783:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2783:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2807:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2807:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "2751:31:18",
																			"nodeType": "YulIdentifier",
																			"src": "2751:31:18"
																		},
																		"nativeSrc": "2751:64:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2751:64:18"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "2741:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "2741:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2835:129:18",
															"nodeType": "YulBlock",
															"src": "2835:129:18",
															"statements": [
																{
																	"nativeSrc": "2850:17:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2850:17:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2864:3:18",
																		"nodeType": "YulLiteral",
																		"src": "2864:3:18",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2854:6:18",
																			"nodeType": "YulTypedName",
																			"src": "2854:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2881:73:18",
																	"nodeType": "YulAssignment",
																	"src": "2881:73:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2926:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "2926:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2937:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2937:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2922:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2922:3:18"
																				},
																				"nativeSrc": "2922:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2922:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2946:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2946:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64_fromMemory",
																			"nativeSrc": "2891:30:18",
																			"nodeType": "YulIdentifier",
																			"src": "2891:30:18"
																		},
																		"nativeSrc": "2891:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2891:63:18"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "2881:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "2881:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2974:130:18",
															"nodeType": "YulBlock",
															"src": "2974:130:18",
															"statements": [
																{
																	"nativeSrc": "2989:17:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2989:17:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3003:3:18",
																		"nodeType": "YulLiteral",
																		"src": "3003:3:18",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2993:6:18",
																			"nodeType": "YulTypedName",
																			"src": "2993:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3020:74:18",
																	"nodeType": "YulAssignment",
																	"src": "3020:74:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3066:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "3066:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3077:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "3077:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3062:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3062:3:18"
																				},
																				"nativeSrc": "3062:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3062:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3086:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3086:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3030:31:18",
																			"nodeType": "YulIdentifier",
																			"src": "3030:31:18"
																		},
																		"nativeSrc": "3030:64:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3030:64:18"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "3020:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "3020:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3114:130:18",
															"nodeType": "YulBlock",
															"src": "3114:130:18",
															"statements": [
																{
																	"nativeSrc": "3129:17:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3129:17:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3143:3:18",
																		"nodeType": "YulLiteral",
																		"src": "3143:3:18",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3133:6:18",
																			"nodeType": "YulTypedName",
																			"src": "3133:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3160:74:18",
																	"nodeType": "YulAssignment",
																	"src": "3160:74:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3206:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "3206:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3217:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "3217:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3202:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3202:3:18"
																				},
																				"nativeSrc": "3202:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3202:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3226:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3226:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nativeSrc": "3170:31:18",
																			"nodeType": "YulIdentifier",
																			"src": "3170:31:18"
																		},
																		"nativeSrc": "3170:64:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3170:64:18"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "3160:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "3160:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3254:130:18",
															"nodeType": "YulBlock",
															"src": "3254:130:18",
															"statements": [
																{
																	"nativeSrc": "3269:17:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3269:17:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3283:3:18",
																		"nodeType": "YulLiteral",
																		"src": "3283:3:18",
																		"type": "",
																		"value": "224"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3273:6:18",
																			"nodeType": "YulTypedName",
																			"src": "3273:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3300:74:18",
																	"nodeType": "YulAssignment",
																	"src": "3300:74:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3346:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "3346:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3357:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "3357:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3342:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3342:3:18"
																				},
																				"nativeSrc": "3342:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3342:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3366:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3366:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3310:31:18",
																			"nodeType": "YulIdentifier",
																			"src": "3310:31:18"
																		},
																		"nativeSrc": "3310:64:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3310:64:18"
																	},
																	"variableNames": [
																		{
																			"name": "value7",
																			"nativeSrc": "3300:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "3300:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint64t_addresst_bytes32t_uint256_fromMemory",
												"nativeSrc": "1945:1446:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2054:9:18",
														"nodeType": "YulTypedName",
														"src": "2054:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2065:7:18",
														"nodeType": "YulTypedName",
														"src": "2065:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2077:6:18",
														"nodeType": "YulTypedName",
														"src": "2077:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2085:6:18",
														"nodeType": "YulTypedName",
														"src": "2085:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2093:6:18",
														"nodeType": "YulTypedName",
														"src": "2093:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2101:6:18",
														"nodeType": "YulTypedName",
														"src": "2101:6:18",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2109:6:18",
														"nodeType": "YulTypedName",
														"src": "2109:6:18",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2117:6:18",
														"nodeType": "YulTypedName",
														"src": "2117:6:18",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "2125:6:18",
														"nodeType": "YulTypedName",
														"src": "2125:6:18",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "2133:6:18",
														"nodeType": "YulTypedName",
														"src": "2133:6:18",
														"type": ""
													}
												],
												"src": "1945:1446:18"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint64t_addresst_bytes32t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 256) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3866 CODESIZE SUB DUP1 PUSH3 0x3866 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x310 JUMP JUMPDEST DUP5 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP DUP8 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x6 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP PUSH3 0x3D4 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x228 DUP3 PUSH3 0x1FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x23A DUP2 PUSH3 0x21C JUMP JUMPDEST DUP2 EQ PUSH3 0x245 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x258 DUP2 PUSH3 0x22F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x27C DUP2 PUSH3 0x25E JUMP JUMPDEST DUP2 EQ PUSH3 0x287 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x29A DUP2 PUSH3 0x271 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2B4 DUP2 PUSH3 0x2A0 JUMP JUMPDEST DUP2 EQ PUSH3 0x2BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x2D2 DUP2 PUSH3 0x2A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2EC DUP2 PUSH3 0x2D8 JUMP JUMPDEST DUP2 EQ PUSH3 0x2F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x30A DUP2 PUSH3 0x2E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH3 0x330 JUMPI PUSH3 0x32F PUSH3 0x1F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x33F DUP12 DUP3 DUP13 ADD PUSH3 0x248 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH3 0x352 DUP12 DUP3 DUP13 ADD PUSH3 0x248 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH3 0x365 DUP12 DUP3 DUP13 ADD PUSH3 0x248 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH3 0x378 DUP12 DUP3 DUP13 ADD PUSH3 0x248 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH3 0x38B DUP12 DUP3 DUP13 ADD PUSH3 0x28A JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH3 0x39E DUP12 DUP3 DUP13 ADD PUSH3 0x248 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH3 0x3B1 DUP12 DUP3 DUP13 ADD PUSH3 0x2C2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH3 0x3C4 DUP12 DUP3 DUP13 ADD PUSH3 0x2FA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x3472 PUSH3 0x3F4 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x6AB ADD MSTORE PUSH2 0x6FF ADD MSTORE PUSH2 0x3472 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7DC0D1D0 GT PUSH2 0x9F JUMPI DUP1 PUSH4 0xB197DF54 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xB197DF54 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0xC440FA0F EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0xC966494E EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0xD930DA60 EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0xEB5A662E EQ PUSH2 0x443 JUMPI PUSH2 0x11D JUMP JUMPDEST DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x83CEAE8D EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x86D86D84 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xA63661A5 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x377 JUMPI PUSH2 0x11D JUMP JUMPDEST DUP1 PUSH4 0x2F48AB7D GT PUSH2 0xE6 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x365B98B2 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x735DE9F7 EQ PUSH2 0x290 JUMPI PUSH2 0x11D JUMP JUMPDEST DUP1 PUSH3 0xE1801C EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0xA009097 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x1C4695F4 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x19D JUMPI PUSH2 0x11D JUMP JUMPDEST CALLDATASIZE PUSH2 0x11D JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x200D JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x154 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x65F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x20C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x187 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x20FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x2267 JUMP JUMPDEST PUSH2 0x6A9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x769 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x22E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0x78E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x23B7 JUMP JUMPDEST PUSH2 0x7BE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x23B7 JUMP JUMPDEST PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP3 SWAP2 SWAP1 PUSH2 0x2496 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A4 PUSH2 0x8F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x24E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x251D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH2 0x942 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x259A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x346 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH2 0x957 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x375 PUSH2 0x98E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x382 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x38B PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x259A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x200D JUMP JUMPDEST PUSH2 0xC39 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH2 0xEA5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x417 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x438 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x441 PUSH2 0x1620 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x469 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH2 0x1729 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x476 SWAP2 SWAP1 PUSH2 0x259A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT PUSH2 0x4FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x266C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x541 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x538 SWAP1 PUSH2 0x26D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x583 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57A SWAP1 PUSH2 0x273C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC8108639F5E0627BAC90449607E60D516A5082452E397808A067B57F755515FC DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x653 SWAP3 SWAP2 SWAP1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x75B JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x752 SWAP3 SWAP2 SWAP1 PUSH2 0x2781 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x765 DUP3 DUP3 PUSH2 0x17CC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP3 DUP3 DUP2 ADD SWAP1 PUSH2 0x7CE SWAP2 SWAP1 PUSH2 0x27E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x7D9 DUP2 PUSH2 0xEA5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH0 PUSH1 0x1 DUP1 PUSH1 0x9 SLOAD PUSH2 0x7F5 SWAP2 SWAP1 PUSH2 0x283B JUMP JUMPDEST NUMBER PUSH2 0x800 SWAP2 SWAP1 PUSH2 0x289B JUMP JUMPDEST PUSH2 0x80A SWAP2 SWAP1 PUSH2 0x28CB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 SWAP3 POP PUSH1 0x3 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0x8C4 JUMPI POP PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT JUMPDEST ISZERO PUSH2 0x8CE JUMPI PUSH1 0x1 SWAP3 POP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8DF SWAP2 SWAP1 PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT PUSH2 0xA0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA05 SWAP1 PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD GT PUSH2 0xA8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA86 SWAP1 PUSH2 0x273C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xAD8 CALLER PUSH2 0x1729 JUMP JUMPDEST GT PUSH2 0xB18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0F SWAP1 PUSH2 0x29D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA806CF17BE1FB3CFF26C4A6A46B735DDBF2AC07C138BDEDB6D2ACE798A2CFD40 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xC31 CALLER PUSH2 0x1989 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD EQ PUSH2 0xCB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB0 SWAP1 PUSH2 0x266C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0xCFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF2 SWAP1 PUSH2 0x26D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0xD3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD34 SWAP1 PUSH2 0x273C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH0 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xDAB SWAP1 PUSH2 0x29F4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x89D3F1CDFAD4E5C26535AC23DC61CF9E975667801747518F01B1B653545D736A DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE91 SWAP3 SWAP2 SWAP1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xEA1 PUSH2 0x98E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0xF27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1E SWAP1 PUSH2 0x2A85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xF70 DUP3 PUSH2 0x1729 JUMP JUMPDEST GT PUSH2 0xFB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA7 SWAP1 PUSH2 0x2B13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x1030 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1027 SWAP1 PUSH2 0x2BA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10DE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1102 SWAP2 SWAP1 PUSH2 0x2C45 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1173 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1197 SWAP2 SWAP1 PUSH2 0x2CF2 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 DUP2 PUSH1 0x12 PUSH2 0x11AA SWAP2 SWAP1 PUSH2 0x283B JUMP JUMPDEST PUSH1 0xA PUSH2 0x11B6 SWAP2 SWAP1 PUSH2 0x2E4C JUMP JUMPDEST DUP4 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x11CB SWAP2 SWAP1 PUSH2 0x2E96 JUMP JUMPDEST PUSH2 0x11D5 SWAP2 SWAP1 PUSH2 0x2ED7 JUMP JUMPDEST PUSH2 0x11DF SWAP2 SWAP1 PUSH2 0x2ED7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x3E8 PUSH1 0x5 DUP4 PUSH2 0x11F2 SWAP2 SWAP1 PUSH2 0x2E96 JUMP JUMPDEST PUSH2 0x11FC SWAP2 SWAP1 PUSH2 0x2ED7 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x120B SWAP2 SWAP1 PUSH2 0x283B JUMP JUMPDEST SWAP1 POP PUSH2 0x123A PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 ADDRESS DUP10 PUSH2 0x1A9E JUMP JUMPDEST PUSH2 0x1287 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH2 0x1B20 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12A3 JUMPI PUSH2 0x12A2 PUSH2 0x212B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12D1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x1309 JUMPI PUSH2 0x1308 PUSH2 0x2F07 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13AD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13D1 SWAP2 SWAP1 PUSH2 0x2F48 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x13E5 JUMPI PUSH2 0x13E4 PUSH2 0x2F07 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18CBAFE5 DUP10 DUP6 DUP6 ADDRESS PUSH2 0xE10 TIMESTAMP PUSH2 0x146F SWAP2 SWAP1 PUSH2 0x28CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x302A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14AA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14D2 SWAP2 SWAP1 PUSH2 0x3117 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x14E9 JUMPI PUSH2 0x14E8 PUSH2 0x2F07 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH0 DUP1 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1542 SWAP1 PUSH2 0x29F4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1A3ABF7E0A472651EBE2C79A31A5F4660C7EA65E3086EE1742D7502999BBF5B5 DUP11 DUP4 PUSH1 0x40 MLOAD PUSH2 0x158F SWAP3 SWAP2 SWAP1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x15DA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0x15E4 DUP11 PUSH2 0x1989 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT PUSH2 0x16A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1697 SWAP1 PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF222ABD4EE7AFB02F9450183B95D07AAAB2EA2F2D6748F55525C7E875FDD58A1 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP4 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1786 SWAP3 SWAP2 SWAP1 PUSH2 0x2781 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17A1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17C5 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x1853 JUMPI PUSH2 0x1852 PUSH2 0x2F07 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1865 SWAP2 SWAP1 PUSH2 0x289B JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x18EF SWAP2 SWAP1 PUSH2 0x2E96 JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x1939 SWAP2 SWAP1 PUSH2 0x28CB JUMP JUMPDEST PUSH2 0x1943 SWAP2 SWAP1 PUSH2 0x28CB JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH1 0xA SLOAD PUSH1 0x6 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH3 0x55730 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A09 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x328A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A25 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A49 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x1B1A DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1AD3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1BB9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B5C SWAP3 SWAP2 SWAP1 PUSH2 0x2781 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B77 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B9B SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST SWAP1 POP PUSH2 0x1BB3 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1BAE SWAP2 SWAP1 PUSH2 0x28CB JUMP JUMPDEST PUSH2 0x1C4E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BE3 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D5B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x1C07 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1C05 SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1C49 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C40 SWAP2 SWAP1 PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1C7E SWAP3 SWAP2 SWAP1 PUSH2 0x3365 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH2 0x1CCC DUP5 DUP3 PUSH2 0x1D70 JUMP JUMPDEST PUSH2 0x1D55 JUMPI PUSH2 0x1D4A DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP7 PUSH0 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1D03 SWAP3 SWAP2 SWAP1 PUSH2 0x33C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1BB9 JUMP JUMPDEST PUSH2 0x1D54 DUP5 DUP3 PUSH2 0x1BB9 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D68 DUP4 DUP4 PUSH0 PUSH2 0x1E2F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D98 SWAP2 SWAP1 PUSH2 0x3426 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1DD1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1E03 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x1E02 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1E01 SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST JUMPDEST JUMPDEST DUP1 ISZERO PUSH2 0x1E25 JUMPI POP PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1E76 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E6D SWAP2 SWAP1 PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1E9E SWAP2 SWAP1 PUSH2 0x3426 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1ED8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1EDD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1EED DUP7 DUP4 DUP4 PUSH2 0x1EF8 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1F0D JUMPI PUSH2 0x1F08 DUP3 PUSH2 0x1F85 JUMP JUMPDEST PUSH2 0x1F7D JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1F33 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1F75 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F6C SWAP2 SWAP1 PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1F7E JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1F97 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FEC DUP2 PUSH2 0x1FDA JUMP JUMPDEST DUP2 EQ PUSH2 0x1FF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2007 DUP2 PUSH2 0x1FE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2023 JUMPI PUSH2 0x2022 PUSH2 0x1FD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2030 DUP6 DUP3 DUP7 ADD PUSH2 0x1FF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2041 DUP6 DUP3 DUP7 ADD PUSH2 0x1FF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x208D PUSH2 0x2088 PUSH2 0x2083 DUP5 PUSH2 0x204B JUMP JUMPDEST PUSH2 0x206A JUMP JUMPDEST PUSH2 0x204B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x209E DUP3 PUSH2 0x2073 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20AF DUP3 PUSH2 0x2094 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20BF DUP2 PUSH2 0x20A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20D8 PUSH0 DUP4 ADD DUP5 PUSH2 0x20B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20E8 DUP3 PUSH2 0x2094 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20F8 DUP2 PUSH2 0x20DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2111 PUSH0 DUP4 ADD DUP5 PUSH2 0x20EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2161 DUP3 PUSH2 0x211B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2180 JUMPI PUSH2 0x217F PUSH2 0x212B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2192 PUSH2 0x1FC9 JUMP JUMPDEST SWAP1 POP PUSH2 0x219E DUP3 DUP3 PUSH2 0x2158 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21BD JUMPI PUSH2 0x21BC PUSH2 0x212B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x21E4 PUSH2 0x21DF DUP5 PUSH2 0x21A3 JUMP JUMPDEST PUSH2 0x2189 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2207 JUMPI PUSH2 0x2206 PUSH2 0x21CE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2230 JUMPI DUP1 PUSH2 0x221C DUP9 DUP3 PUSH2 0x1FF9 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2209 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x224E JUMPI PUSH2 0x224D PUSH2 0x2117 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x225E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x21D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x227D JUMPI PUSH2 0x227C PUSH2 0x1FD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x228A DUP6 DUP3 DUP7 ADD PUSH2 0x1FF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22AB JUMPI PUSH2 0x22AA PUSH2 0x1FD6 JUMP JUMPDEST JUMPDEST PUSH2 0x22B7 DUP6 DUP3 DUP7 ADD PUSH2 0x223A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22CB DUP3 PUSH2 0x2094 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22DB DUP2 PUSH2 0x22C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x22D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x230F JUMPI PUSH2 0x230E PUSH2 0x1FD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x231C DUP5 DUP3 DUP6 ADD PUSH2 0x1FF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x232F DUP3 PUSH2 0x204B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x233F DUP2 PUSH2 0x2325 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2358 PUSH0 DUP4 ADD DUP5 PUSH2 0x2336 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2377 JUMPI PUSH2 0x2376 PUSH2 0x2117 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2394 JUMPI PUSH2 0x2393 PUSH2 0x235E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x23B0 JUMPI PUSH2 0x23AF PUSH2 0x21CE JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23CD JUMPI PUSH2 0x23CC PUSH2 0x1FD2 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23EA JUMPI PUSH2 0x23E9 PUSH2 0x1FD6 JUMP JUMPDEST JUMPDEST PUSH2 0x23F6 DUP6 DUP3 DUP7 ADD PUSH2 0x2362 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2416 DUP2 PUSH2 0x2402 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2453 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2438 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2468 DUP3 PUSH2 0x241C JUMP JUMPDEST PUSH2 0x2472 DUP2 DUP6 PUSH2 0x2426 JUMP JUMPDEST SWAP4 POP PUSH2 0x2482 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2436 JUMP JUMPDEST PUSH2 0x248B DUP2 PUSH2 0x211B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24A9 PUSH0 DUP4 ADD DUP6 PUSH2 0x240D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x24BB DUP2 DUP5 PUSH2 0x245E JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24CE DUP3 PUSH2 0x2094 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24DE DUP2 PUSH2 0x24C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24F7 PUSH0 DUP4 ADD DUP5 PUSH2 0x24D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2507 DUP3 PUSH2 0x2094 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2517 DUP2 PUSH2 0x24FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2530 PUSH0 DUP4 ADD DUP5 PUSH2 0x250E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x253F DUP2 PUSH2 0x2325 JUMP JUMPDEST DUP2 EQ PUSH2 0x2549 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x255A DUP2 PUSH2 0x2536 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2575 JUMPI PUSH2 0x2574 PUSH2 0x1FD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2582 DUP5 DUP3 DUP6 ADD PUSH2 0x254C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2594 DUP2 PUSH2 0x1FDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25AD PUSH0 DUP4 ADD DUP5 PUSH2 0x258B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x25C6 PUSH0 DUP4 ADD DUP10 PUSH2 0x258B JUMP JUMPDEST PUSH2 0x25D3 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x258B JUMP JUMPDEST PUSH2 0x25E0 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x258B JUMP JUMPDEST PUSH2 0x25ED PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x258B JUMP JUMPDEST PUSH2 0x25FA PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x258B JUMP JUMPDEST PUSH2 0x2607 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x258B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506C616E20697320657869737400000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2656 PUSH1 0xD DUP4 PUSH2 0x2612 JUMP JUMPDEST SWAP2 POP PUSH2 0x2661 DUP3 PUSH2 0x2622 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2683 DUP2 PUSH2 0x264A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4672657175656E6379206D7573742062652067726561746572207468616E2030 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26BE PUSH1 0x20 DUP4 PUSH2 0x2612 JUMP JUMPDEST SWAP2 POP PUSH2 0x26C9 DUP3 PUSH2 0x268A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26EB DUP2 PUSH2 0x26B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2726 PUSH1 0x1D DUP4 PUSH2 0x2612 JUMP JUMPDEST SWAP2 POP PUSH2 0x2731 DUP3 PUSH2 0x26F2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2753 DUP2 PUSH2 0x271A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x276D PUSH0 DUP4 ADD DUP6 PUSH2 0x258B JUMP JUMPDEST PUSH2 0x277A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x258B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2794 PUSH0 DUP4 ADD DUP6 PUSH2 0x2336 JUMP JUMPDEST PUSH2 0x27A1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2336 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27B2 DUP3 PUSH2 0x204B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27C2 DUP2 PUSH2 0x27A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x27CC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27DD DUP2 PUSH2 0x27B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27F8 JUMPI PUSH2 0x27F7 PUSH2 0x1FD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2805 DUP5 DUP3 DUP6 ADD PUSH2 0x27CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2845 DUP3 PUSH2 0x1FDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2850 DUP4 PUSH2 0x1FDA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2868 JUMPI PUSH2 0x2867 PUSH2 0x280E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x28A5 DUP3 PUSH2 0x1FDA JUMP JUMPDEST SWAP2 POP PUSH2 0x28B0 DUP4 PUSH2 0x1FDA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x28C0 JUMPI PUSH2 0x28BF PUSH2 0x286E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28D5 DUP3 PUSH2 0x1FDA JUMP JUMPDEST SWAP2 POP PUSH2 0x28E0 DUP4 PUSH2 0x1FDA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x28F8 JUMPI PUSH2 0x28F7 PUSH2 0x280E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506C616E206973206E6F74206578697374000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2932 PUSH1 0x11 DUP4 PUSH2 0x2612 JUMP JUMPDEST SWAP2 POP PUSH2 0x293D DUP3 PUSH2 0x28FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x295F DUP2 PUSH2 0x2926 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F74616C206D7573742062652067726561746572207468616E20616D6F756E PUSH0 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29C0 PUSH1 0x21 DUP4 PUSH2 0x2612 JUMP JUMPDEST SWAP2 POP PUSH2 0x29CB DUP3 PUSH2 0x2966 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29ED DUP2 PUSH2 0x29B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x29FE DUP3 PUSH2 0x1FDA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2A30 JUMPI PUSH2 0x2A2F PUSH2 0x280E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C616E206973206E6F74206163746976650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A6F PUSH1 0x12 DUP4 PUSH2 0x2612 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A7A DUP3 PUSH2 0x2A3B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A9C DUP2 PUSH2 0x2A63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F742074726967676572206D6F7265207468616E2072656D61696E69 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E6720616D6F756E740000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AFD PUSH1 0x29 DUP4 PUSH2 0x2612 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B08 DUP3 PUSH2 0x2AA3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B2A DUP2 PUSH2 0x2AF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F742074726967676572206265666F7265206E657874207472696767 PUSH0 DUP3 ADD MSTORE PUSH32 0x65722074696D6500000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B8B PUSH1 0x27 DUP4 PUSH2 0x2612 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B96 DUP3 PUSH2 0x2B31 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BB8 DUP2 PUSH2 0x2B7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BDD DUP2 PUSH2 0x2BBF JUMP JUMPDEST DUP2 EQ PUSH2 0x2BE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2BF8 DUP2 PUSH2 0x2BD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C10 DUP2 PUSH2 0x2BFE JUMP JUMPDEST DUP2 EQ PUSH2 0x2C1A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C2B DUP2 PUSH2 0x2C07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C3F DUP2 PUSH2 0x1FE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2C5E JUMPI PUSH2 0x2C5D PUSH2 0x1FD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C6B DUP9 DUP3 DUP10 ADD PUSH2 0x2BEA JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2C7C DUP9 DUP3 DUP10 ADD PUSH2 0x2C1D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2C8D DUP9 DUP3 DUP10 ADD PUSH2 0x2C31 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2C9E DUP9 DUP3 DUP10 ADD PUSH2 0x2C31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2CAF DUP9 DUP3 DUP10 ADD PUSH2 0x2BEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CD1 DUP2 PUSH2 0x2CBC JUMP JUMPDEST DUP2 EQ PUSH2 0x2CDB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2CEC DUP2 PUSH2 0x2CC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D07 JUMPI PUSH2 0x2D06 PUSH2 0x1FD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D14 DUP5 DUP3 DUP6 ADD PUSH2 0x2CDE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x2D72 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x2D4E JUMPI PUSH2 0x2D4D PUSH2 0x280E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x2D5D JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x2D6B DUP6 PUSH2 0x2D1D JUMP JUMPDEST SWAP5 POP PUSH2 0x2D32 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2D8A JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2E45 JUMP JUMPDEST DUP2 PUSH2 0x2D97 JUMPI PUSH0 SWAP1 POP PUSH2 0x2E45 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2DAD JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2DB7 JUMPI PUSH2 0x2DE6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2E45 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2DC9 JUMPI PUSH2 0x2DC8 PUSH2 0x280E JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x2DE0 JUMPI PUSH2 0x2DDF PUSH2 0x280E JUMP JUMPDEST JUMPDEST POP PUSH2 0x2E45 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2E1B JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2E16 JUMPI PUSH2 0x2E15 PUSH2 0x280E JUMP JUMPDEST JUMPDEST PUSH2 0x2E45 JUMP JUMPDEST PUSH2 0x2E28 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2D29 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2E3F JUMPI PUSH2 0x2E3E PUSH2 0x280E JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2E56 DUP3 PUSH2 0x1FDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2E61 DUP4 PUSH2 0x1FDA JUMP JUMPDEST SWAP3 POP PUSH2 0x2E8E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2D7B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2EA0 DUP3 PUSH2 0x1FDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2EAB DUP4 PUSH2 0x1FDA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2EB9 DUP2 PUSH2 0x1FDA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2ED0 JUMPI PUSH2 0x2ECF PUSH2 0x280E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2EE1 DUP3 PUSH2 0x1FDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2EEC DUP4 PUSH2 0x1FDA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2EFC JUMPI PUSH2 0x2EFB PUSH2 0x286E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2F42 DUP2 PUSH2 0x2536 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F5D JUMPI PUSH2 0x2F5C PUSH2 0x1FD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2F6A DUP5 DUP3 DUP6 ADD PUSH2 0x2F34 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FA5 DUP2 PUSH2 0x2325 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2FB6 DUP4 DUP4 PUSH2 0x2F9C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2FD8 DUP3 PUSH2 0x2F73 JUMP JUMPDEST PUSH2 0x2FE2 DUP2 DUP6 PUSH2 0x2F7D JUMP JUMPDEST SWAP4 POP PUSH2 0x2FED DUP4 PUSH2 0x2F8D JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x301D JUMPI DUP2 MLOAD PUSH2 0x3004 DUP9 DUP3 PUSH2 0x2FAB JUMP JUMPDEST SWAP8 POP PUSH2 0x300F DUP4 PUSH2 0x2FC2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2FF0 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x303D PUSH0 DUP4 ADD DUP9 PUSH2 0x258B JUMP JUMPDEST PUSH2 0x304A PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x258B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x305C DUP2 DUP7 PUSH2 0x2FCE JUMP JUMPDEST SWAP1 POP PUSH2 0x306B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2336 JUMP JUMPDEST PUSH2 0x3078 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x258B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3094 PUSH2 0x308F DUP5 PUSH2 0x21A3 JUMP JUMPDEST PUSH2 0x2189 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x30B7 JUMPI PUSH2 0x30B6 PUSH2 0x21CE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x30E0 JUMPI DUP1 PUSH2 0x30CC DUP9 DUP3 PUSH2 0x2C31 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x30B9 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x30FE JUMPI PUSH2 0x30FD PUSH2 0x2117 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x310E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3082 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x312C JUMPI PUSH2 0x312B PUSH2 0x1FD2 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3149 JUMPI PUSH2 0x3148 PUSH2 0x1FD6 JUMP JUMPDEST JUMPDEST PUSH2 0x3155 DUP5 DUP3 DUP6 ADD PUSH2 0x30EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3173 JUMPI PUSH2 0x3172 PUSH2 0x1FD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3180 DUP5 DUP3 DUP6 ADD PUSH2 0x2C31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x319B DUP2 PUSH2 0x3189 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31BD DUP2 PUSH2 0x31A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x31F3 PUSH2 0x31EE PUSH2 0x31E9 DUP5 PUSH2 0x31C3 JUMP JUMPDEST PUSH2 0x206A JUMP JUMPDEST PUSH2 0x31CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3203 DUP2 PUSH2 0x31D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x323B PUSH2 0x3236 PUSH2 0x3231 DUP5 PUSH2 0x3209 JUMP JUMPDEST PUSH2 0x206A JUMP JUMPDEST PUSH2 0x3212 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x324B DUP2 PUSH2 0x3221 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3274 PUSH2 0x326F PUSH2 0x326A DUP5 PUSH2 0x3251 JUMP JUMPDEST PUSH2 0x206A JUMP JUMPDEST PUSH2 0x3212 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3284 DUP2 PUSH2 0x325A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x329D PUSH0 DUP4 ADD DUP9 PUSH2 0x3192 JUMP JUMPDEST PUSH2 0x32AA PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x31B4 JUMP JUMPDEST PUSH2 0x32B7 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x31FA JUMP JUMPDEST PUSH2 0x32C4 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x3242 JUMP JUMPDEST PUSH2 0x32D1 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x327B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x32EE PUSH0 DUP4 ADD DUP7 PUSH2 0x2336 JUMP JUMPDEST PUSH2 0x32FB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2336 JUMP JUMPDEST PUSH2 0x3308 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x258B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3319 DUP2 PUSH2 0x2402 JUMP JUMPDEST DUP2 EQ PUSH2 0x3323 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3334 DUP2 PUSH2 0x3310 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x334F JUMPI PUSH2 0x334E PUSH2 0x1FD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x335C DUP5 DUP3 DUP6 ADD PUSH2 0x3326 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3378 PUSH0 DUP4 ADD DUP6 PUSH2 0x2336 JUMP JUMPDEST PUSH2 0x3385 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x258B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x33AF PUSH2 0x33AA PUSH2 0x33A5 DUP5 PUSH2 0x338C JUMP JUMPDEST PUSH2 0x206A JUMP JUMPDEST PUSH2 0x1FDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33BF DUP2 PUSH2 0x3395 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x33D8 PUSH0 DUP4 ADD DUP6 PUSH2 0x2336 JUMP JUMPDEST PUSH2 0x33E5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x33B6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3400 DUP3 PUSH2 0x241C JUMP JUMPDEST PUSH2 0x340A DUP2 DUP6 PUSH2 0x33EC JUMP JUMPDEST SWAP4 POP PUSH2 0x341A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2436 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3431 DUP3 DUP5 PUSH2 0x33F6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D CALLDATASIZE DUP4 MSTORE DUP5 CALLER ISZERO 0xE3 0xB1 STOP SIGNEXTEND CALLDATALOAD 0xC PUSH2 0x9F13 PUSH12 0xD47BE8C8112A7E4B4C627E03 0xE2 SHL SGT PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "645:6647:17:-:0;;;1782:685;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2043:15;5616::6;5599:32;;;;;;;;;;5556:80;2080:5:17::1;2067:4;;:19;;;;;;;;;;;;;;;;;;2128:14;2093:13;;:50;;;;;;;;;;;;;;;;;;2183:7;2150:6;;:41;;;;;;;;;;;;;;;;;;2206:1;2198:5;:9;;;;2224:8;2214:7;:18;;;;2245:4;2239:3;:10;;;;2284:5;2258:4;;:32;;;;;;;;;;;;;;;;;;2337:15;2297:11;;:56;;;;;;;;;;;;;;;;;;2377:15;2360:14;;:32;;;;;;;;;;;;;;;;;;1782:685:::0;;;;;;;;645:6647;;88:117:18;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:101::-;881:7;921:18;914:5;910:30;899:41;;845:101;;;:::o;952:120::-;1024:23;1041:5;1024:23;:::i;:::-;1017:5;1014:34;1004:62;;1062:1;1059;1052:12;1004:62;952:120;:::o;1078:141::-;1134:5;1165:6;1159:13;1150:22;;1181:32;1207:5;1181:32;:::i;:::-;1078:141;;;;:::o;1225:77::-;1262:7;1291:5;1280:16;;1225:77;;;:::o;1308:122::-;1381:24;1399:5;1381:24;:::i;:::-;1374:5;1371:35;1361:63;;1420:1;1417;1410:12;1361:63;1308:122;:::o;1436:143::-;1493:5;1524:6;1518:13;1509:22;;1540:33;1567:5;1540:33;:::i;:::-;1436:143;;;;:::o;1585:77::-;1622:7;1651:5;1640:16;;1585:77;;;:::o;1668:122::-;1741:24;1759:5;1741:24;:::i;:::-;1734:5;1731:35;1721:63;;1780:1;1777;1770:12;1721:63;1668:122;:::o;1796:143::-;1853:5;1884:6;1878:13;1869:22;;1900:33;1927:5;1900:33;:::i;:::-;1796:143;;;;:::o;1945:1446::-;2077:6;2085;2093;2101;2109;2117;2125;2133;2182:3;2170:9;2161:7;2157:23;2153:33;2150:120;;;2189:79;;:::i;:::-;2150:120;2309:1;2334:64;2390:7;2381:6;2370:9;2366:22;2334:64;:::i;:::-;2324:74;;2280:128;2447:2;2473:64;2529:7;2520:6;2509:9;2505:22;2473:64;:::i;:::-;2463:74;;2418:129;2586:2;2612:64;2668:7;2659:6;2648:9;2644:22;2612:64;:::i;:::-;2602:74;;2557:129;2725:2;2751:64;2807:7;2798:6;2787:9;2783:22;2751:64;:::i;:::-;2741:74;;2696:129;2864:3;2891:63;2946:7;2937:6;2926:9;2922:22;2891:63;:::i;:::-;2881:73;;2835:129;3003:3;3030:64;3086:7;3077:6;3066:9;3062:22;3030:64;:::i;:::-;3020:74;;2974:130;3143:3;3170:64;3226:7;3217:6;3206:9;3202:22;3170:64;:::i;:::-;3160:74;;3114:130;3283:3;3310:64;3366:7;3357:6;3346:9;3342:22;3310:64;:::i;:::-;3300:74;;3254:130;1945:1446;;;;;;;;;;;:::o;645:6647:17:-;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_2876": {
									"entryPoint": null,
									"id": 2876,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturnBool_1451": {
									"entryPoint": 7536,
									"id": 1451,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_callOptionalReturn_1402": {
									"entryPoint": 7097,
									"id": 1402,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_1704": {
									"entryPoint": 8069,
									"id": 1704,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@checkUpkeep_2851": {
									"entryPoint": 2014,
									"id": 2851,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@coordinator_2208": {
									"entryPoint": 1631,
									"id": 2208,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@createPlan_2374": {
									"entryPoint": 3129,
									"id": 2374,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@forceApprove_1360": {
									"entryPoint": 7246,
									"id": 1360,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@fulfillRandomWords_2793": {
									"entryPoint": 6092,
									"id": 2793,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@functionCallWithValue_1572": {
									"entryPoint": 7727,
									"id": 1572,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_1526": {
									"entryPoint": 7515,
									"id": 1526,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAllowance_2308": {
									"entryPoint": 5929,
									"id": 2308,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@link_2205": {
									"entryPoint": 1668,
									"id": 2205,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nextTriggerTime_2199": {
									"entryPoint": 2370,
									"id": 2199,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nonce_2218": {
									"entryPoint": 3123,
									"id": 2218,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@oracle_2216": {
									"entryPoint": 2333,
									"id": 2216,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@performUpkeep_2872": {
									"entryPoint": 1982,
									"id": 2872,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@plans_2187": {
									"entryPoint": 2391,
									"id": 2187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rawFulfillRandomWords_369": {
									"entryPoint": 1705,
									"id": 369,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@requestRandom_2556": {
									"entryPoint": 6537,
									"id": 2556,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@safeIncreaseAllowance_1270": {
									"entryPoint": 6944,
									"id": 1270,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1239": {
									"entryPoint": 6814,
									"id": 1239,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@startPlan_2505": {
									"entryPoint": 2446,
									"id": 2505,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stopPlan_2533": {
									"entryPoint": 5664,
									"id": 2533,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@triggerPlan_2748": {
									"entryPoint": 3749,
									"id": 2748,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@uniswapRouter_2213": {
									"entryPoint": 2296,
									"id": 2213,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updatePlan_2430": {
									"entryPoint": 1151,
									"id": 2430,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@usdt_2202": {
									"entryPoint": 1897,
									"id": 2202,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userRandomRequestId_2195": {
									"entryPoint": 5616,
									"id": 2195,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@users_2191": {
									"entryPoint": 1934,
									"id": 2191,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1664": {
									"entryPoint": 7928,
									"id": 1664,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8658,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 12418,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 9548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 12084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 10191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 12522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 13094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 9058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 11293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 11313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 11242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 11486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 12104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": 10211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 12567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 13114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_calldata_ptr": {
									"entryPoint": 9143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 12638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 8205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 11333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 11506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 12203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 12188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 12238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 9229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 12690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 13302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_AggregatorV2V3Interface_$75_to_t_address_fromStack": {
									"entryPoint": 9486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ERC20_$1022_to_t_address_fromStack": {
									"entryPoint": 8914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IUniswapV2Router02_$2123_to_t_address_fromStack": {
									"entryPoint": 9429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_LinkTokenInterface_$312_to_t_address_fromStack": {
									"entryPoint": 8431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_VRFCoordinatorV2Interface_$217_to_t_address_fromStack": {
									"entryPoint": 8374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 13238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint32_fromStack": {
									"entryPoint": 12923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_350000_by_1_to_t_uint32_fromStack": {
									"entryPoint": 12866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_3_by_1_to_t_uint16_fromStack": {
									"entryPoint": 12794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f96280bb4f5b1f7479570483658bbfa7f265590669ee8baa295330b1374cab6c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint64_to_t_uint64_fromStack": {
									"entryPoint": 12724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 13350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 10113,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 13019,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 13253,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 13157,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9366,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint64_t_rational_3_by_1_t_rational_350000_by_1_t_rational_1_by_1__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed": {
									"entryPoint": 12938,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_AggregatorV2V3Interface_$75__to_t_address__fromStack_reversed": {
									"entryPoint": 9501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ERC20_$1022__to_t_address__fromStack_reversed": {
									"entryPoint": 8929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IUniswapV2Router02_$2123__to_t_address__fromStack_reversed": {
									"entryPoint": 9444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_LinkTokenInterface_$312__to_t_address__fromStack_reversed": {
									"entryPoint": 8446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_VRFCoordinatorV2Interface_$217__to_t_address__fromStack_reversed": {
									"entryPoint": 8389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f96280bb4f5b1f7479570483658bbfa7f265590669ee8baa295330b1374cab6c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10074,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 12330,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9651,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 8137,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 12173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 12147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 12226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 12157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 13292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 9746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 11991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 11561,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 11852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 11643,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 11926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 10152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 12681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 11262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 13196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 12881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_350000_by_1": {
									"entryPoint": 12809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_3_by_1": {
									"entryPoint": 12739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 12748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 12818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 12705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 11452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 11199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_AggregatorV2V3Interface_$75_to_t_address": {
									"entryPoint": 9469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ERC20_$1022_to_t_address": {
									"entryPoint": 8897,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IUniswapV2Router02_$2123_to_t_address": {
									"entryPoint": 9412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_LinkTokenInterface_$312_to_t_address": {
									"entryPoint": 8414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_VRFCoordinatorV2Interface_$217_to_t_address": {
									"entryPoint": 8357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 13205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint32": {
									"entryPoint": 12890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_350000_by_1_to_t_uint32": {
									"entryPoint": 12833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_3_by_1_to_t_uint16": {
									"entryPoint": 12761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 8340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 8307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 9270,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 8536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 10740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 10395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10254,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10350,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 12039,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8491,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 9054,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8471,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 8654,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 8150,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8146,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 11549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad": {
									"entryPoint": 9762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c": {
									"entryPoint": 10811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296": {
									"entryPoint": 9970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa": {
									"entryPoint": 10598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2": {
									"entryPoint": 10494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24": {
									"entryPoint": 10915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f96280bb4f5b1f7479570483658bbfa7f265590669ee8baa295330b1374cab6c": {
									"entryPoint": 11057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016": {
									"entryPoint": 9866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 10169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 13072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 11271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 11464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 11220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:40244:18",
										"nodeType": "YulBlock",
										"src": "0:40244:18",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:18",
													"nodeType": "YulBlock",
													"src": "47:35:18",
													"statements": [
														{
															"nativeSrc": "57:19:18",
															"nodeType": "YulAssignment",
															"src": "57:19:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:18",
																		"nodeType": "YulLiteral",
																		"src": "73:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:18"
																},
																"nativeSrc": "67:9:18",
																"nodeType": "YulFunctionCall",
																"src": "67:9:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:18"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:18",
														"nodeType": "YulTypedName",
														"src": "40:6:18",
														"type": ""
													}
												],
												"src": "7:75:18"
											},
											{
												"body": {
													"nativeSrc": "177:28:18",
													"nodeType": "YulBlock",
													"src": "177:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:18",
																		"nodeType": "YulLiteral",
																		"src": "194:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:18",
																		"nodeType": "YulLiteral",
																		"src": "197:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:18"
																},
																"nativeSrc": "187:12:18",
																"nodeType": "YulFunctionCall",
																"src": "187:12:18"
															},
															"nativeSrc": "187:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:18"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:18"
											},
											{
												"body": {
													"nativeSrc": "300:28:18",
													"nodeType": "YulBlock",
													"src": "300:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:18",
																		"nodeType": "YulLiteral",
																		"src": "317:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:18",
																		"nodeType": "YulLiteral",
																		"src": "320:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:18"
																},
																"nativeSrc": "310:12:18",
																"nodeType": "YulFunctionCall",
																"src": "310:12:18"
															},
															"nativeSrc": "310:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:18"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:18"
											},
											{
												"body": {
													"nativeSrc": "379:32:18",
													"nodeType": "YulBlock",
													"src": "379:32:18",
													"statements": [
														{
															"nativeSrc": "389:16:18",
															"nodeType": "YulAssignment",
															"src": "389:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:18",
																"nodeType": "YulIdentifier",
																"src": "400:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:18",
														"nodeType": "YulTypedName",
														"src": "361:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:18",
														"nodeType": "YulTypedName",
														"src": "371:7:18",
														"type": ""
													}
												],
												"src": "334:77:18"
											},
											{
												"body": {
													"nativeSrc": "460:79:18",
													"nodeType": "YulBlock",
													"src": "460:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:18",
																"nodeType": "YulBlock",
																"src": "517:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:18",
																					"nodeType": "YulLiteral",
																					"src": "526:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:18",
																					"nodeType": "YulLiteral",
																					"src": "529:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:18"
																			},
																			"nativeSrc": "519:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:18"
																		},
																		"nativeSrc": "519:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:18"
																				},
																				"nativeSrc": "490:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:18"
																		},
																		"nativeSrc": "480:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:18"
																},
																"nativeSrc": "473:43:18",
																"nodeType": "YulFunctionCall",
																"src": "473:43:18"
															},
															"nativeSrc": "470:63:18",
															"nodeType": "YulIf",
															"src": "470:63:18"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:18",
														"nodeType": "YulTypedName",
														"src": "453:5:18",
														"type": ""
													}
												],
												"src": "417:122:18"
											},
											{
												"body": {
													"nativeSrc": "597:87:18",
													"nodeType": "YulBlock",
													"src": "597:87:18",
													"statements": [
														{
															"nativeSrc": "607:29:18",
															"nodeType": "YulAssignment",
															"src": "607:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:18"
																},
																"nativeSrc": "616:20:18",
																"nodeType": "YulFunctionCall",
																"src": "616:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:18"
																},
																"nativeSrc": "645:33:18",
																"nodeType": "YulFunctionCall",
																"src": "645:33:18"
															},
															"nativeSrc": "645:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:18"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:18",
														"nodeType": "YulTypedName",
														"src": "575:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:18",
														"nodeType": "YulTypedName",
														"src": "583:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:18",
														"nodeType": "YulTypedName",
														"src": "591:5:18",
														"type": ""
													}
												],
												"src": "545:139:18"
											},
											{
												"body": {
													"nativeSrc": "773:391:18",
													"nodeType": "YulBlock",
													"src": "773:391:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "819:83:18",
																"nodeType": "YulBlock",
																"src": "819:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "821:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "821:77:18"
																			},
																			"nativeSrc": "821:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "821:79:18"
																		},
																		"nativeSrc": "821:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "821:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "794:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "794:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "803:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "803:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "790:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "790:3:18"
																		},
																		"nativeSrc": "790:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "790:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "815:2:18",
																		"nodeType": "YulLiteral",
																		"src": "815:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "786:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "786:3:18"
																},
																"nativeSrc": "786:32:18",
																"nodeType": "YulFunctionCall",
																"src": "786:32:18"
															},
															"nativeSrc": "783:119:18",
															"nodeType": "YulIf",
															"src": "783:119:18"
														},
														{
															"nativeSrc": "912:117:18",
															"nodeType": "YulBlock",
															"src": "912:117:18",
															"statements": [
																{
																	"nativeSrc": "927:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "927:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "941:1:18",
																		"nodeType": "YulLiteral",
																		"src": "941:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "931:6:18",
																			"nodeType": "YulTypedName",
																			"src": "931:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "956:63:18",
																	"nodeType": "YulAssignment",
																	"src": "956:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "991:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "991:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1002:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "1002:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "987:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:18"
																				},
																				"nativeSrc": "987:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "987:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1011:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1011:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "966:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "966:20:18"
																		},
																		"nativeSrc": "966:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "966:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "956:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "956:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1039:118:18",
															"nodeType": "YulBlock",
															"src": "1039:118:18",
															"statements": [
																{
																	"nativeSrc": "1054:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1054:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1068:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1068:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1058:6:18",
																			"nodeType": "YulTypedName",
																			"src": "1058:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1084:63:18",
																	"nodeType": "YulAssignment",
																	"src": "1084:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1119:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "1119:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1130:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "1130:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1115:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "1115:3:18"
																				},
																				"nativeSrc": "1115:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1115:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1139:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1139:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1094:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "1094:20:18"
																		},
																		"nativeSrc": "1094:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1084:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "1084:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "690:474:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "735:9:18",
														"nodeType": "YulTypedName",
														"src": "735:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "746:7:18",
														"nodeType": "YulTypedName",
														"src": "746:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "758:6:18",
														"nodeType": "YulTypedName",
														"src": "758:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "766:6:18",
														"nodeType": "YulTypedName",
														"src": "766:6:18",
														"type": ""
													}
												],
												"src": "690:474:18"
											},
											{
												"body": {
													"nativeSrc": "1215:81:18",
													"nodeType": "YulBlock",
													"src": "1215:81:18",
													"statements": [
														{
															"nativeSrc": "1225:65:18",
															"nodeType": "YulAssignment",
															"src": "1225:65:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1240:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1240:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1247:42:18",
																		"nodeType": "YulLiteral",
																		"src": "1247:42:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1236:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1236:3:18"
																},
																"nativeSrc": "1236:54:18",
																"nodeType": "YulFunctionCall",
																"src": "1236:54:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1225:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "1225:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1170:126:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1197:5:18",
														"nodeType": "YulTypedName",
														"src": "1197:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1207:7:18",
														"nodeType": "YulTypedName",
														"src": "1207:7:18",
														"type": ""
													}
												],
												"src": "1170:126:18"
											},
											{
												"body": {
													"nativeSrc": "1334:28:18",
													"nodeType": "YulBlock",
													"src": "1334:28:18",
													"statements": [
														{
															"nativeSrc": "1344:12:18",
															"nodeType": "YulAssignment",
															"src": "1344:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "1351:5:18",
																"nodeType": "YulIdentifier",
																"src": "1351:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1344:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1344:3:18"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1302:60:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1320:5:18",
														"nodeType": "YulTypedName",
														"src": "1320:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1330:3:18",
														"nodeType": "YulTypedName",
														"src": "1330:3:18",
														"type": ""
													}
												],
												"src": "1302:60:18"
											},
											{
												"body": {
													"nativeSrc": "1428:82:18",
													"nodeType": "YulBlock",
													"src": "1428:82:18",
													"statements": [
														{
															"nativeSrc": "1438:66:18",
															"nodeType": "YulAssignment",
															"src": "1438:66:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1496:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "1496:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1478:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "1478:17:18"
																				},
																				"nativeSrc": "1478:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1478:24:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1469:8:18",
																			"nodeType": "YulIdentifier",
																			"src": "1469:8:18"
																		},
																		"nativeSrc": "1469:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1469:34:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1451:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "1451:17:18"
																},
																"nativeSrc": "1451:53:18",
																"nodeType": "YulFunctionCall",
																"src": "1451:53:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1438:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "1438:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1368:142:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1408:5:18",
														"nodeType": "YulTypedName",
														"src": "1408:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1418:9:18",
														"nodeType": "YulTypedName",
														"src": "1418:9:18",
														"type": ""
													}
												],
												"src": "1368:142:18"
											},
											{
												"body": {
													"nativeSrc": "1576:66:18",
													"nodeType": "YulBlock",
													"src": "1576:66:18",
													"statements": [
														{
															"nativeSrc": "1586:50:18",
															"nodeType": "YulAssignment",
															"src": "1586:50:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1630:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1630:5:18"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1599:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "1599:30:18"
																},
																"nativeSrc": "1599:37:18",
																"nodeType": "YulFunctionCall",
																"src": "1599:37:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1586:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "1586:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1516:126:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1556:5:18",
														"nodeType": "YulTypedName",
														"src": "1556:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1566:9:18",
														"nodeType": "YulTypedName",
														"src": "1566:9:18",
														"type": ""
													}
												],
												"src": "1516:126:18"
											},
											{
												"body": {
													"nativeSrc": "1741:66:18",
													"nodeType": "YulBlock",
													"src": "1741:66:18",
													"statements": [
														{
															"nativeSrc": "1751:50:18",
															"nodeType": "YulAssignment",
															"src": "1751:50:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1795:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1795:5:18"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1764:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "1764:30:18"
																},
																"nativeSrc": "1764:37:18",
																"nodeType": "YulFunctionCall",
																"src": "1764:37:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1751:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "1751:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_VRFCoordinatorV2Interface_$217_to_t_address",
												"nativeSrc": "1648:159:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1721:5:18",
														"nodeType": "YulTypedName",
														"src": "1721:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1731:9:18",
														"nodeType": "YulTypedName",
														"src": "1731:9:18",
														"type": ""
													}
												],
												"src": "1648:159:18"
											},
											{
												"body": {
													"nativeSrc": "1911:99:18",
													"nodeType": "YulBlock",
													"src": "1911:99:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1928:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1928:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1997:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1997:5:18"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_VRFCoordinatorV2Interface_$217_to_t_address",
																			"nativeSrc": "1933:63:18",
																			"nodeType": "YulIdentifier",
																			"src": "1933:63:18"
																		},
																		"nativeSrc": "1933:70:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1933:70:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1921:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1921:6:18"
																},
																"nativeSrc": "1921:83:18",
																"nodeType": "YulFunctionCall",
																"src": "1921:83:18"
															},
															"nativeSrc": "1921:83:18",
															"nodeType": "YulExpressionStatement",
															"src": "1921:83:18"
														}
													]
												},
												"name": "abi_encode_t_contract$_VRFCoordinatorV2Interface_$217_to_t_address_fromStack",
												"nativeSrc": "1813:197:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1899:5:18",
														"nodeType": "YulTypedName",
														"src": "1899:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1906:3:18",
														"nodeType": "YulTypedName",
														"src": "1906:3:18",
														"type": ""
													}
												],
												"src": "1813:197:18"
											},
											{
												"body": {
													"nativeSrc": "2147:157:18",
													"nodeType": "YulBlock",
													"src": "2147:157:18",
													"statements": [
														{
															"nativeSrc": "2157:26:18",
															"nodeType": "YulAssignment",
															"src": "2157:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2169:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2169:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2180:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2180:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2165:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2165:3:18"
																},
																"nativeSrc": "2165:18:18",
																"nodeType": "YulFunctionCall",
																"src": "2165:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2157:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2157:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2270:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2270:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2283:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2283:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2294:1:18",
																				"nodeType": "YulLiteral",
																				"src": "2294:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2279:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2279:3:18"
																		},
																		"nativeSrc": "2279:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2279:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_VRFCoordinatorV2Interface_$217_to_t_address_fromStack",
																	"nativeSrc": "2193:76:18",
																	"nodeType": "YulIdentifier",
																	"src": "2193:76:18"
																},
																"nativeSrc": "2193:104:18",
																"nodeType": "YulFunctionCall",
																"src": "2193:104:18"
															},
															"nativeSrc": "2193:104:18",
															"nodeType": "YulExpressionStatement",
															"src": "2193:104:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_VRFCoordinatorV2Interface_$217__to_t_address__fromStack_reversed",
												"nativeSrc": "2016:288:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2119:9:18",
														"nodeType": "YulTypedName",
														"src": "2119:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2131:6:18",
														"nodeType": "YulTypedName",
														"src": "2131:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2142:4:18",
														"nodeType": "YulTypedName",
														"src": "2142:4:18",
														"type": ""
													}
												],
												"src": "2016:288:18"
											},
											{
												"body": {
													"nativeSrc": "2396:66:18",
													"nodeType": "YulBlock",
													"src": "2396:66:18",
													"statements": [
														{
															"nativeSrc": "2406:50:18",
															"nodeType": "YulAssignment",
															"src": "2406:50:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2450:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2450:5:18"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2419:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "2419:30:18"
																},
																"nativeSrc": "2419:37:18",
																"nodeType": "YulFunctionCall",
																"src": "2419:37:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2406:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "2406:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_LinkTokenInterface_$312_to_t_address",
												"nativeSrc": "2310:152:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2376:5:18",
														"nodeType": "YulTypedName",
														"src": "2376:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2386:9:18",
														"nodeType": "YulTypedName",
														"src": "2386:9:18",
														"type": ""
													}
												],
												"src": "2310:152:18"
											},
											{
												"body": {
													"nativeSrc": "2559:92:18",
													"nodeType": "YulBlock",
													"src": "2559:92:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2576:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2576:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2638:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2638:5:18"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_LinkTokenInterface_$312_to_t_address",
																			"nativeSrc": "2581:56:18",
																			"nodeType": "YulIdentifier",
																			"src": "2581:56:18"
																		},
																		"nativeSrc": "2581:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2581:63:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2569:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2569:6:18"
																},
																"nativeSrc": "2569:76:18",
																"nodeType": "YulFunctionCall",
																"src": "2569:76:18"
															},
															"nativeSrc": "2569:76:18",
															"nodeType": "YulExpressionStatement",
															"src": "2569:76:18"
														}
													]
												},
												"name": "abi_encode_t_contract$_LinkTokenInterface_$312_to_t_address_fromStack",
												"nativeSrc": "2468:183:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2547:5:18",
														"nodeType": "YulTypedName",
														"src": "2547:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2554:3:18",
														"nodeType": "YulTypedName",
														"src": "2554:3:18",
														"type": ""
													}
												],
												"src": "2468:183:18"
											},
											{
												"body": {
													"nativeSrc": "2781:150:18",
													"nodeType": "YulBlock",
													"src": "2781:150:18",
													"statements": [
														{
															"nativeSrc": "2791:26:18",
															"nodeType": "YulAssignment",
															"src": "2791:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2803:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2803:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2814:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2814:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2799:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2799:3:18"
																},
																"nativeSrc": "2799:18:18",
																"nodeType": "YulFunctionCall",
																"src": "2799:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2791:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2791:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2897:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2897:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2910:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2910:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2921:1:18",
																				"nodeType": "YulLiteral",
																				"src": "2921:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2906:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2906:3:18"
																		},
																		"nativeSrc": "2906:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2906:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_LinkTokenInterface_$312_to_t_address_fromStack",
																	"nativeSrc": "2827:69:18",
																	"nodeType": "YulIdentifier",
																	"src": "2827:69:18"
																},
																"nativeSrc": "2827:97:18",
																"nodeType": "YulFunctionCall",
																"src": "2827:97:18"
															},
															"nativeSrc": "2827:97:18",
															"nodeType": "YulExpressionStatement",
															"src": "2827:97:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_LinkTokenInterface_$312__to_t_address__fromStack_reversed",
												"nativeSrc": "2657:274:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2753:9:18",
														"nodeType": "YulTypedName",
														"src": "2753:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2765:6:18",
														"nodeType": "YulTypedName",
														"src": "2765:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2776:4:18",
														"nodeType": "YulTypedName",
														"src": "2776:4:18",
														"type": ""
													}
												],
												"src": "2657:274:18"
											},
											{
												"body": {
													"nativeSrc": "3026:28:18",
													"nodeType": "YulBlock",
													"src": "3026:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3043:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3043:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3046:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3046:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3036:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3036:6:18"
																},
																"nativeSrc": "3036:12:18",
																"nodeType": "YulFunctionCall",
																"src": "3036:12:18"
															},
															"nativeSrc": "3036:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "3036:12:18"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "2937:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "2937:117:18"
											},
											{
												"body": {
													"nativeSrc": "3108:54:18",
													"nodeType": "YulBlock",
													"src": "3108:54:18",
													"statements": [
														{
															"nativeSrc": "3118:38:18",
															"nodeType": "YulAssignment",
															"src": "3118:38:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3136:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "3136:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3143:2:18",
																				"nodeType": "YulLiteral",
																				"src": "3143:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3132:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3132:3:18"
																		},
																		"nativeSrc": "3132:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3132:14:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3152:2:18",
																				"nodeType": "YulLiteral",
																				"src": "3152:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3148:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3148:3:18"
																		},
																		"nativeSrc": "3148:7:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3148:7:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3128:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3128:3:18"
																},
																"nativeSrc": "3128:28:18",
																"nodeType": "YulFunctionCall",
																"src": "3128:28:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3118:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3118:6:18"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "3060:102:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3091:5:18",
														"nodeType": "YulTypedName",
														"src": "3091:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3101:6:18",
														"nodeType": "YulTypedName",
														"src": "3101:6:18",
														"type": ""
													}
												],
												"src": "3060:102:18"
											},
											{
												"body": {
													"nativeSrc": "3196:152:18",
													"nodeType": "YulBlock",
													"src": "3196:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3213:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3213:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3216:77:18",
																		"nodeType": "YulLiteral",
																		"src": "3216:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3206:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3206:6:18"
																},
																"nativeSrc": "3206:88:18",
																"nodeType": "YulFunctionCall",
																"src": "3206:88:18"
															},
															"nativeSrc": "3206:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "3206:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3310:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3310:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3313:4:18",
																		"nodeType": "YulLiteral",
																		"src": "3313:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3303:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3303:6:18"
																},
																"nativeSrc": "3303:15:18",
																"nodeType": "YulFunctionCall",
																"src": "3303:15:18"
															},
															"nativeSrc": "3303:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "3303:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3334:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3334:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3337:4:18",
																		"nodeType": "YulLiteral",
																		"src": "3337:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3327:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:18"
																},
																"nativeSrc": "3327:15:18",
																"nodeType": "YulFunctionCall",
																"src": "3327:15:18"
															},
															"nativeSrc": "3327:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "3327:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3168:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "3168:180:18"
											},
											{
												"body": {
													"nativeSrc": "3397:238:18",
													"nodeType": "YulBlock",
													"src": "3397:238:18",
													"statements": [
														{
															"nativeSrc": "3407:58:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3407:58:18",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3429:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3429:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "3459:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "3459:4:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3437:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "3437:21:18"
																		},
																		"nativeSrc": "3437:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3437:27:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3425:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3425:3:18"
																},
																"nativeSrc": "3425:40:18",
																"nodeType": "YulFunctionCall",
																"src": "3425:40:18"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "3411:10:18",
																	"nodeType": "YulTypedName",
																	"src": "3411:10:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3576:22:18",
																"nodeType": "YulBlock",
																"src": "3576:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3578:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "3578:16:18"
																			},
																			"nativeSrc": "3578:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3578:18:18"
																		},
																		"nativeSrc": "3578:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3578:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3519:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "3519:10:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3531:18:18",
																				"nodeType": "YulLiteral",
																				"src": "3531:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3516:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "3516:2:18"
																		},
																		"nativeSrc": "3516:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3516:34:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3555:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "3555:10:18"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "3567:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3567:6:18"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3552:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "3552:2:18"
																		},
																		"nativeSrc": "3552:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3552:22:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3513:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "3513:2:18"
																},
																"nativeSrc": "3513:62:18",
																"nodeType": "YulFunctionCall",
																"src": "3513:62:18"
															},
															"nativeSrc": "3510:88:18",
															"nodeType": "YulIf",
															"src": "3510:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3614:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3614:2:18",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "3618:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "3618:10:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3607:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:18"
																},
																"nativeSrc": "3607:22:18",
																"nodeType": "YulFunctionCall",
																"src": "3607:22:18"
															},
															"nativeSrc": "3607:22:18",
															"nodeType": "YulExpressionStatement",
															"src": "3607:22:18"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "3354:281:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3383:6:18",
														"nodeType": "YulTypedName",
														"src": "3383:6:18",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "3391:4:18",
														"nodeType": "YulTypedName",
														"src": "3391:4:18",
														"type": ""
													}
												],
												"src": "3354:281:18"
											},
											{
												"body": {
													"nativeSrc": "3682:88:18",
													"nodeType": "YulBlock",
													"src": "3682:88:18",
													"statements": [
														{
															"nativeSrc": "3692:30:18",
															"nodeType": "YulAssignment",
															"src": "3692:30:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "3702:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "3702:18:18"
																},
																"nativeSrc": "3702:20:18",
																"nodeType": "YulFunctionCall",
																"src": "3702:20:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3692:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3692:6:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3751:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3751:6:18"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "3759:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "3759:4:18"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "3731:19:18",
																	"nodeType": "YulIdentifier",
																	"src": "3731:19:18"
																},
																"nativeSrc": "3731:33:18",
																"nodeType": "YulFunctionCall",
																"src": "3731:33:18"
															},
															"nativeSrc": "3731:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "3731:33:18"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "3641:129:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "3666:4:18",
														"nodeType": "YulTypedName",
														"src": "3666:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "3675:6:18",
														"nodeType": "YulTypedName",
														"src": "3675:6:18",
														"type": ""
													}
												],
												"src": "3641:129:18"
											},
											{
												"body": {
													"nativeSrc": "3858:229:18",
													"nodeType": "YulBlock",
													"src": "3858:229:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3963:22:18",
																"nodeType": "YulBlock",
																"src": "3963:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3965:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "3965:16:18"
																			},
																			"nativeSrc": "3965:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3965:18:18"
																		},
																		"nativeSrc": "3965:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3965:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3935:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3935:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3943:18:18",
																		"nodeType": "YulLiteral",
																		"src": "3943:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3932:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "3932:2:18"
																},
																"nativeSrc": "3932:30:18",
																"nodeType": "YulFunctionCall",
																"src": "3932:30:18"
															},
															"nativeSrc": "3929:56:18",
															"nodeType": "YulIf",
															"src": "3929:56:18"
														},
														{
															"nativeSrc": "3995:25:18",
															"nodeType": "YulAssignment",
															"src": "3995:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4007:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4007:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4015:4:18",
																		"nodeType": "YulLiteral",
																		"src": "4015:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4003:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4003:3:18"
																},
																"nativeSrc": "4003:17:18",
																"nodeType": "YulFunctionCall",
																"src": "4003:17:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "3995:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "3995:4:18"
																}
															]
														},
														{
															"nativeSrc": "4057:23:18",
															"nodeType": "YulAssignment",
															"src": "4057:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "4069:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "4069:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4075:4:18",
																		"nodeType": "YulLiteral",
																		"src": "4075:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4065:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4065:3:18"
																},
																"nativeSrc": "4065:15:18",
																"nodeType": "YulFunctionCall",
																"src": "4065:15:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4057:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "4057:4:18"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "3776:311:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "3842:6:18",
														"nodeType": "YulTypedName",
														"src": "3842:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "3853:4:18",
														"nodeType": "YulTypedName",
														"src": "3853:4:18",
														"type": ""
													}
												],
												"src": "3776:311:18"
											},
											{
												"body": {
													"nativeSrc": "4182:28:18",
													"nodeType": "YulBlock",
													"src": "4182:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4199:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4199:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4202:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4202:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4192:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4192:6:18"
																},
																"nativeSrc": "4192:12:18",
																"nodeType": "YulFunctionCall",
																"src": "4192:12:18"
															},
															"nativeSrc": "4192:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "4192:12:18"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "4093:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "4093:117:18"
											},
											{
												"body": {
													"nativeSrc": "4335:608:18",
													"nodeType": "YulBlock",
													"src": "4335:608:18",
													"statements": [
														{
															"nativeSrc": "4345:90:18",
															"nodeType": "YulAssignment",
															"src": "4345:90:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4427:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4427:6:18"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "4370:56:18",
																			"nodeType": "YulIdentifier",
																			"src": "4370:56:18"
																		},
																		"nativeSrc": "4370:64:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4370:64:18"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "4354:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "4354:15:18"
																},
																"nativeSrc": "4354:81:18",
																"nodeType": "YulFunctionCall",
																"src": "4354:81:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "4345:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "4345:5:18"
																}
															]
														},
														{
															"nativeSrc": "4444:16:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4444:16:18",
															"value": {
																"name": "array",
																"nativeSrc": "4455:5:18",
																"nodeType": "YulIdentifier",
																"src": "4455:5:18"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "4448:3:18",
																	"nodeType": "YulTypedName",
																	"src": "4448:3:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "4477:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "4477:5:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4484:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4484:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4470:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4470:6:18"
																},
																"nativeSrc": "4470:21:18",
																"nodeType": "YulFunctionCall",
																"src": "4470:21:18"
															},
															"nativeSrc": "4470:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "4470:21:18"
														},
														{
															"nativeSrc": "4500:23:18",
															"nodeType": "YulAssignment",
															"src": "4500:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "4511:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "4511:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4518:4:18",
																		"nodeType": "YulLiteral",
																		"src": "4518:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4507:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4507:3:18"
																},
																"nativeSrc": "4507:16:18",
																"nodeType": "YulFunctionCall",
																"src": "4507:16:18"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "4500:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4500:3:18"
																}
															]
														},
														{
															"nativeSrc": "4533:44:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4533:44:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4551:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4551:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4563:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4563:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4571:4:18",
																				"nodeType": "YulLiteral",
																				"src": "4571:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "4559:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4559:3:18"
																		},
																		"nativeSrc": "4559:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4559:17:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4547:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4547:3:18"
																},
																"nativeSrc": "4547:30:18",
																"nodeType": "YulFunctionCall",
																"src": "4547:30:18"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "4537:6:18",
																	"nodeType": "YulTypedName",
																	"src": "4537:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4605:103:18",
																"nodeType": "YulBlock",
																"src": "4605:103:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "4619:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "4619:77:18"
																			},
																			"nativeSrc": "4619:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4619:79:18"
																		},
																		"nativeSrc": "4619:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4619:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "4592:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4592:6:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4600:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "4600:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4589:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "4589:2:18"
																},
																"nativeSrc": "4589:15:18",
																"nodeType": "YulFunctionCall",
																"src": "4589:15:18"
															},
															"nativeSrc": "4586:122:18",
															"nodeType": "YulIf",
															"src": "4586:122:18"
														},
														{
															"body": {
																"nativeSrc": "4793:144:18",
																"nodeType": "YulBlock",
																"src": "4793:144:18",
																"statements": [
																	{
																		"nativeSrc": "4808:21:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4808:21:18",
																		"value": {
																			"name": "src",
																			"nativeSrc": "4826:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4826:3:18"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "4812:10:18",
																				"nodeType": "YulTypedName",
																				"src": "4812:10:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "4850:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4850:3:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "4876:10:18",
																							"nodeType": "YulIdentifier",
																							"src": "4876:10:18"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "4888:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "4888:3:18"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nativeSrc": "4855:20:18",
																						"nodeType": "YulIdentifier",
																						"src": "4855:20:18"
																					},
																					"nativeSrc": "4855:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "4855:37:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4843:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4843:6:18"
																			},
																			"nativeSrc": "4843:50:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4843:50:18"
																		},
																		"nativeSrc": "4843:50:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4843:50:18"
																	},
																	{
																		"nativeSrc": "4906:21:18",
																		"nodeType": "YulAssignment",
																		"src": "4906:21:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "4917:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4917:3:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4922:4:18",
																					"nodeType": "YulLiteral",
																					"src": "4922:4:18",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4913:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "4913:3:18"
																			},
																			"nativeSrc": "4913:14:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4913:14:18"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "4906:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "4906:3:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4746:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "4746:3:18"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "4751:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4751:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4743:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "4743:2:18"
																},
																"nativeSrc": "4743:15:18",
																"nodeType": "YulFunctionCall",
																"src": "4743:15:18"
															},
															"nativeSrc": "4717:220:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4759:25:18",
																"nodeType": "YulBlock",
																"src": "4759:25:18",
																"statements": [
																	{
																		"nativeSrc": "4761:21:18",
																		"nodeType": "YulAssignment",
																		"src": "4761:21:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "4772:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4772:3:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4777:4:18",
																					"nodeType": "YulLiteral",
																					"src": "4777:4:18",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4768:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "4768:3:18"
																			},
																			"nativeSrc": "4768:14:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4768:14:18"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "4761:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "4761:3:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4721:21:18",
																"nodeType": "YulBlock",
																"src": "4721:21:18",
																"statements": [
																	{
																		"nativeSrc": "4723:17:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4723:17:18",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "4734:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4734:6:18"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "4727:3:18",
																				"nodeType": "YulTypedName",
																				"src": "4727:3:18",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4717:220:18"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "4233:710:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4305:6:18",
														"nodeType": "YulTypedName",
														"src": "4305:6:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4313:6:18",
														"nodeType": "YulTypedName",
														"src": "4313:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4321:3:18",
														"nodeType": "YulTypedName",
														"src": "4321:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "4329:5:18",
														"nodeType": "YulTypedName",
														"src": "4329:5:18",
														"type": ""
													}
												],
												"src": "4233:710:18"
											},
											{
												"body": {
													"nativeSrc": "5043:293:18",
													"nodeType": "YulBlock",
													"src": "5043:293:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "5092:83:18",
																"nodeType": "YulBlock",
																"src": "5092:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "5094:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "5094:77:18"
																			},
																			"nativeSrc": "5094:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5094:79:18"
																		},
																		"nativeSrc": "5094:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5094:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5071:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5071:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5079:4:18",
																						"nodeType": "YulLiteral",
																						"src": "5079:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5067:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5067:3:18"
																				},
																				"nativeSrc": "5067:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5067:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "5086:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "5086:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5063:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5063:3:18"
																		},
																		"nativeSrc": "5063:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5063:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5056:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5056:6:18"
																},
																"nativeSrc": "5056:35:18",
																"nodeType": "YulFunctionCall",
																"src": "5056:35:18"
															},
															"nativeSrc": "5053:122:18",
															"nodeType": "YulIf",
															"src": "5053:122:18"
														},
														{
															"nativeSrc": "5184:34:18",
															"nodeType": "YulVariableDeclaration",
															"src": "5184:34:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5211:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5211:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5198:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "5198:12:18"
																},
																"nativeSrc": "5198:20:18",
																"nodeType": "YulFunctionCall",
																"src": "5198:20:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5188:6:18",
																	"nodeType": "YulTypedName",
																	"src": "5188:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5227:103:18",
															"nodeType": "YulAssignment",
															"src": "5227:103:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5303:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5303:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5311:4:18",
																				"nodeType": "YulLiteral",
																				"src": "5311:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5299:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5299:3:18"
																		},
																		"nativeSrc": "5299:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5299:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5318:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5318:6:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5326:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5326:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "5236:62:18",
																	"nodeType": "YulIdentifier",
																	"src": "5236:62:18"
																},
																"nativeSrc": "5236:94:18",
																"nodeType": "YulFunctionCall",
																"src": "5236:94:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5227:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "5227:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "4966:370:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5021:6:18",
														"nodeType": "YulTypedName",
														"src": "5021:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5029:3:18",
														"nodeType": "YulTypedName",
														"src": "5029:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5037:5:18",
														"nodeType": "YulTypedName",
														"src": "5037:5:18",
														"type": ""
													}
												],
												"src": "4966:370:18"
											},
											{
												"body": {
													"nativeSrc": "5450:576:18",
													"nodeType": "YulBlock",
													"src": "5450:576:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "5496:83:18",
																"nodeType": "YulBlock",
																"src": "5496:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5498:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "5498:77:18"
																			},
																			"nativeSrc": "5498:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5498:79:18"
																		},
																		"nativeSrc": "5498:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5498:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5471:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5471:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5480:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5480:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5467:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5467:3:18"
																		},
																		"nativeSrc": "5467:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5467:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5492:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5492:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5463:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5463:3:18"
																},
																"nativeSrc": "5463:32:18",
																"nodeType": "YulFunctionCall",
																"src": "5463:32:18"
															},
															"nativeSrc": "5460:119:18",
															"nodeType": "YulIf",
															"src": "5460:119:18"
														},
														{
															"nativeSrc": "5589:117:18",
															"nodeType": "YulBlock",
															"src": "5589:117:18",
															"statements": [
																{
																	"nativeSrc": "5604:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5604:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5618:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5618:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5608:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5608:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5633:63:18",
																	"nodeType": "YulAssignment",
																	"src": "5633:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5668:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5668:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5679:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5679:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5664:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5664:3:18"
																				},
																				"nativeSrc": "5664:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5664:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5688:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5688:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5643:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "5643:20:18"
																		},
																		"nativeSrc": "5643:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5643:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5633:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5633:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5716:303:18",
															"nodeType": "YulBlock",
															"src": "5716:303:18",
															"statements": [
																{
																	"nativeSrc": "5731:46:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5731:46:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5762:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5762:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5773:2:18",
																						"nodeType": "YulLiteral",
																						"src": "5773:2:18",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5758:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5758:3:18"
																				},
																				"nativeSrc": "5758:18:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5758:18:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5745:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "5745:12:18"
																		},
																		"nativeSrc": "5745:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5745:32:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5735:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5735:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "5824:83:18",
																		"nodeType": "YulBlock",
																		"src": "5824:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "5826:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "5826:77:18"
																					},
																					"nativeSrc": "5826:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "5826:79:18"
																				},
																				"nativeSrc": "5826:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "5826:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5796:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5796:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:18:18",
																				"nodeType": "YulLiteral",
																				"src": "5804:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5793:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "5793:2:18"
																		},
																		"nativeSrc": "5793:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5793:30:18"
																	},
																	"nativeSrc": "5790:117:18",
																	"nodeType": "YulIf",
																	"src": "5790:117:18"
																},
																{
																	"nativeSrc": "5921:88:18",
																	"nodeType": "YulAssignment",
																	"src": "5921:88:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5981:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5981:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5992:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5992:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5977:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5977:3:18"
																				},
																				"nativeSrc": "5977:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5977:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6001:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "6001:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "5931:45:18",
																			"nodeType": "YulIdentifier",
																			"src": "5931:45:18"
																		},
																		"nativeSrc": "5931:78:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5931:78:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5921:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5921:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "5342:684:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5412:9:18",
														"nodeType": "YulTypedName",
														"src": "5412:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5423:7:18",
														"nodeType": "YulTypedName",
														"src": "5423:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5435:6:18",
														"nodeType": "YulTypedName",
														"src": "5435:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5443:6:18",
														"nodeType": "YulTypedName",
														"src": "5443:6:18",
														"type": ""
													}
												],
												"src": "5342:684:18"
											},
											{
												"body": {
													"nativeSrc": "6106:66:18",
													"nodeType": "YulBlock",
													"src": "6106:66:18",
													"statements": [
														{
															"nativeSrc": "6116:50:18",
															"nodeType": "YulAssignment",
															"src": "6116:50:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6160:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "6160:5:18"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "6129:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "6129:30:18"
																},
																"nativeSrc": "6129:37:18",
																"nodeType": "YulFunctionCall",
																"src": "6129:37:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6116:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "6116:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ERC20_$1022_to_t_address",
												"nativeSrc": "6032:140:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6086:5:18",
														"nodeType": "YulTypedName",
														"src": "6086:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6096:9:18",
														"nodeType": "YulTypedName",
														"src": "6096:9:18",
														"type": ""
													}
												],
												"src": "6032:140:18"
											},
											{
												"body": {
													"nativeSrc": "6257:80:18",
													"nodeType": "YulBlock",
													"src": "6257:80:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6274:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6274:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6324:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "6324:5:18"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ERC20_$1022_to_t_address",
																			"nativeSrc": "6279:44:18",
																			"nodeType": "YulIdentifier",
																			"src": "6279:44:18"
																		},
																		"nativeSrc": "6279:51:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6279:51:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6267:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6267:6:18"
																},
																"nativeSrc": "6267:64:18",
																"nodeType": "YulFunctionCall",
																"src": "6267:64:18"
															},
															"nativeSrc": "6267:64:18",
															"nodeType": "YulExpressionStatement",
															"src": "6267:64:18"
														}
													]
												},
												"name": "abi_encode_t_contract$_ERC20_$1022_to_t_address_fromStack",
												"nativeSrc": "6178:159:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6245:5:18",
														"nodeType": "YulTypedName",
														"src": "6245:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6252:3:18",
														"nodeType": "YulTypedName",
														"src": "6252:3:18",
														"type": ""
													}
												],
												"src": "6178:159:18"
											},
											{
												"body": {
													"nativeSrc": "6455:138:18",
													"nodeType": "YulBlock",
													"src": "6455:138:18",
													"statements": [
														{
															"nativeSrc": "6465:26:18",
															"nodeType": "YulAssignment",
															"src": "6465:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6477:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6477:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6488:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6488:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6473:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6473:3:18"
																},
																"nativeSrc": "6473:18:18",
																"nodeType": "YulFunctionCall",
																"src": "6473:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6465:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6465:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6559:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6559:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6572:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6572:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6583:1:18",
																				"nodeType": "YulLiteral",
																				"src": "6583:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6568:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6568:3:18"
																		},
																		"nativeSrc": "6568:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6568:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ERC20_$1022_to_t_address_fromStack",
																	"nativeSrc": "6501:57:18",
																	"nodeType": "YulIdentifier",
																	"src": "6501:57:18"
																},
																"nativeSrc": "6501:85:18",
																"nodeType": "YulFunctionCall",
																"src": "6501:85:18"
															},
															"nativeSrc": "6501:85:18",
															"nodeType": "YulExpressionStatement",
															"src": "6501:85:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ERC20_$1022__to_t_address__fromStack_reversed",
												"nativeSrc": "6343:250:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6427:9:18",
														"nodeType": "YulTypedName",
														"src": "6427:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6439:6:18",
														"nodeType": "YulTypedName",
														"src": "6439:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6450:4:18",
														"nodeType": "YulTypedName",
														"src": "6450:4:18",
														"type": ""
													}
												],
												"src": "6343:250:18"
											},
											{
												"body": {
													"nativeSrc": "6665:263:18",
													"nodeType": "YulBlock",
													"src": "6665:263:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "6711:83:18",
																"nodeType": "YulBlock",
																"src": "6711:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6713:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "6713:77:18"
																			},
																			"nativeSrc": "6713:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6713:79:18"
																		},
																		"nativeSrc": "6713:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6713:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6686:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "6686:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6695:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6695:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6682:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6682:3:18"
																		},
																		"nativeSrc": "6682:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6682:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6707:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6707:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6678:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6678:3:18"
																},
																"nativeSrc": "6678:32:18",
																"nodeType": "YulFunctionCall",
																"src": "6678:32:18"
															},
															"nativeSrc": "6675:119:18",
															"nodeType": "YulIf",
															"src": "6675:119:18"
														},
														{
															"nativeSrc": "6804:117:18",
															"nodeType": "YulBlock",
															"src": "6804:117:18",
															"statements": [
																{
																	"nativeSrc": "6819:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6819:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6833:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6833:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6823:6:18",
																			"nodeType": "YulTypedName",
																			"src": "6823:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6848:63:18",
																	"nodeType": "YulAssignment",
																	"src": "6848:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6883:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "6883:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6894:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "6894:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6879:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "6879:3:18"
																				},
																				"nativeSrc": "6879:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "6879:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6903:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "6903:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6858:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "6858:20:18"
																		},
																		"nativeSrc": "6858:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6858:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6848:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "6848:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "6599:329:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6635:9:18",
														"nodeType": "YulTypedName",
														"src": "6635:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6646:7:18",
														"nodeType": "YulTypedName",
														"src": "6646:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6658:6:18",
														"nodeType": "YulTypedName",
														"src": "6658:6:18",
														"type": ""
													}
												],
												"src": "6599:329:18"
											},
											{
												"body": {
													"nativeSrc": "6979:51:18",
													"nodeType": "YulBlock",
													"src": "6979:51:18",
													"statements": [
														{
															"nativeSrc": "6989:35:18",
															"nodeType": "YulAssignment",
															"src": "6989:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7018:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "7018:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "7000:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "7000:17:18"
																},
																"nativeSrc": "7000:24:18",
																"nodeType": "YulFunctionCall",
																"src": "7000:24:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6989:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "6989:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "6934:96:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6961:5:18",
														"nodeType": "YulTypedName",
														"src": "6961:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6971:7:18",
														"nodeType": "YulTypedName",
														"src": "6971:7:18",
														"type": ""
													}
												],
												"src": "6934:96:18"
											},
											{
												"body": {
													"nativeSrc": "7101:53:18",
													"nodeType": "YulBlock",
													"src": "7101:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7118:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7118:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7141:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "7141:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7123:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "7123:17:18"
																		},
																		"nativeSrc": "7123:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7123:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7111:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7111:6:18"
																},
																"nativeSrc": "7111:37:18",
																"nodeType": "YulFunctionCall",
																"src": "7111:37:18"
															},
															"nativeSrc": "7111:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "7111:37:18"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7036:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7089:5:18",
														"nodeType": "YulTypedName",
														"src": "7089:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7096:3:18",
														"nodeType": "YulTypedName",
														"src": "7096:3:18",
														"type": ""
													}
												],
												"src": "7036:118:18"
											},
											{
												"body": {
													"nativeSrc": "7258:124:18",
													"nodeType": "YulBlock",
													"src": "7258:124:18",
													"statements": [
														{
															"nativeSrc": "7268:26:18",
															"nodeType": "YulAssignment",
															"src": "7268:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7280:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "7280:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7291:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7291:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7276:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7276:3:18"
																},
																"nativeSrc": "7276:18:18",
																"nodeType": "YulFunctionCall",
																"src": "7276:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7268:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7268:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7348:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7348:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7361:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "7361:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7372:1:18",
																				"nodeType": "YulLiteral",
																				"src": "7372:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7357:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7357:3:18"
																		},
																		"nativeSrc": "7357:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7357:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7304:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "7304:43:18"
																},
																"nativeSrc": "7304:71:18",
																"nodeType": "YulFunctionCall",
																"src": "7304:71:18"
															},
															"nativeSrc": "7304:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "7304:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7160:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7230:9:18",
														"nodeType": "YulTypedName",
														"src": "7230:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7242:6:18",
														"nodeType": "YulTypedName",
														"src": "7242:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7253:4:18",
														"nodeType": "YulTypedName",
														"src": "7253:4:18",
														"type": ""
													}
												],
												"src": "7160:222:18"
											},
											{
												"body": {
													"nativeSrc": "7477:28:18",
													"nodeType": "YulBlock",
													"src": "7477:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7494:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7494:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7497:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7497:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7487:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7487:6:18"
																},
																"nativeSrc": "7487:12:18",
																"nodeType": "YulFunctionCall",
																"src": "7487:12:18"
															},
															"nativeSrc": "7487:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "7487:12:18"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "7388:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "7388:117:18"
											},
											{
												"body": {
													"nativeSrc": "7598:478:18",
													"nodeType": "YulBlock",
													"src": "7598:478:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "7647:83:18",
																"nodeType": "YulBlock",
																"src": "7647:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7649:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "7649:77:18"
																			},
																			"nativeSrc": "7649:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7649:79:18"
																		},
																		"nativeSrc": "7649:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7649:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7626:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "7626:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7634:4:18",
																						"nodeType": "YulLiteral",
																						"src": "7634:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7622:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "7622:3:18"
																				},
																				"nativeSrc": "7622:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "7622:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7641:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7641:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7618:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7618:3:18"
																		},
																		"nativeSrc": "7618:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7618:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7611:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7611:6:18"
																},
																"nativeSrc": "7611:35:18",
																"nodeType": "YulFunctionCall",
																"src": "7611:35:18"
															},
															"nativeSrc": "7608:122:18",
															"nodeType": "YulIf",
															"src": "7608:122:18"
														},
														{
															"nativeSrc": "7739:30:18",
															"nodeType": "YulAssignment",
															"src": "7739:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7762:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7762:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7749:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "7749:12:18"
																},
																"nativeSrc": "7749:20:18",
																"nodeType": "YulFunctionCall",
																"src": "7749:20:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7739:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7739:6:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7812:83:18",
																"nodeType": "YulBlock",
																"src": "7812:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "7814:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "7814:77:18"
																			},
																			"nativeSrc": "7814:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7814:79:18"
																		},
																		"nativeSrc": "7814:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7814:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7784:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7784:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7792:18:18",
																		"nodeType": "YulLiteral",
																		"src": "7792:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7781:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "7781:2:18"
																},
																"nativeSrc": "7781:30:18",
																"nodeType": "YulFunctionCall",
																"src": "7781:30:18"
															},
															"nativeSrc": "7778:117:18",
															"nodeType": "YulIf",
															"src": "7778:117:18"
														},
														{
															"nativeSrc": "7904:29:18",
															"nodeType": "YulAssignment",
															"src": "7904:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7920:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7920:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7928:4:18",
																		"nodeType": "YulLiteral",
																		"src": "7928:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7916:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7916:3:18"
																},
																"nativeSrc": "7916:17:18",
																"nodeType": "YulFunctionCall",
																"src": "7916:17:18"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "7904:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "7904:8:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7987:83:18",
																"nodeType": "YulBlock",
																"src": "7987:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "7989:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "7989:77:18"
																			},
																			"nativeSrc": "7989:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7989:79:18"
																		},
																		"nativeSrc": "7989:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7989:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "7952:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "7952:8:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "7966:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "7966:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7974:4:18",
																						"nodeType": "YulLiteral",
																						"src": "7974:4:18",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7962:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "7962:3:18"
																				},
																				"nativeSrc": "7962:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "7962:17:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7948:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7948:3:18"
																		},
																		"nativeSrc": "7948:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7948:32:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7982:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7982:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7945:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "7945:2:18"
																},
																"nativeSrc": "7945:41:18",
																"nodeType": "YulFunctionCall",
																"src": "7945:41:18"
															},
															"nativeSrc": "7942:128:18",
															"nodeType": "YulIf",
															"src": "7942:128:18"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nativeSrc": "7524:552:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7565:6:18",
														"nodeType": "YulTypedName",
														"src": "7565:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7573:3:18",
														"nodeType": "YulTypedName",
														"src": "7573:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "7581:8:18",
														"nodeType": "YulTypedName",
														"src": "7581:8:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7591:6:18",
														"nodeType": "YulTypedName",
														"src": "7591:6:18",
														"type": ""
													}
												],
												"src": "7524:552:18"
											},
											{
												"body": {
													"nativeSrc": "8167:442:18",
													"nodeType": "YulBlock",
													"src": "8167:442:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "8213:83:18",
																"nodeType": "YulBlock",
																"src": "8213:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8215:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "8215:77:18"
																			},
																			"nativeSrc": "8215:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8215:79:18"
																		},
																		"nativeSrc": "8215:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8215:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8188:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "8188:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8197:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8197:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8184:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8184:3:18"
																		},
																		"nativeSrc": "8184:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8184:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8209:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8209:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8180:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8180:3:18"
																},
																"nativeSrc": "8180:32:18",
																"nodeType": "YulFunctionCall",
																"src": "8180:32:18"
															},
															"nativeSrc": "8177:119:18",
															"nodeType": "YulIf",
															"src": "8177:119:18"
														},
														{
															"nativeSrc": "8306:296:18",
															"nodeType": "YulBlock",
															"src": "8306:296:18",
															"statements": [
																{
																	"nativeSrc": "8321:45:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8321:45:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8352:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "8352:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8363:1:18",
																						"nodeType": "YulLiteral",
																						"src": "8363:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8348:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8348:3:18"
																				},
																				"nativeSrc": "8348:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8348:17:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8335:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "8335:12:18"
																		},
																		"nativeSrc": "8335:31:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8335:31:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8325:6:18",
																			"nodeType": "YulTypedName",
																			"src": "8325:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8413:83:18",
																		"nodeType": "YulBlock",
																		"src": "8413:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8415:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "8415:77:18"
																					},
																					"nativeSrc": "8415:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "8415:79:18"
																				},
																				"nativeSrc": "8415:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "8415:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8385:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8385:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8393:18:18",
																				"nodeType": "YulLiteral",
																				"src": "8393:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8382:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "8382:2:18"
																		},
																		"nativeSrc": "8382:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8382:30:18"
																	},
																	"nativeSrc": "8379:117:18",
																	"nodeType": "YulIf",
																	"src": "8379:117:18"
																},
																{
																	"nativeSrc": "8510:82:18",
																	"nodeType": "YulAssignment",
																	"src": "8510:82:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8564:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "8564:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8575:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "8575:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8560:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8560:3:18"
																				},
																				"nativeSrc": "8560:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8560:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8584:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "8584:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "8528:31:18",
																			"nodeType": "YulIdentifier",
																			"src": "8528:31:18"
																		},
																		"nativeSrc": "8528:64:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8528:64:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8510:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "8510:6:18"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "8518:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "8518:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptr",
												"nativeSrc": "8082:527:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8129:9:18",
														"nodeType": "YulTypedName",
														"src": "8129:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8140:7:18",
														"nodeType": "YulTypedName",
														"src": "8140:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8152:6:18",
														"nodeType": "YulTypedName",
														"src": "8152:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8160:6:18",
														"nodeType": "YulTypedName",
														"src": "8160:6:18",
														"type": ""
													}
												],
												"src": "8082:527:18"
											},
											{
												"body": {
													"nativeSrc": "8657:48:18",
													"nodeType": "YulBlock",
													"src": "8657:48:18",
													"statements": [
														{
															"nativeSrc": "8667:32:18",
															"nodeType": "YulAssignment",
															"src": "8667:32:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8692:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "8692:5:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "8685:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "8685:6:18"
																		},
																		"nativeSrc": "8685:13:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8685:13:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8678:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8678:6:18"
																},
																"nativeSrc": "8678:21:18",
																"nodeType": "YulFunctionCall",
																"src": "8678:21:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8667:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "8667:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "8615:90:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8639:5:18",
														"nodeType": "YulTypedName",
														"src": "8639:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8649:7:18",
														"nodeType": "YulTypedName",
														"src": "8649:7:18",
														"type": ""
													}
												],
												"src": "8615:90:18"
											},
											{
												"body": {
													"nativeSrc": "8770:50:18",
													"nodeType": "YulBlock",
													"src": "8770:50:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8787:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8787:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8807:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "8807:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "8792:14:18",
																			"nodeType": "YulIdentifier",
																			"src": "8792:14:18"
																		},
																		"nativeSrc": "8792:21:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8792:21:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8780:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8780:6:18"
																},
																"nativeSrc": "8780:34:18",
																"nodeType": "YulFunctionCall",
																"src": "8780:34:18"
															},
															"nativeSrc": "8780:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "8780:34:18"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "8711:109:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8758:5:18",
														"nodeType": "YulTypedName",
														"src": "8758:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8765:3:18",
														"nodeType": "YulTypedName",
														"src": "8765:3:18",
														"type": ""
													}
												],
												"src": "8711:109:18"
											},
											{
												"body": {
													"nativeSrc": "8884:40:18",
													"nodeType": "YulBlock",
													"src": "8884:40:18",
													"statements": [
														{
															"nativeSrc": "8895:22:18",
															"nodeType": "YulAssignment",
															"src": "8895:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8911:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "8911:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8905:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "8905:5:18"
																},
																"nativeSrc": "8905:12:18",
																"nodeType": "YulFunctionCall",
																"src": "8905:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8895:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8895:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "8826:98:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8867:5:18",
														"nodeType": "YulTypedName",
														"src": "8867:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8877:6:18",
														"nodeType": "YulTypedName",
														"src": "8877:6:18",
														"type": ""
													}
												],
												"src": "8826:98:18"
											},
											{
												"body": {
													"nativeSrc": "9025:73:18",
													"nodeType": "YulBlock",
													"src": "9025:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9042:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9042:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9047:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9047:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9035:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9035:6:18"
																},
																"nativeSrc": "9035:19:18",
																"nodeType": "YulFunctionCall",
																"src": "9035:19:18"
															},
															"nativeSrc": "9035:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "9035:19:18"
														},
														{
															"nativeSrc": "9063:29:18",
															"nodeType": "YulAssignment",
															"src": "9063:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9082:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9082:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9087:4:18",
																		"nodeType": "YulLiteral",
																		"src": "9087:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9078:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9078:3:18"
																},
																"nativeSrc": "9078:14:18",
																"nodeType": "YulFunctionCall",
																"src": "9078:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9063:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "9063:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "8930:168:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8997:3:18",
														"nodeType": "YulTypedName",
														"src": "8997:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9002:6:18",
														"nodeType": "YulTypedName",
														"src": "9002:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9013:11:18",
														"nodeType": "YulTypedName",
														"src": "9013:11:18",
														"type": ""
													}
												],
												"src": "8930:168:18"
											},
											{
												"body": {
													"nativeSrc": "9166:184:18",
													"nodeType": "YulBlock",
													"src": "9166:184:18",
													"statements": [
														{
															"nativeSrc": "9176:10:18",
															"nodeType": "YulVariableDeclaration",
															"src": "9176:10:18",
															"value": {
																"kind": "number",
																"nativeSrc": "9185:1:18",
																"nodeType": "YulLiteral",
																"src": "9185:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "9180:1:18",
																	"nodeType": "YulTypedName",
																	"src": "9180:1:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9245:63:18",
																"nodeType": "YulBlock",
																"src": "9245:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "9270:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "9270:3:18"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "9275:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "9275:1:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9266:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "9266:3:18"
																					},
																					"nativeSrc": "9266:11:18",
																					"nodeType": "YulFunctionCall",
																					"src": "9266:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "9289:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "9289:3:18"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "9294:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "9294:1:18"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9285:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "9285:3:18"
																							},
																							"nativeSrc": "9285:11:18",
																							"nodeType": "YulFunctionCall",
																							"src": "9285:11:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "9279:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "9279:5:18"
																					},
																					"nativeSrc": "9279:18:18",
																					"nodeType": "YulFunctionCall",
																					"src": "9279:18:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9259:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9259:6:18"
																			},
																			"nativeSrc": "9259:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9259:39:18"
																		},
																		"nativeSrc": "9259:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9259:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "9206:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "9206:1:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9209:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9209:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "9203:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "9203:2:18"
																},
																"nativeSrc": "9203:13:18",
																"nodeType": "YulFunctionCall",
																"src": "9203:13:18"
															},
															"nativeSrc": "9195:113:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9217:19:18",
																"nodeType": "YulBlock",
																"src": "9217:19:18",
																"statements": [
																	{
																		"nativeSrc": "9219:15:18",
																		"nodeType": "YulAssignment",
																		"src": "9219:15:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "9228:1:18",
																					"nodeType": "YulIdentifier",
																					"src": "9228:1:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9231:2:18",
																					"nodeType": "YulLiteral",
																					"src": "9231:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9224:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "9224:3:18"
																			},
																			"nativeSrc": "9224:10:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9224:10:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "9219:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "9219:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "9199:3:18",
																"nodeType": "YulBlock",
																"src": "9199:3:18",
																"statements": []
															},
															"src": "9195:113:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "9328:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "9328:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9333:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9333:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9324:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9324:3:18"
																		},
																		"nativeSrc": "9324:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9324:16:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9342:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9342:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9317:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9317:6:18"
																},
																"nativeSrc": "9317:27:18",
																"nodeType": "YulFunctionCall",
																"src": "9317:27:18"
															},
															"nativeSrc": "9317:27:18",
															"nodeType": "YulExpressionStatement",
															"src": "9317:27:18"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "9104:246:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9148:3:18",
														"nodeType": "YulTypedName",
														"src": "9148:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "9153:3:18",
														"nodeType": "YulTypedName",
														"src": "9153:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9158:6:18",
														"nodeType": "YulTypedName",
														"src": "9158:6:18",
														"type": ""
													}
												],
												"src": "9104:246:18"
											},
											{
												"body": {
													"nativeSrc": "9446:283:18",
													"nodeType": "YulBlock",
													"src": "9446:283:18",
													"statements": [
														{
															"nativeSrc": "9456:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "9456:52:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9502:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "9502:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "9470:31:18",
																	"nodeType": "YulIdentifier",
																	"src": "9470:31:18"
																},
																"nativeSrc": "9470:38:18",
																"nodeType": "YulFunctionCall",
																"src": "9470:38:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9460:6:18",
																	"nodeType": "YulTypedName",
																	"src": "9460:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9517:77:18",
															"nodeType": "YulAssignment",
															"src": "9517:77:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9582:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9582:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9587:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9587:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "9524:57:18",
																	"nodeType": "YulIdentifier",
																	"src": "9524:57:18"
																},
																"nativeSrc": "9524:70:18",
																"nodeType": "YulFunctionCall",
																"src": "9524:70:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9517:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9517:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9642:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "9642:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9649:4:18",
																				"nodeType": "YulLiteral",
																				"src": "9649:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9638:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9638:3:18"
																		},
																		"nativeSrc": "9638:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9638:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9656:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9656:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9661:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9661:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "9603:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "9603:34:18"
																},
																"nativeSrc": "9603:65:18",
																"nodeType": "YulFunctionCall",
																"src": "9603:65:18"
															},
															"nativeSrc": "9603:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "9603:65:18"
														},
														{
															"nativeSrc": "9677:46:18",
															"nodeType": "YulAssignment",
															"src": "9677:46:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9688:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9688:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9715:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9715:6:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "9693:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "9693:21:18"
																		},
																		"nativeSrc": "9693:29:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9693:29:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9684:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9684:3:18"
																},
																"nativeSrc": "9684:39:18",
																"nodeType": "YulFunctionCall",
																"src": "9684:39:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9677:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9677:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "9356:373:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9427:5:18",
														"nodeType": "YulTypedName",
														"src": "9427:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9434:3:18",
														"nodeType": "YulTypedName",
														"src": "9434:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9442:3:18",
														"nodeType": "YulTypedName",
														"src": "9442:3:18",
														"type": ""
													}
												],
												"src": "9356:373:18"
											},
											{
												"body": {
													"nativeSrc": "9873:269:18",
													"nodeType": "YulBlock",
													"src": "9873:269:18",
													"statements": [
														{
															"nativeSrc": "9883:26:18",
															"nodeType": "YulAssignment",
															"src": "9883:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9895:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "9895:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9906:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9906:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9891:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9891:3:18"
																},
																"nativeSrc": "9891:18:18",
																"nodeType": "YulFunctionCall",
																"src": "9891:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9883:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "9883:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9957:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9957:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9970:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9970:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9981:1:18",
																				"nodeType": "YulLiteral",
																				"src": "9981:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9966:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9966:3:18"
																		},
																		"nativeSrc": "9966:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9966:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "9919:37:18",
																	"nodeType": "YulIdentifier",
																	"src": "9919:37:18"
																},
																"nativeSrc": "9919:65:18",
																"nodeType": "YulFunctionCall",
																"src": "9919:65:18"
															},
															"nativeSrc": "9919:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "9919:65:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10005:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10005:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10016:2:18",
																				"nodeType": "YulLiteral",
																				"src": "10016:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10001:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10001:3:18"
																		},
																		"nativeSrc": "10001:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10001:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10025:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "10025:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10031:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10031:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10021:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10021:3:18"
																		},
																		"nativeSrc": "10021:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10021:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9994:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9994:6:18"
																},
																"nativeSrc": "9994:48:18",
																"nodeType": "YulFunctionCall",
																"src": "9994:48:18"
															},
															"nativeSrc": "9994:48:18",
															"nodeType": "YulExpressionStatement",
															"src": "9994:48:18"
														},
														{
															"nativeSrc": "10051:84:18",
															"nodeType": "YulAssignment",
															"src": "10051:84:18",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10121:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10121:6:18"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "10130:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "10130:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "10059:61:18",
																	"nodeType": "YulIdentifier",
																	"src": "10059:61:18"
																},
																"nativeSrc": "10059:76:18",
																"nodeType": "YulFunctionCall",
																"src": "10059:76:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10051:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "10051:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "9735:407:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9837:9:18",
														"nodeType": "YulTypedName",
														"src": "9837:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9849:6:18",
														"nodeType": "YulTypedName",
														"src": "9849:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9857:6:18",
														"nodeType": "YulTypedName",
														"src": "9857:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9868:4:18",
														"nodeType": "YulTypedName",
														"src": "9868:4:18",
														"type": ""
													}
												],
												"src": "9735:407:18"
											},
											{
												"body": {
													"nativeSrc": "10235:66:18",
													"nodeType": "YulBlock",
													"src": "10235:66:18",
													"statements": [
														{
															"nativeSrc": "10245:50:18",
															"nodeType": "YulAssignment",
															"src": "10245:50:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10289:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "10289:5:18"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "10258:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "10258:30:18"
																},
																"nativeSrc": "10258:37:18",
																"nodeType": "YulFunctionCall",
																"src": "10258:37:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10245:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "10245:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IUniswapV2Router02_$2123_to_t_address",
												"nativeSrc": "10148:153:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10215:5:18",
														"nodeType": "YulTypedName",
														"src": "10215:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "10225:9:18",
														"nodeType": "YulTypedName",
														"src": "10225:9:18",
														"type": ""
													}
												],
												"src": "10148:153:18"
											},
											{
												"body": {
													"nativeSrc": "10399:93:18",
													"nodeType": "YulBlock",
													"src": "10399:93:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10416:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10416:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10479:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "10479:5:18"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IUniswapV2Router02_$2123_to_t_address",
																			"nativeSrc": "10421:57:18",
																			"nodeType": "YulIdentifier",
																			"src": "10421:57:18"
																		},
																		"nativeSrc": "10421:64:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10421:64:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10409:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10409:6:18"
																},
																"nativeSrc": "10409:77:18",
																"nodeType": "YulFunctionCall",
																"src": "10409:77:18"
															},
															"nativeSrc": "10409:77:18",
															"nodeType": "YulExpressionStatement",
															"src": "10409:77:18"
														}
													]
												},
												"name": "abi_encode_t_contract$_IUniswapV2Router02_$2123_to_t_address_fromStack",
												"nativeSrc": "10307:185:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10387:5:18",
														"nodeType": "YulTypedName",
														"src": "10387:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10394:3:18",
														"nodeType": "YulTypedName",
														"src": "10394:3:18",
														"type": ""
													}
												],
												"src": "10307:185:18"
											},
											{
												"body": {
													"nativeSrc": "10623:151:18",
													"nodeType": "YulBlock",
													"src": "10623:151:18",
													"statements": [
														{
															"nativeSrc": "10633:26:18",
															"nodeType": "YulAssignment",
															"src": "10633:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10645:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "10645:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10656:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10656:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10641:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10641:3:18"
																},
																"nativeSrc": "10641:18:18",
																"nodeType": "YulFunctionCall",
																"src": "10641:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10633:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "10633:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10740:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10740:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10753:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10753:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10764:1:18",
																				"nodeType": "YulLiteral",
																				"src": "10764:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10749:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10749:3:18"
																		},
																		"nativeSrc": "10749:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10749:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IUniswapV2Router02_$2123_to_t_address_fromStack",
																	"nativeSrc": "10669:70:18",
																	"nodeType": "YulIdentifier",
																	"src": "10669:70:18"
																},
																"nativeSrc": "10669:98:18",
																"nodeType": "YulFunctionCall",
																"src": "10669:98:18"
															},
															"nativeSrc": "10669:98:18",
															"nodeType": "YulExpressionStatement",
															"src": "10669:98:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV2Router02_$2123__to_t_address__fromStack_reversed",
												"nativeSrc": "10498:276:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10595:9:18",
														"nodeType": "YulTypedName",
														"src": "10595:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10607:6:18",
														"nodeType": "YulTypedName",
														"src": "10607:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10618:4:18",
														"nodeType": "YulTypedName",
														"src": "10618:4:18",
														"type": ""
													}
												],
												"src": "10498:276:18"
											},
											{
												"body": {
													"nativeSrc": "10870:66:18",
													"nodeType": "YulBlock",
													"src": "10870:66:18",
													"statements": [
														{
															"nativeSrc": "10880:50:18",
															"nodeType": "YulAssignment",
															"src": "10880:50:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10924:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "10924:5:18"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "10893:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "10893:30:18"
																},
																"nativeSrc": "10893:37:18",
																"nodeType": "YulFunctionCall",
																"src": "10893:37:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10880:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "10880:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_AggregatorV2V3Interface_$75_to_t_address",
												"nativeSrc": "10780:156:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10850:5:18",
														"nodeType": "YulTypedName",
														"src": "10850:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "10860:9:18",
														"nodeType": "YulTypedName",
														"src": "10860:9:18",
														"type": ""
													}
												],
												"src": "10780:156:18"
											},
											{
												"body": {
													"nativeSrc": "11037:96:18",
													"nodeType": "YulBlock",
													"src": "11037:96:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11054:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "11054:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11120:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "11120:5:18"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_AggregatorV2V3Interface_$75_to_t_address",
																			"nativeSrc": "11059:60:18",
																			"nodeType": "YulIdentifier",
																			"src": "11059:60:18"
																		},
																		"nativeSrc": "11059:67:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11059:67:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11047:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11047:6:18"
																},
																"nativeSrc": "11047:80:18",
																"nodeType": "YulFunctionCall",
																"src": "11047:80:18"
															},
															"nativeSrc": "11047:80:18",
															"nodeType": "YulExpressionStatement",
															"src": "11047:80:18"
														}
													]
												},
												"name": "abi_encode_t_contract$_AggregatorV2V3Interface_$75_to_t_address_fromStack",
												"nativeSrc": "10942:191:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11025:5:18",
														"nodeType": "YulTypedName",
														"src": "11025:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11032:3:18",
														"nodeType": "YulTypedName",
														"src": "11032:3:18",
														"type": ""
													}
												],
												"src": "10942:191:18"
											},
											{
												"body": {
													"nativeSrc": "11267:154:18",
													"nodeType": "YulBlock",
													"src": "11267:154:18",
													"statements": [
														{
															"nativeSrc": "11277:26:18",
															"nodeType": "YulAssignment",
															"src": "11277:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11289:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11289:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11300:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11300:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11285:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11285:3:18"
																},
																"nativeSrc": "11285:18:18",
																"nodeType": "YulFunctionCall",
																"src": "11285:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11277:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11277:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11387:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11387:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11400:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11400:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11411:1:18",
																				"nodeType": "YulLiteral",
																				"src": "11411:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11396:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11396:3:18"
																		},
																		"nativeSrc": "11396:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11396:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_AggregatorV2V3Interface_$75_to_t_address_fromStack",
																	"nativeSrc": "11313:73:18",
																	"nodeType": "YulIdentifier",
																	"src": "11313:73:18"
																},
																"nativeSrc": "11313:101:18",
																"nodeType": "YulFunctionCall",
																"src": "11313:101:18"
															},
															"nativeSrc": "11313:101:18",
															"nodeType": "YulExpressionStatement",
															"src": "11313:101:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_AggregatorV2V3Interface_$75__to_t_address__fromStack_reversed",
												"nativeSrc": "11139:282:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11239:9:18",
														"nodeType": "YulTypedName",
														"src": "11239:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11251:6:18",
														"nodeType": "YulTypedName",
														"src": "11251:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11262:4:18",
														"nodeType": "YulTypedName",
														"src": "11262:4:18",
														"type": ""
													}
												],
												"src": "11139:282:18"
											},
											{
												"body": {
													"nativeSrc": "11470:79:18",
													"nodeType": "YulBlock",
													"src": "11470:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "11527:16:18",
																"nodeType": "YulBlock",
																"src": "11527:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11536:1:18",
																					"nodeType": "YulLiteral",
																					"src": "11536:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11539:1:18",
																					"nodeType": "YulLiteral",
																					"src": "11539:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11529:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "11529:6:18"
																			},
																			"nativeSrc": "11529:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "11529:12:18"
																		},
																		"nativeSrc": "11529:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "11529:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11493:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "11493:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11518:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "11518:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "11500:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "11500:17:18"
																				},
																				"nativeSrc": "11500:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11500:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11490:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "11490:2:18"
																		},
																		"nativeSrc": "11490:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11490:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11483:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11483:6:18"
																},
																"nativeSrc": "11483:43:18",
																"nodeType": "YulFunctionCall",
																"src": "11483:43:18"
															},
															"nativeSrc": "11480:63:18",
															"nodeType": "YulIf",
															"src": "11480:63:18"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "11427:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11463:5:18",
														"nodeType": "YulTypedName",
														"src": "11463:5:18",
														"type": ""
													}
												],
												"src": "11427:122:18"
											},
											{
												"body": {
													"nativeSrc": "11607:87:18",
													"nodeType": "YulBlock",
													"src": "11607:87:18",
													"statements": [
														{
															"nativeSrc": "11617:29:18",
															"nodeType": "YulAssignment",
															"src": "11617:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11639:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11639:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11626:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "11626:12:18"
																},
																"nativeSrc": "11626:20:18",
																"nodeType": "YulFunctionCall",
																"src": "11626:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11617:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "11617:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11682:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "11682:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "11655:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "11655:26:18"
																},
																"nativeSrc": "11655:33:18",
																"nodeType": "YulFunctionCall",
																"src": "11655:33:18"
															},
															"nativeSrc": "11655:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "11655:33:18"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "11555:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11585:6:18",
														"nodeType": "YulTypedName",
														"src": "11585:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11593:3:18",
														"nodeType": "YulTypedName",
														"src": "11593:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11601:5:18",
														"nodeType": "YulTypedName",
														"src": "11601:5:18",
														"type": ""
													}
												],
												"src": "11555:139:18"
											},
											{
												"body": {
													"nativeSrc": "11766:263:18",
													"nodeType": "YulBlock",
													"src": "11766:263:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "11812:83:18",
																"nodeType": "YulBlock",
																"src": "11812:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11814:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "11814:77:18"
																			},
																			"nativeSrc": "11814:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "11814:79:18"
																		},
																		"nativeSrc": "11814:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "11814:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11787:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "11787:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11796:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11796:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11783:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11783:3:18"
																		},
																		"nativeSrc": "11783:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11783:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11808:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11808:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11779:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11779:3:18"
																},
																"nativeSrc": "11779:32:18",
																"nodeType": "YulFunctionCall",
																"src": "11779:32:18"
															},
															"nativeSrc": "11776:119:18",
															"nodeType": "YulIf",
															"src": "11776:119:18"
														},
														{
															"nativeSrc": "11905:117:18",
															"nodeType": "YulBlock",
															"src": "11905:117:18",
															"statements": [
																{
																	"nativeSrc": "11920:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11920:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11934:1:18",
																		"nodeType": "YulLiteral",
																		"src": "11934:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11924:6:18",
																			"nodeType": "YulTypedName",
																			"src": "11924:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11949:63:18",
																	"nodeType": "YulAssignment",
																	"src": "11949:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11984:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "11984:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11995:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "11995:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11980:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11980:3:18"
																				},
																				"nativeSrc": "11980:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11980:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12004:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "12004:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11959:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "11959:20:18"
																		},
																		"nativeSrc": "11959:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11959:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11949:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "11949:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "11700:329:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11736:9:18",
														"nodeType": "YulTypedName",
														"src": "11736:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11747:7:18",
														"nodeType": "YulTypedName",
														"src": "11747:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11759:6:18",
														"nodeType": "YulTypedName",
														"src": "11759:6:18",
														"type": ""
													}
												],
												"src": "11700:329:18"
											},
											{
												"body": {
													"nativeSrc": "12100:53:18",
													"nodeType": "YulBlock",
													"src": "12100:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12117:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12117:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12140:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "12140:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "12122:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "12122:17:18"
																		},
																		"nativeSrc": "12122:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12122:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12110:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12110:6:18"
																},
																"nativeSrc": "12110:37:18",
																"nodeType": "YulFunctionCall",
																"src": "12110:37:18"
															},
															"nativeSrc": "12110:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "12110:37:18"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "12035:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12088:5:18",
														"nodeType": "YulTypedName",
														"src": "12088:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12095:3:18",
														"nodeType": "YulTypedName",
														"src": "12095:3:18",
														"type": ""
													}
												],
												"src": "12035:118:18"
											},
											{
												"body": {
													"nativeSrc": "12257:124:18",
													"nodeType": "YulBlock",
													"src": "12257:124:18",
													"statements": [
														{
															"nativeSrc": "12267:26:18",
															"nodeType": "YulAssignment",
															"src": "12267:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12279:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "12279:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12290:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12290:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12275:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12275:3:18"
																},
																"nativeSrc": "12275:18:18",
																"nodeType": "YulFunctionCall",
																"src": "12275:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12267:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "12267:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12347:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12347:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12360:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12360:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12371:1:18",
																				"nodeType": "YulLiteral",
																				"src": "12371:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12356:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12356:3:18"
																		},
																		"nativeSrc": "12356:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12356:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12303:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "12303:43:18"
																},
																"nativeSrc": "12303:71:18",
																"nodeType": "YulFunctionCall",
																"src": "12303:71:18"
															},
															"nativeSrc": "12303:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "12303:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "12159:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12229:9:18",
														"nodeType": "YulTypedName",
														"src": "12229:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12241:6:18",
														"nodeType": "YulTypedName",
														"src": "12241:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12252:4:18",
														"nodeType": "YulTypedName",
														"src": "12252:4:18",
														"type": ""
													}
												],
												"src": "12159:222:18"
											},
											{
												"body": {
													"nativeSrc": "12625:537:18",
													"nodeType": "YulBlock",
													"src": "12625:537:18",
													"statements": [
														{
															"nativeSrc": "12635:27:18",
															"nodeType": "YulAssignment",
															"src": "12635:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12647:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "12647:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12658:3:18",
																		"nodeType": "YulLiteral",
																		"src": "12658:3:18",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12643:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12643:3:18"
																},
																"nativeSrc": "12643:19:18",
																"nodeType": "YulFunctionCall",
																"src": "12643:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12635:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "12635:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12716:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12716:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12729:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12729:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12740:1:18",
																				"nodeType": "YulLiteral",
																				"src": "12740:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12725:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12725:3:18"
																		},
																		"nativeSrc": "12725:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12725:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12672:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "12672:43:18"
																},
																"nativeSrc": "12672:71:18",
																"nodeType": "YulFunctionCall",
																"src": "12672:71:18"
															},
															"nativeSrc": "12672:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "12672:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12797:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12797:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12810:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12810:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12821:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12821:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12806:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12806:3:18"
																		},
																		"nativeSrc": "12806:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12806:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12753:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "12753:43:18"
																},
																"nativeSrc": "12753:72:18",
																"nodeType": "YulFunctionCall",
																"src": "12753:72:18"
															},
															"nativeSrc": "12753:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "12753:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12879:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12879:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12892:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12892:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12903:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12903:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12888:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12888:3:18"
																		},
																		"nativeSrc": "12888:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12888:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12835:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "12835:43:18"
																},
																"nativeSrc": "12835:72:18",
																"nodeType": "YulFunctionCall",
																"src": "12835:72:18"
															},
															"nativeSrc": "12835:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "12835:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "12961:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12961:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12974:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12974:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12985:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12985:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12970:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12970:3:18"
																		},
																		"nativeSrc": "12970:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12970:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12917:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "12917:43:18"
																},
																"nativeSrc": "12917:72:18",
																"nodeType": "YulFunctionCall",
																"src": "12917:72:18"
															},
															"nativeSrc": "12917:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "12917:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "13043:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13043:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13056:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13056:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13067:3:18",
																				"nodeType": "YulLiteral",
																				"src": "13067:3:18",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13052:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13052:3:18"
																		},
																		"nativeSrc": "13052:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13052:19:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12999:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "12999:43:18"
																},
																"nativeSrc": "12999:73:18",
																"nodeType": "YulFunctionCall",
																"src": "12999:73:18"
															},
															"nativeSrc": "12999:73:18",
															"nodeType": "YulExpressionStatement",
															"src": "12999:73:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "13126:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13126:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13139:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13139:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13150:3:18",
																				"nodeType": "YulLiteral",
																				"src": "13150:3:18",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13135:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13135:3:18"
																		},
																		"nativeSrc": "13135:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13135:19:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13082:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "13082:43:18"
																},
																"nativeSrc": "13082:73:18",
																"nodeType": "YulFunctionCall",
																"src": "13082:73:18"
															},
															"nativeSrc": "13082:73:18",
															"nodeType": "YulExpressionStatement",
															"src": "13082:73:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12387:775:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12557:9:18",
														"nodeType": "YulTypedName",
														"src": "12557:9:18",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "12569:6:18",
														"nodeType": "YulTypedName",
														"src": "12569:6:18",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "12577:6:18",
														"nodeType": "YulTypedName",
														"src": "12577:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12585:6:18",
														"nodeType": "YulTypedName",
														"src": "12585:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12593:6:18",
														"nodeType": "YulTypedName",
														"src": "12593:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12601:6:18",
														"nodeType": "YulTypedName",
														"src": "12601:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12609:6:18",
														"nodeType": "YulTypedName",
														"src": "12609:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12620:4:18",
														"nodeType": "YulTypedName",
														"src": "12620:4:18",
														"type": ""
													}
												],
												"src": "12387:775:18"
											},
											{
												"body": {
													"nativeSrc": "13264:73:18",
													"nodeType": "YulBlock",
													"src": "13264:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13281:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "13281:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13286:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13286:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13274:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13274:6:18"
																},
																"nativeSrc": "13274:19:18",
																"nodeType": "YulFunctionCall",
																"src": "13274:19:18"
															},
															"nativeSrc": "13274:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "13274:19:18"
														},
														{
															"nativeSrc": "13302:29:18",
															"nodeType": "YulAssignment",
															"src": "13302:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13321:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "13321:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13326:4:18",
																		"nodeType": "YulLiteral",
																		"src": "13326:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13317:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13317:3:18"
																},
																"nativeSrc": "13317:14:18",
																"nodeType": "YulFunctionCall",
																"src": "13317:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "13302:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "13302:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "13168:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13236:3:18",
														"nodeType": "YulTypedName",
														"src": "13236:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13241:6:18",
														"nodeType": "YulTypedName",
														"src": "13241:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "13252:11:18",
														"nodeType": "YulTypedName",
														"src": "13252:11:18",
														"type": ""
													}
												],
												"src": "13168:169:18"
											},
											{
												"body": {
													"nativeSrc": "13449:57:18",
													"nodeType": "YulBlock",
													"src": "13449:57:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13471:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "13471:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13479:1:18",
																				"nodeType": "YulLiteral",
																				"src": "13479:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13467:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13467:3:18"
																		},
																		"nativeSrc": "13467:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13467:14:18"
																	},
																	{
																		"hexValue": "506c616e206973206578697374",
																		"kind": "string",
																		"nativeSrc": "13483:15:18",
																		"nodeType": "YulLiteral",
																		"src": "13483:15:18",
																		"type": "",
																		"value": "Plan is exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13460:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13460:6:18"
																},
																"nativeSrc": "13460:39:18",
																"nodeType": "YulFunctionCall",
																"src": "13460:39:18"
															},
															"nativeSrc": "13460:39:18",
															"nodeType": "YulExpressionStatement",
															"src": "13460:39:18"
														}
													]
												},
												"name": "store_literal_in_memory_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad",
												"nativeSrc": "13343:163:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13441:6:18",
														"nodeType": "YulTypedName",
														"src": "13441:6:18",
														"type": ""
													}
												],
												"src": "13343:163:18"
											},
											{
												"body": {
													"nativeSrc": "13658:220:18",
													"nodeType": "YulBlock",
													"src": "13658:220:18",
													"statements": [
														{
															"nativeSrc": "13668:74:18",
															"nodeType": "YulAssignment",
															"src": "13668:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13734:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "13734:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13739:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13739:2:18",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13675:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "13675:58:18"
																},
																"nativeSrc": "13675:67:18",
																"nodeType": "YulFunctionCall",
																"src": "13675:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13668:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13668:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13840:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "13840:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad",
																	"nativeSrc": "13751:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "13751:88:18"
																},
																"nativeSrc": "13751:93:18",
																"nodeType": "YulFunctionCall",
																"src": "13751:93:18"
															},
															"nativeSrc": "13751:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "13751:93:18"
														},
														{
															"nativeSrc": "13853:19:18",
															"nodeType": "YulAssignment",
															"src": "13853:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13864:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "13864:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13869:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13869:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13860:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13860:3:18"
																},
																"nativeSrc": "13860:12:18",
																"nodeType": "YulFunctionCall",
																"src": "13860:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13853:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13853:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13512:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13646:3:18",
														"nodeType": "YulTypedName",
														"src": "13646:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13654:3:18",
														"nodeType": "YulTypedName",
														"src": "13654:3:18",
														"type": ""
													}
												],
												"src": "13512:366:18"
											},
											{
												"body": {
													"nativeSrc": "14055:248:18",
													"nodeType": "YulBlock",
													"src": "14055:248:18",
													"statements": [
														{
															"nativeSrc": "14065:26:18",
															"nodeType": "YulAssignment",
															"src": "14065:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14077:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "14077:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14088:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14088:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14073:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14073:3:18"
																},
																"nativeSrc": "14073:18:18",
																"nodeType": "YulFunctionCall",
																"src": "14073:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14065:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "14065:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14112:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14112:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14123:1:18",
																				"nodeType": "YulLiteral",
																				"src": "14123:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14108:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14108:3:18"
																		},
																		"nativeSrc": "14108:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14108:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14131:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "14131:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14137:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14137:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14127:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14127:3:18"
																		},
																		"nativeSrc": "14127:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14127:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14101:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14101:6:18"
																},
																"nativeSrc": "14101:47:18",
																"nodeType": "YulFunctionCall",
																"src": "14101:47:18"
															},
															"nativeSrc": "14101:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "14101:47:18"
														},
														{
															"nativeSrc": "14157:139:18",
															"nodeType": "YulAssignment",
															"src": "14157:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14291:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "14291:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14165:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "14165:124:18"
																},
																"nativeSrc": "14165:131:18",
																"nodeType": "YulFunctionCall",
																"src": "14165:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14157:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "14157:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13884:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14035:9:18",
														"nodeType": "YulTypedName",
														"src": "14035:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14050:4:18",
														"nodeType": "YulTypedName",
														"src": "14050:4:18",
														"type": ""
													}
												],
												"src": "13884:419:18"
											},
											{
												"body": {
													"nativeSrc": "14415:76:18",
													"nodeType": "YulBlock",
													"src": "14415:76:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14437:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "14437:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14445:1:18",
																				"nodeType": "YulLiteral",
																				"src": "14445:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14433:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14433:3:18"
																		},
																		"nativeSrc": "14433:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14433:14:18"
																	},
																	{
																		"hexValue": "4672657175656e6379206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "14449:34:18",
																		"nodeType": "YulLiteral",
																		"src": "14449:34:18",
																		"type": "",
																		"value": "Frequency must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14426:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14426:6:18"
																},
																"nativeSrc": "14426:58:18",
																"nodeType": "YulFunctionCall",
																"src": "14426:58:18"
															},
															"nativeSrc": "14426:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "14426:58:18"
														}
													]
												},
												"name": "store_literal_in_memory_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016",
												"nativeSrc": "14309:182:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14407:6:18",
														"nodeType": "YulTypedName",
														"src": "14407:6:18",
														"type": ""
													}
												],
												"src": "14309:182:18"
											},
											{
												"body": {
													"nativeSrc": "14643:220:18",
													"nodeType": "YulBlock",
													"src": "14643:220:18",
													"statements": [
														{
															"nativeSrc": "14653:74:18",
															"nodeType": "YulAssignment",
															"src": "14653:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14719:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "14719:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14724:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14724:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14660:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "14660:58:18"
																},
																"nativeSrc": "14660:67:18",
																"nodeType": "YulFunctionCall",
																"src": "14660:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14653:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14653:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14825:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "14825:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016",
																	"nativeSrc": "14736:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "14736:88:18"
																},
																"nativeSrc": "14736:93:18",
																"nodeType": "YulFunctionCall",
																"src": "14736:93:18"
															},
															"nativeSrc": "14736:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "14736:93:18"
														},
														{
															"nativeSrc": "14838:19:18",
															"nodeType": "YulAssignment",
															"src": "14838:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14849:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "14849:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14854:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14854:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14845:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14845:3:18"
																},
																"nativeSrc": "14845:12:18",
																"nodeType": "YulFunctionCall",
																"src": "14845:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14838:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14838:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14497:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14631:3:18",
														"nodeType": "YulTypedName",
														"src": "14631:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14639:3:18",
														"nodeType": "YulTypedName",
														"src": "14639:3:18",
														"type": ""
													}
												],
												"src": "14497:366:18"
											},
											{
												"body": {
													"nativeSrc": "15040:248:18",
													"nodeType": "YulBlock",
													"src": "15040:248:18",
													"statements": [
														{
															"nativeSrc": "15050:26:18",
															"nodeType": "YulAssignment",
															"src": "15050:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15062:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "15062:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15073:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15073:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15058:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15058:3:18"
																},
																"nativeSrc": "15058:18:18",
																"nodeType": "YulFunctionCall",
																"src": "15058:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15050:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "15050:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15097:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "15097:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15108:1:18",
																				"nodeType": "YulLiteral",
																				"src": "15108:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15093:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15093:3:18"
																		},
																		"nativeSrc": "15093:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15093:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15116:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "15116:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15122:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "15122:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15112:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15112:3:18"
																		},
																		"nativeSrc": "15112:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15112:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15086:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15086:6:18"
																},
																"nativeSrc": "15086:47:18",
																"nodeType": "YulFunctionCall",
																"src": "15086:47:18"
															},
															"nativeSrc": "15086:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "15086:47:18"
														},
														{
															"nativeSrc": "15142:139:18",
															"nodeType": "YulAssignment",
															"src": "15142:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15276:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "15276:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15150:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "15150:124:18"
																},
																"nativeSrc": "15150:131:18",
																"nodeType": "YulFunctionCall",
																"src": "15150:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15142:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "15142:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14869:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15020:9:18",
														"nodeType": "YulTypedName",
														"src": "15020:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15035:4:18",
														"nodeType": "YulTypedName",
														"src": "15035:4:18",
														"type": ""
													}
												],
												"src": "14869:419:18"
											},
											{
												"body": {
													"nativeSrc": "15400:73:18",
													"nodeType": "YulBlock",
													"src": "15400:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15422:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "15422:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15430:1:18",
																				"nodeType": "YulLiteral",
																				"src": "15430:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15418:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15418:3:18"
																		},
																		"nativeSrc": "15418:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15418:14:18"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "15434:31:18",
																		"nodeType": "YulLiteral",
																		"src": "15434:31:18",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15411:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15411:6:18"
																},
																"nativeSrc": "15411:55:18",
																"nodeType": "YulFunctionCall",
																"src": "15411:55:18"
															},
															"nativeSrc": "15411:55:18",
															"nodeType": "YulExpressionStatement",
															"src": "15411:55:18"
														}
													]
												},
												"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
												"nativeSrc": "15294:179:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15392:6:18",
														"nodeType": "YulTypedName",
														"src": "15392:6:18",
														"type": ""
													}
												],
												"src": "15294:179:18"
											},
											{
												"body": {
													"nativeSrc": "15625:220:18",
													"nodeType": "YulBlock",
													"src": "15625:220:18",
													"statements": [
														{
															"nativeSrc": "15635:74:18",
															"nodeType": "YulAssignment",
															"src": "15635:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15701:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "15701:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15706:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15706:2:18",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15642:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "15642:58:18"
																},
																"nativeSrc": "15642:67:18",
																"nodeType": "YulFunctionCall",
																"src": "15642:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15635:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15635:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15807:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "15807:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																	"nativeSrc": "15718:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "15718:88:18"
																},
																"nativeSrc": "15718:93:18",
																"nodeType": "YulFunctionCall",
																"src": "15718:93:18"
															},
															"nativeSrc": "15718:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "15718:93:18"
														},
														{
															"nativeSrc": "15820:19:18",
															"nodeType": "YulAssignment",
															"src": "15820:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15831:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "15831:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15836:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15836:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15827:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15827:3:18"
																},
																"nativeSrc": "15827:12:18",
																"nodeType": "YulFunctionCall",
																"src": "15827:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15820:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15820:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15479:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15613:3:18",
														"nodeType": "YulTypedName",
														"src": "15613:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15621:3:18",
														"nodeType": "YulTypedName",
														"src": "15621:3:18",
														"type": ""
													}
												],
												"src": "15479:366:18"
											},
											{
												"body": {
													"nativeSrc": "16022:248:18",
													"nodeType": "YulBlock",
													"src": "16022:248:18",
													"statements": [
														{
															"nativeSrc": "16032:26:18",
															"nodeType": "YulAssignment",
															"src": "16032:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16044:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "16044:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16055:2:18",
																		"nodeType": "YulLiteral",
																		"src": "16055:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16040:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16040:3:18"
																},
																"nativeSrc": "16040:18:18",
																"nodeType": "YulFunctionCall",
																"src": "16040:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16032:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "16032:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16079:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "16079:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16090:1:18",
																				"nodeType": "YulLiteral",
																				"src": "16090:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16075:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16075:3:18"
																		},
																		"nativeSrc": "16075:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16075:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16098:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "16098:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16104:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "16104:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16094:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16094:3:18"
																		},
																		"nativeSrc": "16094:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16094:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16068:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "16068:6:18"
																},
																"nativeSrc": "16068:47:18",
																"nodeType": "YulFunctionCall",
																"src": "16068:47:18"
															},
															"nativeSrc": "16068:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "16068:47:18"
														},
														{
															"nativeSrc": "16124:139:18",
															"nodeType": "YulAssignment",
															"src": "16124:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16258:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "16258:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16132:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "16132:124:18"
																},
																"nativeSrc": "16132:131:18",
																"nodeType": "YulFunctionCall",
																"src": "16132:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16124:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "16124:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15851:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16002:9:18",
														"nodeType": "YulTypedName",
														"src": "16002:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16017:4:18",
														"nodeType": "YulTypedName",
														"src": "16017:4:18",
														"type": ""
													}
												],
												"src": "15851:419:18"
											},
											{
												"body": {
													"nativeSrc": "16402:206:18",
													"nodeType": "YulBlock",
													"src": "16402:206:18",
													"statements": [
														{
															"nativeSrc": "16412:26:18",
															"nodeType": "YulAssignment",
															"src": "16412:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16424:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "16424:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16435:2:18",
																		"nodeType": "YulLiteral",
																		"src": "16435:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16420:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16420:3:18"
																},
																"nativeSrc": "16420:18:18",
																"nodeType": "YulFunctionCall",
																"src": "16420:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16412:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "16412:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16492:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "16492:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16505:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "16505:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16516:1:18",
																				"nodeType": "YulLiteral",
																				"src": "16516:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16501:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16501:3:18"
																		},
																		"nativeSrc": "16501:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16501:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16448:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "16448:43:18"
																},
																"nativeSrc": "16448:71:18",
																"nodeType": "YulFunctionCall",
																"src": "16448:71:18"
															},
															"nativeSrc": "16448:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "16448:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16573:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "16573:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16586:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "16586:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16597:2:18",
																				"nodeType": "YulLiteral",
																				"src": "16597:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16582:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16582:3:18"
																		},
																		"nativeSrc": "16582:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16582:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16529:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "16529:43:18"
																},
																"nativeSrc": "16529:72:18",
																"nodeType": "YulFunctionCall",
																"src": "16529:72:18"
															},
															"nativeSrc": "16529:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "16529:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "16276:332:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16366:9:18",
														"nodeType": "YulTypedName",
														"src": "16366:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16378:6:18",
														"nodeType": "YulTypedName",
														"src": "16378:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16386:6:18",
														"nodeType": "YulTypedName",
														"src": "16386:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16397:4:18",
														"nodeType": "YulTypedName",
														"src": "16397:4:18",
														"type": ""
													}
												],
												"src": "16276:332:18"
											},
											{
												"body": {
													"nativeSrc": "16740:206:18",
													"nodeType": "YulBlock",
													"src": "16740:206:18",
													"statements": [
														{
															"nativeSrc": "16750:26:18",
															"nodeType": "YulAssignment",
															"src": "16750:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16762:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "16762:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16773:2:18",
																		"nodeType": "YulLiteral",
																		"src": "16773:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16758:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16758:3:18"
																},
																"nativeSrc": "16758:18:18",
																"nodeType": "YulFunctionCall",
																"src": "16758:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16750:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "16750:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16830:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "16830:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16843:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "16843:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16854:1:18",
																				"nodeType": "YulLiteral",
																				"src": "16854:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16839:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16839:3:18"
																		},
																		"nativeSrc": "16839:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16839:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16786:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "16786:43:18"
																},
																"nativeSrc": "16786:71:18",
																"nodeType": "YulFunctionCall",
																"src": "16786:71:18"
															},
															"nativeSrc": "16786:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "16786:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16911:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "16911:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16924:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "16924:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16935:2:18",
																				"nodeType": "YulLiteral",
																				"src": "16935:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16920:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16920:3:18"
																		},
																		"nativeSrc": "16920:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16920:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16867:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "16867:43:18"
																},
																"nativeSrc": "16867:72:18",
																"nodeType": "YulFunctionCall",
																"src": "16867:72:18"
															},
															"nativeSrc": "16867:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "16867:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "16614:332:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16704:9:18",
														"nodeType": "YulTypedName",
														"src": "16704:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16716:6:18",
														"nodeType": "YulTypedName",
														"src": "16716:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16724:6:18",
														"nodeType": "YulTypedName",
														"src": "16724:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16735:4:18",
														"nodeType": "YulTypedName",
														"src": "16735:4:18",
														"type": ""
													}
												],
												"src": "16614:332:18"
											},
											{
												"body": {
													"nativeSrc": "17005:51:18",
													"nodeType": "YulBlock",
													"src": "17005:51:18",
													"statements": [
														{
															"nativeSrc": "17015:35:18",
															"nodeType": "YulAssignment",
															"src": "17015:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17044:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "17044:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "17026:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "17026:17:18"
																},
																"nativeSrc": "17026:24:18",
																"nodeType": "YulFunctionCall",
																"src": "17026:24:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "17015:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "17015:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "16952:104:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16987:5:18",
														"nodeType": "YulTypedName",
														"src": "16987:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "16997:7:18",
														"nodeType": "YulTypedName",
														"src": "16997:7:18",
														"type": ""
													}
												],
												"src": "16952:104:18"
											},
											{
												"body": {
													"nativeSrc": "17113:87:18",
													"nodeType": "YulBlock",
													"src": "17113:87:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "17178:16:18",
																"nodeType": "YulBlock",
																"src": "17178:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17187:1:18",
																					"nodeType": "YulLiteral",
																					"src": "17187:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17190:1:18",
																					"nodeType": "YulLiteral",
																					"src": "17190:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "17180:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "17180:6:18"
																			},
																			"nativeSrc": "17180:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "17180:12:18"
																		},
																		"nativeSrc": "17180:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "17180:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17136:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "17136:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17169:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "17169:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "17143:25:18",
																					"nodeType": "YulIdentifier",
																					"src": "17143:25:18"
																				},
																				"nativeSrc": "17143:32:18",
																				"nodeType": "YulFunctionCall",
																				"src": "17143:32:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "17133:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "17133:2:18"
																		},
																		"nativeSrc": "17133:43:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17133:43:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17126:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "17126:6:18"
																},
																"nativeSrc": "17126:51:18",
																"nodeType": "YulFunctionCall",
																"src": "17126:51:18"
															},
															"nativeSrc": "17123:71:18",
															"nodeType": "YulIf",
															"src": "17123:71:18"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "17062:138:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17106:5:18",
														"nodeType": "YulTypedName",
														"src": "17106:5:18",
														"type": ""
													}
												],
												"src": "17062:138:18"
											},
											{
												"body": {
													"nativeSrc": "17266:95:18",
													"nodeType": "YulBlock",
													"src": "17266:95:18",
													"statements": [
														{
															"nativeSrc": "17276:29:18",
															"nodeType": "YulAssignment",
															"src": "17276:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "17298:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "17298:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "17285:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "17285:12:18"
																},
																"nativeSrc": "17285:20:18",
																"nodeType": "YulFunctionCall",
																"src": "17285:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17276:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "17276:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17349:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "17349:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "17314:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "17314:34:18"
																},
																"nativeSrc": "17314:41:18",
																"nodeType": "YulFunctionCall",
																"src": "17314:41:18"
															},
															"nativeSrc": "17314:41:18",
															"nodeType": "YulExpressionStatement",
															"src": "17314:41:18"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nativeSrc": "17206:155:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "17244:6:18",
														"nodeType": "YulTypedName",
														"src": "17244:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17252:3:18",
														"nodeType": "YulTypedName",
														"src": "17252:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "17260:5:18",
														"nodeType": "YulTypedName",
														"src": "17260:5:18",
														"type": ""
													}
												],
												"src": "17206:155:18"
											},
											{
												"body": {
													"nativeSrc": "17441:271:18",
													"nodeType": "YulBlock",
													"src": "17441:271:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "17487:83:18",
																"nodeType": "YulBlock",
																"src": "17487:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17489:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "17489:77:18"
																			},
																			"nativeSrc": "17489:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "17489:79:18"
																		},
																		"nativeSrc": "17489:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "17489:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17462:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "17462:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17471:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "17471:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17458:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "17458:3:18"
																		},
																		"nativeSrc": "17458:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17458:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17483:2:18",
																		"nodeType": "YulLiteral",
																		"src": "17483:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17454:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "17454:3:18"
																},
																"nativeSrc": "17454:32:18",
																"nodeType": "YulFunctionCall",
																"src": "17454:32:18"
															},
															"nativeSrc": "17451:119:18",
															"nodeType": "YulIf",
															"src": "17451:119:18"
														},
														{
															"nativeSrc": "17580:125:18",
															"nodeType": "YulBlock",
															"src": "17580:125:18",
															"statements": [
																{
																	"nativeSrc": "17595:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17595:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17609:1:18",
																		"nodeType": "YulLiteral",
																		"src": "17609:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17599:6:18",
																			"nodeType": "YulTypedName",
																			"src": "17599:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17624:71:18",
																	"nodeType": "YulAssignment",
																	"src": "17624:71:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17667:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "17667:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17678:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "17678:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17663:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "17663:3:18"
																				},
																				"nativeSrc": "17663:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "17663:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17687:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "17687:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nativeSrc": "17634:28:18",
																			"nodeType": "YulIdentifier",
																			"src": "17634:28:18"
																		},
																		"nativeSrc": "17634:61:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17634:61:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17624:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "17624:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nativeSrc": "17367:345:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17411:9:18",
														"nodeType": "YulTypedName",
														"src": "17411:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17422:7:18",
														"nodeType": "YulTypedName",
														"src": "17422:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17434:6:18",
														"nodeType": "YulTypedName",
														"src": "17434:6:18",
														"type": ""
													}
												],
												"src": "17367:345:18"
											},
											{
												"body": {
													"nativeSrc": "17746:152:18",
													"nodeType": "YulBlock",
													"src": "17746:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17763:1:18",
																		"nodeType": "YulLiteral",
																		"src": "17763:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17766:77:18",
																		"nodeType": "YulLiteral",
																		"src": "17766:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17756:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "17756:6:18"
																},
																"nativeSrc": "17756:88:18",
																"nodeType": "YulFunctionCall",
																"src": "17756:88:18"
															},
															"nativeSrc": "17756:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "17756:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17860:1:18",
																		"nodeType": "YulLiteral",
																		"src": "17860:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17863:4:18",
																		"nodeType": "YulLiteral",
																		"src": "17863:4:18",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17853:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "17853:6:18"
																},
																"nativeSrc": "17853:15:18",
																"nodeType": "YulFunctionCall",
																"src": "17853:15:18"
															},
															"nativeSrc": "17853:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "17853:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17884:1:18",
																		"nodeType": "YulLiteral",
																		"src": "17884:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17887:4:18",
																		"nodeType": "YulLiteral",
																		"src": "17887:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17877:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "17877:6:18"
																},
																"nativeSrc": "17877:15:18",
																"nodeType": "YulFunctionCall",
																"src": "17877:15:18"
															},
															"nativeSrc": "17877:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "17877:15:18"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "17718:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "17718:180:18"
											},
											{
												"body": {
													"nativeSrc": "17949:149:18",
													"nodeType": "YulBlock",
													"src": "17949:149:18",
													"statements": [
														{
															"nativeSrc": "17959:25:18",
															"nodeType": "YulAssignment",
															"src": "17959:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17982:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "17982:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17964:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "17964:17:18"
																},
																"nativeSrc": "17964:20:18",
																"nodeType": "YulFunctionCall",
																"src": "17964:20:18"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17959:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "17959:1:18"
																}
															]
														},
														{
															"nativeSrc": "17993:25:18",
															"nodeType": "YulAssignment",
															"src": "17993:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18016:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "18016:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17998:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "17998:17:18"
																},
																"nativeSrc": "17998:20:18",
																"nodeType": "YulFunctionCall",
																"src": "17998:20:18"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17993:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "17993:1:18"
																}
															]
														},
														{
															"nativeSrc": "18027:17:18",
															"nodeType": "YulAssignment",
															"src": "18027:17:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18039:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "18039:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18042:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "18042:1:18"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "18035:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18035:3:18"
																},
																"nativeSrc": "18035:9:18",
																"nodeType": "YulFunctionCall",
																"src": "18035:9:18"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "18027:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "18027:4:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18069:22:18",
																"nodeType": "YulBlock",
																"src": "18069:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18071:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "18071:16:18"
																			},
																			"nativeSrc": "18071:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "18071:18:18"
																		},
																		"nativeSrc": "18071:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "18071:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "18060:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "18060:4:18"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "18066:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "18066:1:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18057:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "18057:2:18"
																},
																"nativeSrc": "18057:11:18",
																"nodeType": "YulFunctionCall",
																"src": "18057:11:18"
															},
															"nativeSrc": "18054:37:18",
															"nodeType": "YulIf",
															"src": "18054:37:18"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "17904:194:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17935:1:18",
														"nodeType": "YulTypedName",
														"src": "17935:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17938:1:18",
														"nodeType": "YulTypedName",
														"src": "17938:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "17944:4:18",
														"nodeType": "YulTypedName",
														"src": "17944:4:18",
														"type": ""
													}
												],
												"src": "17904:194:18"
											},
											{
												"body": {
													"nativeSrc": "18132:152:18",
													"nodeType": "YulBlock",
													"src": "18132:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18149:1:18",
																		"nodeType": "YulLiteral",
																		"src": "18149:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18152:77:18",
																		"nodeType": "YulLiteral",
																		"src": "18152:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18142:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "18142:6:18"
																},
																"nativeSrc": "18142:88:18",
																"nodeType": "YulFunctionCall",
																"src": "18142:88:18"
															},
															"nativeSrc": "18142:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "18142:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18246:1:18",
																		"nodeType": "YulLiteral",
																		"src": "18246:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18249:4:18",
																		"nodeType": "YulLiteral",
																		"src": "18249:4:18",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18239:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "18239:6:18"
																},
																"nativeSrc": "18239:15:18",
																"nodeType": "YulFunctionCall",
																"src": "18239:15:18"
															},
															"nativeSrc": "18239:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "18239:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18270:1:18",
																		"nodeType": "YulLiteral",
																		"src": "18270:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18273:4:18",
																		"nodeType": "YulLiteral",
																		"src": "18273:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18263:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "18263:6:18"
																},
																"nativeSrc": "18263:15:18",
																"nodeType": "YulFunctionCall",
																"src": "18263:15:18"
															},
															"nativeSrc": "18263:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "18263:15:18"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "18104:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "18104:180:18"
											},
											{
												"body": {
													"nativeSrc": "18324:142:18",
													"nodeType": "YulBlock",
													"src": "18324:142:18",
													"statements": [
														{
															"nativeSrc": "18334:25:18",
															"nodeType": "YulAssignment",
															"src": "18334:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18357:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "18357:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18339:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "18339:17:18"
																},
																"nativeSrc": "18339:20:18",
																"nodeType": "YulFunctionCall",
																"src": "18339:20:18"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18334:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "18334:1:18"
																}
															]
														},
														{
															"nativeSrc": "18368:25:18",
															"nodeType": "YulAssignment",
															"src": "18368:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18391:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "18391:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18373:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "18373:17:18"
																},
																"nativeSrc": "18373:20:18",
																"nodeType": "YulFunctionCall",
																"src": "18373:20:18"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18368:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "18368:1:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18415:22:18",
																"nodeType": "YulBlock",
																"src": "18415:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "18417:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "18417:16:18"
																			},
																			"nativeSrc": "18417:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "18417:18:18"
																		},
																		"nativeSrc": "18417:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "18417:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18412:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "18412:1:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18405:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "18405:6:18"
																},
																"nativeSrc": "18405:9:18",
																"nodeType": "YulFunctionCall",
																"src": "18405:9:18"
															},
															"nativeSrc": "18402:35:18",
															"nodeType": "YulIf",
															"src": "18402:35:18"
														},
														{
															"nativeSrc": "18446:14:18",
															"nodeType": "YulAssignment",
															"src": "18446:14:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18455:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "18455:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18458:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "18458:1:18"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "18451:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18451:3:18"
																},
																"nativeSrc": "18451:9:18",
																"nodeType": "YulFunctionCall",
																"src": "18451:9:18"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "18446:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "18446:1:18"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "18290:176:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18313:1:18",
														"nodeType": "YulTypedName",
														"src": "18313:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18316:1:18",
														"nodeType": "YulTypedName",
														"src": "18316:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "18322:1:18",
														"nodeType": "YulTypedName",
														"src": "18322:1:18",
														"type": ""
													}
												],
												"src": "18290:176:18"
											},
											{
												"body": {
													"nativeSrc": "18516:147:18",
													"nodeType": "YulBlock",
													"src": "18516:147:18",
													"statements": [
														{
															"nativeSrc": "18526:25:18",
															"nodeType": "YulAssignment",
															"src": "18526:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18549:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "18549:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18531:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "18531:17:18"
																},
																"nativeSrc": "18531:20:18",
																"nodeType": "YulFunctionCall",
																"src": "18531:20:18"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18526:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "18526:1:18"
																}
															]
														},
														{
															"nativeSrc": "18560:25:18",
															"nodeType": "YulAssignment",
															"src": "18560:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18583:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "18583:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18565:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "18565:17:18"
																},
																"nativeSrc": "18565:20:18",
																"nodeType": "YulFunctionCall",
																"src": "18565:20:18"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18560:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "18560:1:18"
																}
															]
														},
														{
															"nativeSrc": "18594:16:18",
															"nodeType": "YulAssignment",
															"src": "18594:16:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18605:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "18605:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18608:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "18608:1:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18601:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18601:3:18"
																},
																"nativeSrc": "18601:9:18",
																"nodeType": "YulFunctionCall",
																"src": "18601:9:18"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "18594:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18594:3:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18634:22:18",
																"nodeType": "YulBlock",
																"src": "18634:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18636:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "18636:16:18"
																			},
																			"nativeSrc": "18636:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "18636:18:18"
																		},
																		"nativeSrc": "18636:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "18636:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18626:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "18626:1:18"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "18629:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "18629:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18623:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "18623:2:18"
																},
																"nativeSrc": "18623:10:18",
																"nodeType": "YulFunctionCall",
																"src": "18623:10:18"
															},
															"nativeSrc": "18620:36:18",
															"nodeType": "YulIf",
															"src": "18620:36:18"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "18472:191:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18503:1:18",
														"nodeType": "YulTypedName",
														"src": "18503:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18506:1:18",
														"nodeType": "YulTypedName",
														"src": "18506:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "18512:3:18",
														"nodeType": "YulTypedName",
														"src": "18512:3:18",
														"type": ""
													}
												],
												"src": "18472:191:18"
											},
											{
												"body": {
													"nativeSrc": "18775:61:18",
													"nodeType": "YulBlock",
													"src": "18775:61:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18797:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "18797:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18805:1:18",
																				"nodeType": "YulLiteral",
																				"src": "18805:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18793:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "18793:3:18"
																		},
																		"nativeSrc": "18793:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18793:14:18"
																	},
																	{
																		"hexValue": "506c616e206973206e6f74206578697374",
																		"kind": "string",
																		"nativeSrc": "18809:19:18",
																		"nodeType": "YulLiteral",
																		"src": "18809:19:18",
																		"type": "",
																		"value": "Plan is not exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18786:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "18786:6:18"
																},
																"nativeSrc": "18786:43:18",
																"nodeType": "YulFunctionCall",
																"src": "18786:43:18"
															},
															"nativeSrc": "18786:43:18",
															"nodeType": "YulExpressionStatement",
															"src": "18786:43:18"
														}
													]
												},
												"name": "store_literal_in_memory_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2",
												"nativeSrc": "18669:167:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18767:6:18",
														"nodeType": "YulTypedName",
														"src": "18767:6:18",
														"type": ""
													}
												],
												"src": "18669:167:18"
											},
											{
												"body": {
													"nativeSrc": "18988:220:18",
													"nodeType": "YulBlock",
													"src": "18988:220:18",
													"statements": [
														{
															"nativeSrc": "18998:74:18",
															"nodeType": "YulAssignment",
															"src": "18998:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19064:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "19064:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19069:2:18",
																		"nodeType": "YulLiteral",
																		"src": "19069:2:18",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19005:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "19005:58:18"
																},
																"nativeSrc": "19005:67:18",
																"nodeType": "YulFunctionCall",
																"src": "19005:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18998:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18998:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19170:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "19170:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2",
																	"nativeSrc": "19081:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "19081:88:18"
																},
																"nativeSrc": "19081:93:18",
																"nodeType": "YulFunctionCall",
																"src": "19081:93:18"
															},
															"nativeSrc": "19081:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "19081:93:18"
														},
														{
															"nativeSrc": "19183:19:18",
															"nodeType": "YulAssignment",
															"src": "19183:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19194:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "19194:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19199:2:18",
																		"nodeType": "YulLiteral",
																		"src": "19199:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19190:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19190:3:18"
																},
																"nativeSrc": "19190:12:18",
																"nodeType": "YulFunctionCall",
																"src": "19190:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19183:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19183:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18842:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18976:3:18",
														"nodeType": "YulTypedName",
														"src": "18976:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18984:3:18",
														"nodeType": "YulTypedName",
														"src": "18984:3:18",
														"type": ""
													}
												],
												"src": "18842:366:18"
											},
											{
												"body": {
													"nativeSrc": "19385:248:18",
													"nodeType": "YulBlock",
													"src": "19385:248:18",
													"statements": [
														{
															"nativeSrc": "19395:26:18",
															"nodeType": "YulAssignment",
															"src": "19395:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19407:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "19407:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19418:2:18",
																		"nodeType": "YulLiteral",
																		"src": "19418:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19403:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19403:3:18"
																},
																"nativeSrc": "19403:18:18",
																"nodeType": "YulFunctionCall",
																"src": "19403:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19395:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "19395:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19442:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "19442:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19453:1:18",
																				"nodeType": "YulLiteral",
																				"src": "19453:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19438:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19438:3:18"
																		},
																		"nativeSrc": "19438:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19438:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19461:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "19461:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19467:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "19467:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19457:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19457:3:18"
																		},
																		"nativeSrc": "19457:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19457:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19431:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "19431:6:18"
																},
																"nativeSrc": "19431:47:18",
																"nodeType": "YulFunctionCall",
																"src": "19431:47:18"
															},
															"nativeSrc": "19431:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "19431:47:18"
														},
														{
															"nativeSrc": "19487:139:18",
															"nodeType": "YulAssignment",
															"src": "19487:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19621:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "19621:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19495:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "19495:124:18"
																},
																"nativeSrc": "19495:131:18",
																"nodeType": "YulFunctionCall",
																"src": "19495:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19487:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "19487:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19214:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19365:9:18",
														"nodeType": "YulTypedName",
														"src": "19365:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19380:4:18",
														"nodeType": "YulTypedName",
														"src": "19380:4:18",
														"type": ""
													}
												],
												"src": "19214:419:18"
											},
											{
												"body": {
													"nativeSrc": "19745:114:18",
													"nodeType": "YulBlock",
													"src": "19745:114:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19767:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "19767:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19775:1:18",
																				"nodeType": "YulLiteral",
																				"src": "19775:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19763:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19763:3:18"
																		},
																		"nativeSrc": "19763:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19763:14:18"
																	},
																	{
																		"hexValue": "546f74616c206d7573742062652067726561746572207468616e20616d6f756e",
																		"kind": "string",
																		"nativeSrc": "19779:34:18",
																		"nodeType": "YulLiteral",
																		"src": "19779:34:18",
																		"type": "",
																		"value": "Total must be greater than amoun"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19756:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "19756:6:18"
																},
																"nativeSrc": "19756:58:18",
																"nodeType": "YulFunctionCall",
																"src": "19756:58:18"
															},
															"nativeSrc": "19756:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "19756:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19835:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "19835:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19843:2:18",
																				"nodeType": "YulLiteral",
																				"src": "19843:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19831:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19831:3:18"
																		},
																		"nativeSrc": "19831:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19831:15:18"
																	},
																	{
																		"hexValue": "74",
																		"kind": "string",
																		"nativeSrc": "19848:3:18",
																		"nodeType": "YulLiteral",
																		"src": "19848:3:18",
																		"type": "",
																		"value": "t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19824:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "19824:6:18"
																},
																"nativeSrc": "19824:28:18",
																"nodeType": "YulFunctionCall",
																"src": "19824:28:18"
															},
															"nativeSrc": "19824:28:18",
															"nodeType": "YulExpressionStatement",
															"src": "19824:28:18"
														}
													]
												},
												"name": "store_literal_in_memory_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa",
												"nativeSrc": "19639:220:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19737:6:18",
														"nodeType": "YulTypedName",
														"src": "19737:6:18",
														"type": ""
													}
												],
												"src": "19639:220:18"
											},
											{
												"body": {
													"nativeSrc": "20011:220:18",
													"nodeType": "YulBlock",
													"src": "20011:220:18",
													"statements": [
														{
															"nativeSrc": "20021:74:18",
															"nodeType": "YulAssignment",
															"src": "20021:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20087:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "20087:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20092:2:18",
																		"nodeType": "YulLiteral",
																		"src": "20092:2:18",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20028:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "20028:58:18"
																},
																"nativeSrc": "20028:67:18",
																"nodeType": "YulFunctionCall",
																"src": "20028:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20021:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20021:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20193:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "20193:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa",
																	"nativeSrc": "20104:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "20104:88:18"
																},
																"nativeSrc": "20104:93:18",
																"nodeType": "YulFunctionCall",
																"src": "20104:93:18"
															},
															"nativeSrc": "20104:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "20104:93:18"
														},
														{
															"nativeSrc": "20206:19:18",
															"nodeType": "YulAssignment",
															"src": "20206:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20217:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "20217:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20222:2:18",
																		"nodeType": "YulLiteral",
																		"src": "20222:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20213:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20213:3:18"
																},
																"nativeSrc": "20213:12:18",
																"nodeType": "YulFunctionCall",
																"src": "20213:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20206:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20206:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19865:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19999:3:18",
														"nodeType": "YulTypedName",
														"src": "19999:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20007:3:18",
														"nodeType": "YulTypedName",
														"src": "20007:3:18",
														"type": ""
													}
												],
												"src": "19865:366:18"
											},
											{
												"body": {
													"nativeSrc": "20408:248:18",
													"nodeType": "YulBlock",
													"src": "20408:248:18",
													"statements": [
														{
															"nativeSrc": "20418:26:18",
															"nodeType": "YulAssignment",
															"src": "20418:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20430:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "20430:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20441:2:18",
																		"nodeType": "YulLiteral",
																		"src": "20441:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20426:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20426:3:18"
																},
																"nativeSrc": "20426:18:18",
																"nodeType": "YulFunctionCall",
																"src": "20426:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20418:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "20418:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20465:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "20465:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20476:1:18",
																				"nodeType": "YulLiteral",
																				"src": "20476:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20461:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "20461:3:18"
																		},
																		"nativeSrc": "20461:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20461:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20484:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "20484:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20490:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "20490:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20480:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "20480:3:18"
																		},
																		"nativeSrc": "20480:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20480:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20454:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "20454:6:18"
																},
																"nativeSrc": "20454:47:18",
																"nodeType": "YulFunctionCall",
																"src": "20454:47:18"
															},
															"nativeSrc": "20454:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "20454:47:18"
														},
														{
															"nativeSrc": "20510:139:18",
															"nodeType": "YulAssignment",
															"src": "20510:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20644:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "20644:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20518:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "20518:124:18"
																},
																"nativeSrc": "20518:131:18",
																"nodeType": "YulFunctionCall",
																"src": "20518:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20510:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "20510:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20237:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20388:9:18",
														"nodeType": "YulTypedName",
														"src": "20388:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20403:4:18",
														"nodeType": "YulTypedName",
														"src": "20403:4:18",
														"type": ""
													}
												],
												"src": "20237:419:18"
											},
											{
												"body": {
													"nativeSrc": "20705:190:18",
													"nodeType": "YulBlock",
													"src": "20705:190:18",
													"statements": [
														{
															"nativeSrc": "20715:33:18",
															"nodeType": "YulAssignment",
															"src": "20715:33:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20742:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "20742:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20724:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "20724:17:18"
																},
																"nativeSrc": "20724:24:18",
																"nodeType": "YulFunctionCall",
																"src": "20724:24:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20715:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "20715:5:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20838:22:18",
																"nodeType": "YulBlock",
																"src": "20838:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "20840:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "20840:16:18"
																			},
																			"nativeSrc": "20840:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "20840:18:18"
																		},
																		"nativeSrc": "20840:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "20840:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20763:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "20763:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20770:66:18",
																		"nodeType": "YulLiteral",
																		"src": "20770:66:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "20760:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "20760:2:18"
																},
																"nativeSrc": "20760:77:18",
																"nodeType": "YulFunctionCall",
																"src": "20760:77:18"
															},
															"nativeSrc": "20757:103:18",
															"nodeType": "YulIf",
															"src": "20757:103:18"
														},
														{
															"nativeSrc": "20869:20:18",
															"nodeType": "YulAssignment",
															"src": "20869:20:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20880:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "20880:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20887:1:18",
																		"nodeType": "YulLiteral",
																		"src": "20887:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20876:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20876:3:18"
																},
																"nativeSrc": "20876:13:18",
																"nodeType": "YulFunctionCall",
																"src": "20876:13:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "20869:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20869:3:18"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "20662:233:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20691:5:18",
														"nodeType": "YulTypedName",
														"src": "20691:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "20701:3:18",
														"nodeType": "YulTypedName",
														"src": "20701:3:18",
														"type": ""
													}
												],
												"src": "20662:233:18"
											},
											{
												"body": {
													"nativeSrc": "21007:62:18",
													"nodeType": "YulBlock",
													"src": "21007:62:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21029:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "21029:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21037:1:18",
																				"nodeType": "YulLiteral",
																				"src": "21037:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21025:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "21025:3:18"
																		},
																		"nativeSrc": "21025:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "21025:14:18"
																	},
																	{
																		"hexValue": "506c616e206973206e6f7420616374697665",
																		"kind": "string",
																		"nativeSrc": "21041:20:18",
																		"nodeType": "YulLiteral",
																		"src": "21041:20:18",
																		"type": "",
																		"value": "Plan is not active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21018:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "21018:6:18"
																},
																"nativeSrc": "21018:44:18",
																"nodeType": "YulFunctionCall",
																"src": "21018:44:18"
															},
															"nativeSrc": "21018:44:18",
															"nodeType": "YulExpressionStatement",
															"src": "21018:44:18"
														}
													]
												},
												"name": "store_literal_in_memory_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c",
												"nativeSrc": "20901:168:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20999:6:18",
														"nodeType": "YulTypedName",
														"src": "20999:6:18",
														"type": ""
													}
												],
												"src": "20901:168:18"
											},
											{
												"body": {
													"nativeSrc": "21221:220:18",
													"nodeType": "YulBlock",
													"src": "21221:220:18",
													"statements": [
														{
															"nativeSrc": "21231:74:18",
															"nodeType": "YulAssignment",
															"src": "21231:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21297:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "21297:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21302:2:18",
																		"nodeType": "YulLiteral",
																		"src": "21302:2:18",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21238:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "21238:58:18"
																},
																"nativeSrc": "21238:67:18",
																"nodeType": "YulFunctionCall",
																"src": "21238:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21231:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21231:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21403:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "21403:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c",
																	"nativeSrc": "21314:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "21314:88:18"
																},
																"nativeSrc": "21314:93:18",
																"nodeType": "YulFunctionCall",
																"src": "21314:93:18"
															},
															"nativeSrc": "21314:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "21314:93:18"
														},
														{
															"nativeSrc": "21416:19:18",
															"nodeType": "YulAssignment",
															"src": "21416:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21427:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "21427:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21432:2:18",
																		"nodeType": "YulLiteral",
																		"src": "21432:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21423:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21423:3:18"
																},
																"nativeSrc": "21423:12:18",
																"nodeType": "YulFunctionCall",
																"src": "21423:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21416:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21416:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21075:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21209:3:18",
														"nodeType": "YulTypedName",
														"src": "21209:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21217:3:18",
														"nodeType": "YulTypedName",
														"src": "21217:3:18",
														"type": ""
													}
												],
												"src": "21075:366:18"
											},
											{
												"body": {
													"nativeSrc": "21618:248:18",
													"nodeType": "YulBlock",
													"src": "21618:248:18",
													"statements": [
														{
															"nativeSrc": "21628:26:18",
															"nodeType": "YulAssignment",
															"src": "21628:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21640:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "21640:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21651:2:18",
																		"nodeType": "YulLiteral",
																		"src": "21651:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21636:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21636:3:18"
																},
																"nativeSrc": "21636:18:18",
																"nodeType": "YulFunctionCall",
																"src": "21636:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21628:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "21628:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21675:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "21675:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21686:1:18",
																				"nodeType": "YulLiteral",
																				"src": "21686:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21671:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "21671:3:18"
																		},
																		"nativeSrc": "21671:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "21671:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21694:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "21694:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21700:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "21700:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21690:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "21690:3:18"
																		},
																		"nativeSrc": "21690:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "21690:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21664:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "21664:6:18"
																},
																"nativeSrc": "21664:47:18",
																"nodeType": "YulFunctionCall",
																"src": "21664:47:18"
															},
															"nativeSrc": "21664:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "21664:47:18"
														},
														{
															"nativeSrc": "21720:139:18",
															"nodeType": "YulAssignment",
															"src": "21720:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21854:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "21854:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21728:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "21728:124:18"
																},
																"nativeSrc": "21728:131:18",
																"nodeType": "YulFunctionCall",
																"src": "21728:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21720:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "21720:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21447:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21598:9:18",
														"nodeType": "YulTypedName",
														"src": "21598:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21613:4:18",
														"nodeType": "YulTypedName",
														"src": "21613:4:18",
														"type": ""
													}
												],
												"src": "21447:419:18"
											},
											{
												"body": {
													"nativeSrc": "21978:122:18",
													"nodeType": "YulBlock",
													"src": "21978:122:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22000:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "22000:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22008:1:18",
																				"nodeType": "YulLiteral",
																				"src": "22008:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21996:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "21996:3:18"
																		},
																		"nativeSrc": "21996:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "21996:14:18"
																	},
																	{
																		"hexValue": "43616e6e6f742074726967676572206d6f7265207468616e2072656d61696e69",
																		"kind": "string",
																		"nativeSrc": "22012:34:18",
																		"nodeType": "YulLiteral",
																		"src": "22012:34:18",
																		"type": "",
																		"value": "Cannot trigger more than remaini"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21989:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "21989:6:18"
																},
																"nativeSrc": "21989:58:18",
																"nodeType": "YulFunctionCall",
																"src": "21989:58:18"
															},
															"nativeSrc": "21989:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "21989:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22068:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "22068:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22076:2:18",
																				"nodeType": "YulLiteral",
																				"src": "22076:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22064:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "22064:3:18"
																		},
																		"nativeSrc": "22064:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22064:15:18"
																	},
																	{
																		"hexValue": "6e6720616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "22081:11:18",
																		"nodeType": "YulLiteral",
																		"src": "22081:11:18",
																		"type": "",
																		"value": "ng amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22057:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "22057:6:18"
																},
																"nativeSrc": "22057:36:18",
																"nodeType": "YulFunctionCall",
																"src": "22057:36:18"
															},
															"nativeSrc": "22057:36:18",
															"nodeType": "YulExpressionStatement",
															"src": "22057:36:18"
														}
													]
												},
												"name": "store_literal_in_memory_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24",
												"nativeSrc": "21872:228:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21970:6:18",
														"nodeType": "YulTypedName",
														"src": "21970:6:18",
														"type": ""
													}
												],
												"src": "21872:228:18"
											},
											{
												"body": {
													"nativeSrc": "22252:220:18",
													"nodeType": "YulBlock",
													"src": "22252:220:18",
													"statements": [
														{
															"nativeSrc": "22262:74:18",
															"nodeType": "YulAssignment",
															"src": "22262:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22328:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "22328:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22333:2:18",
																		"nodeType": "YulLiteral",
																		"src": "22333:2:18",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22269:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "22269:58:18"
																},
																"nativeSrc": "22269:67:18",
																"nodeType": "YulFunctionCall",
																"src": "22269:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22262:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22262:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22434:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "22434:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24",
																	"nativeSrc": "22345:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "22345:88:18"
																},
																"nativeSrc": "22345:93:18",
																"nodeType": "YulFunctionCall",
																"src": "22345:93:18"
															},
															"nativeSrc": "22345:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "22345:93:18"
														},
														{
															"nativeSrc": "22447:19:18",
															"nodeType": "YulAssignment",
															"src": "22447:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22458:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "22458:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22463:2:18",
																		"nodeType": "YulLiteral",
																		"src": "22463:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22454:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22454:3:18"
																},
																"nativeSrc": "22454:12:18",
																"nodeType": "YulFunctionCall",
																"src": "22454:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22447:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22447:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22106:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22240:3:18",
														"nodeType": "YulTypedName",
														"src": "22240:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22248:3:18",
														"nodeType": "YulTypedName",
														"src": "22248:3:18",
														"type": ""
													}
												],
												"src": "22106:366:18"
											},
											{
												"body": {
													"nativeSrc": "22649:248:18",
													"nodeType": "YulBlock",
													"src": "22649:248:18",
													"statements": [
														{
															"nativeSrc": "22659:26:18",
															"nodeType": "YulAssignment",
															"src": "22659:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22671:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "22671:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22682:2:18",
																		"nodeType": "YulLiteral",
																		"src": "22682:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22667:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22667:3:18"
																},
																"nativeSrc": "22667:18:18",
																"nodeType": "YulFunctionCall",
																"src": "22667:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22659:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "22659:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22706:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "22706:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22717:1:18",
																				"nodeType": "YulLiteral",
																				"src": "22717:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22702:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "22702:3:18"
																		},
																		"nativeSrc": "22702:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22702:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22725:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "22725:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22731:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "22731:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22721:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "22721:3:18"
																		},
																		"nativeSrc": "22721:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22721:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22695:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "22695:6:18"
																},
																"nativeSrc": "22695:47:18",
																"nodeType": "YulFunctionCall",
																"src": "22695:47:18"
															},
															"nativeSrc": "22695:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "22695:47:18"
														},
														{
															"nativeSrc": "22751:139:18",
															"nodeType": "YulAssignment",
															"src": "22751:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22885:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "22885:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22759:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "22759:124:18"
																},
																"nativeSrc": "22759:131:18",
																"nodeType": "YulFunctionCall",
																"src": "22759:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22751:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "22751:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22478:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22629:9:18",
														"nodeType": "YulTypedName",
														"src": "22629:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22644:4:18",
														"nodeType": "YulTypedName",
														"src": "22644:4:18",
														"type": ""
													}
												],
												"src": "22478:419:18"
											},
											{
												"body": {
													"nativeSrc": "23009:120:18",
													"nodeType": "YulBlock",
													"src": "23009:120:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23031:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "23031:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23039:1:18",
																				"nodeType": "YulLiteral",
																				"src": "23039:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23027:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "23027:3:18"
																		},
																		"nativeSrc": "23027:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "23027:14:18"
																	},
																	{
																		"hexValue": "43616e6e6f742074726967676572206265666f7265206e657874207472696767",
																		"kind": "string",
																		"nativeSrc": "23043:34:18",
																		"nodeType": "YulLiteral",
																		"src": "23043:34:18",
																		"type": "",
																		"value": "Cannot trigger before next trigg"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23020:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "23020:6:18"
																},
																"nativeSrc": "23020:58:18",
																"nodeType": "YulFunctionCall",
																"src": "23020:58:18"
															},
															"nativeSrc": "23020:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "23020:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23099:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "23099:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23107:2:18",
																				"nodeType": "YulLiteral",
																				"src": "23107:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23095:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "23095:3:18"
																		},
																		"nativeSrc": "23095:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "23095:15:18"
																	},
																	{
																		"hexValue": "65722074696d65",
																		"kind": "string",
																		"nativeSrc": "23112:9:18",
																		"nodeType": "YulLiteral",
																		"src": "23112:9:18",
																		"type": "",
																		"value": "er time"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23088:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "23088:6:18"
																},
																"nativeSrc": "23088:34:18",
																"nodeType": "YulFunctionCall",
																"src": "23088:34:18"
															},
															"nativeSrc": "23088:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "23088:34:18"
														}
													]
												},
												"name": "store_literal_in_memory_f96280bb4f5b1f7479570483658bbfa7f265590669ee8baa295330b1374cab6c",
												"nativeSrc": "22903:226:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23001:6:18",
														"nodeType": "YulTypedName",
														"src": "23001:6:18",
														"type": ""
													}
												],
												"src": "22903:226:18"
											},
											{
												"body": {
													"nativeSrc": "23281:220:18",
													"nodeType": "YulBlock",
													"src": "23281:220:18",
													"statements": [
														{
															"nativeSrc": "23291:74:18",
															"nodeType": "YulAssignment",
															"src": "23291:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23357:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "23357:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23362:2:18",
																		"nodeType": "YulLiteral",
																		"src": "23362:2:18",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23298:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "23298:58:18"
																},
																"nativeSrc": "23298:67:18",
																"nodeType": "YulFunctionCall",
																"src": "23298:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23291:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23291:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23463:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "23463:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f96280bb4f5b1f7479570483658bbfa7f265590669ee8baa295330b1374cab6c",
																	"nativeSrc": "23374:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "23374:88:18"
																},
																"nativeSrc": "23374:93:18",
																"nodeType": "YulFunctionCall",
																"src": "23374:93:18"
															},
															"nativeSrc": "23374:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "23374:93:18"
														},
														{
															"nativeSrc": "23476:19:18",
															"nodeType": "YulAssignment",
															"src": "23476:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23487:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "23487:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23492:2:18",
																		"nodeType": "YulLiteral",
																		"src": "23492:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23483:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23483:3:18"
																},
																"nativeSrc": "23483:12:18",
																"nodeType": "YulFunctionCall",
																"src": "23483:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23476:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23476:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f96280bb4f5b1f7479570483658bbfa7f265590669ee8baa295330b1374cab6c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23135:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23269:3:18",
														"nodeType": "YulTypedName",
														"src": "23269:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23277:3:18",
														"nodeType": "YulTypedName",
														"src": "23277:3:18",
														"type": ""
													}
												],
												"src": "23135:366:18"
											},
											{
												"body": {
													"nativeSrc": "23678:248:18",
													"nodeType": "YulBlock",
													"src": "23678:248:18",
													"statements": [
														{
															"nativeSrc": "23688:26:18",
															"nodeType": "YulAssignment",
															"src": "23688:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23700:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "23700:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23711:2:18",
																		"nodeType": "YulLiteral",
																		"src": "23711:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23696:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23696:3:18"
																},
																"nativeSrc": "23696:18:18",
																"nodeType": "YulFunctionCall",
																"src": "23696:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23688:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "23688:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23735:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "23735:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23746:1:18",
																				"nodeType": "YulLiteral",
																				"src": "23746:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23731:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "23731:3:18"
																		},
																		"nativeSrc": "23731:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "23731:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23754:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "23754:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23760:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "23760:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23750:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "23750:3:18"
																		},
																		"nativeSrc": "23750:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "23750:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23724:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "23724:6:18"
																},
																"nativeSrc": "23724:47:18",
																"nodeType": "YulFunctionCall",
																"src": "23724:47:18"
															},
															"nativeSrc": "23724:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "23724:47:18"
														},
														{
															"nativeSrc": "23780:139:18",
															"nodeType": "YulAssignment",
															"src": "23780:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23914:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "23914:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f96280bb4f5b1f7479570483658bbfa7f265590669ee8baa295330b1374cab6c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23788:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "23788:124:18"
																},
																"nativeSrc": "23788:131:18",
																"nodeType": "YulFunctionCall",
																"src": "23788:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23780:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "23780:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f96280bb4f5b1f7479570483658bbfa7f265590669ee8baa295330b1374cab6c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23507:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23658:9:18",
														"nodeType": "YulTypedName",
														"src": "23658:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23673:4:18",
														"nodeType": "YulTypedName",
														"src": "23673:4:18",
														"type": ""
													}
												],
												"src": "23507:419:18"
											},
											{
												"body": {
													"nativeSrc": "23976:61:18",
													"nodeType": "YulBlock",
													"src": "23976:61:18",
													"statements": [
														{
															"nativeSrc": "23986:45:18",
															"nodeType": "YulAssignment",
															"src": "23986:45:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24001:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "24001:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24008:22:18",
																		"nodeType": "YulLiteral",
																		"src": "24008:22:18",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "23997:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23997:3:18"
																},
																"nativeSrc": "23997:34:18",
																"nodeType": "YulFunctionCall",
																"src": "23997:34:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "23986:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "23986:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nativeSrc": "23932:105:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23958:5:18",
														"nodeType": "YulTypedName",
														"src": "23958:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "23968:7:18",
														"nodeType": "YulTypedName",
														"src": "23968:7:18",
														"type": ""
													}
												],
												"src": "23932:105:18"
											},
											{
												"body": {
													"nativeSrc": "24085:78:18",
													"nodeType": "YulBlock",
													"src": "24085:78:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "24141:16:18",
																"nodeType": "YulBlock",
																"src": "24141:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "24150:1:18",
																					"nodeType": "YulLiteral",
																					"src": "24150:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24153:1:18",
																					"nodeType": "YulLiteral",
																					"src": "24153:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "24143:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "24143:6:18"
																			},
																			"nativeSrc": "24143:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "24143:12:18"
																		},
																		"nativeSrc": "24143:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "24143:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "24108:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "24108:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "24132:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "24132:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nativeSrc": "24115:16:18",
																					"nodeType": "YulIdentifier",
																					"src": "24115:16:18"
																				},
																				"nativeSrc": "24115:23:18",
																				"nodeType": "YulFunctionCall",
																				"src": "24115:23:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "24105:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "24105:2:18"
																		},
																		"nativeSrc": "24105:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "24105:34:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "24098:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "24098:6:18"
																},
																"nativeSrc": "24098:42:18",
																"nodeType": "YulFunctionCall",
																"src": "24098:42:18"
															},
															"nativeSrc": "24095:62:18",
															"nodeType": "YulIf",
															"src": "24095:62:18"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nativeSrc": "24043:120:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24078:5:18",
														"nodeType": "YulTypedName",
														"src": "24078:5:18",
														"type": ""
													}
												],
												"src": "24043:120:18"
											},
											{
												"body": {
													"nativeSrc": "24231:79:18",
													"nodeType": "YulBlock",
													"src": "24231:79:18",
													"statements": [
														{
															"nativeSrc": "24241:22:18",
															"nodeType": "YulAssignment",
															"src": "24241:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "24256:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "24256:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "24250:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "24250:5:18"
																},
																"nativeSrc": "24250:13:18",
																"nodeType": "YulFunctionCall",
																"src": "24250:13:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "24241:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "24241:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24298:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "24298:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nativeSrc": "24272:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "24272:25:18"
																},
																"nativeSrc": "24272:32:18",
																"nodeType": "YulFunctionCall",
																"src": "24272:32:18"
															},
															"nativeSrc": "24272:32:18",
															"nodeType": "YulExpressionStatement",
															"src": "24272:32:18"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nativeSrc": "24169:141:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "24209:6:18",
														"nodeType": "YulTypedName",
														"src": "24209:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "24217:3:18",
														"nodeType": "YulTypedName",
														"src": "24217:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "24225:5:18",
														"nodeType": "YulTypedName",
														"src": "24225:5:18",
														"type": ""
													}
												],
												"src": "24169:141:18"
											},
											{
												"body": {
													"nativeSrc": "24360:32:18",
													"nodeType": "YulBlock",
													"src": "24360:32:18",
													"statements": [
														{
															"nativeSrc": "24370:16:18",
															"nodeType": "YulAssignment",
															"src": "24370:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "24381:5:18",
																"nodeType": "YulIdentifier",
																"src": "24381:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "24370:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "24370:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "24316:76:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24342:5:18",
														"nodeType": "YulTypedName",
														"src": "24342:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "24352:7:18",
														"nodeType": "YulTypedName",
														"src": "24352:7:18",
														"type": ""
													}
												],
												"src": "24316:76:18"
											},
											{
												"body": {
													"nativeSrc": "24440:78:18",
													"nodeType": "YulBlock",
													"src": "24440:78:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "24496:16:18",
																"nodeType": "YulBlock",
																"src": "24496:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "24505:1:18",
																					"nodeType": "YulLiteral",
																					"src": "24505:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24508:1:18",
																					"nodeType": "YulLiteral",
																					"src": "24508:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "24498:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "24498:6:18"
																			},
																			"nativeSrc": "24498:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "24498:12:18"
																		},
																		"nativeSrc": "24498:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "24498:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "24463:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "24463:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "24487:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "24487:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "24470:16:18",
																					"nodeType": "YulIdentifier",
																					"src": "24470:16:18"
																				},
																				"nativeSrc": "24470:23:18",
																				"nodeType": "YulFunctionCall",
																				"src": "24470:23:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "24460:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "24460:2:18"
																		},
																		"nativeSrc": "24460:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "24460:34:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "24453:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "24453:6:18"
																},
																"nativeSrc": "24453:42:18",
																"nodeType": "YulFunctionCall",
																"src": "24453:42:18"
															},
															"nativeSrc": "24450:62:18",
															"nodeType": "YulIf",
															"src": "24450:62:18"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "24398:120:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24433:5:18",
														"nodeType": "YulTypedName",
														"src": "24433:5:18",
														"type": ""
													}
												],
												"src": "24398:120:18"
											},
											{
												"body": {
													"nativeSrc": "24586:79:18",
													"nodeType": "YulBlock",
													"src": "24586:79:18",
													"statements": [
														{
															"nativeSrc": "24596:22:18",
															"nodeType": "YulAssignment",
															"src": "24596:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "24611:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "24611:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "24605:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "24605:5:18"
																},
																"nativeSrc": "24605:13:18",
																"nodeType": "YulFunctionCall",
																"src": "24605:13:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "24596:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "24596:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24653:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "24653:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "24627:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "24627:25:18"
																},
																"nativeSrc": "24627:32:18",
																"nodeType": "YulFunctionCall",
																"src": "24627:32:18"
															},
															"nativeSrc": "24627:32:18",
															"nodeType": "YulExpressionStatement",
															"src": "24627:32:18"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "24524:141:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "24564:6:18",
														"nodeType": "YulTypedName",
														"src": "24564:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "24572:3:18",
														"nodeType": "YulTypedName",
														"src": "24572:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "24580:5:18",
														"nodeType": "YulTypedName",
														"src": "24580:5:18",
														"type": ""
													}
												],
												"src": "24524:141:18"
											},
											{
												"body": {
													"nativeSrc": "24734:80:18",
													"nodeType": "YulBlock",
													"src": "24734:80:18",
													"statements": [
														{
															"nativeSrc": "24744:22:18",
															"nodeType": "YulAssignment",
															"src": "24744:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "24759:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "24759:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "24753:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "24753:5:18"
																},
																"nativeSrc": "24753:13:18",
																"nodeType": "YulFunctionCall",
																"src": "24753:13:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "24744:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "24744:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24802:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "24802:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "24775:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "24775:26:18"
																},
																"nativeSrc": "24775:33:18",
																"nodeType": "YulFunctionCall",
																"src": "24775:33:18"
															},
															"nativeSrc": "24775:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "24775:33:18"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "24671:143:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "24712:6:18",
														"nodeType": "YulTypedName",
														"src": "24712:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "24720:3:18",
														"nodeType": "YulTypedName",
														"src": "24720:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "24728:5:18",
														"nodeType": "YulTypedName",
														"src": "24728:5:18",
														"type": ""
													}
												],
												"src": "24671:143:18"
											},
											{
												"body": {
													"nativeSrc": "24962:829:18",
													"nodeType": "YulBlock",
													"src": "24962:829:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "25009:83:18",
																"nodeType": "YulBlock",
																"src": "25009:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "25011:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "25011:77:18"
																			},
																			"nativeSrc": "25011:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "25011:79:18"
																		},
																		"nativeSrc": "25011:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "25011:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "24983:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "24983:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24992:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "24992:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24979:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "24979:3:18"
																		},
																		"nativeSrc": "24979:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "24979:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25004:3:18",
																		"nodeType": "YulLiteral",
																		"src": "25004:3:18",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "24975:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "24975:3:18"
																},
																"nativeSrc": "24975:33:18",
																"nodeType": "YulFunctionCall",
																"src": "24975:33:18"
															},
															"nativeSrc": "24972:120:18",
															"nodeType": "YulIf",
															"src": "24972:120:18"
														},
														{
															"nativeSrc": "25102:127:18",
															"nodeType": "YulBlock",
															"src": "25102:127:18",
															"statements": [
																{
																	"nativeSrc": "25117:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "25117:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "25131:1:18",
																		"nodeType": "YulLiteral",
																		"src": "25131:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "25121:6:18",
																			"nodeType": "YulTypedName",
																			"src": "25121:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "25146:73:18",
																	"nodeType": "YulAssignment",
																	"src": "25146:73:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "25191:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "25191:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "25202:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "25202:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "25187:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "25187:3:18"
																				},
																				"nativeSrc": "25187:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "25187:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "25211:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "25211:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "25156:30:18",
																			"nodeType": "YulIdentifier",
																			"src": "25156:30:18"
																		},
																		"nativeSrc": "25156:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25156:63:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "25146:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "25146:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "25239:128:18",
															"nodeType": "YulBlock",
															"src": "25239:128:18",
															"statements": [
																{
																	"nativeSrc": "25254:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "25254:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "25268:2:18",
																		"nodeType": "YulLiteral",
																		"src": "25268:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "25258:6:18",
																			"nodeType": "YulTypedName",
																			"src": "25258:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "25284:73:18",
																	"nodeType": "YulAssignment",
																	"src": "25284:73:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "25329:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "25329:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "25340:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "25340:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "25325:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "25325:3:18"
																				},
																				"nativeSrc": "25325:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "25325:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "25349:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "25349:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "25294:30:18",
																			"nodeType": "YulIdentifier",
																			"src": "25294:30:18"
																		},
																		"nativeSrc": "25294:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25294:63:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "25284:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "25284:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "25377:129:18",
															"nodeType": "YulBlock",
															"src": "25377:129:18",
															"statements": [
																{
																	"nativeSrc": "25392:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "25392:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "25406:2:18",
																		"nodeType": "YulLiteral",
																		"src": "25406:2:18",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "25396:6:18",
																			"nodeType": "YulTypedName",
																			"src": "25396:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "25422:74:18",
																	"nodeType": "YulAssignment",
																	"src": "25422:74:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "25468:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "25468:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "25479:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "25479:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "25464:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "25464:3:18"
																				},
																				"nativeSrc": "25464:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "25464:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "25488:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "25488:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "25432:31:18",
																			"nodeType": "YulIdentifier",
																			"src": "25432:31:18"
																		},
																		"nativeSrc": "25432:64:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25432:64:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "25422:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "25422:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "25516:129:18",
															"nodeType": "YulBlock",
															"src": "25516:129:18",
															"statements": [
																{
																	"nativeSrc": "25531:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "25531:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "25545:2:18",
																		"nodeType": "YulLiteral",
																		"src": "25545:2:18",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "25535:6:18",
																			"nodeType": "YulTypedName",
																			"src": "25535:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "25561:74:18",
																	"nodeType": "YulAssignment",
																	"src": "25561:74:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "25607:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "25607:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "25618:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "25618:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "25603:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "25603:3:18"
																				},
																				"nativeSrc": "25603:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "25603:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "25627:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "25627:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "25571:31:18",
																			"nodeType": "YulIdentifier",
																			"src": "25571:31:18"
																		},
																		"nativeSrc": "25571:64:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25571:64:18"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "25561:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "25561:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "25655:129:18",
															"nodeType": "YulBlock",
															"src": "25655:129:18",
															"statements": [
																{
																	"nativeSrc": "25670:17:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "25670:17:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "25684:3:18",
																		"nodeType": "YulLiteral",
																		"src": "25684:3:18",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "25674:6:18",
																			"nodeType": "YulTypedName",
																			"src": "25674:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "25701:73:18",
																	"nodeType": "YulAssignment",
																	"src": "25701:73:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "25746:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "25746:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "25757:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "25757:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "25742:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "25742:3:18"
																				},
																				"nativeSrc": "25742:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "25742:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "25766:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "25766:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "25711:30:18",
																			"nodeType": "YulIdentifier",
																			"src": "25711:30:18"
																		},
																		"nativeSrc": "25711:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25711:63:18"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "25701:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "25701:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "24820:971:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24900:9:18",
														"nodeType": "YulTypedName",
														"src": "24900:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "24911:7:18",
														"nodeType": "YulTypedName",
														"src": "24911:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "24923:6:18",
														"nodeType": "YulTypedName",
														"src": "24923:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24931:6:18",
														"nodeType": "YulTypedName",
														"src": "24931:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "24939:6:18",
														"nodeType": "YulTypedName",
														"src": "24939:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "24947:6:18",
														"nodeType": "YulTypedName",
														"src": "24947:6:18",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "24955:6:18",
														"nodeType": "YulTypedName",
														"src": "24955:6:18",
														"type": ""
													}
												],
												"src": "24820:971:18"
											},
											{
												"body": {
													"nativeSrc": "25840:43:18",
													"nodeType": "YulBlock",
													"src": "25840:43:18",
													"statements": [
														{
															"nativeSrc": "25850:27:18",
															"nodeType": "YulAssignment",
															"src": "25850:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25865:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "25865:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25872:4:18",
																		"nodeType": "YulLiteral",
																		"src": "25872:4:18",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "25861:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "25861:3:18"
																},
																"nativeSrc": "25861:16:18",
																"nodeType": "YulFunctionCall",
																"src": "25861:16:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "25850:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "25850:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "25797:86:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25822:5:18",
														"nodeType": "YulTypedName",
														"src": "25822:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "25832:7:18",
														"nodeType": "YulTypedName",
														"src": "25832:7:18",
														"type": ""
													}
												],
												"src": "25797:86:18"
											},
											{
												"body": {
													"nativeSrc": "25930:77:18",
													"nodeType": "YulBlock",
													"src": "25930:77:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "25985:16:18",
																"nodeType": "YulBlock",
																"src": "25985:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "25994:1:18",
																					"nodeType": "YulLiteral",
																					"src": "25994:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "25997:1:18",
																					"nodeType": "YulLiteral",
																					"src": "25997:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "25987:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "25987:6:18"
																			},
																			"nativeSrc": "25987:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "25987:12:18"
																		},
																		"nativeSrc": "25987:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "25987:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "25953:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "25953:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "25976:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "25976:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "25960:15:18",
																					"nodeType": "YulIdentifier",
																					"src": "25960:15:18"
																				},
																				"nativeSrc": "25960:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "25960:22:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "25950:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "25950:2:18"
																		},
																		"nativeSrc": "25950:33:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25950:33:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "25943:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "25943:6:18"
																},
																"nativeSrc": "25943:41:18",
																"nodeType": "YulFunctionCall",
																"src": "25943:41:18"
															},
															"nativeSrc": "25940:61:18",
															"nodeType": "YulIf",
															"src": "25940:61:18"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "25889:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25923:5:18",
														"nodeType": "YulTypedName",
														"src": "25923:5:18",
														"type": ""
													}
												],
												"src": "25889:118:18"
											},
											{
												"body": {
													"nativeSrc": "26074:78:18",
													"nodeType": "YulBlock",
													"src": "26074:78:18",
													"statements": [
														{
															"nativeSrc": "26084:22:18",
															"nodeType": "YulAssignment",
															"src": "26084:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "26099:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "26099:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "26093:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "26093:5:18"
																},
																"nativeSrc": "26093:13:18",
																"nodeType": "YulFunctionCall",
																"src": "26093:13:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "26084:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "26084:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "26140:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "26140:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "26115:24:18",
																	"nodeType": "YulIdentifier",
																	"src": "26115:24:18"
																},
																"nativeSrc": "26115:31:18",
																"nodeType": "YulFunctionCall",
																"src": "26115:31:18"
															},
															"nativeSrc": "26115:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "26115:31:18"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "26013:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "26052:6:18",
														"nodeType": "YulTypedName",
														"src": "26052:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "26060:3:18",
														"nodeType": "YulTypedName",
														"src": "26060:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "26068:5:18",
														"nodeType": "YulTypedName",
														"src": "26068:5:18",
														"type": ""
													}
												],
												"src": "26013:139:18"
											},
											{
												"body": {
													"nativeSrc": "26233:272:18",
													"nodeType": "YulBlock",
													"src": "26233:272:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "26279:83:18",
																"nodeType": "YulBlock",
																"src": "26279:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "26281:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "26281:77:18"
																			},
																			"nativeSrc": "26281:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "26281:79:18"
																		},
																		"nativeSrc": "26281:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "26281:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "26254:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "26254:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26263:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "26263:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26250:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "26250:3:18"
																		},
																		"nativeSrc": "26250:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "26250:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26275:2:18",
																		"nodeType": "YulLiteral",
																		"src": "26275:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "26246:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "26246:3:18"
																},
																"nativeSrc": "26246:32:18",
																"nodeType": "YulFunctionCall",
																"src": "26246:32:18"
															},
															"nativeSrc": "26243:119:18",
															"nodeType": "YulIf",
															"src": "26243:119:18"
														},
														{
															"nativeSrc": "26372:126:18",
															"nodeType": "YulBlock",
															"src": "26372:126:18",
															"statements": [
																{
																	"nativeSrc": "26387:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "26387:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "26401:1:18",
																		"nodeType": "YulLiteral",
																		"src": "26401:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "26391:6:18",
																			"nodeType": "YulTypedName",
																			"src": "26391:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "26416:72:18",
																	"nodeType": "YulAssignment",
																	"src": "26416:72:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "26460:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "26460:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "26471:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "26471:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "26456:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "26456:3:18"
																				},
																				"nativeSrc": "26456:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "26456:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "26480:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "26480:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "26426:29:18",
																			"nodeType": "YulIdentifier",
																			"src": "26426:29:18"
																		},
																		"nativeSrc": "26426:62:18",
																		"nodeType": "YulFunctionCall",
																		"src": "26426:62:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "26416:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "26416:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "26158:347:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26203:9:18",
														"nodeType": "YulTypedName",
														"src": "26203:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "26214:7:18",
														"nodeType": "YulTypedName",
														"src": "26214:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "26226:6:18",
														"nodeType": "YulTypedName",
														"src": "26226:6:18",
														"type": ""
													}
												],
												"src": "26158:347:18"
											},
											{
												"body": {
													"nativeSrc": "26562:51:18",
													"nodeType": "YulBlock",
													"src": "26562:51:18",
													"statements": [
														{
															"nativeSrc": "26572:34:18",
															"nodeType": "YulAssignment",
															"src": "26572:34:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26597:1:18",
																		"nodeType": "YulLiteral",
																		"src": "26597:1:18",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "26600:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "26600:5:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "26593:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "26593:3:18"
																},
																"nativeSrc": "26593:13:18",
																"nodeType": "YulFunctionCall",
																"src": "26593:13:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "26572:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "26572:8:18"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "26511:102:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "26543:5:18",
														"nodeType": "YulTypedName",
														"src": "26543:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "26553:8:18",
														"nodeType": "YulTypedName",
														"src": "26553:8:18",
														"type": ""
													}
												],
												"src": "26511:102:18"
											},
											{
												"body": {
													"nativeSrc": "26692:775:18",
													"nodeType": "YulBlock",
													"src": "26692:775:18",
													"statements": [
														{
															"nativeSrc": "26702:15:18",
															"nodeType": "YulAssignment",
															"src": "26702:15:18",
															"value": {
																"name": "_power",
																"nativeSrc": "26711:6:18",
																"nodeType": "YulIdentifier",
																"src": "26711:6:18"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "26702:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "26702:5:18"
																}
															]
														},
														{
															"nativeSrc": "26726:14:18",
															"nodeType": "YulAssignment",
															"src": "26726:14:18",
															"value": {
																"name": "_base",
																"nativeSrc": "26735:5:18",
																"nodeType": "YulIdentifier",
																"src": "26735:5:18"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "26726:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "26726:4:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "26784:677:18",
																"nodeType": "YulBlock",
																"src": "26784:677:18",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "26872:22:18",
																			"nodeType": "YulBlock",
																			"src": "26872:22:18",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "26874:16:18",
																							"nodeType": "YulIdentifier",
																							"src": "26874:16:18"
																						},
																						"nativeSrc": "26874:18:18",
																						"nodeType": "YulFunctionCall",
																						"src": "26874:18:18"
																					},
																					"nativeSrc": "26874:18:18",
																					"nodeType": "YulExpressionStatement",
																					"src": "26874:18:18"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "26850:4:18",
																					"nodeType": "YulIdentifier",
																					"src": "26850:4:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "26860:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "26860:3:18"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "26865:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "26865:4:18"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "26856:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "26856:3:18"
																					},
																					"nativeSrc": "26856:14:18",
																					"nodeType": "YulFunctionCall",
																					"src": "26856:14:18"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "26847:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "26847:2:18"
																			},
																			"nativeSrc": "26847:24:18",
																			"nodeType": "YulFunctionCall",
																			"src": "26847:24:18"
																		},
																		"nativeSrc": "26844:50:18",
																		"nodeType": "YulIf",
																		"src": "26844:50:18"
																	},
																	{
																		"body": {
																			"nativeSrc": "26939:419:18",
																			"nodeType": "YulBlock",
																			"src": "26939:419:18",
																			"statements": [
																				{
																					"nativeSrc": "27319:25:18",
																					"nodeType": "YulAssignment",
																					"src": "27319:25:18",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "27332:5:18",
																								"nodeType": "YulIdentifier",
																								"src": "27332:5:18"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "27339:4:18",
																								"nodeType": "YulIdentifier",
																								"src": "27339:4:18"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "27328:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "27328:3:18"
																						},
																						"nativeSrc": "27328:16:18",
																						"nodeType": "YulFunctionCall",
																						"src": "27328:16:18"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "27319:5:18",
																							"nodeType": "YulIdentifier",
																							"src": "27319:5:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "26914:8:18",
																					"nodeType": "YulIdentifier",
																					"src": "26914:8:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "26924:1:18",
																					"nodeType": "YulLiteral",
																					"src": "26924:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "26910:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "26910:3:18"
																			},
																			"nativeSrc": "26910:16:18",
																			"nodeType": "YulFunctionCall",
																			"src": "26910:16:18"
																		},
																		"nativeSrc": "26907:451:18",
																		"nodeType": "YulIf",
																		"src": "26907:451:18"
																	},
																	{
																		"nativeSrc": "27371:23:18",
																		"nodeType": "YulAssignment",
																		"src": "27371:23:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "27383:4:18",
																					"nodeType": "YulIdentifier",
																					"src": "27383:4:18"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "27389:4:18",
																					"nodeType": "YulIdentifier",
																					"src": "27389:4:18"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "27379:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "27379:3:18"
																			},
																			"nativeSrc": "27379:15:18",
																			"nodeType": "YulFunctionCall",
																			"src": "27379:15:18"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "27371:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "27371:4:18"
																			}
																		]
																	},
																	{
																		"nativeSrc": "27407:44:18",
																		"nodeType": "YulAssignment",
																		"src": "27407:44:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "27442:8:18",
																					"nodeType": "YulIdentifier",
																					"src": "27442:8:18"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "27419:22:18",
																				"nodeType": "YulIdentifier",
																				"src": "27419:22:18"
																			},
																			"nativeSrc": "27419:32:18",
																			"nodeType": "YulFunctionCall",
																			"src": "27419:32:18"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "27407:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "27407:8:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "26760:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "26760:8:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26770:1:18",
																		"nodeType": "YulLiteral",
																		"src": "26770:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "26757:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "26757:2:18"
																},
																"nativeSrc": "26757:15:18",
																"nodeType": "YulFunctionCall",
																"src": "26757:15:18"
															},
															"nativeSrc": "26749:712:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "26773:2:18",
																"nodeType": "YulBlock",
																"src": "26773:2:18",
																"statements": []
															},
															"pre": {
																"nativeSrc": "26753:3:18",
																"nodeType": "YulBlock",
																"src": "26753:3:18",
																"statements": []
															},
															"src": "26749:712:18"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "26619:848:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "26647:6:18",
														"nodeType": "YulTypedName",
														"src": "26647:6:18",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "26655:5:18",
														"nodeType": "YulTypedName",
														"src": "26655:5:18",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "26662:8:18",
														"nodeType": "YulTypedName",
														"src": "26662:8:18",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "26672:3:18",
														"nodeType": "YulTypedName",
														"src": "26672:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "26680:5:18",
														"nodeType": "YulTypedName",
														"src": "26680:5:18",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "26687:4:18",
														"nodeType": "YulTypedName",
														"src": "26687:4:18",
														"type": ""
													}
												],
												"src": "26619:848:18"
											},
											{
												"body": {
													"nativeSrc": "27533:1013:18",
													"nodeType": "YulBlock",
													"src": "27533:1013:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "27728:20:18",
																"nodeType": "YulBlock",
																"src": "27728:20:18",
																"statements": [
																	{
																		"nativeSrc": "27730:10:18",
																		"nodeType": "YulAssignment",
																		"src": "27730:10:18",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "27739:1:18",
																			"nodeType": "YulLiteral",
																			"src": "27739:1:18",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "27730:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "27730:5:18"
																			}
																		]
																	},
																	{
																		"nativeSrc": "27741:5:18",
																		"nodeType": "YulLeave",
																		"src": "27741:5:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "27718:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "27718:8:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "27711:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "27711:6:18"
																},
																"nativeSrc": "27711:16:18",
																"nodeType": "YulFunctionCall",
																"src": "27711:16:18"
															},
															"nativeSrc": "27708:40:18",
															"nodeType": "YulIf",
															"src": "27708:40:18"
														},
														{
															"body": {
																"nativeSrc": "27773:20:18",
																"nodeType": "YulBlock",
																"src": "27773:20:18",
																"statements": [
																	{
																		"nativeSrc": "27775:10:18",
																		"nodeType": "YulAssignment",
																		"src": "27775:10:18",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "27784:1:18",
																			"nodeType": "YulLiteral",
																			"src": "27784:1:18",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "27775:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "27775:5:18"
																			}
																		]
																	},
																	{
																		"nativeSrc": "27786:5:18",
																		"nodeType": "YulLeave",
																		"src": "27786:5:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "27767:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "27767:4:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "27760:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "27760:6:18"
																},
																"nativeSrc": "27760:12:18",
																"nodeType": "YulFunctionCall",
																"src": "27760:12:18"
															},
															"nativeSrc": "27757:36:18",
															"nodeType": "YulIf",
															"src": "27757:36:18"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "27903:20:18",
																		"nodeType": "YulBlock",
																		"src": "27903:20:18",
																		"statements": [
																			{
																				"nativeSrc": "27905:10:18",
																				"nodeType": "YulAssignment",
																				"src": "27905:10:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "27914:1:18",
																					"nodeType": "YulLiteral",
																					"src": "27914:1:18",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "27905:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "27905:5:18"
																					}
																				]
																			},
																			{
																				"nativeSrc": "27916:5:18",
																				"nodeType": "YulLeave",
																				"src": "27916:5:18"
																			}
																		]
																	},
																	"nativeSrc": "27896:27:18",
																	"nodeType": "YulCase",
																	"src": "27896:27:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "27901:1:18",
																		"nodeType": "YulLiteral",
																		"src": "27901:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "27947:176:18",
																		"nodeType": "YulBlock",
																		"src": "27947:176:18",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "27982:22:18",
																					"nodeType": "YulBlock",
																					"src": "27982:22:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "27984:16:18",
																									"nodeType": "YulIdentifier",
																									"src": "27984:16:18"
																								},
																								"nativeSrc": "27984:18:18",
																								"nodeType": "YulFunctionCall",
																								"src": "27984:18:18"
																							},
																							"nativeSrc": "27984:18:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "27984:18:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "27967:8:18",
																							"nodeType": "YulIdentifier",
																							"src": "27967:8:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "27977:3:18",
																							"nodeType": "YulLiteral",
																							"src": "27977:3:18",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "27964:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "27964:2:18"
																					},
																					"nativeSrc": "27964:17:18",
																					"nodeType": "YulFunctionCall",
																					"src": "27964:17:18"
																				},
																				"nativeSrc": "27961:43:18",
																				"nodeType": "YulIf",
																				"src": "27961:43:18"
																			},
																			{
																				"nativeSrc": "28017:25:18",
																				"nodeType": "YulAssignment",
																				"src": "28017:25:18",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "28030:1:18",
																							"nodeType": "YulLiteral",
																							"src": "28030:1:18",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "28033:8:18",
																							"nodeType": "YulIdentifier",
																							"src": "28033:8:18"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "28026:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "28026:3:18"
																					},
																					"nativeSrc": "28026:16:18",
																					"nodeType": "YulFunctionCall",
																					"src": "28026:16:18"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "28017:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "28017:5:18"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "28073:22:18",
																					"nodeType": "YulBlock",
																					"src": "28073:22:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "28075:16:18",
																									"nodeType": "YulIdentifier",
																									"src": "28075:16:18"
																								},
																								"nativeSrc": "28075:18:18",
																								"nodeType": "YulFunctionCall",
																								"src": "28075:18:18"
																							},
																							"nativeSrc": "28075:18:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "28075:18:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "28061:5:18",
																							"nodeType": "YulIdentifier",
																							"src": "28061:5:18"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "28068:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "28068:3:18"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "28058:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "28058:2:18"
																					},
																					"nativeSrc": "28058:14:18",
																					"nodeType": "YulFunctionCall",
																					"src": "28058:14:18"
																				},
																				"nativeSrc": "28055:40:18",
																				"nodeType": "YulIf",
																				"src": "28055:40:18"
																			},
																			{
																				"nativeSrc": "28108:5:18",
																				"nodeType": "YulLeave",
																				"src": "28108:5:18"
																			}
																		]
																	},
																	"nativeSrc": "27932:191:18",
																	"nodeType": "YulCase",
																	"src": "27932:191:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "27937:1:18",
																		"nodeType": "YulLiteral",
																		"src": "27937:1:18",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "27853:4:18",
																"nodeType": "YulIdentifier",
																"src": "27853:4:18"
															},
															"nativeSrc": "27846:277:18",
															"nodeType": "YulSwitch",
															"src": "27846:277:18"
														},
														{
															"body": {
																"nativeSrc": "28255:123:18",
																"nodeType": "YulBlock",
																"src": "28255:123:18",
																"statements": [
																	{
																		"nativeSrc": "28269:28:18",
																		"nodeType": "YulAssignment",
																		"src": "28269:28:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "28282:4:18",
																					"nodeType": "YulIdentifier",
																					"src": "28282:4:18"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "28288:8:18",
																					"nodeType": "YulIdentifier",
																					"src": "28288:8:18"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "28278:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "28278:3:18"
																			},
																			"nativeSrc": "28278:19:18",
																			"nodeType": "YulFunctionCall",
																			"src": "28278:19:18"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "28269:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "28269:5:18"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "28328:22:18",
																			"nodeType": "YulBlock",
																			"src": "28328:22:18",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "28330:16:18",
																							"nodeType": "YulIdentifier",
																							"src": "28330:16:18"
																						},
																						"nativeSrc": "28330:18:18",
																						"nodeType": "YulFunctionCall",
																						"src": "28330:18:18"
																					},
																					"nativeSrc": "28330:18:18",
																					"nodeType": "YulExpressionStatement",
																					"src": "28330:18:18"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "28316:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "28316:5:18"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "28323:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "28323:3:18"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "28313:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "28313:2:18"
																			},
																			"nativeSrc": "28313:14:18",
																			"nodeType": "YulFunctionCall",
																			"src": "28313:14:18"
																		},
																		"nativeSrc": "28310:40:18",
																		"nodeType": "YulIf",
																		"src": "28310:40:18"
																	},
																	{
																		"nativeSrc": "28363:5:18",
																		"nodeType": "YulLeave",
																		"src": "28363:5:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "28158:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "28158:4:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "28164:2:18",
																						"nodeType": "YulLiteral",
																						"src": "28164:2:18",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "28155:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "28155:2:18"
																				},
																				"nativeSrc": "28155:12:18",
																				"nodeType": "YulFunctionCall",
																				"src": "28155:12:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "28172:8:18",
																						"nodeType": "YulIdentifier",
																						"src": "28172:8:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "28182:2:18",
																						"nodeType": "YulLiteral",
																						"src": "28182:2:18",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "28169:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "28169:2:18"
																				},
																				"nativeSrc": "28169:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "28169:16:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "28151:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "28151:3:18"
																		},
																		"nativeSrc": "28151:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "28151:35:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "28207:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "28207:4:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "28213:3:18",
																						"nodeType": "YulLiteral",
																						"src": "28213:3:18",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "28204:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "28204:2:18"
																				},
																				"nativeSrc": "28204:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "28204:13:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "28222:8:18",
																						"nodeType": "YulIdentifier",
																						"src": "28222:8:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "28232:2:18",
																						"nodeType": "YulLiteral",
																						"src": "28232:2:18",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "28219:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "28219:2:18"
																				},
																				"nativeSrc": "28219:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "28219:16:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "28200:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "28200:3:18"
																		},
																		"nativeSrc": "28200:36:18",
																		"nodeType": "YulFunctionCall",
																		"src": "28200:36:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "28135:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "28135:2:18"
																},
																"nativeSrc": "28135:111:18",
																"nodeType": "YulFunctionCall",
																"src": "28135:111:18"
															},
															"nativeSrc": "28132:246:18",
															"nodeType": "YulIf",
															"src": "28132:246:18"
														},
														{
															"nativeSrc": "28388:57:18",
															"nodeType": "YulAssignment",
															"src": "28388:57:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "28422:1:18",
																		"nodeType": "YulLiteral",
																		"src": "28422:1:18",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "28425:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "28425:4:18"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "28431:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "28431:8:18"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "28441:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "28441:3:18"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "28403:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "28403:18:18"
																},
																"nativeSrc": "28403:42:18",
																"nodeType": "YulFunctionCall",
																"src": "28403:42:18"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "28388:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "28388:5:18"
																},
																{
																	"name": "base",
																	"nativeSrc": "28395:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "28395:4:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "28484:22:18",
																"nodeType": "YulBlock",
																"src": "28484:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "28486:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "28486:16:18"
																			},
																			"nativeSrc": "28486:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "28486:18:18"
																		},
																		"nativeSrc": "28486:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "28486:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "28461:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "28461:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "28472:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "28472:3:18"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "28477:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "28477:4:18"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "28468:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "28468:3:18"
																		},
																		"nativeSrc": "28468:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "28468:14:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "28458:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "28458:2:18"
																},
																"nativeSrc": "28458:25:18",
																"nodeType": "YulFunctionCall",
																"src": "28458:25:18"
															},
															"nativeSrc": "28455:51:18",
															"nodeType": "YulIf",
															"src": "28455:51:18"
														},
														{
															"nativeSrc": "28515:25:18",
															"nodeType": "YulAssignment",
															"src": "28515:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "28528:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "28528:5:18"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "28535:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "28535:4:18"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "28524:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "28524:3:18"
																},
																"nativeSrc": "28524:16:18",
																"nodeType": "YulFunctionCall",
																"src": "28524:16:18"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "28515:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "28515:5:18"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "27473:1073:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "27503:4:18",
														"nodeType": "YulTypedName",
														"src": "27503:4:18",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "27509:8:18",
														"nodeType": "YulTypedName",
														"src": "27509:8:18",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "27519:3:18",
														"nodeType": "YulTypedName",
														"src": "27519:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "27527:5:18",
														"nodeType": "YulTypedName",
														"src": "27527:5:18",
														"type": ""
													}
												],
												"src": "27473:1073:18"
											},
											{
												"body": {
													"nativeSrc": "28618:219:18",
													"nodeType": "YulBlock",
													"src": "28618:219:18",
													"statements": [
														{
															"nativeSrc": "28628:31:18",
															"nodeType": "YulAssignment",
															"src": "28628:31:18",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "28654:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "28654:4:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "28636:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "28636:17:18"
																},
																"nativeSrc": "28636:23:18",
																"nodeType": "YulFunctionCall",
																"src": "28636:23:18"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "28628:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "28628:4:18"
																}
															]
														},
														{
															"nativeSrc": "28668:39:18",
															"nodeType": "YulAssignment",
															"src": "28668:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "28698:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "28698:8:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "28680:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "28680:17:18"
																},
																"nativeSrc": "28680:27:18",
																"nodeType": "YulFunctionCall",
																"src": "28680:27:18"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "28668:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "28668:8:18"
																}
															]
														},
														{
															"nativeSrc": "28717:113:18",
															"nodeType": "YulAssignment",
															"src": "28717:113:18",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "28747:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "28747:4:18"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "28753:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "28753:8:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28763:66:18",
																		"nodeType": "YulLiteral",
																		"src": "28763:66:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "28726:20:18",
																	"nodeType": "YulIdentifier",
																	"src": "28726:20:18"
																},
																"nativeSrc": "28726:104:18",
																"nodeType": "YulFunctionCall",
																"src": "28726:104:18"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "28717:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "28717:5:18"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "28552:285:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "28593:4:18",
														"nodeType": "YulTypedName",
														"src": "28593:4:18",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "28599:8:18",
														"nodeType": "YulTypedName",
														"src": "28599:8:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "28612:5:18",
														"nodeType": "YulTypedName",
														"src": "28612:5:18",
														"type": ""
													}
												],
												"src": "28552:285:18"
											},
											{
												"body": {
													"nativeSrc": "28891:362:18",
													"nodeType": "YulBlock",
													"src": "28891:362:18",
													"statements": [
														{
															"nativeSrc": "28901:25:18",
															"nodeType": "YulAssignment",
															"src": "28901:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "28924:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "28924:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "28906:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "28906:17:18"
																},
																"nativeSrc": "28906:20:18",
																"nodeType": "YulFunctionCall",
																"src": "28906:20:18"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "28901:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "28901:1:18"
																}
															]
														},
														{
															"nativeSrc": "28935:25:18",
															"nodeType": "YulAssignment",
															"src": "28935:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "28958:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "28958:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "28940:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "28940:17:18"
																},
																"nativeSrc": "28940:20:18",
																"nodeType": "YulFunctionCall",
																"src": "28940:20:18"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "28935:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "28935:1:18"
																}
															]
														},
														{
															"nativeSrc": "28969:28:18",
															"nodeType": "YulVariableDeclaration",
															"src": "28969:28:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "28992:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "28992:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "28995:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "28995:1:18"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "28988:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "28988:3:18"
																},
																"nativeSrc": "28988:9:18",
																"nodeType": "YulFunctionCall",
																"src": "28988:9:18"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "28973:11:18",
																	"nodeType": "YulTypedName",
																	"src": "28973:11:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "29006:41:18",
															"nodeType": "YulAssignment",
															"src": "29006:41:18",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "29035:11:18",
																		"nodeType": "YulIdentifier",
																		"src": "29035:11:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "29017:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "29017:17:18"
																},
																"nativeSrc": "29017:30:18",
																"nodeType": "YulFunctionCall",
																"src": "29017:30:18"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "29006:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "29006:7:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "29224:22:18",
																"nodeType": "YulBlock",
																"src": "29224:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "29226:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "29226:16:18"
																			},
																			"nativeSrc": "29226:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "29226:18:18"
																		},
																		"nativeSrc": "29226:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "29226:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "29157:1:18",
																						"nodeType": "YulIdentifier",
																						"src": "29157:1:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "29150:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "29150:6:18"
																				},
																				"nativeSrc": "29150:9:18",
																				"nodeType": "YulFunctionCall",
																				"src": "29150:9:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "29180:1:18",
																						"nodeType": "YulIdentifier",
																						"src": "29180:1:18"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "29187:7:18",
																								"nodeType": "YulIdentifier",
																								"src": "29187:7:18"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "29196:1:18",
																								"nodeType": "YulIdentifier",
																								"src": "29196:1:18"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "29183:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "29183:3:18"
																						},
																						"nativeSrc": "29183:15:18",
																						"nodeType": "YulFunctionCall",
																						"src": "29183:15:18"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "29177:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "29177:2:18"
																				},
																				"nativeSrc": "29177:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "29177:22:18"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "29130:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "29130:2:18"
																		},
																		"nativeSrc": "29130:83:18",
																		"nodeType": "YulFunctionCall",
																		"src": "29130:83:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "29110:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "29110:6:18"
																},
																"nativeSrc": "29110:113:18",
																"nodeType": "YulFunctionCall",
																"src": "29110:113:18"
															},
															"nativeSrc": "29107:139:18",
															"nodeType": "YulIf",
															"src": "29107:139:18"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "28843:410:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "28874:1:18",
														"nodeType": "YulTypedName",
														"src": "28874:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "28877:1:18",
														"nodeType": "YulTypedName",
														"src": "28877:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "28883:7:18",
														"nodeType": "YulTypedName",
														"src": "28883:7:18",
														"type": ""
													}
												],
												"src": "28843:410:18"
											},
											{
												"body": {
													"nativeSrc": "29301:143:18",
													"nodeType": "YulBlock",
													"src": "29301:143:18",
													"statements": [
														{
															"nativeSrc": "29311:25:18",
															"nodeType": "YulAssignment",
															"src": "29311:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "29334:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "29334:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "29316:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "29316:17:18"
																},
																"nativeSrc": "29316:20:18",
																"nodeType": "YulFunctionCall",
																"src": "29316:20:18"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "29311:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "29311:1:18"
																}
															]
														},
														{
															"nativeSrc": "29345:25:18",
															"nodeType": "YulAssignment",
															"src": "29345:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "29368:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "29368:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "29350:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "29350:17:18"
																},
																"nativeSrc": "29350:20:18",
																"nodeType": "YulFunctionCall",
																"src": "29350:20:18"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "29345:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "29345:1:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "29392:22:18",
																"nodeType": "YulBlock",
																"src": "29392:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "29394:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "29394:16:18"
																			},
																			"nativeSrc": "29394:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "29394:18:18"
																		},
																		"nativeSrc": "29394:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "29394:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "29389:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "29389:1:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "29382:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "29382:6:18"
																},
																"nativeSrc": "29382:9:18",
																"nodeType": "YulFunctionCall",
																"src": "29382:9:18"
															},
															"nativeSrc": "29379:35:18",
															"nodeType": "YulIf",
															"src": "29379:35:18"
														},
														{
															"nativeSrc": "29424:14:18",
															"nodeType": "YulAssignment",
															"src": "29424:14:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "29433:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "29433:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "29436:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "29436:1:18"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "29429:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "29429:3:18"
																},
																"nativeSrc": "29429:9:18",
																"nodeType": "YulFunctionCall",
																"src": "29429:9:18"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "29424:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "29424:1:18"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "29259:185:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "29290:1:18",
														"nodeType": "YulTypedName",
														"src": "29290:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "29293:1:18",
														"nodeType": "YulTypedName",
														"src": "29293:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "29299:1:18",
														"nodeType": "YulTypedName",
														"src": "29299:1:18",
														"type": ""
													}
												],
												"src": "29259:185:18"
											},
											{
												"body": {
													"nativeSrc": "29478:152:18",
													"nodeType": "YulBlock",
													"src": "29478:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "29495:1:18",
																		"nodeType": "YulLiteral",
																		"src": "29495:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29498:77:18",
																		"nodeType": "YulLiteral",
																		"src": "29498:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29488:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "29488:6:18"
																},
																"nativeSrc": "29488:88:18",
																"nodeType": "YulFunctionCall",
																"src": "29488:88:18"
															},
															"nativeSrc": "29488:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "29488:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "29592:1:18",
																		"nodeType": "YulLiteral",
																		"src": "29592:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29595:4:18",
																		"nodeType": "YulLiteral",
																		"src": "29595:4:18",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29585:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "29585:6:18"
																},
																"nativeSrc": "29585:15:18",
																"nodeType": "YulFunctionCall",
																"src": "29585:15:18"
															},
															"nativeSrc": "29585:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "29585:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "29616:1:18",
																		"nodeType": "YulLiteral",
																		"src": "29616:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29619:4:18",
																		"nodeType": "YulLiteral",
																		"src": "29619:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "29609:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "29609:6:18"
																},
																"nativeSrc": "29609:15:18",
																"nodeType": "YulFunctionCall",
																"src": "29609:15:18"
															},
															"nativeSrc": "29609:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "29609:15:18"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "29450:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "29450:180:18"
											},
											{
												"body": {
													"nativeSrc": "29699:80:18",
													"nodeType": "YulBlock",
													"src": "29699:80:18",
													"statements": [
														{
															"nativeSrc": "29709:22:18",
															"nodeType": "YulAssignment",
															"src": "29709:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "29724:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "29724:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "29718:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "29718:5:18"
																},
																"nativeSrc": "29718:13:18",
																"nodeType": "YulFunctionCall",
																"src": "29718:13:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "29709:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "29709:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "29767:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "29767:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "29740:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "29740:26:18"
																},
																"nativeSrc": "29740:33:18",
																"nodeType": "YulFunctionCall",
																"src": "29740:33:18"
															},
															"nativeSrc": "29740:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "29740:33:18"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "29636:143:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "29677:6:18",
														"nodeType": "YulTypedName",
														"src": "29677:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "29685:3:18",
														"nodeType": "YulTypedName",
														"src": "29685:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "29693:5:18",
														"nodeType": "YulTypedName",
														"src": "29693:5:18",
														"type": ""
													}
												],
												"src": "29636:143:18"
											},
											{
												"body": {
													"nativeSrc": "29862:274:18",
													"nodeType": "YulBlock",
													"src": "29862:274:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "29908:83:18",
																"nodeType": "YulBlock",
																"src": "29908:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "29910:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "29910:77:18"
																			},
																			"nativeSrc": "29910:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "29910:79:18"
																		},
																		"nativeSrc": "29910:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "29910:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "29883:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "29883:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "29892:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "29892:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "29879:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "29879:3:18"
																		},
																		"nativeSrc": "29879:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "29879:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29904:2:18",
																		"nodeType": "YulLiteral",
																		"src": "29904:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "29875:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "29875:3:18"
																},
																"nativeSrc": "29875:32:18",
																"nodeType": "YulFunctionCall",
																"src": "29875:32:18"
															},
															"nativeSrc": "29872:119:18",
															"nodeType": "YulIf",
															"src": "29872:119:18"
														},
														{
															"nativeSrc": "30001:128:18",
															"nodeType": "YulBlock",
															"src": "30001:128:18",
															"statements": [
																{
																	"nativeSrc": "30016:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "30016:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "30030:1:18",
																		"nodeType": "YulLiteral",
																		"src": "30030:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "30020:6:18",
																			"nodeType": "YulTypedName",
																			"src": "30020:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "30045:74:18",
																	"nodeType": "YulAssignment",
																	"src": "30045:74:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "30091:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "30091:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "30102:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "30102:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "30087:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "30087:3:18"
																				},
																				"nativeSrc": "30087:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "30087:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "30111:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "30111:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "30055:31:18",
																			"nodeType": "YulIdentifier",
																			"src": "30055:31:18"
																		},
																		"nativeSrc": "30055:64:18",
																		"nodeType": "YulFunctionCall",
																		"src": "30055:64:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "30045:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "30045:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "29785:351:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29832:9:18",
														"nodeType": "YulTypedName",
														"src": "29832:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "29843:7:18",
														"nodeType": "YulTypedName",
														"src": "29843:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "29855:6:18",
														"nodeType": "YulTypedName",
														"src": "29855:6:18",
														"type": ""
													}
												],
												"src": "29785:351:18"
											},
											{
												"body": {
													"nativeSrc": "30216:40:18",
													"nodeType": "YulBlock",
													"src": "30216:40:18",
													"statements": [
														{
															"nativeSrc": "30227:22:18",
															"nodeType": "YulAssignment",
															"src": "30227:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "30243:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "30243:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "30237:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "30237:5:18"
																},
																"nativeSrc": "30237:12:18",
																"nodeType": "YulFunctionCall",
																"src": "30237:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "30227:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "30227:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "30142:114:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "30199:5:18",
														"nodeType": "YulTypedName",
														"src": "30199:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "30209:6:18",
														"nodeType": "YulTypedName",
														"src": "30209:6:18",
														"type": ""
													}
												],
												"src": "30142:114:18"
											},
											{
												"body": {
													"nativeSrc": "30373:73:18",
													"nodeType": "YulBlock",
													"src": "30373:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30390:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "30390:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "30395:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "30395:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30383:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "30383:6:18"
																},
																"nativeSrc": "30383:19:18",
																"nodeType": "YulFunctionCall",
																"src": "30383:19:18"
															},
															"nativeSrc": "30383:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "30383:19:18"
														},
														{
															"nativeSrc": "30411:29:18",
															"nodeType": "YulAssignment",
															"src": "30411:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30430:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "30430:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30435:4:18",
																		"nodeType": "YulLiteral",
																		"src": "30435:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30426:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "30426:3:18"
																},
																"nativeSrc": "30426:14:18",
																"nodeType": "YulFunctionCall",
																"src": "30426:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "30411:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "30411:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "30262:184:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "30345:3:18",
														"nodeType": "YulTypedName",
														"src": "30345:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "30350:6:18",
														"nodeType": "YulTypedName",
														"src": "30350:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "30361:11:18",
														"nodeType": "YulTypedName",
														"src": "30361:11:18",
														"type": ""
													}
												],
												"src": "30262:184:18"
											},
											{
												"body": {
													"nativeSrc": "30524:60:18",
													"nodeType": "YulBlock",
													"src": "30524:60:18",
													"statements": [
														{
															"nativeSrc": "30534:11:18",
															"nodeType": "YulAssignment",
															"src": "30534:11:18",
															"value": {
																"name": "ptr",
																"nativeSrc": "30542:3:18",
																"nodeType": "YulIdentifier",
																"src": "30542:3:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "30534:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "30534:4:18"
																}
															]
														},
														{
															"nativeSrc": "30555:22:18",
															"nodeType": "YulAssignment",
															"src": "30555:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "30567:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "30567:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30572:4:18",
																		"nodeType": "YulLiteral",
																		"src": "30572:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30563:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "30563:3:18"
																},
																"nativeSrc": "30563:14:18",
																"nodeType": "YulFunctionCall",
																"src": "30563:14:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "30555:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "30555:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "30452:132:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "30511:3:18",
														"nodeType": "YulTypedName",
														"src": "30511:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "30519:4:18",
														"nodeType": "YulTypedName",
														"src": "30519:4:18",
														"type": ""
													}
												],
												"src": "30452:132:18"
											},
											{
												"body": {
													"nativeSrc": "30645:53:18",
													"nodeType": "YulBlock",
													"src": "30645:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30662:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "30662:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "30685:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "30685:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "30667:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "30667:17:18"
																		},
																		"nativeSrc": "30667:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "30667:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30655:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "30655:6:18"
																},
																"nativeSrc": "30655:37:18",
																"nodeType": "YulFunctionCall",
																"src": "30655:37:18"
															},
															"nativeSrc": "30655:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "30655:37:18"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "30590:108:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "30633:5:18",
														"nodeType": "YulTypedName",
														"src": "30633:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "30640:3:18",
														"nodeType": "YulTypedName",
														"src": "30640:3:18",
														"type": ""
													}
												],
												"src": "30590:108:18"
											},
											{
												"body": {
													"nativeSrc": "30784:99:18",
													"nodeType": "YulBlock",
													"src": "30784:99:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "30828:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "30828:6:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "30836:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "30836:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nativeSrc": "30794:33:18",
																	"nodeType": "YulIdentifier",
																	"src": "30794:33:18"
																},
																"nativeSrc": "30794:46:18",
																"nodeType": "YulFunctionCall",
																"src": "30794:46:18"
															},
															"nativeSrc": "30794:46:18",
															"nodeType": "YulExpressionStatement",
															"src": "30794:46:18"
														},
														{
															"nativeSrc": "30849:28:18",
															"nodeType": "YulAssignment",
															"src": "30849:28:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30867:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "30867:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30872:4:18",
																		"nodeType": "YulLiteral",
																		"src": "30872:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30863:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "30863:3:18"
																},
																"nativeSrc": "30863:14:18",
																"nodeType": "YulFunctionCall",
																"src": "30863:14:18"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "30849:10:18",
																	"nodeType": "YulIdentifier",
																	"src": "30849:10:18"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nativeSrc": "30704:179:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "30757:6:18",
														"nodeType": "YulTypedName",
														"src": "30757:6:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "30765:3:18",
														"nodeType": "YulTypedName",
														"src": "30765:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "30773:10:18",
														"nodeType": "YulTypedName",
														"src": "30773:10:18",
														"type": ""
													}
												],
												"src": "30704:179:18"
											},
											{
												"body": {
													"nativeSrc": "30964:38:18",
													"nodeType": "YulBlock",
													"src": "30964:38:18",
													"statements": [
														{
															"nativeSrc": "30974:22:18",
															"nodeType": "YulAssignment",
															"src": "30974:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "30986:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "30986:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30991:4:18",
																		"nodeType": "YulLiteral",
																		"src": "30991:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30982:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "30982:3:18"
																},
																"nativeSrc": "30982:14:18",
																"nodeType": "YulFunctionCall",
																"src": "30982:14:18"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "30974:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "30974:4:18"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "30889:113:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "30951:3:18",
														"nodeType": "YulTypedName",
														"src": "30951:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "30959:4:18",
														"nodeType": "YulTypedName",
														"src": "30959:4:18",
														"type": ""
													}
												],
												"src": "30889:113:18"
											},
											{
												"body": {
													"nativeSrc": "31162:608:18",
													"nodeType": "YulBlock",
													"src": "31162:608:18",
													"statements": [
														{
															"nativeSrc": "31172:68:18",
															"nodeType": "YulVariableDeclaration",
															"src": "31172:68:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "31234:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "31234:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "31186:47:18",
																	"nodeType": "YulIdentifier",
																	"src": "31186:47:18"
																},
																"nativeSrc": "31186:54:18",
																"nodeType": "YulFunctionCall",
																"src": "31186:54:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "31176:6:18",
																	"nodeType": "YulTypedName",
																	"src": "31176:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "31249:93:18",
															"nodeType": "YulAssignment",
															"src": "31249:93:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31330:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "31330:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "31335:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "31335:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "31256:73:18",
																	"nodeType": "YulIdentifier",
																	"src": "31256:73:18"
																},
																"nativeSrc": "31256:86:18",
																"nodeType": "YulFunctionCall",
																"src": "31256:86:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "31249:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "31249:3:18"
																}
															]
														},
														{
															"nativeSrc": "31351:71:18",
															"nodeType": "YulVariableDeclaration",
															"src": "31351:71:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "31416:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "31416:5:18"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "31366:49:18",
																	"nodeType": "YulIdentifier",
																	"src": "31366:49:18"
																},
																"nativeSrc": "31366:56:18",
																"nodeType": "YulFunctionCall",
																"src": "31366:56:18"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "31355:7:18",
																	"nodeType": "YulTypedName",
																	"src": "31355:7:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "31431:21:18",
															"nodeType": "YulVariableDeclaration",
															"src": "31431:21:18",
															"value": {
																"name": "baseRef",
																"nativeSrc": "31445:7:18",
																"nodeType": "YulIdentifier",
																"src": "31445:7:18"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "31435:6:18",
																	"nodeType": "YulTypedName",
																	"src": "31435:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "31521:224:18",
																"nodeType": "YulBlock",
																"src": "31521:224:18",
																"statements": [
																	{
																		"nativeSrc": "31535:34:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "31535:34:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "31562:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "31562:6:18"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "31556:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "31556:5:18"
																			},
																			"nativeSrc": "31556:13:18",
																			"nodeType": "YulFunctionCall",
																			"src": "31556:13:18"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "31539:13:18",
																				"nodeType": "YulTypedName",
																				"src": "31539:13:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "31582:70:18",
																		"nodeType": "YulAssignment",
																		"src": "31582:70:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "31633:13:18",
																					"nodeType": "YulIdentifier",
																					"src": "31633:13:18"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "31648:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "31648:3:18"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nativeSrc": "31589:43:18",
																				"nodeType": "YulIdentifier",
																				"src": "31589:43:18"
																			},
																			"nativeSrc": "31589:63:18",
																			"nodeType": "YulFunctionCall",
																			"src": "31589:63:18"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "31582:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "31582:3:18"
																			}
																		]
																	},
																	{
																		"nativeSrc": "31665:70:18",
																		"nodeType": "YulAssignment",
																		"src": "31665:70:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "31728:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "31728:6:18"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nativeSrc": "31675:52:18",
																				"nodeType": "YulIdentifier",
																				"src": "31675:52:18"
																			},
																			"nativeSrc": "31675:60:18",
																			"nodeType": "YulFunctionCall",
																			"src": "31675:60:18"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "31665:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "31665:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "31483:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "31483:1:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "31486:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "31486:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "31480:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "31480:2:18"
																},
																"nativeSrc": "31480:13:18",
																"nodeType": "YulFunctionCall",
																"src": "31480:13:18"
															},
															"nativeSrc": "31461:284:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "31494:18:18",
																"nodeType": "YulBlock",
																"src": "31494:18:18",
																"statements": [
																	{
																		"nativeSrc": "31496:14:18",
																		"nodeType": "YulAssignment",
																		"src": "31496:14:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "31505:1:18",
																					"nodeType": "YulIdentifier",
																					"src": "31505:1:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "31508:1:18",
																					"nodeType": "YulLiteral",
																					"src": "31508:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "31501:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "31501:3:18"
																			},
																			"nativeSrc": "31501:9:18",
																			"nodeType": "YulFunctionCall",
																			"src": "31501:9:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "31496:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "31496:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "31465:14:18",
																"nodeType": "YulBlock",
																"src": "31465:14:18",
																"statements": [
																	{
																		"nativeSrc": "31467:10:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "31467:10:18",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "31476:1:18",
																			"nodeType": "YulLiteral",
																			"src": "31476:1:18",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "31471:1:18",
																				"nodeType": "YulTypedName",
																				"src": "31471:1:18",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "31461:284:18"
														},
														{
															"nativeSrc": "31754:10:18",
															"nodeType": "YulAssignment",
															"src": "31754:10:18",
															"value": {
																"name": "pos",
																"nativeSrc": "31761:3:18",
																"nodeType": "YulIdentifier",
																"src": "31761:3:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "31754:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "31754:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "31038:732:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "31141:5:18",
														"nodeType": "YulTypedName",
														"src": "31141:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "31148:3:18",
														"nodeType": "YulTypedName",
														"src": "31148:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "31157:3:18",
														"nodeType": "YulTypedName",
														"src": "31157:3:18",
														"type": ""
													}
												],
												"src": "31038:732:18"
											},
											{
												"body": {
													"nativeSrc": "32036:555:18",
													"nodeType": "YulBlock",
													"src": "32036:555:18",
													"statements": [
														{
															"nativeSrc": "32046:27:18",
															"nodeType": "YulAssignment",
															"src": "32046:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "32058:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "32058:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32069:3:18",
																		"nodeType": "YulLiteral",
																		"src": "32069:3:18",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32054:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "32054:3:18"
																},
																"nativeSrc": "32054:19:18",
																"nodeType": "YulFunctionCall",
																"src": "32054:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "32046:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "32046:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "32127:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "32127:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "32140:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "32140:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32151:1:18",
																				"nodeType": "YulLiteral",
																				"src": "32151:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32136:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "32136:3:18"
																		},
																		"nativeSrc": "32136:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "32136:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "32083:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "32083:43:18"
																},
																"nativeSrc": "32083:71:18",
																"nodeType": "YulFunctionCall",
																"src": "32083:71:18"
															},
															"nativeSrc": "32083:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "32083:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "32208:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "32208:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "32221:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "32221:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32232:2:18",
																				"nodeType": "YulLiteral",
																				"src": "32232:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32217:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "32217:3:18"
																		},
																		"nativeSrc": "32217:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "32217:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "32164:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "32164:43:18"
																},
																"nativeSrc": "32164:72:18",
																"nodeType": "YulFunctionCall",
																"src": "32164:72:18"
															},
															"nativeSrc": "32164:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "32164:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "32257:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "32257:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32268:2:18",
																				"nodeType": "YulLiteral",
																				"src": "32268:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32253:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "32253:3:18"
																		},
																		"nativeSrc": "32253:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "32253:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "32277:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "32277:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "32283:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "32283:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "32273:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "32273:3:18"
																		},
																		"nativeSrc": "32273:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "32273:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32246:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "32246:6:18"
																},
																"nativeSrc": "32246:48:18",
																"nodeType": "YulFunctionCall",
																"src": "32246:48:18"
															},
															"nativeSrc": "32246:48:18",
															"nodeType": "YulExpressionStatement",
															"src": "32246:48:18"
														},
														{
															"nativeSrc": "32303:116:18",
															"nodeType": "YulAssignment",
															"src": "32303:116:18",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "32405:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "32405:6:18"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "32414:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "32414:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "32311:93:18",
																	"nodeType": "YulIdentifier",
																	"src": "32311:93:18"
																},
																"nativeSrc": "32311:108:18",
																"nodeType": "YulFunctionCall",
																"src": "32311:108:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "32303:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "32303:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "32473:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "32473:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "32486:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "32486:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32497:2:18",
																				"nodeType": "YulLiteral",
																				"src": "32497:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32482:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "32482:3:18"
																		},
																		"nativeSrc": "32482:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "32482:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "32429:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "32429:43:18"
																},
																"nativeSrc": "32429:72:18",
																"nodeType": "YulFunctionCall",
																"src": "32429:72:18"
															},
															"nativeSrc": "32429:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "32429:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "32555:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "32555:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "32568:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "32568:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32579:3:18",
																				"nodeType": "YulLiteral",
																				"src": "32579:3:18",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32564:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "32564:3:18"
																		},
																		"nativeSrc": "32564:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "32564:19:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "32511:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "32511:43:18"
																},
																"nativeSrc": "32511:73:18",
																"nodeType": "YulFunctionCall",
																"src": "32511:73:18"
															},
															"nativeSrc": "32511:73:18",
															"nodeType": "YulExpressionStatement",
															"src": "32511:73:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "31776:815:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "31976:9:18",
														"nodeType": "YulTypedName",
														"src": "31976:9:18",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "31988:6:18",
														"nodeType": "YulTypedName",
														"src": "31988:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "31996:6:18",
														"nodeType": "YulTypedName",
														"src": "31996:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "32004:6:18",
														"nodeType": "YulTypedName",
														"src": "32004:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "32012:6:18",
														"nodeType": "YulTypedName",
														"src": "32012:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "32020:6:18",
														"nodeType": "YulTypedName",
														"src": "32020:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "32031:4:18",
														"nodeType": "YulTypedName",
														"src": "32031:4:18",
														"type": ""
													}
												],
												"src": "31776:815:18"
											},
											{
												"body": {
													"nativeSrc": "32727:619:18",
													"nodeType": "YulBlock",
													"src": "32727:619:18",
													"statements": [
														{
															"nativeSrc": "32737:90:18",
															"nodeType": "YulAssignment",
															"src": "32737:90:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "32819:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "32819:6:18"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "32762:56:18",
																			"nodeType": "YulIdentifier",
																			"src": "32762:56:18"
																		},
																		"nativeSrc": "32762:64:18",
																		"nodeType": "YulFunctionCall",
																		"src": "32762:64:18"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "32746:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "32746:15:18"
																},
																"nativeSrc": "32746:81:18",
																"nodeType": "YulFunctionCall",
																"src": "32746:81:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "32737:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "32737:5:18"
																}
															]
														},
														{
															"nativeSrc": "32836:16:18",
															"nodeType": "YulVariableDeclaration",
															"src": "32836:16:18",
															"value": {
																"name": "array",
																"nativeSrc": "32847:5:18",
																"nodeType": "YulIdentifier",
																"src": "32847:5:18"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "32840:3:18",
																	"nodeType": "YulTypedName",
																	"src": "32840:3:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "32869:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "32869:5:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "32876:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "32876:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32862:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "32862:6:18"
																},
																"nativeSrc": "32862:21:18",
																"nodeType": "YulFunctionCall",
																"src": "32862:21:18"
															},
															"nativeSrc": "32862:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "32862:21:18"
														},
														{
															"nativeSrc": "32892:23:18",
															"nodeType": "YulAssignment",
															"src": "32892:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "32903:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "32903:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32910:4:18",
																		"nodeType": "YulLiteral",
																		"src": "32910:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32899:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "32899:3:18"
																},
																"nativeSrc": "32899:16:18",
																"nodeType": "YulFunctionCall",
																"src": "32899:16:18"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "32892:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "32892:3:18"
																}
															]
														},
														{
															"nativeSrc": "32925:44:18",
															"nodeType": "YulVariableDeclaration",
															"src": "32925:44:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "32943:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "32943:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "32955:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "32955:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32963:4:18",
																				"nodeType": "YulLiteral",
																				"src": "32963:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "32951:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "32951:3:18"
																		},
																		"nativeSrc": "32951:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "32951:17:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32939:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "32939:3:18"
																},
																"nativeSrc": "32939:30:18",
																"nodeType": "YulFunctionCall",
																"src": "32939:30:18"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "32929:6:18",
																	"nodeType": "YulTypedName",
																	"src": "32929:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "32997:103:18",
																"nodeType": "YulBlock",
																"src": "32997:103:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "33011:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "33011:77:18"
																			},
																			"nativeSrc": "33011:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "33011:79:18"
																		},
																		"nativeSrc": "33011:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "33011:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "32984:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "32984:6:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "32992:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "32992:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "32981:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "32981:2:18"
																},
																"nativeSrc": "32981:15:18",
																"nodeType": "YulFunctionCall",
																"src": "32981:15:18"
															},
															"nativeSrc": "32978:122:18",
															"nodeType": "YulIf",
															"src": "32978:122:18"
														},
														{
															"body": {
																"nativeSrc": "33185:155:18",
																"nodeType": "YulBlock",
																"src": "33185:155:18",
																"statements": [
																	{
																		"nativeSrc": "33200:21:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "33200:21:18",
																		"value": {
																			"name": "src",
																			"nativeSrc": "33218:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "33218:3:18"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "33204:10:18",
																				"nodeType": "YulTypedName",
																				"src": "33204:10:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "33242:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "33242:3:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "33279:10:18",
																							"nodeType": "YulIdentifier",
																							"src": "33279:10:18"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "33291:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "33291:3:18"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nativeSrc": "33247:31:18",
																						"nodeType": "YulIdentifier",
																						"src": "33247:31:18"
																					},
																					"nativeSrc": "33247:48:18",
																					"nodeType": "YulFunctionCall",
																					"src": "33247:48:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "33235:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "33235:6:18"
																			},
																			"nativeSrc": "33235:61:18",
																			"nodeType": "YulFunctionCall",
																			"src": "33235:61:18"
																		},
																		"nativeSrc": "33235:61:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "33235:61:18"
																	},
																	{
																		"nativeSrc": "33309:21:18",
																		"nodeType": "YulAssignment",
																		"src": "33309:21:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "33320:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "33320:3:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "33325:4:18",
																					"nodeType": "YulLiteral",
																					"src": "33325:4:18",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "33316:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "33316:3:18"
																			},
																			"nativeSrc": "33316:14:18",
																			"nodeType": "YulFunctionCall",
																			"src": "33316:14:18"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "33309:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "33309:3:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "33138:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "33138:3:18"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "33143:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "33143:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "33135:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "33135:2:18"
																},
																"nativeSrc": "33135:15:18",
																"nodeType": "YulFunctionCall",
																"src": "33135:15:18"
															},
															"nativeSrc": "33109:231:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "33151:25:18",
																"nodeType": "YulBlock",
																"src": "33151:25:18",
																"statements": [
																	{
																		"nativeSrc": "33153:21:18",
																		"nodeType": "YulAssignment",
																		"src": "33153:21:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "33164:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "33164:3:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "33169:4:18",
																					"nodeType": "YulLiteral",
																					"src": "33169:4:18",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "33160:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "33160:3:18"
																			},
																			"nativeSrc": "33160:14:18",
																			"nodeType": "YulFunctionCall",
																			"src": "33160:14:18"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "33153:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "33153:3:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "33113:21:18",
																"nodeType": "YulBlock",
																"src": "33113:21:18",
																"statements": [
																	{
																		"nativeSrc": "33115:17:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "33115:17:18",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "33126:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "33126:6:18"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "33119:3:18",
																				"nodeType": "YulTypedName",
																				"src": "33119:3:18",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "33109:231:18"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "32614:732:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "32697:6:18",
														"nodeType": "YulTypedName",
														"src": "32697:6:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "32705:6:18",
														"nodeType": "YulTypedName",
														"src": "32705:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "32713:3:18",
														"nodeType": "YulTypedName",
														"src": "32713:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "32721:5:18",
														"nodeType": "YulTypedName",
														"src": "32721:5:18",
														"type": ""
													}
												],
												"src": "32614:732:18"
											},
											{
												"body": {
													"nativeSrc": "33457:297:18",
													"nodeType": "YulBlock",
													"src": "33457:297:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "33506:83:18",
																"nodeType": "YulBlock",
																"src": "33506:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "33508:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "33508:77:18"
																			},
																			"nativeSrc": "33508:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "33508:79:18"
																		},
																		"nativeSrc": "33508:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "33508:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "33485:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "33485:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "33493:4:18",
																						"nodeType": "YulLiteral",
																						"src": "33493:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "33481:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "33481:3:18"
																				},
																				"nativeSrc": "33481:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "33481:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "33500:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "33500:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "33477:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "33477:3:18"
																		},
																		"nativeSrc": "33477:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "33477:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "33470:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "33470:6:18"
																},
																"nativeSrc": "33470:35:18",
																"nodeType": "YulFunctionCall",
																"src": "33470:35:18"
															},
															"nativeSrc": "33467:122:18",
															"nodeType": "YulIf",
															"src": "33467:122:18"
														},
														{
															"nativeSrc": "33598:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "33598:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "33618:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "33618:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "33612:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "33612:5:18"
																},
																"nativeSrc": "33612:13:18",
																"nodeType": "YulFunctionCall",
																"src": "33612:13:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "33602:6:18",
																	"nodeType": "YulTypedName",
																	"src": "33602:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "33634:114:18",
															"nodeType": "YulAssignment",
															"src": "33634:114:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "33721:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "33721:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33729:4:18",
																				"nodeType": "YulLiteral",
																				"src": "33729:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33717:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "33717:3:18"
																		},
																		"nativeSrc": "33717:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "33717:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "33736:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "33736:6:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "33744:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "33744:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nativeSrc": "33643:73:18",
																	"nodeType": "YulIdentifier",
																	"src": "33643:73:18"
																},
																"nativeSrc": "33643:105:18",
																"nodeType": "YulFunctionCall",
																"src": "33643:105:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "33634:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "33634:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "33369:385:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "33435:6:18",
														"nodeType": "YulTypedName",
														"src": "33435:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "33443:3:18",
														"nodeType": "YulTypedName",
														"src": "33443:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "33451:5:18",
														"nodeType": "YulTypedName",
														"src": "33451:5:18",
														"type": ""
													}
												],
												"src": "33369:385:18"
											},
											{
												"body": {
													"nativeSrc": "33862:452:18",
													"nodeType": "YulBlock",
													"src": "33862:452:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "33908:83:18",
																"nodeType": "YulBlock",
																"src": "33908:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "33910:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "33910:77:18"
																			},
																			"nativeSrc": "33910:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "33910:79:18"
																		},
																		"nativeSrc": "33910:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "33910:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "33883:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "33883:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "33892:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "33892:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "33879:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "33879:3:18"
																		},
																		"nativeSrc": "33879:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "33879:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33904:2:18",
																		"nodeType": "YulLiteral",
																		"src": "33904:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "33875:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "33875:3:18"
																},
																"nativeSrc": "33875:32:18",
																"nodeType": "YulFunctionCall",
																"src": "33875:32:18"
															},
															"nativeSrc": "33872:119:18",
															"nodeType": "YulIf",
															"src": "33872:119:18"
														},
														{
															"nativeSrc": "34001:306:18",
															"nodeType": "YulBlock",
															"src": "34001:306:18",
															"statements": [
																{
																	"nativeSrc": "34016:38:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "34016:38:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "34040:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "34040:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "34051:1:18",
																						"nodeType": "YulLiteral",
																						"src": "34051:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "34036:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "34036:3:18"
																				},
																				"nativeSrc": "34036:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "34036:17:18"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "34030:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "34030:5:18"
																		},
																		"nativeSrc": "34030:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "34030:24:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "34020:6:18",
																			"nodeType": "YulTypedName",
																			"src": "34020:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "34101:83:18",
																		"nodeType": "YulBlock",
																		"src": "34101:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "34103:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "34103:77:18"
																					},
																					"nativeSrc": "34103:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "34103:79:18"
																				},
																				"nativeSrc": "34103:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "34103:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "34073:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "34073:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "34081:18:18",
																				"nodeType": "YulLiteral",
																				"src": "34081:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "34070:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "34070:2:18"
																		},
																		"nativeSrc": "34070:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "34070:30:18"
																	},
																	"nativeSrc": "34067:117:18",
																	"nodeType": "YulIf",
																	"src": "34067:117:18"
																},
																{
																	"nativeSrc": "34198:99:18",
																	"nodeType": "YulAssignment",
																	"src": "34198:99:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "34269:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "34269:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "34280:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "34280:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "34265:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "34265:3:18"
																				},
																				"nativeSrc": "34265:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "34265:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "34289:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "34289:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nativeSrc": "34208:56:18",
																			"nodeType": "YulIdentifier",
																			"src": "34208:56:18"
																		},
																		"nativeSrc": "34208:89:18",
																		"nodeType": "YulFunctionCall",
																		"src": "34208:89:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "34198:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "34198:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "33760:554:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "33832:9:18",
														"nodeType": "YulTypedName",
														"src": "33832:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "33843:7:18",
														"nodeType": "YulTypedName",
														"src": "33843:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "33855:6:18",
														"nodeType": "YulTypedName",
														"src": "33855:6:18",
														"type": ""
													}
												],
												"src": "33760:554:18"
											},
											{
												"body": {
													"nativeSrc": "34397:274:18",
													"nodeType": "YulBlock",
													"src": "34397:274:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "34443:83:18",
																"nodeType": "YulBlock",
																"src": "34443:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "34445:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "34445:77:18"
																			},
																			"nativeSrc": "34445:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "34445:79:18"
																		},
																		"nativeSrc": "34445:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "34445:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "34418:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "34418:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "34427:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "34427:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "34414:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "34414:3:18"
																		},
																		"nativeSrc": "34414:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "34414:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "34439:2:18",
																		"nodeType": "YulLiteral",
																		"src": "34439:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "34410:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "34410:3:18"
																},
																"nativeSrc": "34410:32:18",
																"nodeType": "YulFunctionCall",
																"src": "34410:32:18"
															},
															"nativeSrc": "34407:119:18",
															"nodeType": "YulIf",
															"src": "34407:119:18"
														},
														{
															"nativeSrc": "34536:128:18",
															"nodeType": "YulBlock",
															"src": "34536:128:18",
															"statements": [
																{
																	"nativeSrc": "34551:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "34551:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "34565:1:18",
																		"nodeType": "YulLiteral",
																		"src": "34565:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "34555:6:18",
																			"nodeType": "YulTypedName",
																			"src": "34555:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "34580:74:18",
																	"nodeType": "YulAssignment",
																	"src": "34580:74:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "34626:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "34626:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "34637:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "34637:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "34622:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "34622:3:18"
																				},
																				"nativeSrc": "34622:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "34622:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "34646:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "34646:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "34590:31:18",
																			"nodeType": "YulIdentifier",
																			"src": "34590:31:18"
																		},
																		"nativeSrc": "34590:64:18",
																		"nodeType": "YulFunctionCall",
																		"src": "34590:64:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "34580:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "34580:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "34320:351:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "34367:9:18",
														"nodeType": "YulTypedName",
														"src": "34367:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "34378:7:18",
														"nodeType": "YulTypedName",
														"src": "34378:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "34390:6:18",
														"nodeType": "YulTypedName",
														"src": "34390:6:18",
														"type": ""
													}
												],
												"src": "34320:351:18"
											},
											{
												"body": {
													"nativeSrc": "34722:32:18",
													"nodeType": "YulBlock",
													"src": "34722:32:18",
													"statements": [
														{
															"nativeSrc": "34732:16:18",
															"nodeType": "YulAssignment",
															"src": "34732:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "34743:5:18",
																"nodeType": "YulIdentifier",
																"src": "34743:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "34732:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "34732:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "34677:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34704:5:18",
														"nodeType": "YulTypedName",
														"src": "34704:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "34714:7:18",
														"nodeType": "YulTypedName",
														"src": "34714:7:18",
														"type": ""
													}
												],
												"src": "34677:77:18"
											},
											{
												"body": {
													"nativeSrc": "34825:53:18",
													"nodeType": "YulBlock",
													"src": "34825:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "34842:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "34842:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "34865:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "34865:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "34847:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "34847:17:18"
																		},
																		"nativeSrc": "34847:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "34847:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "34835:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "34835:6:18"
																},
																"nativeSrc": "34835:37:18",
																"nodeType": "YulFunctionCall",
																"src": "34835:37:18"
															},
															"nativeSrc": "34835:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "34835:37:18"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "34760:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34813:5:18",
														"nodeType": "YulTypedName",
														"src": "34813:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "34820:3:18",
														"nodeType": "YulTypedName",
														"src": "34820:3:18",
														"type": ""
													}
												],
												"src": "34760:118:18"
											},
											{
												"body": {
													"nativeSrc": "34928:57:18",
													"nodeType": "YulBlock",
													"src": "34928:57:18",
													"statements": [
														{
															"nativeSrc": "34938:41:18",
															"nodeType": "YulAssignment",
															"src": "34938:41:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "34953:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "34953:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "34960:18:18",
																		"nodeType": "YulLiteral",
																		"src": "34960:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "34949:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "34949:3:18"
																},
																"nativeSrc": "34949:30:18",
																"nodeType": "YulFunctionCall",
																"src": "34949:30:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "34938:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "34938:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "34884:101:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34910:5:18",
														"nodeType": "YulTypedName",
														"src": "34910:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "34920:7:18",
														"nodeType": "YulTypedName",
														"src": "34920:7:18",
														"type": ""
													}
												],
												"src": "34884:101:18"
											},
											{
												"body": {
													"nativeSrc": "35054:52:18",
													"nodeType": "YulBlock",
													"src": "35054:52:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "35071:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "35071:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "35093:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "35093:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nativeSrc": "35076:16:18",
																			"nodeType": "YulIdentifier",
																			"src": "35076:16:18"
																		},
																		"nativeSrc": "35076:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "35076:23:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "35064:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "35064:6:18"
																},
																"nativeSrc": "35064:36:18",
																"nodeType": "YulFunctionCall",
																"src": "35064:36:18"
															},
															"nativeSrc": "35064:36:18",
															"nodeType": "YulExpressionStatement",
															"src": "35064:36:18"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nativeSrc": "34991:115:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "35042:5:18",
														"nodeType": "YulTypedName",
														"src": "35042:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "35049:3:18",
														"nodeType": "YulTypedName",
														"src": "35049:3:18",
														"type": ""
													}
												],
												"src": "34991:115:18"
											},
											{
												"body": {
													"nativeSrc": "35165:32:18",
													"nodeType": "YulBlock",
													"src": "35165:32:18",
													"statements": [
														{
															"nativeSrc": "35175:16:18",
															"nodeType": "YulAssignment",
															"src": "35175:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "35186:5:18",
																"nodeType": "YulIdentifier",
																"src": "35186:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "35175:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "35175:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_3_by_1",
												"nativeSrc": "35112:85:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "35147:5:18",
														"nodeType": "YulTypedName",
														"src": "35147:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "35157:7:18",
														"nodeType": "YulTypedName",
														"src": "35157:7:18",
														"type": ""
													}
												],
												"src": "35112:85:18"
											},
											{
												"body": {
													"nativeSrc": "35247:45:18",
													"nodeType": "YulBlock",
													"src": "35247:45:18",
													"statements": [
														{
															"nativeSrc": "35257:29:18",
															"nodeType": "YulAssignment",
															"src": "35257:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "35272:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "35272:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "35279:6:18",
																		"nodeType": "YulLiteral",
																		"src": "35279:6:18",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "35268:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "35268:3:18"
																},
																"nativeSrc": "35268:18:18",
																"nodeType": "YulFunctionCall",
																"src": "35268:18:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "35257:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "35257:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nativeSrc": "35203:89:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "35229:5:18",
														"nodeType": "YulTypedName",
														"src": "35229:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "35239:7:18",
														"nodeType": "YulTypedName",
														"src": "35239:7:18",
														"type": ""
													}
												],
												"src": "35203:89:18"
											},
											{
												"body": {
													"nativeSrc": "35365:89:18",
													"nodeType": "YulBlock",
													"src": "35365:89:18",
													"statements": [
														{
															"nativeSrc": "35375:73:18",
															"nodeType": "YulAssignment",
															"src": "35375:73:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "35440:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "35440:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_3_by_1",
																					"nativeSrc": "35414:25:18",
																					"nodeType": "YulIdentifier",
																					"src": "35414:25:18"
																				},
																				"nativeSrc": "35414:32:18",
																				"nodeType": "YulFunctionCall",
																				"src": "35414:32:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "35405:8:18",
																			"nodeType": "YulIdentifier",
																			"src": "35405:8:18"
																		},
																		"nativeSrc": "35405:42:18",
																		"nodeType": "YulFunctionCall",
																		"src": "35405:42:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint16",
																	"nativeSrc": "35388:16:18",
																	"nodeType": "YulIdentifier",
																	"src": "35388:16:18"
																},
																"nativeSrc": "35388:60:18",
																"nodeType": "YulFunctionCall",
																"src": "35388:60:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "35375:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "35375:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_3_by_1_to_t_uint16",
												"nativeSrc": "35298:156:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "35345:5:18",
														"nodeType": "YulTypedName",
														"src": "35345:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "35355:9:18",
														"nodeType": "YulTypedName",
														"src": "35355:9:18",
														"type": ""
													}
												],
												"src": "35298:156:18"
											},
											{
												"body": {
													"nativeSrc": "35532:73:18",
													"nodeType": "YulBlock",
													"src": "35532:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "35549:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "35549:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "35592:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "35592:5:18"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_3_by_1_to_t_uint16",
																			"nativeSrc": "35554:37:18",
																			"nodeType": "YulIdentifier",
																			"src": "35554:37:18"
																		},
																		"nativeSrc": "35554:44:18",
																		"nodeType": "YulFunctionCall",
																		"src": "35554:44:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "35542:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "35542:6:18"
																},
																"nativeSrc": "35542:57:18",
																"nodeType": "YulFunctionCall",
																"src": "35542:57:18"
															},
															"nativeSrc": "35542:57:18",
															"nodeType": "YulExpressionStatement",
															"src": "35542:57:18"
														}
													]
												},
												"name": "abi_encode_t_rational_3_by_1_to_t_uint16_fromStack",
												"nativeSrc": "35460:145:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "35520:5:18",
														"nodeType": "YulTypedName",
														"src": "35520:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "35527:3:18",
														"nodeType": "YulTypedName",
														"src": "35527:3:18",
														"type": ""
													}
												],
												"src": "35460:145:18"
											},
											{
												"body": {
													"nativeSrc": "35669:32:18",
													"nodeType": "YulBlock",
													"src": "35669:32:18",
													"statements": [
														{
															"nativeSrc": "35679:16:18",
															"nodeType": "YulAssignment",
															"src": "35679:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "35690:5:18",
																"nodeType": "YulIdentifier",
																"src": "35690:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "35679:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "35679:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_350000_by_1",
												"nativeSrc": "35611:90:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "35651:5:18",
														"nodeType": "YulTypedName",
														"src": "35651:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "35661:7:18",
														"nodeType": "YulTypedName",
														"src": "35661:7:18",
														"type": ""
													}
												],
												"src": "35611:90:18"
											},
											{
												"body": {
													"nativeSrc": "35751:49:18",
													"nodeType": "YulBlock",
													"src": "35751:49:18",
													"statements": [
														{
															"nativeSrc": "35761:33:18",
															"nodeType": "YulAssignment",
															"src": "35761:33:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "35776:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "35776:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "35783:10:18",
																		"nodeType": "YulLiteral",
																		"src": "35783:10:18",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "35772:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "35772:3:18"
																},
																"nativeSrc": "35772:22:18",
																"nodeType": "YulFunctionCall",
																"src": "35772:22:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "35761:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "35761:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nativeSrc": "35707:93:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "35733:5:18",
														"nodeType": "YulTypedName",
														"src": "35733:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "35743:7:18",
														"nodeType": "YulTypedName",
														"src": "35743:7:18",
														"type": ""
													}
												],
												"src": "35707:93:18"
											},
											{
												"body": {
													"nativeSrc": "35878:94:18",
													"nodeType": "YulBlock",
													"src": "35878:94:18",
													"statements": [
														{
															"nativeSrc": "35888:78:18",
															"nodeType": "YulAssignment",
															"src": "35888:78:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "35958:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "35958:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_350000_by_1",
																					"nativeSrc": "35927:30:18",
																					"nodeType": "YulIdentifier",
																					"src": "35927:30:18"
																				},
																				"nativeSrc": "35927:37:18",
																				"nodeType": "YulFunctionCall",
																				"src": "35927:37:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "35918:8:18",
																			"nodeType": "YulIdentifier",
																			"src": "35918:8:18"
																		},
																		"nativeSrc": "35918:47:18",
																		"nodeType": "YulFunctionCall",
																		"src": "35918:47:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nativeSrc": "35901:16:18",
																	"nodeType": "YulIdentifier",
																	"src": "35901:16:18"
																},
																"nativeSrc": "35901:65:18",
																"nodeType": "YulFunctionCall",
																"src": "35901:65:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "35888:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "35888:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_350000_by_1_to_t_uint32",
												"nativeSrc": "35806:166:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "35858:5:18",
														"nodeType": "YulTypedName",
														"src": "35858:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "35868:9:18",
														"nodeType": "YulTypedName",
														"src": "35868:9:18",
														"type": ""
													}
												],
												"src": "35806:166:18"
											},
											{
												"body": {
													"nativeSrc": "36055:78:18",
													"nodeType": "YulBlock",
													"src": "36055:78:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "36072:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "36072:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "36120:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "36120:5:18"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_350000_by_1_to_t_uint32",
																			"nativeSrc": "36077:42:18",
																			"nodeType": "YulIdentifier",
																			"src": "36077:42:18"
																		},
																		"nativeSrc": "36077:49:18",
																		"nodeType": "YulFunctionCall",
																		"src": "36077:49:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "36065:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "36065:6:18"
																},
																"nativeSrc": "36065:62:18",
																"nodeType": "YulFunctionCall",
																"src": "36065:62:18"
															},
															"nativeSrc": "36065:62:18",
															"nodeType": "YulExpressionStatement",
															"src": "36065:62:18"
														}
													]
												},
												"name": "abi_encode_t_rational_350000_by_1_to_t_uint32_fromStack",
												"nativeSrc": "35978:155:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "36043:5:18",
														"nodeType": "YulTypedName",
														"src": "36043:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "36050:3:18",
														"nodeType": "YulTypedName",
														"src": "36050:3:18",
														"type": ""
													}
												],
												"src": "35978:155:18"
											},
											{
												"body": {
													"nativeSrc": "36192:32:18",
													"nodeType": "YulBlock",
													"src": "36192:32:18",
													"statements": [
														{
															"nativeSrc": "36202:16:18",
															"nodeType": "YulAssignment",
															"src": "36202:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "36213:5:18",
																"nodeType": "YulIdentifier",
																"src": "36213:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "36202:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "36202:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "36139:85:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "36174:5:18",
														"nodeType": "YulTypedName",
														"src": "36174:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "36184:7:18",
														"nodeType": "YulTypedName",
														"src": "36184:7:18",
														"type": ""
													}
												],
												"src": "36139:85:18"
											},
											{
												"body": {
													"nativeSrc": "36297:89:18",
													"nodeType": "YulBlock",
													"src": "36297:89:18",
													"statements": [
														{
															"nativeSrc": "36307:73:18",
															"nodeType": "YulAssignment",
															"src": "36307:73:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "36372:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "36372:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "36346:25:18",
																					"nodeType": "YulIdentifier",
																					"src": "36346:25:18"
																				},
																				"nativeSrc": "36346:32:18",
																				"nodeType": "YulFunctionCall",
																				"src": "36346:32:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "36337:8:18",
																			"nodeType": "YulIdentifier",
																			"src": "36337:8:18"
																		},
																		"nativeSrc": "36337:42:18",
																		"nodeType": "YulFunctionCall",
																		"src": "36337:42:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nativeSrc": "36320:16:18",
																	"nodeType": "YulIdentifier",
																	"src": "36320:16:18"
																},
																"nativeSrc": "36320:60:18",
																"nodeType": "YulFunctionCall",
																"src": "36320:60:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "36307:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "36307:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint32",
												"nativeSrc": "36230:156:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "36277:5:18",
														"nodeType": "YulTypedName",
														"src": "36277:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "36287:9:18",
														"nodeType": "YulTypedName",
														"src": "36287:9:18",
														"type": ""
													}
												],
												"src": "36230:156:18"
											},
											{
												"body": {
													"nativeSrc": "36464:73:18",
													"nodeType": "YulBlock",
													"src": "36464:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "36481:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "36481:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "36524:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "36524:5:18"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint32",
																			"nativeSrc": "36486:37:18",
																			"nodeType": "YulIdentifier",
																			"src": "36486:37:18"
																		},
																		"nativeSrc": "36486:44:18",
																		"nodeType": "YulFunctionCall",
																		"src": "36486:44:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "36474:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "36474:6:18"
																},
																"nativeSrc": "36474:57:18",
																"nodeType": "YulFunctionCall",
																"src": "36474:57:18"
															},
															"nativeSrc": "36474:57:18",
															"nodeType": "YulExpressionStatement",
															"src": "36474:57:18"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint32_fromStack",
												"nativeSrc": "36392:145:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "36452:5:18",
														"nodeType": "YulTypedName",
														"src": "36452:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "36459:3:18",
														"nodeType": "YulTypedName",
														"src": "36459:3:18",
														"type": ""
													}
												],
												"src": "36392:145:18"
											},
											{
												"body": {
													"nativeSrc": "36777:478:18",
													"nodeType": "YulBlock",
													"src": "36777:478:18",
													"statements": [
														{
															"nativeSrc": "36787:27:18",
															"nodeType": "YulAssignment",
															"src": "36787:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "36799:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "36799:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "36810:3:18",
																		"nodeType": "YulLiteral",
																		"src": "36810:3:18",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "36795:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "36795:3:18"
																},
																"nativeSrc": "36795:19:18",
																"nodeType": "YulFunctionCall",
																"src": "36795:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "36787:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "36787:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "36868:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "36868:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "36881:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "36881:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "36892:1:18",
																				"nodeType": "YulLiteral",
																				"src": "36892:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "36877:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "36877:3:18"
																		},
																		"nativeSrc": "36877:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "36877:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "36824:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "36824:43:18"
																},
																"nativeSrc": "36824:71:18",
																"nodeType": "YulFunctionCall",
																"src": "36824:71:18"
															},
															"nativeSrc": "36824:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "36824:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "36947:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "36947:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "36960:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "36960:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "36971:2:18",
																				"nodeType": "YulLiteral",
																				"src": "36971:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "36956:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "36956:3:18"
																		},
																		"nativeSrc": "36956:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "36956:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "36905:41:18",
																	"nodeType": "YulIdentifier",
																	"src": "36905:41:18"
																},
																"nativeSrc": "36905:70:18",
																"nodeType": "YulFunctionCall",
																"src": "36905:70:18"
															},
															"nativeSrc": "36905:70:18",
															"nodeType": "YulExpressionStatement",
															"src": "36905:70:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "37036:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "37036:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "37049:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "37049:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "37060:2:18",
																				"nodeType": "YulLiteral",
																				"src": "37060:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "37045:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "37045:3:18"
																		},
																		"nativeSrc": "37045:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "37045:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_3_by_1_to_t_uint16_fromStack",
																	"nativeSrc": "36985:50:18",
																	"nodeType": "YulIdentifier",
																	"src": "36985:50:18"
																},
																"nativeSrc": "36985:79:18",
																"nodeType": "YulFunctionCall",
																"src": "36985:79:18"
															},
															"nativeSrc": "36985:79:18",
															"nodeType": "YulExpressionStatement",
															"src": "36985:79:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "37130:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "37130:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "37143:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "37143:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "37154:2:18",
																				"nodeType": "YulLiteral",
																				"src": "37154:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "37139:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "37139:3:18"
																		},
																		"nativeSrc": "37139:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "37139:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_350000_by_1_to_t_uint32_fromStack",
																	"nativeSrc": "37074:55:18",
																	"nodeType": "YulIdentifier",
																	"src": "37074:55:18"
																},
																"nativeSrc": "37074:84:18",
																"nodeType": "YulFunctionCall",
																"src": "37074:84:18"
															},
															"nativeSrc": "37074:84:18",
															"nodeType": "YulExpressionStatement",
															"src": "37074:84:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "37219:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "37219:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "37232:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "37232:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "37243:3:18",
																				"nodeType": "YulLiteral",
																				"src": "37243:3:18",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "37228:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "37228:3:18"
																		},
																		"nativeSrc": "37228:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "37228:19:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint32_fromStack",
																	"nativeSrc": "37168:50:18",
																	"nodeType": "YulIdentifier",
																	"src": "37168:50:18"
																},
																"nativeSrc": "37168:80:18",
																"nodeType": "YulFunctionCall",
																"src": "37168:80:18"
															},
															"nativeSrc": "37168:80:18",
															"nodeType": "YulExpressionStatement",
															"src": "37168:80:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint64_t_rational_3_by_1_t_rational_350000_by_1_t_rational_1_by_1__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed",
												"nativeSrc": "36543:712:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "36717:9:18",
														"nodeType": "YulTypedName",
														"src": "36717:9:18",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "36729:6:18",
														"nodeType": "YulTypedName",
														"src": "36729:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "36737:6:18",
														"nodeType": "YulTypedName",
														"src": "36737:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "36745:6:18",
														"nodeType": "YulTypedName",
														"src": "36745:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "36753:6:18",
														"nodeType": "YulTypedName",
														"src": "36753:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "36761:6:18",
														"nodeType": "YulTypedName",
														"src": "36761:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "36772:4:18",
														"nodeType": "YulTypedName",
														"src": "36772:4:18",
														"type": ""
													}
												],
												"src": "36543:712:18"
											},
											{
												"body": {
													"nativeSrc": "37415:288:18",
													"nodeType": "YulBlock",
													"src": "37415:288:18",
													"statements": [
														{
															"nativeSrc": "37425:26:18",
															"nodeType": "YulAssignment",
															"src": "37425:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "37437:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "37437:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "37448:2:18",
																		"nodeType": "YulLiteral",
																		"src": "37448:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "37433:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "37433:3:18"
																},
																"nativeSrc": "37433:18:18",
																"nodeType": "YulFunctionCall",
																"src": "37433:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "37425:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "37425:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "37505:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "37505:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "37518:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "37518:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "37529:1:18",
																				"nodeType": "YulLiteral",
																				"src": "37529:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "37514:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "37514:3:18"
																		},
																		"nativeSrc": "37514:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "37514:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "37461:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "37461:43:18"
																},
																"nativeSrc": "37461:71:18",
																"nodeType": "YulFunctionCall",
																"src": "37461:71:18"
															},
															"nativeSrc": "37461:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "37461:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "37586:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "37586:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "37599:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "37599:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "37610:2:18",
																				"nodeType": "YulLiteral",
																				"src": "37610:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "37595:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "37595:3:18"
																		},
																		"nativeSrc": "37595:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "37595:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "37542:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "37542:43:18"
																},
																"nativeSrc": "37542:72:18",
																"nodeType": "YulFunctionCall",
																"src": "37542:72:18"
															},
															"nativeSrc": "37542:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "37542:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "37668:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "37668:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "37681:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "37681:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "37692:2:18",
																				"nodeType": "YulLiteral",
																				"src": "37692:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "37677:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "37677:3:18"
																		},
																		"nativeSrc": "37677:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "37677:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "37624:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "37624:43:18"
																},
																"nativeSrc": "37624:72:18",
																"nodeType": "YulFunctionCall",
																"src": "37624:72:18"
															},
															"nativeSrc": "37624:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "37624:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "37261:442:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "37371:9:18",
														"nodeType": "YulTypedName",
														"src": "37371:9:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "37383:6:18",
														"nodeType": "YulTypedName",
														"src": "37383:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "37391:6:18",
														"nodeType": "YulTypedName",
														"src": "37391:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "37399:6:18",
														"nodeType": "YulTypedName",
														"src": "37399:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "37410:4:18",
														"nodeType": "YulTypedName",
														"src": "37410:4:18",
														"type": ""
													}
												],
												"src": "37261:442:18"
											},
											{
												"body": {
													"nativeSrc": "37749:76:18",
													"nodeType": "YulBlock",
													"src": "37749:76:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "37803:16:18",
																"nodeType": "YulBlock",
																"src": "37803:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "37812:1:18",
																					"nodeType": "YulLiteral",
																					"src": "37812:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "37815:1:18",
																					"nodeType": "YulLiteral",
																					"src": "37815:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "37805:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "37805:6:18"
																			},
																			"nativeSrc": "37805:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "37805:12:18"
																		},
																		"nativeSrc": "37805:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "37805:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "37772:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "37772:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "37794:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "37794:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "37779:14:18",
																					"nodeType": "YulIdentifier",
																					"src": "37779:14:18"
																				},
																				"nativeSrc": "37779:21:18",
																				"nodeType": "YulFunctionCall",
																				"src": "37779:21:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "37769:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "37769:2:18"
																		},
																		"nativeSrc": "37769:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "37769:32:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "37762:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "37762:6:18"
																},
																"nativeSrc": "37762:40:18",
																"nodeType": "YulFunctionCall",
																"src": "37762:40:18"
															},
															"nativeSrc": "37759:60:18",
															"nodeType": "YulIf",
															"src": "37759:60:18"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "37709:116:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "37742:5:18",
														"nodeType": "YulTypedName",
														"src": "37742:5:18",
														"type": ""
													}
												],
												"src": "37709:116:18"
											},
											{
												"body": {
													"nativeSrc": "37891:77:18",
													"nodeType": "YulBlock",
													"src": "37891:77:18",
													"statements": [
														{
															"nativeSrc": "37901:22:18",
															"nodeType": "YulAssignment",
															"src": "37901:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "37916:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "37916:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "37910:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "37910:5:18"
																},
																"nativeSrc": "37910:13:18",
																"nodeType": "YulFunctionCall",
																"src": "37910:13:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "37901:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "37901:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "37956:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "37956:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "37932:23:18",
																	"nodeType": "YulIdentifier",
																	"src": "37932:23:18"
																},
																"nativeSrc": "37932:30:18",
																"nodeType": "YulFunctionCall",
																"src": "37932:30:18"
															},
															"nativeSrc": "37932:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "37932:30:18"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "37831:137:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "37869:6:18",
														"nodeType": "YulTypedName",
														"src": "37869:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "37877:3:18",
														"nodeType": "YulTypedName",
														"src": "37877:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "37885:5:18",
														"nodeType": "YulTypedName",
														"src": "37885:5:18",
														"type": ""
													}
												],
												"src": "37831:137:18"
											},
											{
												"body": {
													"nativeSrc": "38048:271:18",
													"nodeType": "YulBlock",
													"src": "38048:271:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "38094:83:18",
																"nodeType": "YulBlock",
																"src": "38094:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "38096:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "38096:77:18"
																			},
																			"nativeSrc": "38096:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "38096:79:18"
																		},
																		"nativeSrc": "38096:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "38096:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "38069:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "38069:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "38078:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "38078:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "38065:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "38065:3:18"
																		},
																		"nativeSrc": "38065:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "38065:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "38090:2:18",
																		"nodeType": "YulLiteral",
																		"src": "38090:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "38061:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "38061:3:18"
																},
																"nativeSrc": "38061:32:18",
																"nodeType": "YulFunctionCall",
																"src": "38061:32:18"
															},
															"nativeSrc": "38058:119:18",
															"nodeType": "YulIf",
															"src": "38058:119:18"
														},
														{
															"nativeSrc": "38187:125:18",
															"nodeType": "YulBlock",
															"src": "38187:125:18",
															"statements": [
																{
																	"nativeSrc": "38202:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "38202:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "38216:1:18",
																		"nodeType": "YulLiteral",
																		"src": "38216:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "38206:6:18",
																			"nodeType": "YulTypedName",
																			"src": "38206:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "38231:71:18",
																	"nodeType": "YulAssignment",
																	"src": "38231:71:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "38274:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "38274:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "38285:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "38285:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "38270:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "38270:3:18"
																				},
																				"nativeSrc": "38270:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "38270:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "38294:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "38294:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "38241:28:18",
																			"nodeType": "YulIdentifier",
																			"src": "38241:28:18"
																		},
																		"nativeSrc": "38241:61:18",
																		"nodeType": "YulFunctionCall",
																		"src": "38241:61:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "38231:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "38231:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "37974:345:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "38018:9:18",
														"nodeType": "YulTypedName",
														"src": "38018:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "38029:7:18",
														"nodeType": "YulTypedName",
														"src": "38029:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "38041:6:18",
														"nodeType": "YulTypedName",
														"src": "38041:6:18",
														"type": ""
													}
												],
												"src": "37974:345:18"
											},
											{
												"body": {
													"nativeSrc": "38451:206:18",
													"nodeType": "YulBlock",
													"src": "38451:206:18",
													"statements": [
														{
															"nativeSrc": "38461:26:18",
															"nodeType": "YulAssignment",
															"src": "38461:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "38473:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "38473:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "38484:2:18",
																		"nodeType": "YulLiteral",
																		"src": "38484:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "38469:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "38469:3:18"
																},
																"nativeSrc": "38469:18:18",
																"nodeType": "YulFunctionCall",
																"src": "38469:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "38461:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "38461:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "38541:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "38541:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "38554:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "38554:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "38565:1:18",
																				"nodeType": "YulLiteral",
																				"src": "38565:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "38550:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "38550:3:18"
																		},
																		"nativeSrc": "38550:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "38550:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "38497:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "38497:43:18"
																},
																"nativeSrc": "38497:71:18",
																"nodeType": "YulFunctionCall",
																"src": "38497:71:18"
															},
															"nativeSrc": "38497:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "38497:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "38622:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "38622:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "38635:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "38635:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "38646:2:18",
																				"nodeType": "YulLiteral",
																				"src": "38646:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "38631:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "38631:3:18"
																		},
																		"nativeSrc": "38631:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "38631:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "38578:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "38578:43:18"
																},
																"nativeSrc": "38578:72:18",
																"nodeType": "YulFunctionCall",
																"src": "38578:72:18"
															},
															"nativeSrc": "38578:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "38578:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "38325:332:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "38415:9:18",
														"nodeType": "YulTypedName",
														"src": "38415:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "38427:6:18",
														"nodeType": "YulTypedName",
														"src": "38427:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "38435:6:18",
														"nodeType": "YulTypedName",
														"src": "38435:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "38446:4:18",
														"nodeType": "YulTypedName",
														"src": "38446:4:18",
														"type": ""
													}
												],
												"src": "38325:332:18"
											},
											{
												"body": {
													"nativeSrc": "38716:32:18",
													"nodeType": "YulBlock",
													"src": "38716:32:18",
													"statements": [
														{
															"nativeSrc": "38726:16:18",
															"nodeType": "YulAssignment",
															"src": "38726:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "38737:5:18",
																"nodeType": "YulIdentifier",
																"src": "38737:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "38726:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "38726:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "38663:85:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "38698:5:18",
														"nodeType": "YulTypedName",
														"src": "38698:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "38708:7:18",
														"nodeType": "YulTypedName",
														"src": "38708:7:18",
														"type": ""
													}
												],
												"src": "38663:85:18"
											},
											{
												"body": {
													"nativeSrc": "38822:90:18",
													"nodeType": "YulBlock",
													"src": "38822:90:18",
													"statements": [
														{
															"nativeSrc": "38832:74:18",
															"nodeType": "YulAssignment",
															"src": "38832:74:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "38898:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "38898:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "38872:25:18",
																					"nodeType": "YulIdentifier",
																					"src": "38872:25:18"
																				},
																				"nativeSrc": "38872:32:18",
																				"nodeType": "YulFunctionCall",
																				"src": "38872:32:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "38863:8:18",
																			"nodeType": "YulIdentifier",
																			"src": "38863:8:18"
																		},
																		"nativeSrc": "38863:42:18",
																		"nodeType": "YulFunctionCall",
																		"src": "38863:42:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "38845:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "38845:17:18"
																},
																"nativeSrc": "38845:61:18",
																"nodeType": "YulFunctionCall",
																"src": "38845:61:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "38832:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "38832:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nativeSrc": "38754:158:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "38802:5:18",
														"nodeType": "YulTypedName",
														"src": "38802:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "38812:9:18",
														"nodeType": "YulTypedName",
														"src": "38812:9:18",
														"type": ""
													}
												],
												"src": "38754:158:18"
											},
											{
												"body": {
													"nativeSrc": "38991:74:18",
													"nodeType": "YulBlock",
													"src": "38991:74:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "39008:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "39008:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "39052:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "39052:5:18"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nativeSrc": "39013:38:18",
																			"nodeType": "YulIdentifier",
																			"src": "39013:38:18"
																		},
																		"nativeSrc": "39013:45:18",
																		"nodeType": "YulFunctionCall",
																		"src": "39013:45:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "39001:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "39001:6:18"
																},
																"nativeSrc": "39001:58:18",
																"nodeType": "YulFunctionCall",
																"src": "39001:58:18"
															},
															"nativeSrc": "39001:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "39001:58:18"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nativeSrc": "38918:147:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "38979:5:18",
														"nodeType": "YulTypedName",
														"src": "38979:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "38986:3:18",
														"nodeType": "YulTypedName",
														"src": "38986:3:18",
														"type": ""
													}
												],
												"src": "38918:147:18"
											},
											{
												"body": {
													"nativeSrc": "39205:214:18",
													"nodeType": "YulBlock",
													"src": "39205:214:18",
													"statements": [
														{
															"nativeSrc": "39215:26:18",
															"nodeType": "YulAssignment",
															"src": "39215:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "39227:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "39227:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "39238:2:18",
																		"nodeType": "YulLiteral",
																		"src": "39238:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "39223:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "39223:3:18"
																},
																"nativeSrc": "39223:18:18",
																"nodeType": "YulFunctionCall",
																"src": "39223:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "39215:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "39215:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "39295:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "39295:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "39308:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "39308:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "39319:1:18",
																				"nodeType": "YulLiteral",
																				"src": "39319:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "39304:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "39304:3:18"
																		},
																		"nativeSrc": "39304:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "39304:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "39251:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "39251:43:18"
																},
																"nativeSrc": "39251:71:18",
																"nodeType": "YulFunctionCall",
																"src": "39251:71:18"
															},
															"nativeSrc": "39251:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "39251:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "39384:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "39384:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "39397:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "39397:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "39408:2:18",
																				"nodeType": "YulLiteral",
																				"src": "39408:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "39393:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "39393:3:18"
																		},
																		"nativeSrc": "39393:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "39393:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "39332:51:18",
																	"nodeType": "YulIdentifier",
																	"src": "39332:51:18"
																},
																"nativeSrc": "39332:80:18",
																"nodeType": "YulFunctionCall",
																"src": "39332:80:18"
															},
															"nativeSrc": "39332:80:18",
															"nodeType": "YulExpressionStatement",
															"src": "39332:80:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "39071:348:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "39169:9:18",
														"nodeType": "YulTypedName",
														"src": "39169:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "39181:6:18",
														"nodeType": "YulTypedName",
														"src": "39181:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "39189:6:18",
														"nodeType": "YulTypedName",
														"src": "39189:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "39200:4:18",
														"nodeType": "YulTypedName",
														"src": "39200:4:18",
														"type": ""
													}
												],
												"src": "39071:348:18"
											},
											{
												"body": {
													"nativeSrc": "39538:34:18",
													"nodeType": "YulBlock",
													"src": "39538:34:18",
													"statements": [
														{
															"nativeSrc": "39548:18:18",
															"nodeType": "YulAssignment",
															"src": "39548:18:18",
															"value": {
																"name": "pos",
																"nativeSrc": "39563:3:18",
																"nodeType": "YulIdentifier",
																"src": "39563:3:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "39548:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "39548:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "39425:147:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "39510:3:18",
														"nodeType": "YulTypedName",
														"src": "39510:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "39515:6:18",
														"nodeType": "YulTypedName",
														"src": "39515:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "39526:11:18",
														"nodeType": "YulTypedName",
														"src": "39526:11:18",
														"type": ""
													}
												],
												"src": "39425:147:18"
											},
											{
												"body": {
													"nativeSrc": "39686:278:18",
													"nodeType": "YulBlock",
													"src": "39686:278:18",
													"statements": [
														{
															"nativeSrc": "39696:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "39696:52:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "39742:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "39742:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "39710:31:18",
																	"nodeType": "YulIdentifier",
																	"src": "39710:31:18"
																},
																"nativeSrc": "39710:38:18",
																"nodeType": "YulFunctionCall",
																"src": "39710:38:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "39700:6:18",
																	"nodeType": "YulTypedName",
																	"src": "39700:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "39757:95:18",
															"nodeType": "YulAssignment",
															"src": "39757:95:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "39840:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "39840:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "39845:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "39845:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "39764:75:18",
																	"nodeType": "YulIdentifier",
																	"src": "39764:75:18"
																},
																"nativeSrc": "39764:88:18",
																"nodeType": "YulFunctionCall",
																"src": "39764:88:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "39757:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "39757:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "39900:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "39900:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "39907:4:18",
																				"nodeType": "YulLiteral",
																				"src": "39907:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "39896:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "39896:3:18"
																		},
																		"nativeSrc": "39896:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "39896:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "39914:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "39914:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "39919:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "39919:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "39861:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "39861:34:18"
																},
																"nativeSrc": "39861:65:18",
																"nodeType": "YulFunctionCall",
																"src": "39861:65:18"
															},
															"nativeSrc": "39861:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "39861:65:18"
														},
														{
															"nativeSrc": "39935:23:18",
															"nodeType": "YulAssignment",
															"src": "39935:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "39946:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "39946:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "39951:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "39951:6:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "39942:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "39942:3:18"
																},
																"nativeSrc": "39942:16:18",
																"nodeType": "YulFunctionCall",
																"src": "39942:16:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "39935:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "39935:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "39578:386:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "39667:5:18",
														"nodeType": "YulTypedName",
														"src": "39667:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "39674:3:18",
														"nodeType": "YulTypedName",
														"src": "39674:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "39682:3:18",
														"nodeType": "YulTypedName",
														"src": "39682:3:18",
														"type": ""
													}
												],
												"src": "39578:386:18"
											},
											{
												"body": {
													"nativeSrc": "40104:137:18",
													"nodeType": "YulBlock",
													"src": "40104:137:18",
													"statements": [
														{
															"nativeSrc": "40115:100:18",
															"nodeType": "YulAssignment",
															"src": "40115:100:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "40202:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "40202:6:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "40211:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "40211:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "40122:79:18",
																	"nodeType": "YulIdentifier",
																	"src": "40122:79:18"
																},
																"nativeSrc": "40122:93:18",
																"nodeType": "YulFunctionCall",
																"src": "40122:93:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "40115:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "40115:3:18"
																}
															]
														},
														{
															"nativeSrc": "40225:10:18",
															"nodeType": "YulAssignment",
															"src": "40225:10:18",
															"value": {
																"name": "pos",
																"nativeSrc": "40232:3:18",
																"nodeType": "YulIdentifier",
																"src": "40232:3:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "40225:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "40225:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "39970:271:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "40083:3:18",
														"nodeType": "YulTypedName",
														"src": "40083:3:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "40089:6:18",
														"nodeType": "YulTypedName",
														"src": "40089:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "40100:3:18",
														"nodeType": "YulTypedName",
														"src": "40100:3:18",
														"type": ""
													}
												],
												"src": "39970:271:18"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_VRFCoordinatorV2Interface_$217_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_VRFCoordinatorV2Interface_$217_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_VRFCoordinatorV2Interface_$217_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_VRFCoordinatorV2Interface_$217__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_VRFCoordinatorV2Interface_$217_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_LinkTokenInterface_$312_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_LinkTokenInterface_$312_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_LinkTokenInterface_$312_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_LinkTokenInterface_$312__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_LinkTokenInterface_$312_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_ERC20_$1022_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$1022_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$1022_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$1022__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$1022_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function convert_t_contract$_IUniswapV2Router02_$2123_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IUniswapV2Router02_$2123_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV2Router02_$2123_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IUniswapV2Router02_$2123__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IUniswapV2Router02_$2123_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_AggregatorV2V3Interface_$75_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_AggregatorV2V3Interface_$75_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV2V3Interface_$75_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_AggregatorV2V3Interface_$75__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AggregatorV2V3Interface_$75_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Plan is exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016(memPtr) {\n\n        mstore(add(memPtr, 0), \"Frequency must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Plan is not exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Total must be greater than amoun\")\n\n        mstore(add(memPtr, 32), \"t\")\n\n    }\n\n    function abi_encode_t_stringliteral_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Plan is not active\")\n\n    }\n\n    function abi_encode_t_stringliteral_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot trigger more than remaini\")\n\n        mstore(add(memPtr, 32), \"ng amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f96280bb4f5b1f7479570483658bbfa7f265590669ee8baa295330b1374cab6c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot trigger before next trigg\")\n\n        mstore(add(memPtr, 32), \"er time\")\n\n    }\n\n    function abi_encode_t_stringliteral_f96280bb4f5b1f7479570483658bbfa7f265590669ee8baa295330b1374cab6c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_f96280bb4f5b1f7479570483658bbfa7f265590669ee8baa295330b1374cab6c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f96280bb4f5b1f7479570483658bbfa7f265590669ee8baa295330b1374cab6c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f96280bb4f5b1f7479570483658bbfa7f265590669ee8baa295330b1374cab6c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function cleanup_t_rational_3_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function convert_t_rational_3_by_1_to_t_uint16(value) -> converted {\n        converted := cleanup_t_uint16(identity(cleanup_t_rational_3_by_1(value)))\n    }\n\n    function abi_encode_t_rational_3_by_1_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_3_by_1_to_t_uint16(value))\n    }\n\n    function cleanup_t_rational_350000_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function convert_t_rational_350000_by_1_to_t_uint32(value) -> converted {\n        converted := cleanup_t_uint32(identity(cleanup_t_rational_350000_by_1(value)))\n    }\n\n    function abi_encode_t_rational_350000_by_1_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_350000_by_1_to_t_uint32(value))\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint32(value) -> converted {\n        converted := cleanup_t_uint32(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint64_t_rational_3_by_1_t_rational_350000_by_1_t_rational_1_by_1__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_3_by_1_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_rational_350000_by_1_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_rational_1_by_1_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"323": [
									{
										"length": 32,
										"start": 1707
									},
									{
										"length": 32,
										"start": 1791
									}
								]
							},
							"linkReferences": {},
							"object": "608060405260043610610116575f3560e01c80637dc0d1d01161009f578063b197df5411610063578063b197df54146103a1578063c440fa0f146103c9578063c966494e146103f1578063d930da601461042d578063eb5a662e146104435761011d565b80637dc0d1d0146102ba57806383ceae8d146102e457806386d86d8414610320578063a63661a514610361578063affed0e0146103775761011d565b80632f48ab7d116100e65780632f48ab7d146101c5578063365b98b2146101ef5780634585e33b1461022b5780636e04ff0d14610253578063735de9f7146102905761011d565b8062e1801c146101215780630a009097146101495780631c4695f4146101735780631fe543e31461019d5761011d565b3661011d57005b5f80fd5b34801561012c575f80fd5b506101476004803603810190610142919061200d565b61047f565b005b348015610154575f80fd5b5061015d61065f565b60405161016a91906120c5565b60405180910390f35b34801561017e575f80fd5b50610187610684565b60405161019491906120fe565b60405180910390f35b3480156101a8575f80fd5b506101c360048036038101906101be9190612267565b6106a9565b005b3480156101d0575f80fd5b506101d9610769565b6040516101e691906122e1565b60405180910390f35b3480156101fa575f80fd5b50610215600480360381019061021091906122fa565b61078e565b6040516102229190612345565b60405180910390f35b348015610236575f80fd5b50610251600480360381019061024c91906123b7565b6107be565b005b34801561025e575f80fd5b50610279600480360381019061027491906123b7565b6107de565b604051610287929190612496565b60405180910390f35b34801561029b575f80fd5b506102a46108f8565b6040516102b191906124e4565b60405180910390f35b3480156102c5575f80fd5b506102ce61091d565b6040516102db919061251d565b60405180910390f35b3480156102ef575f80fd5b5061030a60048036038101906103059190612560565b610942565b604051610317919061259a565b60405180910390f35b34801561032b575f80fd5b5061034660048036038101906103419190612560565b610957565b604051610358969594939291906125b3565b60405180910390f35b34801561036c575f80fd5b5061037561098e565b005b348015610382575f80fd5b5061038b610c33565b604051610398919061259a565b60405180910390f35b3480156103ac575f80fd5b506103c760048036038101906103c2919061200d565b610c39565b005b3480156103d4575f80fd5b506103ef60048036038101906103ea9190612560565b610ea5565b005b3480156103fc575f80fd5b50610417600480360381019061041291906122fa565b6115f0565b6040516104249190612345565b60405180910390f35b348015610438575f80fd5b50610441611620565b005b34801561044e575f80fd5b5061046960048036038101906104649190612560565b611729565b604051610476919061259a565b60405180910390f35b5f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0154116104ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f69061266c565b60405180910390fd5b5f8211610541576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610538906126d4565b60405180910390fd5b5f8111610583576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057a9061273c565b60405180910390fd5b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060020181905550815f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101819055503373ffffffffffffffffffffffffffffffffffffffff167fc8108639f5e0627bac90449607e60d516a5082452e397808a067b57f755515fc838360405161065392919061275a565b60405180910390a25050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461075b57337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f4000000000000000000000000000000000000000000000000000000008152600401610752929190612781565b60405180910390fd5b61076582826117cc565b5050565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f82828101906107ce91906127e3565b90506107d981610ea5565b505050565b5f60605f60015f6001806009546107f5919061283b565b43610800919061289b565b61080a91906128cb565b81526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f925060035f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054421180156108c457505f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054115b156108ce57600192505b806040516020016108df9190612345565b6040516020818303038152906040529150509250929050565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6003602052805f5260405f205f915090505481565b5f602052805f5260405f205f91509050805f0154908060010154908060020154908060030154908060040154908060050154905086565b5f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015411610a0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0590612948565b60405180910390fd5b5f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206002015411610a8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a869061273c565b60405180910390fd5b5f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060020154610ad833611729565b11610b18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0f906129d6565b60405180910390fd5b425f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600301819055505f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206004018190555060015f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600501819055503373ffffffffffffffffffffffffffffffffffffffff167fa806cf17be1fb3cff26c4a6a46b735ddbf2ac07c138bdedb6d2ace798a2cfd4060405160405180910390a2610c3133611989565b565b60095481565b5f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015414610cb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb09061266c565b60405180910390fd5b5f8211610cfb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf2906126d4565b60405180910390fd5b5f8111610d3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d349061273c565b60405180910390fd5b3360015f60095481526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060c0016040528060095f815480929190610dab906129f4565b9190505581526020018381526020018281526020014281526020015f81526020015f8152505f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f01556020820151816001015560408201518160020155606082015181600301556080820151816004015560a082015181600501559050503373ffffffffffffffffffffffffffffffffffffffff167f89d3f1cdfad4e5c26535ac23dc61cf9e975667801747518f01b1b653545d736a8383604051610e9192919061275a565b60405180910390a2610ea161098e565b5050565b60015f808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206005015414610f27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1e90612a85565b60405180910390fd5b5f808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060020154610f7082611729565b11610fb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa790612b13565b60405180910390fd5b60035f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054421015611030576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102790612ba1565b60405180910390fd5b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206002015490505f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156110de573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111029190612c45565b5050509150505f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611173573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111979190612cf2565b60ff1690505f8160126111aa919061283b565b600a6111b69190612e4c565b83670de0b6b3a7640000866111cb9190612e96565b6111d59190612ed7565b6111df9190612ed7565b90505f6103e86005836111f29190612e96565b6111fc9190612ed7565b90505f818361120b919061283b565b905061123a60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16883089611a9e565b61128760045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688611b20565b5f600267ffffffffffffffff8111156112a3576112a261212b565b5b6040519080825280602002602001820160405280156112d15781602001602082028036833780820191505090505b50905060045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815f8151811061130957611308612f07565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113ad573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113d19190612f48565b816001815181106113e5576113e4612f07565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318cbafe589858530610e104261146f91906128cb565b6040518663ffffffff1660e01b815260040161148f95949392919061302a565b5f604051808303815f875af11580156114aa573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906114d29190613117565b90505f816001815181106114e9576114e8612f07565b5b602002602001015190505f808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206004015f815480929190611542906129f4565b91905055508973ffffffffffffffffffffffffffffffffffffffff167f1a3abf7e0a472651ebe2c79a31a5f4660c7ea65e3086ee1742d7502999bbf5b58a8360405161158f92919061275a565b60405180910390a28973ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f193505050501580156115da573d5f803e3d5ffd5b506115e48a611989565b50505050505050505050565b6002602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0154116116a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169790612948565b60405180910390fd5b5f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600501819055503373ffffffffffffffffffffffffffffffffffffffff167ff222abd4ee7afb02f9450183b95d07aaab2ea2f2d6748f55525c7e875fdd58a160405160405180910390a2565b5f60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e83306040518363ffffffff1660e01b8152600401611786929190612781565b602060405180830381865afa1580156117a1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117c5919061315e565b9050919050565b5f60025f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010154825f8151811061185357611852612f07565b5b6020026020010151611865919061289b565b5f808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101545f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600401546118ef9190612e96565b5f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003015461193991906128cb565b61194391906128cb565b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d3b1d30600a54600660149054906101000a900467ffffffffffffffff1660036205573060016040518663ffffffff1660e01b8152600401611a0995949392919061328a565b6020604051808303815f875af1158015611a25573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a49919061315e565b90508160025f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b611b1a848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611ad3939291906132db565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611bb9565b50505050565b5f8373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401611b5c929190612781565b602060405180830381865afa158015611b77573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b9b919061315e565b9050611bb384848484611bae91906128cb565b611c4e565b50505050565b5f611be3828473ffffffffffffffffffffffffffffffffffffffff16611d5b90919063ffffffff16565b90505f815114158015611c07575080806020019051810190611c05919061333a565b155b15611c4957826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611c409190612345565b60405180910390fd5b505050565b5f8373ffffffffffffffffffffffffffffffffffffffff1663095ea7b38484604051602401611c7e929190613365565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050611ccc8482611d70565b611d5557611d4a848573ffffffffffffffffffffffffffffffffffffffff1663095ea7b3865f604051602401611d039291906133c5565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611bb9565b611d548482611bb9565b5b50505050565b6060611d6883835f611e2f565b905092915050565b5f805f8473ffffffffffffffffffffffffffffffffffffffff1684604051611d989190613426565b5f604051808303815f865af19150503d805f8114611dd1576040519150601f19603f3d011682016040523d82523d5f602084013e611dd6565b606091505b5091509150818015611e0357505f81511480611e02575080806020019051810190611e01919061333a565b5b5b8015611e2557505f8573ffffffffffffffffffffffffffffffffffffffff163b115b9250505092915050565b606081471015611e7657306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401611e6d9190612345565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff168486604051611e9e9190613426565b5f6040518083038185875af1925050503d805f8114611ed8576040519150601f19603f3d011682016040523d82523d5f602084013e611edd565b606091505b5091509150611eed868383611ef8565b925050509392505050565b606082611f0d57611f0882611f85565b611f7d565b5f8251148015611f3357505f8473ffffffffffffffffffffffffffffffffffffffff163b145b15611f7557836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401611f6c9190612345565b60405180910390fd5b819050611f7e565b5b9392505050565b5f81511115611f975780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b611fec81611fda565b8114611ff6575f80fd5b50565b5f8135905061200781611fe3565b92915050565b5f806040838503121561202357612022611fd2565b5b5f61203085828601611ff9565b925050602061204185828601611ff9565b9150509250929050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61208d6120886120838461204b565b61206a565b61204b565b9050919050565b5f61209e82612073565b9050919050565b5f6120af82612094565b9050919050565b6120bf816120a5565b82525050565b5f6020820190506120d85f8301846120b6565b92915050565b5f6120e882612094565b9050919050565b6120f8816120de565b82525050565b5f6020820190506121115f8301846120ef565b92915050565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6121618261211b565b810181811067ffffffffffffffff821117156121805761217f61212b565b5b80604052505050565b5f612192611fc9565b905061219e8282612158565b919050565b5f67ffffffffffffffff8211156121bd576121bc61212b565b5b602082029050602081019050919050565b5f80fd5b5f6121e46121df846121a3565b612189565b90508083825260208201905060208402830185811115612207576122066121ce565b5b835b81811015612230578061221c8882611ff9565b845260208401935050602081019050612209565b5050509392505050565b5f82601f83011261224e5761224d612117565b5b813561225e8482602086016121d2565b91505092915050565b5f806040838503121561227d5761227c611fd2565b5b5f61228a85828601611ff9565b925050602083013567ffffffffffffffff8111156122ab576122aa611fd6565b5b6122b78582860161223a565b9150509250929050565b5f6122cb82612094565b9050919050565b6122db816122c1565b82525050565b5f6020820190506122f45f8301846122d2565b92915050565b5f6020828403121561230f5761230e611fd2565b5b5f61231c84828501611ff9565b91505092915050565b5f61232f8261204b565b9050919050565b61233f81612325565b82525050565b5f6020820190506123585f830184612336565b92915050565b5f80fd5b5f8083601f84011261237757612376612117565b5b8235905067ffffffffffffffff8111156123945761239361235e565b5b6020830191508360018202830111156123b0576123af6121ce565b5b9250929050565b5f80602083850312156123cd576123cc611fd2565b5b5f83013567ffffffffffffffff8111156123ea576123e9611fd6565b5b6123f685828601612362565b92509250509250929050565b5f8115159050919050565b61241681612402565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015612453578082015181840152602081019050612438565b5f8484015250505050565b5f6124688261241c565b6124728185612426565b9350612482818560208601612436565b61248b8161211b565b840191505092915050565b5f6040820190506124a95f83018561240d565b81810360208301526124bb818461245e565b90509392505050565b5f6124ce82612094565b9050919050565b6124de816124c4565b82525050565b5f6020820190506124f75f8301846124d5565b92915050565b5f61250782612094565b9050919050565b612517816124fd565b82525050565b5f6020820190506125305f83018461250e565b92915050565b61253f81612325565b8114612549575f80fd5b50565b5f8135905061255a81612536565b92915050565b5f6020828403121561257557612574611fd2565b5b5f6125828482850161254c565b91505092915050565b61259481611fda565b82525050565b5f6020820190506125ad5f83018461258b565b92915050565b5f60c0820190506125c65f83018961258b565b6125d3602083018861258b565b6125e0604083018761258b565b6125ed606083018661258b565b6125fa608083018561258b565b61260760a083018461258b565b979650505050505050565b5f82825260208201905092915050565b7f506c616e206973206578697374000000000000000000000000000000000000005f82015250565b5f612656600d83612612565b915061266182612622565b602082019050919050565b5f6020820190508181035f8301526126838161264a565b9050919050565b7f4672657175656e6379206d7573742062652067726561746572207468616e20305f82015250565b5f6126be602083612612565b91506126c98261268a565b602082019050919050565b5f6020820190508181035f8301526126eb816126b2565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f612726601d83612612565b9150612731826126f2565b602082019050919050565b5f6020820190508181035f8301526127538161271a565b9050919050565b5f60408201905061276d5f83018561258b565b61277a602083018461258b565b9392505050565b5f6040820190506127945f830185612336565b6127a16020830184612336565b9392505050565b5f6127b28261204b565b9050919050565b6127c2816127a8565b81146127cc575f80fd5b50565b5f813590506127dd816127b9565b92915050565b5f602082840312156127f8576127f7611fd2565b5b5f612805848285016127cf565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61284582611fda565b915061285083611fda565b92508282039050818111156128685761286761280e565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6128a582611fda565b91506128b083611fda565b9250826128c0576128bf61286e565b5b828206905092915050565b5f6128d582611fda565b91506128e083611fda565b92508282019050808211156128f8576128f761280e565b5b92915050565b7f506c616e206973206e6f742065786973740000000000000000000000000000005f82015250565b5f612932601183612612565b915061293d826128fe565b602082019050919050565b5f6020820190508181035f83015261295f81612926565b9050919050565b7f546f74616c206d7573742062652067726561746572207468616e20616d6f756e5f8201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b5f6129c0602183612612565b91506129cb82612966565b604082019050919050565b5f6020820190508181035f8301526129ed816129b4565b9050919050565b5f6129fe82611fda565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612a3057612a2f61280e565b5b600182019050919050565b7f506c616e206973206e6f742061637469766500000000000000000000000000005f82015250565b5f612a6f601283612612565b9150612a7a82612a3b565b602082019050919050565b5f6020820190508181035f830152612a9c81612a63565b9050919050565b7f43616e6e6f742074726967676572206d6f7265207468616e2072656d61696e695f8201527f6e6720616d6f756e740000000000000000000000000000000000000000000000602082015250565b5f612afd602983612612565b9150612b0882612aa3565b604082019050919050565b5f6020820190508181035f830152612b2a81612af1565b9050919050565b7f43616e6e6f742074726967676572206265666f7265206e6578742074726967675f8201527f65722074696d6500000000000000000000000000000000000000000000000000602082015250565b5f612b8b602783612612565b9150612b9682612b31565b604082019050919050565b5f6020820190508181035f830152612bb881612b7f565b9050919050565b5f69ffffffffffffffffffff82169050919050565b612bdd81612bbf565b8114612be7575f80fd5b50565b5f81519050612bf881612bd4565b92915050565b5f819050919050565b612c1081612bfe565b8114612c1a575f80fd5b50565b5f81519050612c2b81612c07565b92915050565b5f81519050612c3f81611fe3565b92915050565b5f805f805f60a08688031215612c5e57612c5d611fd2565b5b5f612c6b88828901612bea565b9550506020612c7c88828901612c1d565b9450506040612c8d88828901612c31565b9350506060612c9e88828901612c31565b9250506080612caf88828901612bea565b9150509295509295909350565b5f60ff82169050919050565b612cd181612cbc565b8114612cdb575f80fd5b50565b5f81519050612cec81612cc8565b92915050565b5f60208284031215612d0757612d06611fd2565b5b5f612d1484828501612cde565b91505092915050565b5f8160011c9050919050565b5f808291508390505b6001851115612d7257808604811115612d4e57612d4d61280e565b5b6001851615612d5d5780820291505b8081029050612d6b85612d1d565b9450612d32565b94509492505050565b5f82612d8a5760019050612e45565b81612d97575f9050612e45565b8160018114612dad5760028114612db757612de6565b6001915050612e45565b60ff841115612dc957612dc861280e565b5b8360020a915084821115612de057612ddf61280e565b5b50612e45565b5060208310610133831016604e8410600b8410161715612e1b5782820a905083811115612e1657612e1561280e565b5b612e45565b612e288484846001612d29565b92509050818404811115612e3f57612e3e61280e565b5b81810290505b9392505050565b5f612e5682611fda565b9150612e6183611fda565b9250612e8e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612d7b565b905092915050565b5f612ea082611fda565b9150612eab83611fda565b9250828202612eb981611fda565b91508282048414831517612ed057612ecf61280e565b5b5092915050565b5f612ee182611fda565b9150612eec83611fda565b925082612efc57612efb61286e565b5b828204905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050612f4281612536565b92915050565b5f60208284031215612f5d57612f5c611fd2565b5b5f612f6a84828501612f34565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b612fa581612325565b82525050565b5f612fb68383612f9c565b60208301905092915050565b5f602082019050919050565b5f612fd882612f73565b612fe28185612f7d565b9350612fed83612f8d565b805f5b8381101561301d5781516130048882612fab565b975061300f83612fc2565b925050600181019050612ff0565b5085935050505092915050565b5f60a08201905061303d5f83018861258b565b61304a602083018761258b565b818103604083015261305c8186612fce565b905061306b6060830185612336565b613078608083018461258b565b9695505050505050565b5f61309461308f846121a3565b612189565b905080838252602082019050602084028301858111156130b7576130b66121ce565b5b835b818110156130e057806130cc8882612c31565b8452602084019350506020810190506130b9565b5050509392505050565b5f82601f8301126130fe576130fd612117565b5b815161310e848260208601613082565b91505092915050565b5f6020828403121561312c5761312b611fd2565b5b5f82015167ffffffffffffffff81111561314957613148611fd6565b5b613155848285016130ea565b91505092915050565b5f6020828403121561317357613172611fd2565b5b5f61318084828501612c31565b91505092915050565b5f819050919050565b61319b81613189565b82525050565b5f67ffffffffffffffff82169050919050565b6131bd816131a1565b82525050565b5f819050919050565b5f61ffff82169050919050565b5f6131f36131ee6131e9846131c3565b61206a565b6131cc565b9050919050565b613203816131d9565b82525050565b5f819050919050565b5f63ffffffff82169050919050565b5f61323b61323661323184613209565b61206a565b613212565b9050919050565b61324b81613221565b82525050565b5f819050919050565b5f61327461326f61326a84613251565b61206a565b613212565b9050919050565b6132848161325a565b82525050565b5f60a08201905061329d5f830188613192565b6132aa60208301876131b4565b6132b760408301866131fa565b6132c46060830185613242565b6132d1608083018461327b565b9695505050505050565b5f6060820190506132ee5f830186612336565b6132fb6020830185612336565b613308604083018461258b565b949350505050565b61331981612402565b8114613323575f80fd5b50565b5f8151905061333481613310565b92915050565b5f6020828403121561334f5761334e611fd2565b5b5f61335c84828501613326565b91505092915050565b5f6040820190506133785f830185612336565b613385602083018461258b565b9392505050565b5f819050919050565b5f6133af6133aa6133a58461338c565b61206a565b611fda565b9050919050565b6133bf81613395565b82525050565b5f6040820190506133d85f830185612336565b6133e560208301846133b6565b9392505050565b5f81905092915050565b5f6134008261241c565b61340a81856133ec565b935061341a818560208601612436565b80840191505092915050565b5f61343182846133f6565b91508190509291505056fea26469706673582212202d368352843315e3b1000b350c619f136bd47be8c8112a7e4b4c627e03e21b1364736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7DC0D1D0 GT PUSH2 0x9F JUMPI DUP1 PUSH4 0xB197DF54 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xB197DF54 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0xC440FA0F EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0xC966494E EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0xD930DA60 EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0xEB5A662E EQ PUSH2 0x443 JUMPI PUSH2 0x11D JUMP JUMPDEST DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x83CEAE8D EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x86D86D84 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xA63661A5 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x377 JUMPI PUSH2 0x11D JUMP JUMPDEST DUP1 PUSH4 0x2F48AB7D GT PUSH2 0xE6 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x365B98B2 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x735DE9F7 EQ PUSH2 0x290 JUMPI PUSH2 0x11D JUMP JUMPDEST DUP1 PUSH3 0xE1801C EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0xA009097 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x1C4695F4 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x19D JUMPI PUSH2 0x11D JUMP JUMPDEST CALLDATASIZE PUSH2 0x11D JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x200D JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x154 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x65F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x20C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x187 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x20FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x2267 JUMP JUMPDEST PUSH2 0x6A9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x769 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x22E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0x78E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x23B7 JUMP JUMPDEST PUSH2 0x7BE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x23B7 JUMP JUMPDEST PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP3 SWAP2 SWAP1 PUSH2 0x2496 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A4 PUSH2 0x8F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x24E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x251D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH2 0x942 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x259A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x346 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH2 0x957 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x375 PUSH2 0x98E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x382 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x38B PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x259A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x200D JUMP JUMPDEST PUSH2 0xC39 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH2 0xEA5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x417 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x438 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x441 PUSH2 0x1620 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x469 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH2 0x1729 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x476 SWAP2 SWAP1 PUSH2 0x259A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT PUSH2 0x4FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x266C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x541 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x538 SWAP1 PUSH2 0x26D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x583 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57A SWAP1 PUSH2 0x273C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC8108639F5E0627BAC90449607E60D516A5082452E397808A067B57F755515FC DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x653 SWAP3 SWAP2 SWAP1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x75B JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x752 SWAP3 SWAP2 SWAP1 PUSH2 0x2781 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x765 DUP3 DUP3 PUSH2 0x17CC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP3 DUP3 DUP2 ADD SWAP1 PUSH2 0x7CE SWAP2 SWAP1 PUSH2 0x27E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x7D9 DUP2 PUSH2 0xEA5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH0 PUSH1 0x1 DUP1 PUSH1 0x9 SLOAD PUSH2 0x7F5 SWAP2 SWAP1 PUSH2 0x283B JUMP JUMPDEST NUMBER PUSH2 0x800 SWAP2 SWAP1 PUSH2 0x289B JUMP JUMPDEST PUSH2 0x80A SWAP2 SWAP1 PUSH2 0x28CB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 SWAP3 POP PUSH1 0x3 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0x8C4 JUMPI POP PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT JUMPDEST ISZERO PUSH2 0x8CE JUMPI PUSH1 0x1 SWAP3 POP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8DF SWAP2 SWAP1 PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT PUSH2 0xA0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA05 SWAP1 PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD GT PUSH2 0xA8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA86 SWAP1 PUSH2 0x273C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xAD8 CALLER PUSH2 0x1729 JUMP JUMPDEST GT PUSH2 0xB18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0F SWAP1 PUSH2 0x29D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA806CF17BE1FB3CFF26C4A6A46B735DDBF2AC07C138BDEDB6D2ACE798A2CFD40 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xC31 CALLER PUSH2 0x1989 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD EQ PUSH2 0xCB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB0 SWAP1 PUSH2 0x266C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0xCFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF2 SWAP1 PUSH2 0x26D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0xD3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD34 SWAP1 PUSH2 0x273C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH0 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xDAB SWAP1 PUSH2 0x29F4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x89D3F1CDFAD4E5C26535AC23DC61CF9E975667801747518F01B1B653545D736A DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE91 SWAP3 SWAP2 SWAP1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xEA1 PUSH2 0x98E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0xF27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1E SWAP1 PUSH2 0x2A85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xF70 DUP3 PUSH2 0x1729 JUMP JUMPDEST GT PUSH2 0xFB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA7 SWAP1 PUSH2 0x2B13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x1030 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1027 SWAP1 PUSH2 0x2BA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10DE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1102 SWAP2 SWAP1 PUSH2 0x2C45 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1173 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1197 SWAP2 SWAP1 PUSH2 0x2CF2 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 DUP2 PUSH1 0x12 PUSH2 0x11AA SWAP2 SWAP1 PUSH2 0x283B JUMP JUMPDEST PUSH1 0xA PUSH2 0x11B6 SWAP2 SWAP1 PUSH2 0x2E4C JUMP JUMPDEST DUP4 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x11CB SWAP2 SWAP1 PUSH2 0x2E96 JUMP JUMPDEST PUSH2 0x11D5 SWAP2 SWAP1 PUSH2 0x2ED7 JUMP JUMPDEST PUSH2 0x11DF SWAP2 SWAP1 PUSH2 0x2ED7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x3E8 PUSH1 0x5 DUP4 PUSH2 0x11F2 SWAP2 SWAP1 PUSH2 0x2E96 JUMP JUMPDEST PUSH2 0x11FC SWAP2 SWAP1 PUSH2 0x2ED7 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x120B SWAP2 SWAP1 PUSH2 0x283B JUMP JUMPDEST SWAP1 POP PUSH2 0x123A PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 ADDRESS DUP10 PUSH2 0x1A9E JUMP JUMPDEST PUSH2 0x1287 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH2 0x1B20 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12A3 JUMPI PUSH2 0x12A2 PUSH2 0x212B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12D1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x1309 JUMPI PUSH2 0x1308 PUSH2 0x2F07 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13AD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13D1 SWAP2 SWAP1 PUSH2 0x2F48 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x13E5 JUMPI PUSH2 0x13E4 PUSH2 0x2F07 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18CBAFE5 DUP10 DUP6 DUP6 ADDRESS PUSH2 0xE10 TIMESTAMP PUSH2 0x146F SWAP2 SWAP1 PUSH2 0x28CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x302A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14AA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14D2 SWAP2 SWAP1 PUSH2 0x3117 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x14E9 JUMPI PUSH2 0x14E8 PUSH2 0x2F07 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH0 DUP1 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1542 SWAP1 PUSH2 0x29F4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1A3ABF7E0A472651EBE2C79A31A5F4660C7EA65E3086EE1742D7502999BBF5B5 DUP11 DUP4 PUSH1 0x40 MLOAD PUSH2 0x158F SWAP3 SWAP2 SWAP1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x15DA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0x15E4 DUP11 PUSH2 0x1989 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT PUSH2 0x16A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1697 SWAP1 PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF222ABD4EE7AFB02F9450183B95D07AAAB2EA2F2D6748F55525C7E875FDD58A1 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP4 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1786 SWAP3 SWAP2 SWAP1 PUSH2 0x2781 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17A1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17C5 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x1853 JUMPI PUSH2 0x1852 PUSH2 0x2F07 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1865 SWAP2 SWAP1 PUSH2 0x289B JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x18EF SWAP2 SWAP1 PUSH2 0x2E96 JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x1939 SWAP2 SWAP1 PUSH2 0x28CB JUMP JUMPDEST PUSH2 0x1943 SWAP2 SWAP1 PUSH2 0x28CB JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH1 0xA SLOAD PUSH1 0x6 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH3 0x55730 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A09 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x328A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A25 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A49 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x1B1A DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1AD3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1BB9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B5C SWAP3 SWAP2 SWAP1 PUSH2 0x2781 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B77 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B9B SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST SWAP1 POP PUSH2 0x1BB3 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1BAE SWAP2 SWAP1 PUSH2 0x28CB JUMP JUMPDEST PUSH2 0x1C4E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BE3 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D5B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x1C07 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1C05 SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1C49 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C40 SWAP2 SWAP1 PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1C7E SWAP3 SWAP2 SWAP1 PUSH2 0x3365 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH2 0x1CCC DUP5 DUP3 PUSH2 0x1D70 JUMP JUMPDEST PUSH2 0x1D55 JUMPI PUSH2 0x1D4A DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP7 PUSH0 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1D03 SWAP3 SWAP2 SWAP1 PUSH2 0x33C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1BB9 JUMP JUMPDEST PUSH2 0x1D54 DUP5 DUP3 PUSH2 0x1BB9 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D68 DUP4 DUP4 PUSH0 PUSH2 0x1E2F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D98 SWAP2 SWAP1 PUSH2 0x3426 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1DD1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1E03 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x1E02 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1E01 SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST JUMPDEST JUMPDEST DUP1 ISZERO PUSH2 0x1E25 JUMPI POP PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1E76 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E6D SWAP2 SWAP1 PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1E9E SWAP2 SWAP1 PUSH2 0x3426 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1ED8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1EDD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1EED DUP7 DUP4 DUP4 PUSH2 0x1EF8 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1F0D JUMPI PUSH2 0x1F08 DUP3 PUSH2 0x1F85 JUMP JUMPDEST PUSH2 0x1F7D JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1F33 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1F75 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F6C SWAP2 SWAP1 PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1F7E JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1F97 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FEC DUP2 PUSH2 0x1FDA JUMP JUMPDEST DUP2 EQ PUSH2 0x1FF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2007 DUP2 PUSH2 0x1FE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2023 JUMPI PUSH2 0x2022 PUSH2 0x1FD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2030 DUP6 DUP3 DUP7 ADD PUSH2 0x1FF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2041 DUP6 DUP3 DUP7 ADD PUSH2 0x1FF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x208D PUSH2 0x2088 PUSH2 0x2083 DUP5 PUSH2 0x204B JUMP JUMPDEST PUSH2 0x206A JUMP JUMPDEST PUSH2 0x204B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x209E DUP3 PUSH2 0x2073 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20AF DUP3 PUSH2 0x2094 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20BF DUP2 PUSH2 0x20A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20D8 PUSH0 DUP4 ADD DUP5 PUSH2 0x20B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20E8 DUP3 PUSH2 0x2094 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20F8 DUP2 PUSH2 0x20DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2111 PUSH0 DUP4 ADD DUP5 PUSH2 0x20EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2161 DUP3 PUSH2 0x211B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2180 JUMPI PUSH2 0x217F PUSH2 0x212B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2192 PUSH2 0x1FC9 JUMP JUMPDEST SWAP1 POP PUSH2 0x219E DUP3 DUP3 PUSH2 0x2158 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21BD JUMPI PUSH2 0x21BC PUSH2 0x212B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x21E4 PUSH2 0x21DF DUP5 PUSH2 0x21A3 JUMP JUMPDEST PUSH2 0x2189 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2207 JUMPI PUSH2 0x2206 PUSH2 0x21CE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2230 JUMPI DUP1 PUSH2 0x221C DUP9 DUP3 PUSH2 0x1FF9 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2209 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x224E JUMPI PUSH2 0x224D PUSH2 0x2117 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x225E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x21D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x227D JUMPI PUSH2 0x227C PUSH2 0x1FD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x228A DUP6 DUP3 DUP7 ADD PUSH2 0x1FF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22AB JUMPI PUSH2 0x22AA PUSH2 0x1FD6 JUMP JUMPDEST JUMPDEST PUSH2 0x22B7 DUP6 DUP3 DUP7 ADD PUSH2 0x223A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22CB DUP3 PUSH2 0x2094 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22DB DUP2 PUSH2 0x22C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x22D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x230F JUMPI PUSH2 0x230E PUSH2 0x1FD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x231C DUP5 DUP3 DUP6 ADD PUSH2 0x1FF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x232F DUP3 PUSH2 0x204B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x233F DUP2 PUSH2 0x2325 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2358 PUSH0 DUP4 ADD DUP5 PUSH2 0x2336 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2377 JUMPI PUSH2 0x2376 PUSH2 0x2117 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2394 JUMPI PUSH2 0x2393 PUSH2 0x235E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x23B0 JUMPI PUSH2 0x23AF PUSH2 0x21CE JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23CD JUMPI PUSH2 0x23CC PUSH2 0x1FD2 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23EA JUMPI PUSH2 0x23E9 PUSH2 0x1FD6 JUMP JUMPDEST JUMPDEST PUSH2 0x23F6 DUP6 DUP3 DUP7 ADD PUSH2 0x2362 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2416 DUP2 PUSH2 0x2402 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2453 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2438 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2468 DUP3 PUSH2 0x241C JUMP JUMPDEST PUSH2 0x2472 DUP2 DUP6 PUSH2 0x2426 JUMP JUMPDEST SWAP4 POP PUSH2 0x2482 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2436 JUMP JUMPDEST PUSH2 0x248B DUP2 PUSH2 0x211B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24A9 PUSH0 DUP4 ADD DUP6 PUSH2 0x240D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x24BB DUP2 DUP5 PUSH2 0x245E JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24CE DUP3 PUSH2 0x2094 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24DE DUP2 PUSH2 0x24C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24F7 PUSH0 DUP4 ADD DUP5 PUSH2 0x24D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2507 DUP3 PUSH2 0x2094 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2517 DUP2 PUSH2 0x24FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2530 PUSH0 DUP4 ADD DUP5 PUSH2 0x250E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x253F DUP2 PUSH2 0x2325 JUMP JUMPDEST DUP2 EQ PUSH2 0x2549 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x255A DUP2 PUSH2 0x2536 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2575 JUMPI PUSH2 0x2574 PUSH2 0x1FD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2582 DUP5 DUP3 DUP6 ADD PUSH2 0x254C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2594 DUP2 PUSH2 0x1FDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25AD PUSH0 DUP4 ADD DUP5 PUSH2 0x258B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x25C6 PUSH0 DUP4 ADD DUP10 PUSH2 0x258B JUMP JUMPDEST PUSH2 0x25D3 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x258B JUMP JUMPDEST PUSH2 0x25E0 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x258B JUMP JUMPDEST PUSH2 0x25ED PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x258B JUMP JUMPDEST PUSH2 0x25FA PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x258B JUMP JUMPDEST PUSH2 0x2607 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x258B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506C616E20697320657869737400000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2656 PUSH1 0xD DUP4 PUSH2 0x2612 JUMP JUMPDEST SWAP2 POP PUSH2 0x2661 DUP3 PUSH2 0x2622 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2683 DUP2 PUSH2 0x264A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4672657175656E6379206D7573742062652067726561746572207468616E2030 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26BE PUSH1 0x20 DUP4 PUSH2 0x2612 JUMP JUMPDEST SWAP2 POP PUSH2 0x26C9 DUP3 PUSH2 0x268A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26EB DUP2 PUSH2 0x26B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2726 PUSH1 0x1D DUP4 PUSH2 0x2612 JUMP JUMPDEST SWAP2 POP PUSH2 0x2731 DUP3 PUSH2 0x26F2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2753 DUP2 PUSH2 0x271A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x276D PUSH0 DUP4 ADD DUP6 PUSH2 0x258B JUMP JUMPDEST PUSH2 0x277A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x258B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2794 PUSH0 DUP4 ADD DUP6 PUSH2 0x2336 JUMP JUMPDEST PUSH2 0x27A1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2336 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27B2 DUP3 PUSH2 0x204B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27C2 DUP2 PUSH2 0x27A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x27CC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27DD DUP2 PUSH2 0x27B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27F8 JUMPI PUSH2 0x27F7 PUSH2 0x1FD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2805 DUP5 DUP3 DUP6 ADD PUSH2 0x27CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2845 DUP3 PUSH2 0x1FDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2850 DUP4 PUSH2 0x1FDA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2868 JUMPI PUSH2 0x2867 PUSH2 0x280E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x28A5 DUP3 PUSH2 0x1FDA JUMP JUMPDEST SWAP2 POP PUSH2 0x28B0 DUP4 PUSH2 0x1FDA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x28C0 JUMPI PUSH2 0x28BF PUSH2 0x286E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28D5 DUP3 PUSH2 0x1FDA JUMP JUMPDEST SWAP2 POP PUSH2 0x28E0 DUP4 PUSH2 0x1FDA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x28F8 JUMPI PUSH2 0x28F7 PUSH2 0x280E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506C616E206973206E6F74206578697374000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2932 PUSH1 0x11 DUP4 PUSH2 0x2612 JUMP JUMPDEST SWAP2 POP PUSH2 0x293D DUP3 PUSH2 0x28FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x295F DUP2 PUSH2 0x2926 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F74616C206D7573742062652067726561746572207468616E20616D6F756E PUSH0 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29C0 PUSH1 0x21 DUP4 PUSH2 0x2612 JUMP JUMPDEST SWAP2 POP PUSH2 0x29CB DUP3 PUSH2 0x2966 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29ED DUP2 PUSH2 0x29B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x29FE DUP3 PUSH2 0x1FDA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2A30 JUMPI PUSH2 0x2A2F PUSH2 0x280E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C616E206973206E6F74206163746976650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A6F PUSH1 0x12 DUP4 PUSH2 0x2612 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A7A DUP3 PUSH2 0x2A3B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A9C DUP2 PUSH2 0x2A63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F742074726967676572206D6F7265207468616E2072656D61696E69 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E6720616D6F756E740000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AFD PUSH1 0x29 DUP4 PUSH2 0x2612 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B08 DUP3 PUSH2 0x2AA3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B2A DUP2 PUSH2 0x2AF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F742074726967676572206265666F7265206E657874207472696767 PUSH0 DUP3 ADD MSTORE PUSH32 0x65722074696D6500000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B8B PUSH1 0x27 DUP4 PUSH2 0x2612 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B96 DUP3 PUSH2 0x2B31 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BB8 DUP2 PUSH2 0x2B7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BDD DUP2 PUSH2 0x2BBF JUMP JUMPDEST DUP2 EQ PUSH2 0x2BE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2BF8 DUP2 PUSH2 0x2BD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C10 DUP2 PUSH2 0x2BFE JUMP JUMPDEST DUP2 EQ PUSH2 0x2C1A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C2B DUP2 PUSH2 0x2C07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C3F DUP2 PUSH2 0x1FE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2C5E JUMPI PUSH2 0x2C5D PUSH2 0x1FD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C6B DUP9 DUP3 DUP10 ADD PUSH2 0x2BEA JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2C7C DUP9 DUP3 DUP10 ADD PUSH2 0x2C1D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2C8D DUP9 DUP3 DUP10 ADD PUSH2 0x2C31 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2C9E DUP9 DUP3 DUP10 ADD PUSH2 0x2C31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2CAF DUP9 DUP3 DUP10 ADD PUSH2 0x2BEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CD1 DUP2 PUSH2 0x2CBC JUMP JUMPDEST DUP2 EQ PUSH2 0x2CDB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2CEC DUP2 PUSH2 0x2CC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D07 JUMPI PUSH2 0x2D06 PUSH2 0x1FD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D14 DUP5 DUP3 DUP6 ADD PUSH2 0x2CDE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x2D72 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x2D4E JUMPI PUSH2 0x2D4D PUSH2 0x280E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x2D5D JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x2D6B DUP6 PUSH2 0x2D1D JUMP JUMPDEST SWAP5 POP PUSH2 0x2D32 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2D8A JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2E45 JUMP JUMPDEST DUP2 PUSH2 0x2D97 JUMPI PUSH0 SWAP1 POP PUSH2 0x2E45 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2DAD JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2DB7 JUMPI PUSH2 0x2DE6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2E45 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2DC9 JUMPI PUSH2 0x2DC8 PUSH2 0x280E JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x2DE0 JUMPI PUSH2 0x2DDF PUSH2 0x280E JUMP JUMPDEST JUMPDEST POP PUSH2 0x2E45 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2E1B JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2E16 JUMPI PUSH2 0x2E15 PUSH2 0x280E JUMP JUMPDEST JUMPDEST PUSH2 0x2E45 JUMP JUMPDEST PUSH2 0x2E28 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2D29 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2E3F JUMPI PUSH2 0x2E3E PUSH2 0x280E JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2E56 DUP3 PUSH2 0x1FDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2E61 DUP4 PUSH2 0x1FDA JUMP JUMPDEST SWAP3 POP PUSH2 0x2E8E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2D7B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2EA0 DUP3 PUSH2 0x1FDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2EAB DUP4 PUSH2 0x1FDA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2EB9 DUP2 PUSH2 0x1FDA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2ED0 JUMPI PUSH2 0x2ECF PUSH2 0x280E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2EE1 DUP3 PUSH2 0x1FDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2EEC DUP4 PUSH2 0x1FDA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2EFC JUMPI PUSH2 0x2EFB PUSH2 0x286E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2F42 DUP2 PUSH2 0x2536 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F5D JUMPI PUSH2 0x2F5C PUSH2 0x1FD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2F6A DUP5 DUP3 DUP6 ADD PUSH2 0x2F34 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FA5 DUP2 PUSH2 0x2325 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2FB6 DUP4 DUP4 PUSH2 0x2F9C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2FD8 DUP3 PUSH2 0x2F73 JUMP JUMPDEST PUSH2 0x2FE2 DUP2 DUP6 PUSH2 0x2F7D JUMP JUMPDEST SWAP4 POP PUSH2 0x2FED DUP4 PUSH2 0x2F8D JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x301D JUMPI DUP2 MLOAD PUSH2 0x3004 DUP9 DUP3 PUSH2 0x2FAB JUMP JUMPDEST SWAP8 POP PUSH2 0x300F DUP4 PUSH2 0x2FC2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2FF0 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x303D PUSH0 DUP4 ADD DUP9 PUSH2 0x258B JUMP JUMPDEST PUSH2 0x304A PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x258B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x305C DUP2 DUP7 PUSH2 0x2FCE JUMP JUMPDEST SWAP1 POP PUSH2 0x306B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2336 JUMP JUMPDEST PUSH2 0x3078 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x258B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3094 PUSH2 0x308F DUP5 PUSH2 0x21A3 JUMP JUMPDEST PUSH2 0x2189 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x30B7 JUMPI PUSH2 0x30B6 PUSH2 0x21CE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x30E0 JUMPI DUP1 PUSH2 0x30CC DUP9 DUP3 PUSH2 0x2C31 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x30B9 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x30FE JUMPI PUSH2 0x30FD PUSH2 0x2117 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x310E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3082 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x312C JUMPI PUSH2 0x312B PUSH2 0x1FD2 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3149 JUMPI PUSH2 0x3148 PUSH2 0x1FD6 JUMP JUMPDEST JUMPDEST PUSH2 0x3155 DUP5 DUP3 DUP6 ADD PUSH2 0x30EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3173 JUMPI PUSH2 0x3172 PUSH2 0x1FD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3180 DUP5 DUP3 DUP6 ADD PUSH2 0x2C31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x319B DUP2 PUSH2 0x3189 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31BD DUP2 PUSH2 0x31A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x31F3 PUSH2 0x31EE PUSH2 0x31E9 DUP5 PUSH2 0x31C3 JUMP JUMPDEST PUSH2 0x206A JUMP JUMPDEST PUSH2 0x31CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3203 DUP2 PUSH2 0x31D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x323B PUSH2 0x3236 PUSH2 0x3231 DUP5 PUSH2 0x3209 JUMP JUMPDEST PUSH2 0x206A JUMP JUMPDEST PUSH2 0x3212 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x324B DUP2 PUSH2 0x3221 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3274 PUSH2 0x326F PUSH2 0x326A DUP5 PUSH2 0x3251 JUMP JUMPDEST PUSH2 0x206A JUMP JUMPDEST PUSH2 0x3212 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3284 DUP2 PUSH2 0x325A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x329D PUSH0 DUP4 ADD DUP9 PUSH2 0x3192 JUMP JUMPDEST PUSH2 0x32AA PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x31B4 JUMP JUMPDEST PUSH2 0x32B7 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x31FA JUMP JUMPDEST PUSH2 0x32C4 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x3242 JUMP JUMPDEST PUSH2 0x32D1 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x327B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x32EE PUSH0 DUP4 ADD DUP7 PUSH2 0x2336 JUMP JUMPDEST PUSH2 0x32FB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2336 JUMP JUMPDEST PUSH2 0x3308 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x258B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3319 DUP2 PUSH2 0x2402 JUMP JUMPDEST DUP2 EQ PUSH2 0x3323 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3334 DUP2 PUSH2 0x3310 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x334F JUMPI PUSH2 0x334E PUSH2 0x1FD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x335C DUP5 DUP3 DUP6 ADD PUSH2 0x3326 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3378 PUSH0 DUP4 ADD DUP6 PUSH2 0x2336 JUMP JUMPDEST PUSH2 0x3385 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x258B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x33AF PUSH2 0x33AA PUSH2 0x33A5 DUP5 PUSH2 0x338C JUMP JUMPDEST PUSH2 0x206A JUMP JUMPDEST PUSH2 0x1FDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33BF DUP2 PUSH2 0x3395 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x33D8 PUSH0 DUP4 ADD DUP6 PUSH2 0x2336 JUMP JUMPDEST PUSH2 0x33E5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x33B6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3400 DUP3 PUSH2 0x241C JUMP JUMPDEST PUSH2 0x340A DUP2 DUP6 PUSH2 0x33EC JUMP JUMPDEST SWAP4 POP PUSH2 0x341A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2436 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3431 DUP3 DUP5 PUSH2 0x33F6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D CALLDATASIZE DUP4 MSTORE DUP5 CALLER ISZERO 0xE3 0xB1 STOP SIGNEXTEND CALLDATALOAD 0xC PUSH2 0x9F13 PUSH12 0xD47BE8C8112A7E4B4C627E03 0xE2 SHL SGT PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "645:6647:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3157:396;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1538:44;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1503:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6618:256:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1481:17:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1253:40;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7050:204;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6547:495;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1613:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1657:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1424:50;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1211:37;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;3559:479;;;;;;;;;;;;;:::i;:::-;;1699:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2600:551;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4591:1586;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1365:54;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4044:168;;;;;;;;;;;;;:::i;:::-;;2473:121;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3157:396;3260:1;3234:5;:17;3240:10;3234:17;;;;;;;;;;;;;;;:23;;;:27;3226:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3306:1;3294:9;:13;3286:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;3368:1;3359:6;:10;3351:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3439:6;3412:5;:17;3418:10;3412:17;;;;;;;;;;;;;;;:24;;:33;;;;3482:9;3452:5;:17;3458:10;3452:17;;;;;;;;;;;;;;;:27;;:39;;;;3517:10;3505:42;;;3529:9;3540:6;3505:42;;;;;;;:::i;:::-;;;;;;;;3157:396;;:::o;1538:44::-;;;;;;;;;;;;;:::o;1503:30::-;;;;;;;;;;;;;:::o;6618:256:6:-;6731:14;6717:28;;:10;:28;;;6713:109;;6788:10;6800:14;6762:53;;;;;;;;;;;;:::i;:::-;;;;;;;;6713:109;6827:42;6846:9;6857:11;6827:18;:42::i;:::-;6618:256;;:::o;1481:17:17:-;;;;;;;;;;;;;:::o;1253:40::-;;;;;;;;;;;;;;;;;;;;;;:::o;7050:204::-;7131:12;7172:11;;7147:71;;;;;;;:::i;:::-;7130:88;;7229:17;7241:4;7229:11;:17::i;:::-;7119:135;7050:204;;:::o;6547:495::-;6684:17;6703:24;6743:12;6758:5;:37;6793:1;6788;6780:5;;:9;;;;:::i;:::-;6764:12;:26;;;;:::i;:::-;:30;;;;:::i;:::-;6758:37;;;;;;;;;;;;;;;;;;;;;6743:52;;6819:5;6804:20;;6854:15;:21;6870:4;6854:21;;;;;;;;;;;;;;;;6836:15;:39;:68;;;;;6903:1;6879:15;:21;6895:4;6879:21;;;;;;;;;;;;;;;;:25;6836:68;6833:112;;;6931:4;6916:19;;6833:112;6986:4;6975:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;6961:30;;7000:34;6547:495;;;;;:::o;1613:39::-;;;;;;;;;;;;;:::o;1657:37::-;;;;;;;;;;;;;:::o;1424:50::-;;;;;;;;;;;;;;;;;:::o;1211:37::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3559:479::-;3632:1;3606:5;:17;3612:10;3606:17;;;;;;;;;;;;;;;:23;;;:27;3598:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3697:1;3670:5;:17;3676:10;3670:17;;;;;;;;;;;;;;;:24;;;:28;3662:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3774:5;:17;3780:10;3774:17;;;;;;;;;;;;;;;:24;;;3747;3760:10;3747:12;:24::i;:::-;:51;3739:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;3879:15;3851:5;:17;3857:10;3851:17;;;;;;;;;;;;;;;:25;;:43;;;;3927:1;3901:5;:17;3907:10;3901:17;;;;;;;;;;;;;;;:23;;:27;;;;3962:1;3935:5;:17;3941:10;3935:17;;;;;;;;;;;;;;;:24;;:28;;;;3987:10;3975:23;;;;;;;;;;;;4007:25;4021:10;4007:13;:25::i;:::-;3559:479::o;1699:20::-;;;;:::o;2600:551::-;2704:1;2677:5;:17;2683:10;2677:17;;;;;;;;;;;;;;;:23;;;:28;2669:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2750:1;2738:9;:13;2730:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2812:1;2803:6;:10;2795:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;2871:10;2856:5;:12;2862:5;;2856:12;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;2914:156;;;;;;;;2935:5;;:7;;;;;;;;;:::i;:::-;;;;;2914:156;;;;2962:9;2914:156;;;;2988:6;2914:156;;;;3012:15;2914:156;;;;3043:1;2914:156;;;;3061:1;2914:156;;;2894:5;:17;2900:10;2894:17;;;;;;;;;;;;;;;:176;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3094:10;3082:42;;;3106:9;3117:6;3082:42;;;;;;;:::i;:::-;;;;;;;;3134:11;:9;:11::i;:::-;2600:551;;:::o;4591:1586::-;4670:1;4648:5;:11;4654:4;4648:11;;;;;;;;;;;;;;;:18;;;:23;4640:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;4730:5;:11;4736:4;4730:11;;;;;;;;;;;;;;;:18;;;4709;4722:4;4709:12;:18::i;:::-;:39;4701:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;4829:15;:21;4845:4;4829:21;;;;;;;;;;;;;;;;4809:15;:41;;4801:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:14;4920:5;:11;4926:4;4920:11;;;;;;;;;;;;;;;:18;;;4903:35;;4950:15;4975:6;;;;;;;;;;;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4947:52;;;;;;5025:24;5052:6;;;;;;;;;;;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5025:44;;;;5078:17;5149:16;5144:2;:21;;;;:::i;:::-;5137:2;:29;;;;:::i;:::-;5124:8;5108:4;5099:6;:13;;;;:::i;:::-;5098:35;;;;:::i;:::-;:68;;;;:::i;:::-;5078:88;;5175:16;5212:4;5207:1;5195:9;:13;;;;:::i;:::-;5194:22;;;;:::i;:::-;5175:41;;5225:20;5260:8;5248:9;:20;;;;:::i;:::-;5225:43;;5335:61;5362:4;;;;;;;;;;;5368;5382;5389:6;5335:26;:61::i;:::-;5452:69;5484:4;;;;;;;;;;;5498:13;;;;;;;;;;;5514:6;5452:31;:69::i;:::-;5557:21;5595:1;5581:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5557:40;;5622:4;;;;;;;;;;;5604;5609:1;5604:7;;;;;;;;:::i;:::-;;;;;;;:23;;;;;;;;;;;5658:13;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5648:4;5653:1;5648:7;;;;;;;;:::i;:::-;;;;;;;:30;;;;;;;;;;;5737:21;5762:13;;;;;;;;;;;:35;;;5798:6;5806:12;5820:4;5834;5859:7;5841:15;:25;;;;:::i;:::-;5762:105;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5736:131;;5876:19;5898:7;5906:1;5898:10;;;;;;;;:::i;:::-;;;;;;;;5876:32;;5949:5;:11;5955:4;5949:11;;;;;;;;;;;;;;;:17;;;:19;;;;;;;;;:::i;:::-;;;;;;5996:4;5982:40;;;6002:6;6010:11;5982:40;;;;;;;:::i;:::-;;;;;;;;6071:4;6063:22;;:35;6086:11;6063:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6152:19;6166:4;6152:13;:19::i;:::-;4633:1544;;;;;;;;;4591:1586;:::o;1365:54::-;;;;;;;;;;;;;;;;;;;;;;:::o;4044:168::-;4112:1;4086:5;:17;4092:10;4086:17;;;;;;;;;;;;;;;:23;;;:27;4078:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;4171:1;4144:5;:17;4150:10;4144:17;;;;;;;;;;;;;;;:24;;:28;;;;4195:10;4184:22;;;;;;;;;;;;4044:168::o;2473:121::-;2530:7;2553:4;;;;;;;;;;;:14;;;2568:4;2582;2553:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2546:42;;2473:121;;;:::o;6241:298::-;6347:12;6362:19;:31;6382:10;6362:31;;;;;;;;;;;;;;;;;;;;;6347:46;;6511:5;:11;6517:4;6511:11;;;;;;;;;;;;;;;:21;;;6493:12;6506:1;6493:15;;;;;;;;:::i;:::-;;;;;;;;:39;;;;:::i;:::-;6468:5;:11;6474:4;6468:11;;;;;;;;;;;;;;;:21;;;6448:5;:11;6454:4;6448:11;;;;;;;;;;;;;;;:17;;;:41;;;;:::i;:::-;6426:5;:11;6432:4;6426:11;;;;;;;;;;;;;;;:19;;;:63;;;;:::i;:::-;:107;;;;:::i;:::-;6402:15;:21;6418:4;6402:21;;;;;;;;;;;;;;;:131;;;;6338:201;6241:298;;:::o;4218:367::-;4391:17;4411:11;;;;;;;;;;;:30;;;4452:7;;4470:14;;;;;;;;;;;4495:1;4507:6;4524:1;4411:124;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4391:144;;4575:4;4542:19;:30;4562:9;4542:30;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;4263:322;4218:367;:::o;1702:188:12:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;2081:225::-;2177:20;2200:5;:15;;;2224:4;2231:7;2200:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2177:62;;2249:50;2262:5;2269:7;2293:5;2278:12;:20;;;;:::i;:::-;2249:12;:50::i;:::-;2167:139;2081:225;;;:::o;4059:629::-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;3296:380::-;3383:25;3426:5;:13;;;3442:7;3451:5;3411:47;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3383:75;;3474:44;3498:5;3505:12;3474:23;:44::i;:::-;3469:201;;3534:71;3554:5;3576;:13;;;3592:7;3601:1;3561:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3534:19;:71::i;:::-;3619:40;3639:5;3646:12;3619:19;:40::i;:::-;3469:201;3373:303;3296:380;;;:::o;2705:151:13:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;5189:578:12:-;5272:4;5574:12;5588:23;5623:5;5615:19;;5635:4;5615:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5573:67;;;;5657:7;:69;;;;;5690:1;5669:10;:17;:22;:56;;;;5706:10;5695:30;;;;;;;;;;;;:::i;:::-;5669:56;5657:69;:103;;;;;5759:1;5738:5;5730:26;;;:30;5657:103;5650:110;;;;5189:578;;;;:::o;3180:392:13:-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:75:18;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:126::-;1207:7;1247:42;1240:5;1236:54;1225:65;;1170:126;;;:::o;1302:60::-;1330:3;1351:5;1344:12;;1302:60;;;:::o;1368:142::-;1418:9;1451:53;1469:34;1478:24;1496:5;1478:24;:::i;:::-;1469:34;:::i;:::-;1451:53;:::i;:::-;1438:66;;1368:142;;;:::o;1516:126::-;1566:9;1599:37;1630:5;1599:37;:::i;:::-;1586:50;;1516:126;;;:::o;1648:159::-;1731:9;1764:37;1795:5;1764:37;:::i;:::-;1751:50;;1648:159;;;:::o;1813:197::-;1933:70;1997:5;1933:70;:::i;:::-;1928:3;1921:83;1813:197;;:::o;2016:288::-;2142:4;2180:2;2169:9;2165:18;2157:26;;2193:104;2294:1;2283:9;2279:17;2270:6;2193:104;:::i;:::-;2016:288;;;;:::o;2310:152::-;2386:9;2419:37;2450:5;2419:37;:::i;:::-;2406:50;;2310:152;;;:::o;2468:183::-;2581:63;2638:5;2581:63;:::i;:::-;2576:3;2569:76;2468:183;;:::o;2657:274::-;2776:4;2814:2;2803:9;2799:18;2791:26;;2827:97;2921:1;2910:9;2906:17;2897:6;2827:97;:::i;:::-;2657:274;;;;:::o;2937:117::-;3046:1;3043;3036:12;3060:102;3101:6;3152:2;3148:7;3143:2;3136:5;3132:14;3128:28;3118:38;;3060:102;;;:::o;3168:180::-;3216:77;3213:1;3206:88;3313:4;3310:1;3303:15;3337:4;3334:1;3327:15;3354:281;3437:27;3459:4;3437:27;:::i;:::-;3429:6;3425:40;3567:6;3555:10;3552:22;3531:18;3519:10;3516:34;3513:62;3510:88;;;3578:18;;:::i;:::-;3510:88;3618:10;3614:2;3607:22;3397:238;3354:281;;:::o;3641:129::-;3675:6;3702:20;;:::i;:::-;3692:30;;3731:33;3759:4;3751:6;3731:33;:::i;:::-;3641:129;;;:::o;3776:311::-;3853:4;3943:18;3935:6;3932:30;3929:56;;;3965:18;;:::i;:::-;3929:56;4015:4;4007:6;4003:17;3995:25;;4075:4;4069;4065:15;4057:23;;3776:311;;;:::o;4093:117::-;4202:1;4199;4192:12;4233:710;4329:5;4354:81;4370:64;4427:6;4370:64;:::i;:::-;4354:81;:::i;:::-;4345:90;;4455:5;4484:6;4477:5;4470:21;4518:4;4511:5;4507:16;4500:23;;4571:4;4563:6;4559:17;4551:6;4547:30;4600:3;4592:6;4589:15;4586:122;;;4619:79;;:::i;:::-;4586:122;4734:6;4717:220;4751:6;4746:3;4743:15;4717:220;;;4826:3;4855:37;4888:3;4876:10;4855:37;:::i;:::-;4850:3;4843:50;4922:4;4917:3;4913:14;4906:21;;4793:144;4777:4;4772:3;4768:14;4761:21;;4717:220;;;4721:21;4335:608;;4233:710;;;;;:::o;4966:370::-;5037:5;5086:3;5079:4;5071:6;5067:17;5063:27;5053:122;;5094:79;;:::i;:::-;5053:122;5211:6;5198:20;5236:94;5326:3;5318:6;5311:4;5303:6;5299:17;5236:94;:::i;:::-;5227:103;;5043:293;4966:370;;;;:::o;5342:684::-;5435:6;5443;5492:2;5480:9;5471:7;5467:23;5463:32;5460:119;;;5498:79;;:::i;:::-;5460:119;5618:1;5643:53;5688:7;5679:6;5668:9;5664:22;5643:53;:::i;:::-;5633:63;;5589:117;5773:2;5762:9;5758:18;5745:32;5804:18;5796:6;5793:30;5790:117;;;5826:79;;:::i;:::-;5790:117;5931:78;6001:7;5992:6;5981:9;5977:22;5931:78;:::i;:::-;5921:88;;5716:303;5342:684;;;;;:::o;6032:140::-;6096:9;6129:37;6160:5;6129:37;:::i;:::-;6116:50;;6032:140;;;:::o;6178:159::-;6279:51;6324:5;6279:51;:::i;:::-;6274:3;6267:64;6178:159;;:::o;6343:250::-;6450:4;6488:2;6477:9;6473:18;6465:26;;6501:85;6583:1;6572:9;6568:17;6559:6;6501:85;:::i;:::-;6343:250;;;;:::o;6599:329::-;6658:6;6707:2;6695:9;6686:7;6682:23;6678:32;6675:119;;;6713:79;;:::i;:::-;6675:119;6833:1;6858:53;6903:7;6894:6;6883:9;6879:22;6858:53;:::i;:::-;6848:63;;6804:117;6599:329;;;;:::o;6934:96::-;6971:7;7000:24;7018:5;7000:24;:::i;:::-;6989:35;;6934:96;;;:::o;7036:118::-;7123:24;7141:5;7123:24;:::i;:::-;7118:3;7111:37;7036:118;;:::o;7160:222::-;7253:4;7291:2;7280:9;7276:18;7268:26;;7304:71;7372:1;7361:9;7357:17;7348:6;7304:71;:::i;:::-;7160:222;;;;:::o;7388:117::-;7497:1;7494;7487:12;7524:552;7581:8;7591:6;7641:3;7634:4;7626:6;7622:17;7618:27;7608:122;;7649:79;;:::i;:::-;7608:122;7762:6;7749:20;7739:30;;7792:18;7784:6;7781:30;7778:117;;;7814:79;;:::i;:::-;7778:117;7928:4;7920:6;7916:17;7904:29;;7982:3;7974:4;7966:6;7962:17;7952:8;7948:32;7945:41;7942:128;;;7989:79;;:::i;:::-;7942:128;7524:552;;;;;:::o;8082:527::-;8152:6;8160;8209:2;8197:9;8188:7;8184:23;8180:32;8177:119;;;8215:79;;:::i;:::-;8177:119;8363:1;8352:9;8348:17;8335:31;8393:18;8385:6;8382:30;8379:117;;;8415:79;;:::i;:::-;8379:117;8528:64;8584:7;8575:6;8564:9;8560:22;8528:64;:::i;:::-;8510:82;;;;8306:296;8082:527;;;;;:::o;8615:90::-;8649:7;8692:5;8685:13;8678:21;8667:32;;8615:90;;;:::o;8711:109::-;8792:21;8807:5;8792:21;:::i;:::-;8787:3;8780:34;8711:109;;:::o;8826:98::-;8877:6;8911:5;8905:12;8895:22;;8826:98;;;:::o;8930:168::-;9013:11;9047:6;9042:3;9035:19;9087:4;9082:3;9078:14;9063:29;;8930:168;;;;:::o;9104:246::-;9185:1;9195:113;9209:6;9206:1;9203:13;9195:113;;;9294:1;9289:3;9285:11;9279:18;9275:1;9270:3;9266:11;9259:39;9231:2;9228:1;9224:10;9219:15;;9195:113;;;9342:1;9333:6;9328:3;9324:16;9317:27;9166:184;9104:246;;;:::o;9356:373::-;9442:3;9470:38;9502:5;9470:38;:::i;:::-;9524:70;9587:6;9582:3;9524:70;:::i;:::-;9517:77;;9603:65;9661:6;9656:3;9649:4;9642:5;9638:16;9603:65;:::i;:::-;9693:29;9715:6;9693:29;:::i;:::-;9688:3;9684:39;9677:46;;9446:283;9356:373;;;;:::o;9735:407::-;9868:4;9906:2;9895:9;9891:18;9883:26;;9919:65;9981:1;9970:9;9966:17;9957:6;9919:65;:::i;:::-;10031:9;10025:4;10021:20;10016:2;10005:9;10001:18;9994:48;10059:76;10130:4;10121:6;10059:76;:::i;:::-;10051:84;;9735:407;;;;;:::o;10148:153::-;10225:9;10258:37;10289:5;10258:37;:::i;:::-;10245:50;;10148:153;;;:::o;10307:185::-;10421:64;10479:5;10421:64;:::i;:::-;10416:3;10409:77;10307:185;;:::o;10498:276::-;10618:4;10656:2;10645:9;10641:18;10633:26;;10669:98;10764:1;10753:9;10749:17;10740:6;10669:98;:::i;:::-;10498:276;;;;:::o;10780:156::-;10860:9;10893:37;10924:5;10893:37;:::i;:::-;10880:50;;10780:156;;;:::o;10942:191::-;11059:67;11120:5;11059:67;:::i;:::-;11054:3;11047:80;10942:191;;:::o;11139:282::-;11262:4;11300:2;11289:9;11285:18;11277:26;;11313:101;11411:1;11400:9;11396:17;11387:6;11313:101;:::i;:::-;11139:282;;;;:::o;11427:122::-;11500:24;11518:5;11500:24;:::i;:::-;11493:5;11490:35;11480:63;;11539:1;11536;11529:12;11480:63;11427:122;:::o;11555:139::-;11601:5;11639:6;11626:20;11617:29;;11655:33;11682:5;11655:33;:::i;:::-;11555:139;;;;:::o;11700:329::-;11759:6;11808:2;11796:9;11787:7;11783:23;11779:32;11776:119;;;11814:79;;:::i;:::-;11776:119;11934:1;11959:53;12004:7;11995:6;11984:9;11980:22;11959:53;:::i;:::-;11949:63;;11905:117;11700:329;;;;:::o;12035:118::-;12122:24;12140:5;12122:24;:::i;:::-;12117:3;12110:37;12035:118;;:::o;12159:222::-;12252:4;12290:2;12279:9;12275:18;12267:26;;12303:71;12371:1;12360:9;12356:17;12347:6;12303:71;:::i;:::-;12159:222;;;;:::o;12387:775::-;12620:4;12658:3;12647:9;12643:19;12635:27;;12672:71;12740:1;12729:9;12725:17;12716:6;12672:71;:::i;:::-;12753:72;12821:2;12810:9;12806:18;12797:6;12753:72;:::i;:::-;12835;12903:2;12892:9;12888:18;12879:6;12835:72;:::i;:::-;12917;12985:2;12974:9;12970:18;12961:6;12917:72;:::i;:::-;12999:73;13067:3;13056:9;13052:19;13043:6;12999:73;:::i;:::-;13082;13150:3;13139:9;13135:19;13126:6;13082:73;:::i;:::-;12387:775;;;;;;;;;:::o;13168:169::-;13252:11;13286:6;13281:3;13274:19;13326:4;13321:3;13317:14;13302:29;;13168:169;;;;:::o;13343:163::-;13483:15;13479:1;13471:6;13467:14;13460:39;13343:163;:::o;13512:366::-;13654:3;13675:67;13739:2;13734:3;13675:67;:::i;:::-;13668:74;;13751:93;13840:3;13751:93;:::i;:::-;13869:2;13864:3;13860:12;13853:19;;13512:366;;;:::o;13884:419::-;14050:4;14088:2;14077:9;14073:18;14065:26;;14137:9;14131:4;14127:20;14123:1;14112:9;14108:17;14101:47;14165:131;14291:4;14165:131;:::i;:::-;14157:139;;13884:419;;;:::o;14309:182::-;14449:34;14445:1;14437:6;14433:14;14426:58;14309:182;:::o;14497:366::-;14639:3;14660:67;14724:2;14719:3;14660:67;:::i;:::-;14653:74;;14736:93;14825:3;14736:93;:::i;:::-;14854:2;14849:3;14845:12;14838:19;;14497:366;;;:::o;14869:419::-;15035:4;15073:2;15062:9;15058:18;15050:26;;15122:9;15116:4;15112:20;15108:1;15097:9;15093:17;15086:47;15150:131;15276:4;15150:131;:::i;:::-;15142:139;;14869:419;;;:::o;15294:179::-;15434:31;15430:1;15422:6;15418:14;15411:55;15294:179;:::o;15479:366::-;15621:3;15642:67;15706:2;15701:3;15642:67;:::i;:::-;15635:74;;15718:93;15807:3;15718:93;:::i;:::-;15836:2;15831:3;15827:12;15820:19;;15479:366;;;:::o;15851:419::-;16017:4;16055:2;16044:9;16040:18;16032:26;;16104:9;16098:4;16094:20;16090:1;16079:9;16075:17;16068:47;16132:131;16258:4;16132:131;:::i;:::-;16124:139;;15851:419;;;:::o;16276:332::-;16397:4;16435:2;16424:9;16420:18;16412:26;;16448:71;16516:1;16505:9;16501:17;16492:6;16448:71;:::i;:::-;16529:72;16597:2;16586:9;16582:18;16573:6;16529:72;:::i;:::-;16276:332;;;;;:::o;16614:::-;16735:4;16773:2;16762:9;16758:18;16750:26;;16786:71;16854:1;16843:9;16839:17;16830:6;16786:71;:::i;:::-;16867:72;16935:2;16924:9;16920:18;16911:6;16867:72;:::i;:::-;16614:332;;;;;:::o;16952:104::-;16997:7;17026:24;17044:5;17026:24;:::i;:::-;17015:35;;16952:104;;;:::o;17062:138::-;17143:32;17169:5;17143:32;:::i;:::-;17136:5;17133:43;17123:71;;17190:1;17187;17180:12;17123:71;17062:138;:::o;17206:155::-;17260:5;17298:6;17285:20;17276:29;;17314:41;17349:5;17314:41;:::i;:::-;17206:155;;;;:::o;17367:345::-;17434:6;17483:2;17471:9;17462:7;17458:23;17454:32;17451:119;;;17489:79;;:::i;:::-;17451:119;17609:1;17634:61;17687:7;17678:6;17667:9;17663:22;17634:61;:::i;:::-;17624:71;;17580:125;17367:345;;;;:::o;17718:180::-;17766:77;17763:1;17756:88;17863:4;17860:1;17853:15;17887:4;17884:1;17877:15;17904:194;17944:4;17964:20;17982:1;17964:20;:::i;:::-;17959:25;;17998:20;18016:1;17998:20;:::i;:::-;17993:25;;18042:1;18039;18035:9;18027:17;;18066:1;18060:4;18057:11;18054:37;;;18071:18;;:::i;:::-;18054:37;17904:194;;;;:::o;18104:180::-;18152:77;18149:1;18142:88;18249:4;18246:1;18239:15;18273:4;18270:1;18263:15;18290:176;18322:1;18339:20;18357:1;18339:20;:::i;:::-;18334:25;;18373:20;18391:1;18373:20;:::i;:::-;18368:25;;18412:1;18402:35;;18417:18;;:::i;:::-;18402:35;18458:1;18455;18451:9;18446:14;;18290:176;;;;:::o;18472:191::-;18512:3;18531:20;18549:1;18531:20;:::i;:::-;18526:25;;18565:20;18583:1;18565:20;:::i;:::-;18560:25;;18608:1;18605;18601:9;18594:16;;18629:3;18626:1;18623:10;18620:36;;;18636:18;;:::i;:::-;18620:36;18472:191;;;;:::o;18669:167::-;18809:19;18805:1;18797:6;18793:14;18786:43;18669:167;:::o;18842:366::-;18984:3;19005:67;19069:2;19064:3;19005:67;:::i;:::-;18998:74;;19081:93;19170:3;19081:93;:::i;:::-;19199:2;19194:3;19190:12;19183:19;;18842:366;;;:::o;19214:419::-;19380:4;19418:2;19407:9;19403:18;19395:26;;19467:9;19461:4;19457:20;19453:1;19442:9;19438:17;19431:47;19495:131;19621:4;19495:131;:::i;:::-;19487:139;;19214:419;;;:::o;19639:220::-;19779:34;19775:1;19767:6;19763:14;19756:58;19848:3;19843:2;19835:6;19831:15;19824:28;19639:220;:::o;19865:366::-;20007:3;20028:67;20092:2;20087:3;20028:67;:::i;:::-;20021:74;;20104:93;20193:3;20104:93;:::i;:::-;20222:2;20217:3;20213:12;20206:19;;19865:366;;;:::o;20237:419::-;20403:4;20441:2;20430:9;20426:18;20418:26;;20490:9;20484:4;20480:20;20476:1;20465:9;20461:17;20454:47;20518:131;20644:4;20518:131;:::i;:::-;20510:139;;20237:419;;;:::o;20662:233::-;20701:3;20724:24;20742:5;20724:24;:::i;:::-;20715:33;;20770:66;20763:5;20760:77;20757:103;;20840:18;;:::i;:::-;20757:103;20887:1;20880:5;20876:13;20869:20;;20662:233;;;:::o;20901:168::-;21041:20;21037:1;21029:6;21025:14;21018:44;20901:168;:::o;21075:366::-;21217:3;21238:67;21302:2;21297:3;21238:67;:::i;:::-;21231:74;;21314:93;21403:3;21314:93;:::i;:::-;21432:2;21427:3;21423:12;21416:19;;21075:366;;;:::o;21447:419::-;21613:4;21651:2;21640:9;21636:18;21628:26;;21700:9;21694:4;21690:20;21686:1;21675:9;21671:17;21664:47;21728:131;21854:4;21728:131;:::i;:::-;21720:139;;21447:419;;;:::o;21872:228::-;22012:34;22008:1;22000:6;21996:14;21989:58;22081:11;22076:2;22068:6;22064:15;22057:36;21872:228;:::o;22106:366::-;22248:3;22269:67;22333:2;22328:3;22269:67;:::i;:::-;22262:74;;22345:93;22434:3;22345:93;:::i;:::-;22463:2;22458:3;22454:12;22447:19;;22106:366;;;:::o;22478:419::-;22644:4;22682:2;22671:9;22667:18;22659:26;;22731:9;22725:4;22721:20;22717:1;22706:9;22702:17;22695:47;22759:131;22885:4;22759:131;:::i;:::-;22751:139;;22478:419;;;:::o;22903:226::-;23043:34;23039:1;23031:6;23027:14;23020:58;23112:9;23107:2;23099:6;23095:15;23088:34;22903:226;:::o;23135:366::-;23277:3;23298:67;23362:2;23357:3;23298:67;:::i;:::-;23291:74;;23374:93;23463:3;23374:93;:::i;:::-;23492:2;23487:3;23483:12;23476:19;;23135:366;;;:::o;23507:419::-;23673:4;23711:2;23700:9;23696:18;23688:26;;23760:9;23754:4;23750:20;23746:1;23735:9;23731:17;23724:47;23788:131;23914:4;23788:131;:::i;:::-;23780:139;;23507:419;;;:::o;23932:105::-;23968:7;24008:22;24001:5;23997:34;23986:45;;23932:105;;;:::o;24043:120::-;24115:23;24132:5;24115:23;:::i;:::-;24108:5;24105:34;24095:62;;24153:1;24150;24143:12;24095:62;24043:120;:::o;24169:141::-;24225:5;24256:6;24250:13;24241:22;;24272:32;24298:5;24272:32;:::i;:::-;24169:141;;;;:::o;24316:76::-;24352:7;24381:5;24370:16;;24316:76;;;:::o;24398:120::-;24470:23;24487:5;24470:23;:::i;:::-;24463:5;24460:34;24450:62;;24508:1;24505;24498:12;24450:62;24398:120;:::o;24524:141::-;24580:5;24611:6;24605:13;24596:22;;24627:32;24653:5;24627:32;:::i;:::-;24524:141;;;;:::o;24671:143::-;24728:5;24759:6;24753:13;24744:22;;24775:33;24802:5;24775:33;:::i;:::-;24671:143;;;;:::o;24820:971::-;24923:6;24931;24939;24947;24955;25004:3;24992:9;24983:7;24979:23;24975:33;24972:120;;;25011:79;;:::i;:::-;24972:120;25131:1;25156:63;25211:7;25202:6;25191:9;25187:22;25156:63;:::i;:::-;25146:73;;25102:127;25268:2;25294:63;25349:7;25340:6;25329:9;25325:22;25294:63;:::i;:::-;25284:73;;25239:128;25406:2;25432:64;25488:7;25479:6;25468:9;25464:22;25432:64;:::i;:::-;25422:74;;25377:129;25545:2;25571:64;25627:7;25618:6;25607:9;25603:22;25571:64;:::i;:::-;25561:74;;25516:129;25684:3;25711:63;25766:7;25757:6;25746:9;25742:22;25711:63;:::i;:::-;25701:73;;25655:129;24820:971;;;;;;;;:::o;25797:86::-;25832:7;25872:4;25865:5;25861:16;25850:27;;25797:86;;;:::o;25889:118::-;25960:22;25976:5;25960:22;:::i;:::-;25953:5;25950:33;25940:61;;25997:1;25994;25987:12;25940:61;25889:118;:::o;26013:139::-;26068:5;26099:6;26093:13;26084:22;;26115:31;26140:5;26115:31;:::i;:::-;26013:139;;;;:::o;26158:347::-;26226:6;26275:2;26263:9;26254:7;26250:23;26246:32;26243:119;;;26281:79;;:::i;:::-;26243:119;26401:1;26426:62;26480:7;26471:6;26460:9;26456:22;26426:62;:::i;:::-;26416:72;;26372:126;26158:347;;;;:::o;26511:102::-;26553:8;26600:5;26597:1;26593:13;26572:34;;26511:102;;;:::o;26619:848::-;26680:5;26687:4;26711:6;26702:15;;26735:5;26726:14;;26749:712;26770:1;26760:8;26757:15;26749:712;;;26865:4;26860:3;26856:14;26850:4;26847:24;26844:50;;;26874:18;;:::i;:::-;26844:50;26924:1;26914:8;26910:16;26907:451;;;27339:4;27332:5;27328:16;27319:25;;26907:451;27389:4;27383;27379:15;27371:23;;27419:32;27442:8;27419:32;:::i;:::-;27407:44;;26749:712;;;26619:848;;;;;;;:::o;27473:1073::-;27527:5;27718:8;27708:40;;27739:1;27730:10;;27741:5;;27708:40;27767:4;27757:36;;27784:1;27775:10;;27786:5;;27757:36;27853:4;27901:1;27896:27;;;;27937:1;27932:191;;;;27846:277;;27896:27;27914:1;27905:10;;27916:5;;;27932:191;27977:3;27967:8;27964:17;27961:43;;;27984:18;;:::i;:::-;27961:43;28033:8;28030:1;28026:16;28017:25;;28068:3;28061:5;28058:14;28055:40;;;28075:18;;:::i;:::-;28055:40;28108:5;;;27846:277;;28232:2;28222:8;28219:16;28213:3;28207:4;28204:13;28200:36;28182:2;28172:8;28169:16;28164:2;28158:4;28155:12;28151:35;28135:111;28132:246;;;28288:8;28282:4;28278:19;28269:28;;28323:3;28316:5;28313:14;28310:40;;;28330:18;;:::i;:::-;28310:40;28363:5;;28132:246;28403:42;28441:3;28431:8;28425:4;28422:1;28403:42;:::i;:::-;28388:57;;;;28477:4;28472:3;28468:14;28461:5;28458:25;28455:51;;;28486:18;;:::i;:::-;28455:51;28535:4;28528:5;28524:16;28515:25;;27473:1073;;;;;;:::o;28552:285::-;28612:5;28636:23;28654:4;28636:23;:::i;:::-;28628:31;;28680:27;28698:8;28680:27;:::i;:::-;28668:39;;28726:104;28763:66;28753:8;28747:4;28726:104;:::i;:::-;28717:113;;28552:285;;;;:::o;28843:410::-;28883:7;28906:20;28924:1;28906:20;:::i;:::-;28901:25;;28940:20;28958:1;28940:20;:::i;:::-;28935:25;;28995:1;28992;28988:9;29017:30;29035:11;29017:30;:::i;:::-;29006:41;;29196:1;29187:7;29183:15;29180:1;29177:22;29157:1;29150:9;29130:83;29107:139;;29226:18;;:::i;:::-;29107:139;28891:362;28843:410;;;;:::o;29259:185::-;29299:1;29316:20;29334:1;29316:20;:::i;:::-;29311:25;;29350:20;29368:1;29350:20;:::i;:::-;29345:25;;29389:1;29379:35;;29394:18;;:::i;:::-;29379:35;29436:1;29433;29429:9;29424:14;;29259:185;;;;:::o;29450:180::-;29498:77;29495:1;29488:88;29595:4;29592:1;29585:15;29619:4;29616:1;29609:15;29636:143;29693:5;29724:6;29718:13;29709:22;;29740:33;29767:5;29740:33;:::i;:::-;29636:143;;;;:::o;29785:351::-;29855:6;29904:2;29892:9;29883:7;29879:23;29875:32;29872:119;;;29910:79;;:::i;:::-;29872:119;30030:1;30055:64;30111:7;30102:6;30091:9;30087:22;30055:64;:::i;:::-;30045:74;;30001:128;29785:351;;;;:::o;30142:114::-;30209:6;30243:5;30237:12;30227:22;;30142:114;;;:::o;30262:184::-;30361:11;30395:6;30390:3;30383:19;30435:4;30430:3;30426:14;30411:29;;30262:184;;;;:::o;30452:132::-;30519:4;30542:3;30534:11;;30572:4;30567:3;30563:14;30555:22;;30452:132;;;:::o;30590:108::-;30667:24;30685:5;30667:24;:::i;:::-;30662:3;30655:37;30590:108;;:::o;30704:179::-;30773:10;30794:46;30836:3;30828:6;30794:46;:::i;:::-;30872:4;30867:3;30863:14;30849:28;;30704:179;;;;:::o;30889:113::-;30959:4;30991;30986:3;30982:14;30974:22;;30889:113;;;:::o;31038:732::-;31157:3;31186:54;31234:5;31186:54;:::i;:::-;31256:86;31335:6;31330:3;31256:86;:::i;:::-;31249:93;;31366:56;31416:5;31366:56;:::i;:::-;31445:7;31476:1;31461:284;31486:6;31483:1;31480:13;31461:284;;;31562:6;31556:13;31589:63;31648:3;31633:13;31589:63;:::i;:::-;31582:70;;31675:60;31728:6;31675:60;:::i;:::-;31665:70;;31521:224;31508:1;31505;31501:9;31496:14;;31461:284;;;31465:14;31761:3;31754:10;;31162:608;;;31038:732;;;;:::o;31776:815::-;32031:4;32069:3;32058:9;32054:19;32046:27;;32083:71;32151:1;32140:9;32136:17;32127:6;32083:71;:::i;:::-;32164:72;32232:2;32221:9;32217:18;32208:6;32164:72;:::i;:::-;32283:9;32277:4;32273:20;32268:2;32257:9;32253:18;32246:48;32311:108;32414:4;32405:6;32311:108;:::i;:::-;32303:116;;32429:72;32497:2;32486:9;32482:18;32473:6;32429:72;:::i;:::-;32511:73;32579:3;32568:9;32564:19;32555:6;32511:73;:::i;:::-;31776:815;;;;;;;;:::o;32614:732::-;32721:5;32746:81;32762:64;32819:6;32762:64;:::i;:::-;32746:81;:::i;:::-;32737:90;;32847:5;32876:6;32869:5;32862:21;32910:4;32903:5;32899:16;32892:23;;32963:4;32955:6;32951:17;32943:6;32939:30;32992:3;32984:6;32981:15;32978:122;;;33011:79;;:::i;:::-;32978:122;33126:6;33109:231;33143:6;33138:3;33135:15;33109:231;;;33218:3;33247:48;33291:3;33279:10;33247:48;:::i;:::-;33242:3;33235:61;33325:4;33320:3;33316:14;33309:21;;33185:155;33169:4;33164:3;33160:14;33153:21;;33109:231;;;33113:21;32727:619;;32614:732;;;;;:::o;33369:385::-;33451:5;33500:3;33493:4;33485:6;33481:17;33477:27;33467:122;;33508:79;;:::i;:::-;33467:122;33618:6;33612:13;33643:105;33744:3;33736:6;33729:4;33721:6;33717:17;33643:105;:::i;:::-;33634:114;;33457:297;33369:385;;;;:::o;33760:554::-;33855:6;33904:2;33892:9;33883:7;33879:23;33875:32;33872:119;;;33910:79;;:::i;:::-;33872:119;34051:1;34040:9;34036:17;34030:24;34081:18;34073:6;34070:30;34067:117;;;34103:79;;:::i;:::-;34067:117;34208:89;34289:7;34280:6;34269:9;34265:22;34208:89;:::i;:::-;34198:99;;34001:306;33760:554;;;;:::o;34320:351::-;34390:6;34439:2;34427:9;34418:7;34414:23;34410:32;34407:119;;;34445:79;;:::i;:::-;34407:119;34565:1;34590:64;34646:7;34637:6;34626:9;34622:22;34590:64;:::i;:::-;34580:74;;34536:128;34320:351;;;;:::o;34677:77::-;34714:7;34743:5;34732:16;;34677:77;;;:::o;34760:118::-;34847:24;34865:5;34847:24;:::i;:::-;34842:3;34835:37;34760:118;;:::o;34884:101::-;34920:7;34960:18;34953:5;34949:30;34938:41;;34884:101;;;:::o;34991:115::-;35076:23;35093:5;35076:23;:::i;:::-;35071:3;35064:36;34991:115;;:::o;35112:85::-;35157:7;35186:5;35175:16;;35112:85;;;:::o;35203:89::-;35239:7;35279:6;35272:5;35268:18;35257:29;;35203:89;;;:::o;35298:156::-;35355:9;35388:60;35405:42;35414:32;35440:5;35414:32;:::i;:::-;35405:42;:::i;:::-;35388:60;:::i;:::-;35375:73;;35298:156;;;:::o;35460:145::-;35554:44;35592:5;35554:44;:::i;:::-;35549:3;35542:57;35460:145;;:::o;35611:90::-;35661:7;35690:5;35679:16;;35611:90;;;:::o;35707:93::-;35743:7;35783:10;35776:5;35772:22;35761:33;;35707:93;;;:::o;35806:166::-;35868:9;35901:65;35918:47;35927:37;35958:5;35927:37;:::i;:::-;35918:47;:::i;:::-;35901:65;:::i;:::-;35888:78;;35806:166;;;:::o;35978:155::-;36077:49;36120:5;36077:49;:::i;:::-;36072:3;36065:62;35978:155;;:::o;36139:85::-;36184:7;36213:5;36202:16;;36139:85;;;:::o;36230:156::-;36287:9;36320:60;36337:42;36346:32;36372:5;36346:32;:::i;:::-;36337:42;:::i;:::-;36320:60;:::i;:::-;36307:73;;36230:156;;;:::o;36392:145::-;36486:44;36524:5;36486:44;:::i;:::-;36481:3;36474:57;36392:145;;:::o;36543:712::-;36772:4;36810:3;36799:9;36795:19;36787:27;;36824:71;36892:1;36881:9;36877:17;36868:6;36824:71;:::i;:::-;36905:70;36971:2;36960:9;36956:18;36947:6;36905:70;:::i;:::-;36985:79;37060:2;37049:9;37045:18;37036:6;36985:79;:::i;:::-;37074:84;37154:2;37143:9;37139:18;37130:6;37074:84;:::i;:::-;37168:80;37243:3;37232:9;37228:19;37219:6;37168:80;:::i;:::-;36543:712;;;;;;;;:::o;37261:442::-;37410:4;37448:2;37437:9;37433:18;37425:26;;37461:71;37529:1;37518:9;37514:17;37505:6;37461:71;:::i;:::-;37542:72;37610:2;37599:9;37595:18;37586:6;37542:72;:::i;:::-;37624;37692:2;37681:9;37677:18;37668:6;37624:72;:::i;:::-;37261:442;;;;;;:::o;37709:116::-;37779:21;37794:5;37779:21;:::i;:::-;37772:5;37769:32;37759:60;;37815:1;37812;37805:12;37759:60;37709:116;:::o;37831:137::-;37885:5;37916:6;37910:13;37901:22;;37932:30;37956:5;37932:30;:::i;:::-;37831:137;;;;:::o;37974:345::-;38041:6;38090:2;38078:9;38069:7;38065:23;38061:32;38058:119;;;38096:79;;:::i;:::-;38058:119;38216:1;38241:61;38294:7;38285:6;38274:9;38270:22;38241:61;:::i;:::-;38231:71;;38187:125;37974:345;;;;:::o;38325:332::-;38446:4;38484:2;38473:9;38469:18;38461:26;;38497:71;38565:1;38554:9;38550:17;38541:6;38497:71;:::i;:::-;38578:72;38646:2;38635:9;38631:18;38622:6;38578:72;:::i;:::-;38325:332;;;;;:::o;38663:85::-;38708:7;38737:5;38726:16;;38663:85;;;:::o;38754:158::-;38812:9;38845:61;38863:42;38872:32;38898:5;38872:32;:::i;:::-;38863:42;:::i;:::-;38845:61;:::i;:::-;38832:74;;38754:158;;;:::o;38918:147::-;39013:45;39052:5;39013:45;:::i;:::-;39008:3;39001:58;38918:147;;:::o;39071:348::-;39200:4;39238:2;39227:9;39223:18;39215:26;;39251:71;39319:1;39308:9;39304:17;39295:6;39251:71;:::i;:::-;39332:80;39408:2;39397:9;39393:18;39384:6;39332:80;:::i;:::-;39071:348;;;;;:::o;39425:147::-;39526:11;39563:3;39548:18;;39425:147;;;;:::o;39578:386::-;39682:3;39710:38;39742:5;39710:38;:::i;:::-;39764:88;39845:6;39840:3;39764:88;:::i;:::-;39757:95;;39861:65;39919:6;39914:3;39907:4;39900:5;39896:16;39861:65;:::i;:::-;39951:6;39946:3;39942:16;39935:23;;39686:278;39578:386;;;;:::o;39970:271::-;40100:3;40122:93;40211:3;40202:6;40122:93;:::i;:::-;40115:100;;40232:3;40225:10;;39970:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2685200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"checkUpkeep(bytes)": "infinite",
								"coordinator()": "infinite",
								"createPlan(uint256,uint256)": "infinite",
								"getAllowance(address)": "infinite",
								"link()": "infinite",
								"nextTriggerTime(address)": "2847",
								"nonce()": "2536",
								"oracle()": "infinite",
								"performUpkeep(bytes)": "infinite",
								"plans(address)": "infinite",
								"rawFulfillRandomWords(uint256,uint256[])": "infinite",
								"startPlan()": "infinite",
								"stopPlan()": "8711",
								"triggerPlan(address)": "infinite",
								"uniswapRouter()": "infinite",
								"updatePlan(uint256,uint256)": "infinite",
								"usdt()": "infinite",
								"userRandomRequestId(uint256)": "2893",
								"users(uint256)": "2872"
							},
							"internal": {
								"fulfillRandomWords(uint256,uint256[] memory)": "infinite",
								"requestRandom(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 645,
									"end": 7292,
									"name": "PUSH",
									"source": 17,
									"value": "A0"
								},
								{
									"begin": 645,
									"end": 7292,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 645,
									"end": 7292,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "CALLVALUE",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "PUSHSIZE",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "CODESIZE",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "PUSHSIZE",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 1782,
									"end": 2467,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "tag",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2043,
									"end": 2058,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 5616,
									"end": 5631,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5556,
									"end": 5636,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2080,
									"end": 2085,
									"modifierDepth": 1,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 2067,
									"end": 2071,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 2067,
									"end": 2071,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2067,
									"end": 2086,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "100"
								},
								{
									"begin": 2067,
									"end": 2086,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 17
								},
								{
									"begin": 2067,
									"end": 2086,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2067,
									"end": 2086,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 2067,
									"end": 2086,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2067,
									"end": 2086,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2067,
									"end": 2086,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 2067,
									"end": 2086,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 2067,
									"end": 2086,
									"modifierDepth": 1,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2067,
									"end": 2086,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2067,
									"end": 2086,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 2067,
									"end": 2086,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2067,
									"end": 2086,
									"modifierDepth": 1,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2067,
									"end": 2086,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 2067,
									"end": 2086,
									"modifierDepth": 1,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 2067,
									"end": 2086,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2067,
									"end": 2086,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 2067,
									"end": 2086,
									"modifierDepth": 1,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2128,
									"end": 2142,
									"modifierDepth": 1,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 2093,
									"end": 2106,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "7"
								},
								{
									"begin": 2093,
									"end": 2106,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2093,
									"end": 2143,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "100"
								},
								{
									"begin": 2093,
									"end": 2143,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 17
								},
								{
									"begin": 2093,
									"end": 2143,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2093,
									"end": 2143,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 2093,
									"end": 2143,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2093,
									"end": 2143,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2093,
									"end": 2143,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 2093,
									"end": 2143,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 2093,
									"end": 2143,
									"modifierDepth": 1,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2093,
									"end": 2143,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2093,
									"end": 2143,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 2093,
									"end": 2143,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2093,
									"end": 2143,
									"modifierDepth": 1,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2093,
									"end": 2143,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 2093,
									"end": 2143,
									"modifierDepth": 1,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 2093,
									"end": 2143,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2093,
									"end": 2143,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 2093,
									"end": 2143,
									"modifierDepth": 1,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2183,
									"end": 2190,
									"modifierDepth": 1,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2150,
									"end": 2156,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "8"
								},
								{
									"begin": 2150,
									"end": 2156,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2150,
									"end": 2191,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "100"
								},
								{
									"begin": 2150,
									"end": 2191,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 17
								},
								{
									"begin": 2150,
									"end": 2191,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2150,
									"end": 2191,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 2150,
									"end": 2191,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2150,
									"end": 2191,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2150,
									"end": 2191,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 2150,
									"end": 2191,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 2150,
									"end": 2191,
									"modifierDepth": 1,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2150,
									"end": 2191,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2150,
									"end": 2191,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 2150,
									"end": 2191,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2150,
									"end": 2191,
									"modifierDepth": 1,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2150,
									"end": 2191,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 2150,
									"end": 2191,
									"modifierDepth": 1,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 2150,
									"end": 2191,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2150,
									"end": 2191,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 2150,
									"end": 2191,
									"modifierDepth": 1,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2206,
									"end": 2207,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 2198,
									"end": 2203,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "9"
								},
								{
									"begin": 2198,
									"end": 2207,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2198,
									"end": 2207,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2198,
									"end": 2207,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 2198,
									"end": 2207,
									"modifierDepth": 1,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2224,
									"end": 2232,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2214,
									"end": 2221,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "A"
								},
								{
									"begin": 2214,
									"end": 2232,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2214,
									"end": 2232,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2214,
									"end": 2232,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 2214,
									"end": 2232,
									"modifierDepth": 1,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2245,
									"end": 2249,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 2239,
									"end": 2242,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 2239,
									"end": 2249,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2239,
									"end": 2249,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2239,
									"end": 2249,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 2239,
									"end": 2249,
									"modifierDepth": 1,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2284,
									"end": 2289,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2258,
									"end": 2262,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "5"
								},
								{
									"begin": 2258,
									"end": 2262,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2258,
									"end": 2290,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "100"
								},
								{
									"begin": 2258,
									"end": 2290,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 17
								},
								{
									"begin": 2258,
									"end": 2290,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2258,
									"end": 2290,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 2258,
									"end": 2290,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2258,
									"end": 2290,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2258,
									"end": 2290,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 2258,
									"end": 2290,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 2258,
									"end": 2290,
									"modifierDepth": 1,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2258,
									"end": 2290,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2258,
									"end": 2290,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 2258,
									"end": 2290,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2258,
									"end": 2290,
									"modifierDepth": 1,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2258,
									"end": 2290,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 2258,
									"end": 2290,
									"modifierDepth": 1,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 2258,
									"end": 2290,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2258,
									"end": 2290,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 2258,
									"end": 2290,
									"modifierDepth": 1,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2337,
									"end": 2352,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2297,
									"end": 2308,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "6"
								},
								{
									"begin": 2297,
									"end": 2308,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2297,
									"end": 2353,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "100"
								},
								{
									"begin": 2297,
									"end": 2353,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 17
								},
								{
									"begin": 2297,
									"end": 2353,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2297,
									"end": 2353,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 2297,
									"end": 2353,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2297,
									"end": 2353,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2297,
									"end": 2353,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 2297,
									"end": 2353,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 2297,
									"end": 2353,
									"modifierDepth": 1,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2297,
									"end": 2353,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2297,
									"end": 2353,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 2297,
									"end": 2353,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2297,
									"end": 2353,
									"modifierDepth": 1,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2297,
									"end": 2353,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 2297,
									"end": 2353,
									"modifierDepth": 1,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 2297,
									"end": 2353,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2297,
									"end": 2353,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 2297,
									"end": 2353,
									"modifierDepth": 1,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2377,
									"end": 2392,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 2360,
									"end": 2374,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "6"
								},
								{
									"begin": 2360,
									"end": 2374,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "14"
								},
								{
									"begin": 2360,
									"end": 2392,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "100"
								},
								{
									"begin": 2360,
									"end": 2392,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 17
								},
								{
									"begin": 2360,
									"end": 2392,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2360,
									"end": 2392,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 2360,
									"end": 2392,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2360,
									"end": 2392,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2360,
									"end": 2392,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 2360,
									"end": 2392,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 2360,
									"end": 2392,
									"modifierDepth": 1,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2360,
									"end": 2392,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2360,
									"end": 2392,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 2360,
									"end": 2392,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2360,
									"end": 2392,
									"modifierDepth": 1,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2360,
									"end": 2392,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 2360,
									"end": 2392,
									"modifierDepth": 1,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 2360,
									"end": 2392,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2360,
									"end": 2392,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 2360,
									"end": 2392,
									"modifierDepth": 1,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 2467,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 645,
									"end": 7292,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "8"
								},
								{
									"begin": 645,
									"end": 7292,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 18,
									"value": "10"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 18,
									"value": "12"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 18,
									"value": "13"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "31"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "12"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 18,
									"value": "31"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 18,
									"value": "14"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "33"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "13"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 18,
									"value": "33"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 18,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 18,
									"value": "15"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "36"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "14"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 18,
									"value": "36"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 845,
									"end": 946,
									"name": "tag",
									"source": 18,
									"value": "16"
								},
								{
									"begin": 845,
									"end": 946,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 881,
									"end": 888,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 914,
									"end": 919,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 910,
									"end": 940,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 899,
									"end": 940,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 899,
									"end": 940,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 845,
									"end": 946,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 845,
									"end": 946,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 845,
									"end": 946,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 845,
									"end": 946,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 952,
									"end": 1072,
									"name": "tag",
									"source": 18,
									"value": "17"
								},
								{
									"begin": 952,
									"end": 1072,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1024,
									"end": 1047,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "39"
								},
								{
									"begin": 1041,
									"end": 1046,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1024,
									"end": 1047,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "16"
								},
								{
									"begin": 1024,
									"end": 1047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1024,
									"end": 1047,
									"name": "tag",
									"source": 18,
									"value": "39"
								},
								{
									"begin": 1024,
									"end": 1047,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1017,
									"end": 1022,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1014,
									"end": 1048,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 1004,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 1004,
									"end": 1066,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1062,
									"end": 1063,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1059,
									"end": 1060,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1052,
									"end": 1064,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 1004,
									"end": 1066,
									"name": "tag",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 1004,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 952,
									"end": 1072,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 952,
									"end": 1072,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1078,
									"end": 1219,
									"name": "tag",
									"source": 18,
									"value": "18"
								},
								{
									"begin": 1078,
									"end": 1219,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1134,
									"end": 1139,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1165,
									"end": 1171,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1159,
									"end": 1172,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 1150,
									"end": 1172,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1150,
									"end": 1172,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1181,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "42"
								},
								{
									"begin": 1207,
									"end": 1212,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1181,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "17"
								},
								{
									"begin": 1181,
									"end": 1213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1181,
									"end": 1213,
									"name": "tag",
									"source": 18,
									"value": "42"
								},
								{
									"begin": 1181,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1078,
									"end": 1219,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 1078,
									"end": 1219,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1078,
									"end": 1219,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1078,
									"end": 1219,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1078,
									"end": 1219,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1225,
									"end": 1302,
									"name": "tag",
									"source": 18,
									"value": "19"
								},
								{
									"begin": 1225,
									"end": 1302,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1262,
									"end": 1269,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1291,
									"end": 1296,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1280,
									"end": 1296,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1280,
									"end": 1296,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1225,
									"end": 1302,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1225,
									"end": 1302,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1225,
									"end": 1302,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1225,
									"end": 1302,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1308,
									"end": 1430,
									"name": "tag",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1308,
									"end": 1430,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1381,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "45"
								},
								{
									"begin": 1399,
									"end": 1404,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1381,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "19"
								},
								{
									"begin": 1381,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1381,
									"end": 1405,
									"name": "tag",
									"source": 18,
									"value": "45"
								},
								{
									"begin": 1381,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1374,
									"end": 1379,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1371,
									"end": 1406,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 1361,
									"end": 1424,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "46"
								},
								{
									"begin": 1361,
									"end": 1424,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1420,
									"end": 1421,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1417,
									"end": 1418,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1410,
									"end": 1422,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 1361,
									"end": 1424,
									"name": "tag",
									"source": 18,
									"value": "46"
								},
								{
									"begin": 1361,
									"end": 1424,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1308,
									"end": 1430,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1308,
									"end": 1430,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1436,
									"end": 1579,
									"name": "tag",
									"source": 18,
									"value": "21"
								},
								{
									"begin": 1436,
									"end": 1579,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1493,
									"end": 1498,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1524,
									"end": 1530,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1518,
									"end": 1531,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 1509,
									"end": 1531,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1509,
									"end": 1531,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1540,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "48"
								},
								{
									"begin": 1567,
									"end": 1572,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1540,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1540,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1540,
									"end": 1573,
									"name": "tag",
									"source": 18,
									"value": "48"
								},
								{
									"begin": 1540,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1436,
									"end": 1579,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 1436,
									"end": 1579,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1436,
									"end": 1579,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1436,
									"end": 1579,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1436,
									"end": 1579,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1585,
									"end": 1662,
									"name": "tag",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 1585,
									"end": 1662,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1622,
									"end": 1629,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1651,
									"end": 1656,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1640,
									"end": 1656,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1640,
									"end": 1656,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1585,
									"end": 1662,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1585,
									"end": 1662,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1585,
									"end": 1662,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1585,
									"end": 1662,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1668,
									"end": 1790,
									"name": "tag",
									"source": 18,
									"value": "23"
								},
								{
									"begin": 1668,
									"end": 1790,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1741,
									"end": 1765,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "51"
								},
								{
									"begin": 1759,
									"end": 1764,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1741,
									"end": 1765,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 1741,
									"end": 1765,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1741,
									"end": 1765,
									"name": "tag",
									"source": 18,
									"value": "51"
								},
								{
									"begin": 1741,
									"end": 1765,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1734,
									"end": 1739,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1731,
									"end": 1766,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 1721,
									"end": 1784,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "52"
								},
								{
									"begin": 1721,
									"end": 1784,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1780,
									"end": 1781,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1777,
									"end": 1778,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1770,
									"end": 1782,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 1721,
									"end": 1784,
									"name": "tag",
									"source": 18,
									"value": "52"
								},
								{
									"begin": 1721,
									"end": 1784,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1668,
									"end": 1790,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1668,
									"end": 1790,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1796,
									"end": 1939,
									"name": "tag",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 1796,
									"end": 1939,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1853,
									"end": 1858,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1884,
									"end": 1890,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1878,
									"end": 1891,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 1869,
									"end": 1891,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1869,
									"end": 1891,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1900,
									"end": 1933,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "54"
								},
								{
									"begin": 1927,
									"end": 1932,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1900,
									"end": 1933,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "23"
								},
								{
									"begin": 1900,
									"end": 1933,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1900,
									"end": 1933,
									"name": "tag",
									"source": 18,
									"value": "54"
								},
								{
									"begin": 1900,
									"end": 1933,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1796,
									"end": 1939,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 1796,
									"end": 1939,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1796,
									"end": 1939,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1796,
									"end": 1939,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1796,
									"end": 1939,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1945,
									"end": 3391,
									"name": "tag",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 1945,
									"end": 3391,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2077,
									"end": 2083,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2085,
									"end": 2091,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 2093,
									"end": 2099,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2101,
									"end": 2107,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 2109,
									"end": 2115,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2117,
									"end": 2123,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 2125,
									"end": 2131,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2133,
									"end": 2139,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 2182,
									"end": 2185,
									"name": "PUSH",
									"source": 18,
									"value": "100"
								},
								{
									"begin": 2170,
									"end": 2179,
									"name": "DUP10",
									"source": 18
								},
								{
									"begin": 2161,
									"end": 2168,
									"name": "DUP12",
									"source": 18
								},
								{
									"begin": 2157,
									"end": 2180,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 2153,
									"end": 2186,
									"name": "SLT",
									"source": 18
								},
								{
									"begin": 2150,
									"end": 2270,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 2150,
									"end": 2270,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "56"
								},
								{
									"begin": 2150,
									"end": 2270,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 2189,
									"end": 2268,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "57"
								},
								{
									"begin": 2189,
									"end": 2268,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "10"
								},
								{
									"begin": 2189,
									"end": 2268,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2189,
									"end": 2268,
									"name": "tag",
									"source": 18,
									"value": "57"
								},
								{
									"begin": 2189,
									"end": 2268,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2150,
									"end": 2270,
									"name": "tag",
									"source": 18,
									"value": "56"
								},
								{
									"begin": 2150,
									"end": 2270,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2309,
									"end": 2310,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2334,
									"end": 2398,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "58"
								},
								{
									"begin": 2390,
									"end": 2397,
									"name": "DUP12",
									"source": 18
								},
								{
									"begin": 2381,
									"end": 2387,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2370,
									"end": 2379,
									"name": "DUP13",
									"source": 18
								},
								{
									"begin": 2366,
									"end": 2388,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2334,
									"end": 2398,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "15"
								},
								{
									"begin": 2334,
									"end": 2398,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2334,
									"end": 2398,
									"name": "tag",
									"source": 18,
									"value": "58"
								},
								{
									"begin": 2334,
									"end": 2398,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2324,
									"end": 2398,
									"name": "SWAP9",
									"source": 18
								},
								{
									"begin": 2324,
									"end": 2398,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2280,
									"end": 2408,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2447,
									"end": 2449,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 2473,
									"end": 2537,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "59"
								},
								{
									"begin": 2529,
									"end": 2536,
									"name": "DUP12",
									"source": 18
								},
								{
									"begin": 2520,
									"end": 2526,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2509,
									"end": 2518,
									"name": "DUP13",
									"source": 18
								},
								{
									"begin": 2505,
									"end": 2527,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2473,
									"end": 2537,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "15"
								},
								{
									"begin": 2473,
									"end": 2537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2473,
									"end": 2537,
									"name": "tag",
									"source": 18,
									"value": "59"
								},
								{
									"begin": 2473,
									"end": 2537,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2463,
									"end": 2537,
									"name": "SWAP8",
									"source": 18
								},
								{
									"begin": 2463,
									"end": 2537,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2418,
									"end": 2547,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2586,
									"end": 2588,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 2612,
									"end": 2676,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "60"
								},
								{
									"begin": 2668,
									"end": 2675,
									"name": "DUP12",
									"source": 18
								},
								{
									"begin": 2659,
									"end": 2665,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2648,
									"end": 2657,
									"name": "DUP13",
									"source": 18
								},
								{
									"begin": 2644,
									"end": 2666,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2612,
									"end": 2676,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "15"
								},
								{
									"begin": 2612,
									"end": 2676,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2612,
									"end": 2676,
									"name": "tag",
									"source": 18,
									"value": "60"
								},
								{
									"begin": 2612,
									"end": 2676,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2602,
									"end": 2676,
									"name": "SWAP7",
									"source": 18
								},
								{
									"begin": 2602,
									"end": 2676,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2557,
									"end": 2686,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2725,
									"end": 2727,
									"name": "PUSH",
									"source": 18,
									"value": "60"
								},
								{
									"begin": 2751,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "61"
								},
								{
									"begin": 2807,
									"end": 2814,
									"name": "DUP12",
									"source": 18
								},
								{
									"begin": 2798,
									"end": 2804,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2787,
									"end": 2796,
									"name": "DUP13",
									"source": 18
								},
								{
									"begin": 2783,
									"end": 2805,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2751,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "15"
								},
								{
									"begin": 2751,
									"end": 2815,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2751,
									"end": 2815,
									"name": "tag",
									"source": 18,
									"value": "61"
								},
								{
									"begin": 2751,
									"end": 2815,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2741,
									"end": 2815,
									"name": "SWAP6",
									"source": 18
								},
								{
									"begin": 2741,
									"end": 2815,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2696,
									"end": 2825,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2864,
									"end": 2867,
									"name": "PUSH",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 2891,
									"end": 2954,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "62"
								},
								{
									"begin": 2946,
									"end": 2953,
									"name": "DUP12",
									"source": 18
								},
								{
									"begin": 2937,
									"end": 2943,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2926,
									"end": 2935,
									"name": "DUP13",
									"source": 18
								},
								{
									"begin": 2922,
									"end": 2944,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2891,
									"end": 2954,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "18"
								},
								{
									"begin": 2891,
									"end": 2954,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2891,
									"end": 2954,
									"name": "tag",
									"source": 18,
									"value": "62"
								},
								{
									"begin": 2891,
									"end": 2954,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2881,
									"end": 2954,
									"name": "SWAP5",
									"source": 18
								},
								{
									"begin": 2881,
									"end": 2954,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2835,
									"end": 2964,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3003,
									"end": 3006,
									"name": "PUSH",
									"source": 18,
									"value": "A0"
								},
								{
									"begin": 3030,
									"end": 3094,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "63"
								},
								{
									"begin": 3086,
									"end": 3093,
									"name": "DUP12",
									"source": 18
								},
								{
									"begin": 3077,
									"end": 3083,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3066,
									"end": 3075,
									"name": "DUP13",
									"source": 18
								},
								{
									"begin": 3062,
									"end": 3084,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 3030,
									"end": 3094,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "15"
								},
								{
									"begin": 3030,
									"end": 3094,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3030,
									"end": 3094,
									"name": "tag",
									"source": 18,
									"value": "63"
								},
								{
									"begin": 3030,
									"end": 3094,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3020,
									"end": 3094,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 3020,
									"end": 3094,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2974,
									"end": 3104,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3143,
									"end": 3146,
									"name": "PUSH",
									"source": 18,
									"value": "C0"
								},
								{
									"begin": 3170,
									"end": 3234,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "64"
								},
								{
									"begin": 3226,
									"end": 3233,
									"name": "DUP12",
									"source": 18
								},
								{
									"begin": 3217,
									"end": 3223,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3206,
									"end": 3215,
									"name": "DUP13",
									"source": 18
								},
								{
									"begin": 3202,
									"end": 3224,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 3170,
									"end": 3234,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "21"
								},
								{
									"begin": 3170,
									"end": 3234,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3170,
									"end": 3234,
									"name": "tag",
									"source": 18,
									"value": "64"
								},
								{
									"begin": 3170,
									"end": 3234,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3160,
									"end": 3234,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 3160,
									"end": 3234,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3114,
									"end": 3244,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3283,
									"end": 3286,
									"name": "PUSH",
									"source": 18,
									"value": "E0"
								},
								{
									"begin": 3310,
									"end": 3374,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "65"
								},
								{
									"begin": 3366,
									"end": 3373,
									"name": "DUP12",
									"source": 18
								},
								{
									"begin": 3357,
									"end": 3363,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3346,
									"end": 3355,
									"name": "DUP13",
									"source": 18
								},
								{
									"begin": 3342,
									"end": 3364,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 3310,
									"end": 3374,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 3310,
									"end": 3374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3310,
									"end": 3374,
									"name": "tag",
									"source": 18,
									"value": "65"
								},
								{
									"begin": 3310,
									"end": 3374,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3300,
									"end": 3374,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3300,
									"end": 3374,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3254,
									"end": 3384,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1945,
									"end": 3391,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 1945,
									"end": 3391,
									"name": "SWAP6",
									"source": 18
								},
								{
									"begin": 1945,
									"end": 3391,
									"name": "SWAP9",
									"source": 18
								},
								{
									"begin": 1945,
									"end": 3391,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1945,
									"end": 3391,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 1945,
									"end": 3391,
									"name": "SWAP6",
									"source": 18
								},
								{
									"begin": 1945,
									"end": 3391,
									"name": "SWAP9",
									"source": 18
								},
								{
									"begin": 1945,
									"end": 3391,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1945,
									"end": 3391,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 1945,
									"end": 3391,
									"name": "SWAP7",
									"source": 18
								},
								{
									"begin": 1945,
									"end": 3391,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1945,
									"end": 3391,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 645,
									"end": 7292,
									"name": "tag",
									"source": 17,
									"value": "8"
								},
								{
									"begin": 645,
									"end": 7292,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 645,
									"end": 7292,
									"name": "PUSH",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 645,
									"end": 7292,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 645,
									"end": 7292,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 7292,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 7292,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 7292,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 645,
									"end": 7292,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 7292,
									"name": "ASSIGNIMMUTABLE",
									"source": 17,
									"value": "323"
								},
								{
									"begin": 645,
									"end": 7292,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 7292,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 7292,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202d368352843315e3b1000b350c619f136bd47be8c8112a7e4b4c627e03e21b1364736f6c63430008160033",
									".code": [
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "7DC0D1D0"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "B197DF54"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "B197DF54"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "C440FA0F"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "C966494E"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "D930DA60"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "EB5A662E"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "tag",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "7DC0D1D0"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "83CEAE8D"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "86D86D84"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "A63661A5"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "AFFED0E0"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "tag",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "2F48AB7D"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "2F48AB7D"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "365B98B2"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "4585E33B"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "6E04FF0D"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "735DE9F7"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "tag",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "E1801C"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "A009097"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "1C4695F4"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "1FE543E3"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "tag",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "tag",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 645,
											"end": 7292,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "tag",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "tag",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 3157,
											"end": 3553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "tag",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 3157,
											"end": 3553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "tag",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "tag",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "tag",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 1538,
											"end": 1582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "tag",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 1538,
											"end": 1582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "tag",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "tag",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "tag",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 1503,
											"end": 1533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "tag",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 1503,
											"end": 1533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "tag",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 6618,
											"end": 6874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 6618,
											"end": 6874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "tag",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "47"
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "tag",
											"source": 17,
											"value": "47"
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "49"
										},
										{
											"begin": 1481,
											"end": 1498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "tag",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "50"
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "51"
										},
										{
											"begin": 1481,
											"end": 1498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "tag",
											"source": 17,
											"value": "50"
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "tag",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "tag",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "53"
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "54"
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "55"
										},
										{
											"begin": 1253,
											"end": 1293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "tag",
											"source": 17,
											"value": "54"
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "56"
										},
										{
											"begin": 1253,
											"end": 1293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "tag",
											"source": 17,
											"value": "53"
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "58"
										},
										{
											"begin": 1253,
											"end": 1293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "tag",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "tag",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "tag",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "62"
										},
										{
											"begin": 7050,
											"end": 7254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "tag",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "63"
										},
										{
											"begin": 7050,
											"end": 7254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "tag",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "tag",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "tag",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "65"
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "62"
										},
										{
											"begin": 6547,
											"end": 7042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "tag",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "67"
										},
										{
											"begin": 6547,
											"end": 7042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "tag",
											"source": 17,
											"value": "65"
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "68"
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "69"
										},
										{
											"begin": 6547,
											"end": 7042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "tag",
											"source": 17,
											"value": "68"
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "tag",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "70"
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "tag",
											"source": 17,
											"value": "70"
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "71"
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 1613,
											"end": 1652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "tag",
											"source": 17,
											"value": "71"
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "73"
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 1613,
											"end": 1652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "tag",
											"source": 17,
											"value": "73"
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "tag",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "tag",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "76"
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "77"
										},
										{
											"begin": 1657,
											"end": 1694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "tag",
											"source": 17,
											"value": "76"
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "78"
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "79"
										},
										{
											"begin": 1657,
											"end": 1694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "tag",
											"source": 17,
											"value": "78"
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "tag",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "tag",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "81"
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "82"
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "83"
										},
										{
											"begin": 1424,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "tag",
											"source": 17,
											"value": "82"
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 1424,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "tag",
											"source": 17,
											"value": "81"
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "85"
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "86"
										},
										{
											"begin": 1424,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "tag",
											"source": 17,
											"value": "85"
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "tag",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "87"
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "tag",
											"source": 17,
											"value": "87"
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "88"
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "89"
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "83"
										},
										{
											"begin": 1211,
											"end": 1248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "tag",
											"source": 17,
											"value": "89"
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "90"
										},
										{
											"begin": 1211,
											"end": 1248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "tag",
											"source": 17,
											"value": "88"
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "91"
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "92"
										},
										{
											"begin": 1211,
											"end": 1248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "tag",
											"source": 17,
											"value": "91"
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 3559,
											"end": 4038,
											"name": "tag",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 3559,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3559,
											"end": 4038,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 3559,
											"end": 4038,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3559,
											"end": 4038,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3559,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "93"
										},
										{
											"begin": 3559,
											"end": 4038,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3559,
											"end": 4038,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 4038,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3559,
											"end": 4038,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3559,
											"end": 4038,
											"name": "tag",
											"source": 17,
											"value": "93"
										},
										{
											"begin": 3559,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3559,
											"end": 4038,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3559,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "94"
										},
										{
											"begin": 3559,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "95"
										},
										{
											"begin": 3559,
											"end": 4038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3559,
											"end": 4038,
											"name": "tag",
											"source": 17,
											"value": "94"
										},
										{
											"begin": 3559,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3559,
											"end": 4038,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "tag",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "96"
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "tag",
											"source": 17,
											"value": "96"
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "97"
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "98"
										},
										{
											"begin": 1699,
											"end": 1719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "tag",
											"source": 17,
											"value": "97"
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "99"
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "86"
										},
										{
											"begin": 1699,
											"end": 1719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "tag",
											"source": 17,
											"value": "99"
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "tag",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "tag",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "101"
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 2600,
											"end": 3151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "tag",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "103"
										},
										{
											"begin": 2600,
											"end": 3151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "tag",
											"source": 17,
											"value": "101"
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "tag",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "104"
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "tag",
											"source": 17,
											"value": "104"
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "105"
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "106"
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "83"
										},
										{
											"begin": 4591,
											"end": 6177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "tag",
											"source": 17,
											"value": "106"
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "107"
										},
										{
											"begin": 4591,
											"end": 6177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "tag",
											"source": 17,
											"value": "105"
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "tag",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "108"
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "tag",
											"source": 17,
											"value": "108"
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "109"
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "110"
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "55"
										},
										{
											"begin": 1365,
											"end": 1419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "tag",
											"source": 17,
											"value": "110"
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "111"
										},
										{
											"begin": 1365,
											"end": 1419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "tag",
											"source": 17,
											"value": "109"
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "112"
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "58"
										},
										{
											"begin": 1365,
											"end": 1419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "tag",
											"source": 17,
											"value": "112"
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 4044,
											"end": 4212,
											"name": "tag",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4044,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4044,
											"end": 4212,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 4044,
											"end": 4212,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4044,
											"end": 4212,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4044,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "113"
										},
										{
											"begin": 4044,
											"end": 4212,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4044,
											"end": 4212,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4212,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4044,
											"end": 4212,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4044,
											"end": 4212,
											"name": "tag",
											"source": 17,
											"value": "113"
										},
										{
											"begin": 4044,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4044,
											"end": 4212,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4044,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "114"
										},
										{
											"begin": 4044,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "115"
										},
										{
											"begin": 4044,
											"end": 4212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4044,
											"end": 4212,
											"name": "tag",
											"source": 17,
											"value": "114"
										},
										{
											"begin": 4044,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4044,
											"end": 4212,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "tag",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "116"
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "tag",
											"source": 17,
											"value": "116"
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "117"
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "118"
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "83"
										},
										{
											"begin": 2473,
											"end": 2594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "tag",
											"source": 17,
											"value": "118"
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "119"
										},
										{
											"begin": 2473,
											"end": 2594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "tag",
											"source": 17,
											"value": "117"
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "120"
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "86"
										},
										{
											"begin": 2473,
											"end": 2594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "tag",
											"source": 17,
											"value": "120"
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "tag",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3260,
											"end": 3261,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3234,
											"end": 3239,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3234,
											"end": 3251,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3240,
											"end": 3250,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3234,
											"end": 3251,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3234,
											"end": 3251,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3234,
											"end": 3251,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3234,
											"end": 3251,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3234,
											"end": 3251,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3234,
											"end": 3251,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3234,
											"end": 3251,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3234,
											"end": 3251,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3234,
											"end": 3251,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3234,
											"end": 3251,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3234,
											"end": 3251,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3234,
											"end": 3251,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3234,
											"end": 3251,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3234,
											"end": 3251,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3234,
											"end": 3251,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3234,
											"end": 3257,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3234,
											"end": 3257,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3234,
											"end": 3257,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3234,
											"end": 3261,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3226,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "122"
										},
										{
											"begin": 3226,
											"end": 3279,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3226,
											"end": 3279,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3226,
											"end": 3279,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3226,
											"end": 3279,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3226,
											"end": 3279,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3226,
											"end": 3279,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3226,
											"end": 3279,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3226,
											"end": 3279,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3226,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "123"
										},
										{
											"begin": 3226,
											"end": 3279,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3226,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "124"
										},
										{
											"begin": 3226,
											"end": 3279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3226,
											"end": 3279,
											"name": "tag",
											"source": 17,
											"value": "123"
										},
										{
											"begin": 3226,
											"end": 3279,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3226,
											"end": 3279,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3226,
											"end": 3279,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3226,
											"end": 3279,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3226,
											"end": 3279,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3226,
											"end": 3279,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3226,
											"end": 3279,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3226,
											"end": 3279,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3226,
											"end": 3279,
											"name": "tag",
											"source": 17,
											"value": "122"
										},
										{
											"begin": 3226,
											"end": 3279,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3306,
											"end": 3307,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3294,
											"end": 3303,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3294,
											"end": 3307,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3286,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "125"
										},
										{
											"begin": 3286,
											"end": 3344,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3286,
											"end": 3344,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3286,
											"end": 3344,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3286,
											"end": 3344,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3286,
											"end": 3344,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3286,
											"end": 3344,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3286,
											"end": 3344,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3286,
											"end": 3344,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3286,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "126"
										},
										{
											"begin": 3286,
											"end": 3344,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3286,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "127"
										},
										{
											"begin": 3286,
											"end": 3344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3286,
											"end": 3344,
											"name": "tag",
											"source": 17,
											"value": "126"
										},
										{
											"begin": 3286,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3286,
											"end": 3344,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3286,
											"end": 3344,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3286,
											"end": 3344,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3286,
											"end": 3344,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3286,
											"end": 3344,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3286,
											"end": 3344,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3286,
											"end": 3344,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3286,
											"end": 3344,
											"name": "tag",
											"source": 17,
											"value": "125"
										},
										{
											"begin": 3286,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3368,
											"end": 3369,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3365,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3359,
											"end": 3369,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3351,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "128"
										},
										{
											"begin": 3351,
											"end": 3403,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3351,
											"end": 3403,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3351,
											"end": 3403,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3351,
											"end": 3403,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3351,
											"end": 3403,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3351,
											"end": 3403,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3351,
											"end": 3403,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3351,
											"end": 3403,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3351,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "129"
										},
										{
											"begin": 3351,
											"end": 3403,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3351,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "130"
										},
										{
											"begin": 3351,
											"end": 3403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3351,
											"end": 3403,
											"name": "tag",
											"source": 17,
											"value": "129"
										},
										{
											"begin": 3351,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3351,
											"end": 3403,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3351,
											"end": 3403,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3351,
											"end": 3403,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3351,
											"end": 3403,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3351,
											"end": 3403,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3351,
											"end": 3403,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3351,
											"end": 3403,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3351,
											"end": 3403,
											"name": "tag",
											"source": 17,
											"value": "128"
										},
										{
											"begin": 3351,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3439,
											"end": 3445,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3412,
											"end": 3417,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3412,
											"end": 3429,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3418,
											"end": 3428,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3412,
											"end": 3429,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3412,
											"end": 3429,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3412,
											"end": 3429,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3412,
											"end": 3429,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3412,
											"end": 3429,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3412,
											"end": 3429,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3412,
											"end": 3429,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3429,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3412,
											"end": 3429,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3412,
											"end": 3429,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3412,
											"end": 3429,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3412,
											"end": 3429,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3429,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3412,
											"end": 3429,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3412,
											"end": 3429,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3412,
											"end": 3436,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 3412,
											"end": 3436,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3412,
											"end": 3445,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3412,
											"end": 3445,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3412,
											"end": 3445,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 3412,
											"end": 3445,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3482,
											"end": 3491,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3452,
											"end": 3457,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3458,
											"end": 3468,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3452,
											"end": 3469,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3452,
											"end": 3469,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3452,
											"end": 3469,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3452,
											"end": 3469,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3452,
											"end": 3469,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3452,
											"end": 3469,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3452,
											"end": 3469,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3452,
											"end": 3469,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3452,
											"end": 3469,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3452,
											"end": 3469,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3452,
											"end": 3469,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3452,
											"end": 3469,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3452,
											"end": 3469,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3452,
											"end": 3469,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3469,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3452,
											"end": 3479,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 3452,
											"end": 3479,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3452,
											"end": 3491,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3452,
											"end": 3491,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3452,
											"end": 3491,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 3452,
											"end": 3491,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3517,
											"end": 3527,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3505,
											"end": 3547,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3505,
											"end": 3547,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3505,
											"end": 3547,
											"name": "PUSH",
											"source": 17,
											"value": "C8108639F5E0627BAC90449607E60D516A5082452E397808A067B57F755515FC"
										},
										{
											"begin": 3529,
											"end": 3538,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3540,
											"end": 3546,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3505,
											"end": 3547,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3505,
											"end": 3547,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3505,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "131"
										},
										{
											"begin": 3505,
											"end": 3547,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3505,
											"end": 3547,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3505,
											"end": 3547,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3505,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "132"
										},
										{
											"begin": 3505,
											"end": 3547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3505,
											"end": 3547,
											"name": "tag",
											"source": 17,
											"value": "131"
										},
										{
											"begin": 3505,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3505,
											"end": 3547,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3505,
											"end": 3547,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3505,
											"end": 3547,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3505,
											"end": 3547,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3505,
											"end": 3547,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3505,
											"end": 3547,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3505,
											"end": 3547,
											"name": "LOG2",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3553,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "tag",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "PUSH",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "tag",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6731,
											"end": 6745,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 6717,
											"end": 6745,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6717,
											"end": 6745,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6717,
											"end": 6727,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6717,
											"end": 6745,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6717,
											"end": 6745,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6717,
											"end": 6745,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6713,
											"end": 6822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 6713,
											"end": 6822,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6788,
											"end": 6798,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6800,
											"end": 6814,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "PUSH",
											"source": 6,
											"value": "1CF993F400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 6762,
											"end": 6815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6713,
											"end": 6822,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 6713,
											"end": 6822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6827,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 6846,
											"end": 6855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6857,
											"end": 6868,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 6827,
											"end": 6869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6827,
											"end": 6869,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 6827,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "tag",
											"source": 17,
											"value": "49"
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1481,
											"end": 1498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "tag",
											"source": 17,
											"value": "56"
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "tag",
											"source": 17,
											"value": "63"
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7131,
											"end": 7143,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7172,
											"end": 7183,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7172,
											"end": 7183,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7147,
											"end": 7218,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7147,
											"end": 7218,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7147,
											"end": 7218,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7147,
											"end": 7218,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 7147,
											"end": 7218,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7147,
											"end": 7218,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7147,
											"end": 7218,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "141"
										},
										{
											"begin": 7147,
											"end": 7218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7147,
											"end": 7218,
											"name": "tag",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 7147,
											"end": 7218,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7130,
											"end": 7218,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7130,
											"end": 7218,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7229,
											"end": 7246,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "142"
										},
										{
											"begin": 7241,
											"end": 7245,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7229,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "107"
										},
										{
											"begin": 7229,
											"end": 7246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7229,
											"end": 7246,
											"name": "tag",
											"source": 17,
											"value": "142"
										},
										{
											"begin": 7229,
											"end": 7246,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7119,
											"end": 7254,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7254,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "tag",
											"source": 17,
											"value": "67"
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6684,
											"end": 6701,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6703,
											"end": 6727,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 6743,
											"end": 6755,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6758,
											"end": 6763,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 6758,
											"end": 6795,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6793,
											"end": 6794,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 6788,
											"end": 6789,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6780,
											"end": 6785,
											"name": "PUSH",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 6780,
											"end": 6785,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6780,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 6780,
											"end": 6789,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6780,
											"end": 6789,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6780,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "145"
										},
										{
											"begin": 6780,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6780,
											"end": 6789,
											"name": "tag",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 6780,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6764,
											"end": 6776,
											"name": "NUMBER",
											"source": 17
										},
										{
											"begin": 6764,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "146"
										},
										{
											"begin": 6764,
											"end": 6790,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6764,
											"end": 6790,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6764,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "147"
										},
										{
											"begin": 6764,
											"end": 6790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6764,
											"end": 6790,
											"name": "tag",
											"source": 17,
											"value": "146"
										},
										{
											"begin": 6764,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6764,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "148"
										},
										{
											"begin": 6764,
											"end": 6794,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6764,
											"end": 6794,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6764,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "149"
										},
										{
											"begin": 6764,
											"end": 6794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6764,
											"end": 6794,
											"name": "tag",
											"source": 17,
											"value": "148"
										},
										{
											"begin": 6764,
											"end": 6794,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6758,
											"end": 6795,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6758,
											"end": 6795,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6758,
											"end": 6795,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6758,
											"end": 6795,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6758,
											"end": 6795,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6758,
											"end": 6795,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6758,
											"end": 6795,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6758,
											"end": 6795,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6758,
											"end": 6795,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6758,
											"end": 6795,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6758,
											"end": 6795,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6758,
											"end": 6795,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6758,
											"end": 6795,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6758,
											"end": 6795,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6758,
											"end": 6795,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6758,
											"end": 6795,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 6758,
											"end": 6795,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 6758,
											"end": 6795,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6758,
											"end": 6795,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 6758,
											"end": 6795,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6758,
											"end": 6795,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6743,
											"end": 6795,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6743,
											"end": 6795,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6819,
											"end": 6824,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6804,
											"end": 6824,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6804,
											"end": 6824,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6854,
											"end": 6869,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 6854,
											"end": 6875,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6870,
											"end": 6874,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6854,
											"end": 6875,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6854,
											"end": 6875,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6854,
											"end": 6875,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6854,
											"end": 6875,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6854,
											"end": 6875,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6854,
											"end": 6875,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6854,
											"end": 6875,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6854,
											"end": 6875,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6854,
											"end": 6875,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6854,
											"end": 6875,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6854,
											"end": 6875,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6854,
											"end": 6875,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6854,
											"end": 6875,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6854,
											"end": 6875,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6854,
											"end": 6875,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6854,
											"end": 6875,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6836,
											"end": 6851,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 6836,
											"end": 6875,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 6836,
											"end": 6904,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6836,
											"end": 6904,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6836,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "150"
										},
										{
											"begin": 6836,
											"end": 6904,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6836,
											"end": 6904,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6903,
											"end": 6904,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6879,
											"end": 6894,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6895,
											"end": 6899,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6879,
											"end": 6904,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 6836,
											"end": 6904,
											"name": "tag",
											"source": 17,
											"value": "150"
										},
										{
											"begin": 6836,
											"end": 6904,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6833,
											"end": 6945,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6833,
											"end": 6945,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "151"
										},
										{
											"begin": 6833,
											"end": 6945,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6931,
											"end": 6935,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 6916,
											"end": 6935,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6916,
											"end": 6935,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6833,
											"end": 6945,
											"name": "tag",
											"source": 17,
											"value": "151"
										},
										{
											"begin": 6833,
											"end": 6945,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6986,
											"end": 6990,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "152"
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "58"
										},
										{
											"begin": 6975,
											"end": 6991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "tag",
											"source": 17,
											"value": "152"
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6961,
											"end": 6991,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6961,
											"end": 6991,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7000,
											"end": 7034,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 7042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "tag",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "PUSH",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "tag",
											"source": 17,
											"value": "77"
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1657,
											"end": 1694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "tag",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "tag",
											"source": 17,
											"value": "90"
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3559,
											"end": 4038,
											"name": "tag",
											"source": 17,
											"value": "95"
										},
										{
											"begin": 3559,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3632,
											"end": 3633,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3606,
											"end": 3611,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3606,
											"end": 3623,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3622,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3606,
											"end": 3623,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3606,
											"end": 3623,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3606,
											"end": 3623,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3606,
											"end": 3623,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3606,
											"end": 3623,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3606,
											"end": 3623,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3606,
											"end": 3623,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3606,
											"end": 3623,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3606,
											"end": 3623,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3606,
											"end": 3623,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3606,
											"end": 3623,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3606,
											"end": 3623,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3606,
											"end": 3623,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3606,
											"end": 3623,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3606,
											"end": 3623,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3606,
											"end": 3629,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3606,
											"end": 3629,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3606,
											"end": 3629,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3606,
											"end": 3633,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3598,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "154"
										},
										{
											"begin": 3598,
											"end": 3655,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3598,
											"end": 3655,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3598,
											"end": 3655,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3598,
											"end": 3655,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3598,
											"end": 3655,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3598,
											"end": 3655,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3598,
											"end": 3655,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3598,
											"end": 3655,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3598,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "155"
										},
										{
											"begin": 3598,
											"end": 3655,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3598,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "156"
										},
										{
											"begin": 3598,
											"end": 3655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3598,
											"end": 3655,
											"name": "tag",
											"source": 17,
											"value": "155"
										},
										{
											"begin": 3598,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3598,
											"end": 3655,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3598,
											"end": 3655,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3598,
											"end": 3655,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3598,
											"end": 3655,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3598,
											"end": 3655,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3598,
											"end": 3655,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3598,
											"end": 3655,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3598,
											"end": 3655,
											"name": "tag",
											"source": 17,
											"value": "154"
										},
										{
											"begin": 3598,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3697,
											"end": 3698,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3670,
											"end": 3675,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3686,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3670,
											"end": 3694,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 3670,
											"end": 3694,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3670,
											"end": 3694,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3662,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 3662,
											"end": 3732,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3662,
											"end": 3732,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3662,
											"end": 3732,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3662,
											"end": 3732,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3662,
											"end": 3732,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3662,
											"end": 3732,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3662,
											"end": 3732,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3662,
											"end": 3732,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3662,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "158"
										},
										{
											"begin": 3662,
											"end": 3732,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3662,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "130"
										},
										{
											"begin": 3662,
											"end": 3732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3662,
											"end": 3732,
											"name": "tag",
											"source": 17,
											"value": "158"
										},
										{
											"begin": 3662,
											"end": 3732,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3662,
											"end": 3732,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3662,
											"end": 3732,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3662,
											"end": 3732,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3662,
											"end": 3732,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3662,
											"end": 3732,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3662,
											"end": 3732,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3662,
											"end": 3732,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3662,
											"end": 3732,
											"name": "tag",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 3662,
											"end": 3732,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3774,
											"end": 3779,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3780,
											"end": 3790,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3774,
											"end": 3798,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 3774,
											"end": 3798,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3774,
											"end": 3798,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3747,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "159"
										},
										{
											"begin": 3760,
											"end": 3770,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3747,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "119"
										},
										{
											"begin": 3747,
											"end": 3771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3747,
											"end": 3771,
											"name": "tag",
											"source": 17,
											"value": "159"
										},
										{
											"begin": 3747,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3747,
											"end": 3798,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3739,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 3739,
											"end": 3836,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3739,
											"end": 3836,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3739,
											"end": 3836,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3739,
											"end": 3836,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3739,
											"end": 3836,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3739,
											"end": 3836,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3739,
											"end": 3836,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3739,
											"end": 3836,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3739,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 3739,
											"end": 3836,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3739,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "162"
										},
										{
											"begin": 3739,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3739,
											"end": 3836,
											"name": "tag",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 3739,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3739,
											"end": 3836,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3739,
											"end": 3836,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3739,
											"end": 3836,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3739,
											"end": 3836,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3739,
											"end": 3836,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3739,
											"end": 3836,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3739,
											"end": 3836,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3739,
											"end": 3836,
											"name": "tag",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 3739,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3879,
											"end": 3894,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3868,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3857,
											"end": 3867,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 3868,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3851,
											"end": 3868,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 3868,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3851,
											"end": 3868,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 3868,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 3868,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 3868,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3851,
											"end": 3868,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 3868,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 3868,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 3868,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 3868,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3851,
											"end": 3868,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 3868,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3868,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 3876,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 3851,
											"end": 3876,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 3894,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 3894,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 3894,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 3894,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3927,
											"end": 3928,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3906,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3907,
											"end": 3917,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3901,
											"end": 3924,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3901,
											"end": 3924,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3901,
											"end": 3928,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3901,
											"end": 3928,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3901,
											"end": 3928,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 3901,
											"end": 3928,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3962,
											"end": 3963,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 3935,
											"end": 3940,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3941,
											"end": 3951,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3935,
											"end": 3959,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 3935,
											"end": 3959,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3935,
											"end": 3963,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3935,
											"end": 3963,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3935,
											"end": 3963,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 3935,
											"end": 3963,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3987,
											"end": 3997,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3975,
											"end": 3998,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 3998,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3975,
											"end": 3998,
											"name": "PUSH",
											"source": 17,
											"value": "A806CF17BE1FB3CFF26C4A6A46B735DDBF2AC07C138BDEDB6D2ACE798A2CFD40"
										},
										{
											"begin": 3975,
											"end": 3998,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 3998,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3975,
											"end": 3998,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 3998,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3975,
											"end": 3998,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3975,
											"end": 3998,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3975,
											"end": 3998,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3975,
											"end": 3998,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3975,
											"end": 3998,
											"name": "LOG2",
											"source": 17
										},
										{
											"begin": 4007,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "163"
										},
										{
											"begin": 4021,
											"end": 4031,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 4007,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "164"
										},
										{
											"begin": 4007,
											"end": 4032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4007,
											"end": 4032,
											"name": "tag",
											"source": 17,
											"value": "163"
										},
										{
											"begin": 4007,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3559,
											"end": 4038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "tag",
											"source": 17,
											"value": "98"
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "PUSH",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1699,
											"end": 1719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "tag",
											"source": 17,
											"value": "103"
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2704,
											"end": 2705,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 2682,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2677,
											"end": 2694,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2683,
											"end": 2693,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2677,
											"end": 2694,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2677,
											"end": 2694,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2677,
											"end": 2694,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2677,
											"end": 2694,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2677,
											"end": 2694,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2677,
											"end": 2694,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2677,
											"end": 2694,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2677,
											"end": 2694,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2677,
											"end": 2694,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2677,
											"end": 2694,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2677,
											"end": 2694,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2677,
											"end": 2694,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2677,
											"end": 2694,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2677,
											"end": 2694,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 2694,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2677,
											"end": 2700,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 2700,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2677,
											"end": 2700,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2677,
											"end": 2705,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 2669,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "166"
										},
										{
											"begin": 2669,
											"end": 2723,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2669,
											"end": 2723,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2669,
											"end": 2723,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2669,
											"end": 2723,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2669,
											"end": 2723,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2669,
											"end": 2723,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2669,
											"end": 2723,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2669,
											"end": 2723,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2669,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "167"
										},
										{
											"begin": 2669,
											"end": 2723,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2669,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "124"
										},
										{
											"begin": 2669,
											"end": 2723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2669,
											"end": 2723,
											"name": "tag",
											"source": 17,
											"value": "167"
										},
										{
											"begin": 2669,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2669,
											"end": 2723,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2669,
											"end": 2723,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2669,
											"end": 2723,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2669,
											"end": 2723,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2669,
											"end": 2723,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2669,
											"end": 2723,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2669,
											"end": 2723,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2669,
											"end": 2723,
											"name": "tag",
											"source": 17,
											"value": "166"
										},
										{
											"begin": 2669,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2750,
											"end": 2751,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2738,
											"end": 2747,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2738,
											"end": 2751,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 2730,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "168"
										},
										{
											"begin": 2730,
											"end": 2788,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2730,
											"end": 2788,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2730,
											"end": 2788,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2730,
											"end": 2788,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2730,
											"end": 2788,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2730,
											"end": 2788,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2730,
											"end": 2788,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2730,
											"end": 2788,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2730,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "169"
										},
										{
											"begin": 2730,
											"end": 2788,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2730,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "127"
										},
										{
											"begin": 2730,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2730,
											"end": 2788,
											"name": "tag",
											"source": 17,
											"value": "169"
										},
										{
											"begin": 2730,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2730,
											"end": 2788,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2730,
											"end": 2788,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2730,
											"end": 2788,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2730,
											"end": 2788,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2730,
											"end": 2788,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2730,
											"end": 2788,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2730,
											"end": 2788,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2730,
											"end": 2788,
											"name": "tag",
											"source": 17,
											"value": "168"
										},
										{
											"begin": 2730,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2812,
											"end": 2813,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2809,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2803,
											"end": 2813,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "170"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "171"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "130"
										},
										{
											"begin": 2795,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "tag",
											"source": 17,
											"value": "171"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "tag",
											"source": 17,
											"value": "170"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2871,
											"end": 2881,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2861,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 2856,
											"end": 2868,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2862,
											"end": 2867,
											"name": "PUSH",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 2862,
											"end": 2867,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2868,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2868,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2868,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2856,
											"end": 2868,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2868,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2868,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2868,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2868,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2856,
											"end": 2868,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2868,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2868,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2868,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2881,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 2856,
											"end": 2881,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2881,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2881,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2881,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2881,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2856,
											"end": 2881,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2881,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2881,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2881,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2881,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2881,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2856,
											"end": 2881,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2881,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2881,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2881,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2881,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2881,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "PUSH",
											"source": 17,
											"value": "C0"
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2935,
											"end": 2940,
											"name": "PUSH",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 2935,
											"end": 2940,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2935,
											"end": 2942,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2935,
											"end": 2942,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2935,
											"end": 2942,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2935,
											"end": 2942,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2935,
											"end": 2942,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2935,
											"end": 2942,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2935,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "172"
										},
										{
											"begin": 2935,
											"end": 2942,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2935,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "173"
										},
										{
											"begin": 2935,
											"end": 2942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2935,
											"end": 2942,
											"name": "tag",
											"source": 17,
											"value": "172"
										},
										{
											"begin": 2935,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2935,
											"end": 2942,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2935,
											"end": 2942,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2935,
											"end": 2942,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2935,
											"end": 2942,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2962,
											"end": 2971,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2988,
											"end": 2994,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3012,
											"end": 3027,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3043,
											"end": 3044,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3061,
											"end": 3062,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2914,
											"end": 3070,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 2899,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2911,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2900,
											"end": 2910,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 2911,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2894,
											"end": 2911,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 2911,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2894,
											"end": 2911,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 2911,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 2911,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 2911,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2894,
											"end": 2911,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 2911,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 2911,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 2911,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 2911,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2894,
											"end": 2911,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 2911,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2911,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3070,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3094,
											"end": 3104,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3082,
											"end": 3124,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3082,
											"end": 3124,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3082,
											"end": 3124,
											"name": "PUSH",
											"source": 17,
											"value": "89D3F1CDFAD4E5C26535AC23DC61CF9E975667801747518F01B1B653545D736A"
										},
										{
											"begin": 3106,
											"end": 3115,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3117,
											"end": 3123,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3082,
											"end": 3124,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3082,
											"end": 3124,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3082,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "174"
										},
										{
											"begin": 3082,
											"end": 3124,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3082,
											"end": 3124,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3082,
											"end": 3124,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3082,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "132"
										},
										{
											"begin": 3082,
											"end": 3124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3082,
											"end": 3124,
											"name": "tag",
											"source": 17,
											"value": "174"
										},
										{
											"begin": 3082,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3082,
											"end": 3124,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3082,
											"end": 3124,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3082,
											"end": 3124,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3082,
											"end": 3124,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3082,
											"end": 3124,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3082,
											"end": 3124,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3082,
											"end": 3124,
											"name": "LOG2",
											"source": 17
										},
										{
											"begin": 3134,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "175"
										},
										{
											"begin": 3134,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "95"
										},
										{
											"begin": 3134,
											"end": 3145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3134,
											"end": 3145,
											"name": "tag",
											"source": 17,
											"value": "175"
										},
										{
											"begin": 3134,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2600,
											"end": 3151,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2600,
											"end": 3151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "tag",
											"source": 17,
											"value": "107"
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4670,
											"end": 4671,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 4648,
											"end": 4653,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4659,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4654,
											"end": 4658,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4648,
											"end": 4659,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4648,
											"end": 4659,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4648,
											"end": 4659,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4648,
											"end": 4659,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4648,
											"end": 4659,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4648,
											"end": 4659,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4648,
											"end": 4659,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4648,
											"end": 4659,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4648,
											"end": 4659,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4648,
											"end": 4659,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4648,
											"end": 4659,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4648,
											"end": 4659,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4648,
											"end": 4659,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4648,
											"end": 4659,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4659,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4648,
											"end": 4666,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 4648,
											"end": 4666,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4648,
											"end": 4666,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4648,
											"end": 4671,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 4640,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "177"
										},
										{
											"begin": 4640,
											"end": 4694,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4640,
											"end": 4694,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4640,
											"end": 4694,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4640,
											"end": 4694,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4640,
											"end": 4694,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4640,
											"end": 4694,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4640,
											"end": 4694,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4640,
											"end": 4694,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4640,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "178"
										},
										{
											"begin": 4640,
											"end": 4694,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4640,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "179"
										},
										{
											"begin": 4640,
											"end": 4694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4640,
											"end": 4694,
											"name": "tag",
											"source": 17,
											"value": "178"
										},
										{
											"begin": 4640,
											"end": 4694,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4640,
											"end": 4694,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4640,
											"end": 4694,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4640,
											"end": 4694,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4640,
											"end": 4694,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4640,
											"end": 4694,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4640,
											"end": 4694,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4640,
											"end": 4694,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4640,
											"end": 4694,
											"name": "tag",
											"source": 17,
											"value": "177"
										},
										{
											"begin": 4640,
											"end": 4694,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4730,
											"end": 4735,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4730,
											"end": 4741,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4736,
											"end": 4740,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4730,
											"end": 4741,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4730,
											"end": 4741,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4730,
											"end": 4741,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4730,
											"end": 4741,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4730,
											"end": 4741,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4730,
											"end": 4741,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4730,
											"end": 4741,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4730,
											"end": 4741,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4730,
											"end": 4741,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4730,
											"end": 4741,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4730,
											"end": 4741,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4730,
											"end": 4741,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4730,
											"end": 4741,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4730,
											"end": 4741,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4730,
											"end": 4741,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4730,
											"end": 4748,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 4730,
											"end": 4748,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4730,
											"end": 4748,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4709,
											"end": 4727,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "180"
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4709,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "119"
										},
										{
											"begin": 4709,
											"end": 4727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4709,
											"end": 4727,
											"name": "tag",
											"source": 17,
											"value": "180"
										},
										{
											"begin": 4709,
											"end": 4727,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4709,
											"end": 4748,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 4701,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 4701,
											"end": 4794,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4701,
											"end": 4794,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4701,
											"end": 4794,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4701,
											"end": 4794,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4701,
											"end": 4794,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4701,
											"end": 4794,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4701,
											"end": 4794,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4701,
											"end": 4794,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4701,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "182"
										},
										{
											"begin": 4701,
											"end": 4794,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4701,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "183"
										},
										{
											"begin": 4701,
											"end": 4794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4701,
											"end": 4794,
											"name": "tag",
											"source": 17,
											"value": "182"
										},
										{
											"begin": 4701,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4701,
											"end": 4794,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4701,
											"end": 4794,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4701,
											"end": 4794,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4701,
											"end": 4794,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4701,
											"end": 4794,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4701,
											"end": 4794,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4701,
											"end": 4794,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4701,
											"end": 4794,
											"name": "tag",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 4701,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4829,
											"end": 4844,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 4829,
											"end": 4850,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4845,
											"end": 4849,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4829,
											"end": 4850,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4829,
											"end": 4850,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4829,
											"end": 4850,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4829,
											"end": 4850,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4829,
											"end": 4850,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4829,
											"end": 4850,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4829,
											"end": 4850,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4829,
											"end": 4850,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4829,
											"end": 4850,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4829,
											"end": 4850,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4829,
											"end": 4850,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4829,
											"end": 4850,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4829,
											"end": 4850,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4829,
											"end": 4850,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4829,
											"end": 4850,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4829,
											"end": 4850,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4809,
											"end": 4824,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 4809,
											"end": 4850,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4809,
											"end": 4850,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "184"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "185"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "186"
										},
										{
											"begin": 4801,
											"end": 4894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "tag",
											"source": 17,
											"value": "185"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "tag",
											"source": 17,
											"value": "184"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4903,
											"end": 4917,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4920,
											"end": 4925,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4920,
											"end": 4931,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4926,
											"end": 4930,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4920,
											"end": 4931,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4920,
											"end": 4931,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4920,
											"end": 4931,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4920,
											"end": 4931,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4920,
											"end": 4931,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4920,
											"end": 4931,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4920,
											"end": 4931,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4920,
											"end": 4931,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4920,
											"end": 4931,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4920,
											"end": 4931,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4920,
											"end": 4931,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4920,
											"end": 4931,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4920,
											"end": 4931,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4920,
											"end": 4931,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4920,
											"end": 4931,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4920,
											"end": 4938,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 4920,
											"end": 4938,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4920,
											"end": 4938,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4903,
											"end": 4938,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4903,
											"end": 4938,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4950,
											"end": 4965,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4997,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4975,
											"end": 4997,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4997,
											"name": "PUSH",
											"source": 17,
											"value": "FEAF968C"
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "188"
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "tag",
											"source": 17,
											"value": "188"
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "189"
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "190"
										},
										{
											"begin": 4975,
											"end": 4999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "tag",
											"source": 17,
											"value": "189"
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4947,
											"end": 4999,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4947,
											"end": 4999,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4947,
											"end": 4999,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4947,
											"end": 4999,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4947,
											"end": 4999,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4947,
											"end": 4999,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5067,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5052,
											"end": 5067,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5067,
											"name": "PUSH",
											"source": 17,
											"value": "313CE567"
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "192"
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "tag",
											"source": 17,
											"value": "192"
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "193"
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 5052,
											"end": 5069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "tag",
											"source": 17,
											"value": "193"
										},
										{
											"begin": 5052,
											"end": 5069,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5025,
											"end": 5069,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 5025,
											"end": 5069,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5025,
											"end": 5069,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5025,
											"end": 5069,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5078,
											"end": 5095,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5149,
											"end": 5165,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5144,
											"end": 5146,
											"name": "PUSH",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 5144,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "195"
										},
										{
											"begin": 5144,
											"end": 5165,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5144,
											"end": 5165,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5144,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "145"
										},
										{
											"begin": 5144,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5144,
											"end": 5165,
											"name": "tag",
											"source": 17,
											"value": "195"
										},
										{
											"begin": 5144,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5137,
											"end": 5139,
											"name": "PUSH",
											"source": 17,
											"value": "A"
										},
										{
											"begin": 5137,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "196"
										},
										{
											"begin": 5137,
											"end": 5166,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5137,
											"end": 5166,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5137,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "197"
										},
										{
											"begin": 5137,
											"end": 5166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5137,
											"end": 5166,
											"name": "tag",
											"source": 17,
											"value": "196"
										},
										{
											"begin": 5137,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5124,
											"end": 5132,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5108,
											"end": 5112,
											"name": "PUSH",
											"source": 17,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5099,
											"end": 5105,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5099,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "198"
										},
										{
											"begin": 5099,
											"end": 5112,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5099,
											"end": 5112,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5099,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "199"
										},
										{
											"begin": 5099,
											"end": 5112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5099,
											"end": 5112,
											"name": "tag",
											"source": 17,
											"value": "198"
										},
										{
											"begin": 5099,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5098,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "200"
										},
										{
											"begin": 5098,
											"end": 5133,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5098,
											"end": 5133,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5098,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "201"
										},
										{
											"begin": 5098,
											"end": 5133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5098,
											"end": 5133,
											"name": "tag",
											"source": 17,
											"value": "200"
										},
										{
											"begin": 5098,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5098,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "202"
										},
										{
											"begin": 5098,
											"end": 5166,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5098,
											"end": 5166,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5098,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "201"
										},
										{
											"begin": 5098,
											"end": 5166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5098,
											"end": 5166,
											"name": "tag",
											"source": 17,
											"value": "202"
										},
										{
											"begin": 5098,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5078,
											"end": 5166,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5078,
											"end": 5166,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5191,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5212,
											"end": 5216,
											"name": "PUSH",
											"source": 17,
											"value": "3E8"
										},
										{
											"begin": 5207,
											"end": 5208,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 5195,
											"end": 5204,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5195,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "203"
										},
										{
											"begin": 5195,
											"end": 5208,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5195,
											"end": 5208,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5195,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "199"
										},
										{
											"begin": 5195,
											"end": 5208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5195,
											"end": 5208,
											"name": "tag",
											"source": 17,
											"value": "203"
										},
										{
											"begin": 5195,
											"end": 5208,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5194,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "204"
										},
										{
											"begin": 5194,
											"end": 5216,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5194,
											"end": 5216,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5194,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "201"
										},
										{
											"begin": 5194,
											"end": 5216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5194,
											"end": 5216,
											"name": "tag",
											"source": 17,
											"value": "204"
										},
										{
											"begin": 5194,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5216,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5216,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5225,
											"end": 5245,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5260,
											"end": 5268,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5248,
											"end": 5257,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5248,
											"end": 5268,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "205"
										},
										{
											"begin": 5248,
											"end": 5268,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5248,
											"end": 5268,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5248,
											"end": 5268,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "145"
										},
										{
											"begin": 5248,
											"end": 5268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5248,
											"end": 5268,
											"name": "tag",
											"source": 17,
											"value": "205"
										},
										{
											"begin": 5248,
											"end": 5268,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5225,
											"end": 5268,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5225,
											"end": 5268,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5335,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "206"
										},
										{
											"begin": 5362,
											"end": 5366,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5362,
											"end": 5366,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5362,
											"end": 5366,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5362,
											"end": 5366,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5362,
											"end": 5366,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5362,
											"end": 5366,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 5362,
											"end": 5366,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 5362,
											"end": 5366,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5362,
											"end": 5366,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 5362,
											"end": 5366,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5362,
											"end": 5366,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5368,
											"end": 5372,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 5382,
											"end": 5386,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 5389,
											"end": 5395,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 5335,
											"end": 5361,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "207"
										},
										{
											"begin": 5335,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5335,
											"end": 5396,
											"name": "tag",
											"source": 17,
											"value": "206"
										},
										{
											"begin": 5335,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5452,
											"end": 5521,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "208"
										},
										{
											"begin": 5484,
											"end": 5488,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5484,
											"end": 5488,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5488,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5488,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5488,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5488,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 5484,
											"end": 5488,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5488,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5488,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5488,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5484,
											"end": 5488,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5498,
											"end": 5511,
											"name": "PUSH",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 5498,
											"end": 5511,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5511,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5498,
											"end": 5511,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5498,
											"end": 5511,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5498,
											"end": 5511,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 5498,
											"end": 5511,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 5498,
											"end": 5511,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5498,
											"end": 5511,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 5498,
											"end": 5511,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5498,
											"end": 5511,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5514,
											"end": 5520,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 5452,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "209"
										},
										{
											"begin": 5452,
											"end": 5521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5452,
											"end": 5521,
											"name": "tag",
											"source": 17,
											"value": "208"
										},
										{
											"begin": 5452,
											"end": 5521,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5557,
											"end": 5578,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5595,
											"end": 5596,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "210"
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "211"
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "212"
										},
										{
											"begin": 5581,
											"end": 5597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "tag",
											"source": 17,
											"value": "211"
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "tag",
											"source": 17,
											"value": "210"
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "213"
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "CALLDATACOPY",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "tag",
											"source": 17,
											"value": "213"
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5557,
											"end": 5597,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5557,
											"end": 5597,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5622,
											"end": 5626,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5622,
											"end": 5626,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5622,
											"end": 5626,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5622,
											"end": 5626,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5622,
											"end": 5626,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5622,
											"end": 5626,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 5622,
											"end": 5626,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 5622,
											"end": 5626,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5622,
											"end": 5626,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 5622,
											"end": 5626,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5622,
											"end": 5626,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5604,
											"end": 5608,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5609,
											"end": 5610,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5604,
											"end": 5611,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5604,
											"end": 5611,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5604,
											"end": 5611,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5604,
											"end": 5611,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 5604,
											"end": 5611,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "214"
										},
										{
											"begin": 5604,
											"end": 5611,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5604,
											"end": 5611,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "215"
										},
										{
											"begin": 5604,
											"end": 5611,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "216"
										},
										{
											"begin": 5604,
											"end": 5611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5604,
											"end": 5611,
											"name": "tag",
											"source": 17,
											"value": "215"
										},
										{
											"begin": 5604,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5604,
											"end": 5611,
											"name": "tag",
											"source": 17,
											"value": "214"
										},
										{
											"begin": 5604,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5604,
											"end": 5611,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5604,
											"end": 5611,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 5604,
											"end": 5611,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5604,
											"end": 5611,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5604,
											"end": 5611,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5604,
											"end": 5627,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5604,
											"end": 5627,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5604,
											"end": 5627,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5604,
											"end": 5627,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5604,
											"end": 5627,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5604,
											"end": 5627,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5604,
											"end": 5627,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5604,
											"end": 5627,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5604,
											"end": 5627,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5604,
											"end": 5627,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5604,
											"end": 5627,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "PUSH",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5676,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5658,
											"end": 5676,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5676,
											"name": "PUSH",
											"source": 17,
											"value": "AD5C4648"
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "218"
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "tag",
											"source": 17,
											"value": "218"
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "219"
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "220"
										},
										{
											"begin": 5658,
											"end": 5678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "tag",
											"source": 17,
											"value": "219"
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5648,
											"end": 5652,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5653,
											"end": 5654,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "221"
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "222"
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "216"
										},
										{
											"begin": 5648,
											"end": 5655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "tag",
											"source": 17,
											"value": "222"
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "tag",
											"source": 17,
											"value": "221"
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5648,
											"end": 5678,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5648,
											"end": 5678,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5648,
											"end": 5678,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5648,
											"end": 5678,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5648,
											"end": 5678,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5648,
											"end": 5678,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5648,
											"end": 5678,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5648,
											"end": 5678,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5648,
											"end": 5678,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5648,
											"end": 5678,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5648,
											"end": 5678,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5737,
											"end": 5758,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5775,
											"name": "PUSH",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 5762,
											"end": 5775,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5775,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5775,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5775,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5775,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 5762,
											"end": 5775,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5775,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5775,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5775,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5762,
											"end": 5775,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5797,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5762,
											"end": 5797,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5797,
											"name": "PUSH",
											"source": 17,
											"value": "18CBAFE5"
										},
										{
											"begin": 5798,
											"end": 5804,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 5806,
											"end": 5818,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5820,
											"end": 5824,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5834,
											"end": 5838,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 5859,
											"end": 5866,
											"name": "PUSH",
											"source": 17,
											"value": "E10"
										},
										{
											"begin": 5841,
											"end": 5856,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 5841,
											"end": 5866,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "223"
										},
										{
											"begin": 5841,
											"end": 5866,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5841,
											"end": 5866,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5841,
											"end": 5866,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "149"
										},
										{
											"begin": 5841,
											"end": 5866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5841,
											"end": 5866,
											"name": "tag",
											"source": 17,
											"value": "223"
										},
										{
											"begin": 5841,
											"end": 5866,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "224"
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "225"
										},
										{
											"begin": 5762,
											"end": 5867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "tag",
											"source": 17,
											"value": "224"
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "227"
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "tag",
											"source": 17,
											"value": "227"
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "228"
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "229"
										},
										{
											"begin": 5762,
											"end": 5867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "tag",
											"source": 17,
											"value": "228"
										},
										{
											"begin": 5762,
											"end": 5867,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5736,
											"end": 5867,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5736,
											"end": 5867,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5876,
											"end": 5895,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5898,
											"end": 5905,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5906,
											"end": 5907,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 5898,
											"end": 5908,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5898,
											"end": 5908,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5898,
											"end": 5908,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5898,
											"end": 5908,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 5898,
											"end": 5908,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "230"
										},
										{
											"begin": 5898,
											"end": 5908,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5898,
											"end": 5908,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "231"
										},
										{
											"begin": 5898,
											"end": 5908,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "216"
										},
										{
											"begin": 5898,
											"end": 5908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5898,
											"end": 5908,
											"name": "tag",
											"source": 17,
											"value": "231"
										},
										{
											"begin": 5898,
											"end": 5908,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5898,
											"end": 5908,
											"name": "tag",
											"source": 17,
											"value": "230"
										},
										{
											"begin": 5898,
											"end": 5908,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5898,
											"end": 5908,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5898,
											"end": 5908,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 5898,
											"end": 5908,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5898,
											"end": 5908,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5898,
											"end": 5908,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5898,
											"end": 5908,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5876,
											"end": 5908,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5876,
											"end": 5908,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5954,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5949,
											"end": 5960,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5955,
											"end": 5959,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5960,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5949,
											"end": 5960,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5960,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5949,
											"end": 5960,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5960,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5960,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5960,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5949,
											"end": 5960,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5960,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5960,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5960,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5960,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5949,
											"end": 5960,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5960,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5949,
											"end": 5960,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5966,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5949,
											"end": 5966,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5966,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5949,
											"end": 5968,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5968,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5968,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5968,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5968,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5968,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "232"
										},
										{
											"begin": 5949,
											"end": 5968,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "173"
										},
										{
											"begin": 5949,
											"end": 5968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5968,
											"name": "tag",
											"source": 17,
											"value": "232"
										},
										{
											"begin": 5949,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5968,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5968,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5968,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5968,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5968,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5996,
											"end": 6000,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 5982,
											"end": 6022,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5982,
											"end": 6022,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5982,
											"end": 6022,
											"name": "PUSH",
											"source": 17,
											"value": "1A3ABF7E0A472651EBE2C79A31A5F4660C7EA65E3086EE1742D7502999BBF5B5"
										},
										{
											"begin": 6002,
											"end": 6008,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 6010,
											"end": 6021,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5982,
											"end": 6022,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5982,
											"end": 6022,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5982,
											"end": 6022,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "233"
										},
										{
											"begin": 5982,
											"end": 6022,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5982,
											"end": 6022,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5982,
											"end": 6022,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5982,
											"end": 6022,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "132"
										},
										{
											"begin": 5982,
											"end": 6022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5982,
											"end": 6022,
											"name": "tag",
											"source": 17,
											"value": "233"
										},
										{
											"begin": 5982,
											"end": 6022,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5982,
											"end": 6022,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5982,
											"end": 6022,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5982,
											"end": 6022,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5982,
											"end": 6022,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5982,
											"end": 6022,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5982,
											"end": 6022,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5982,
											"end": 6022,
											"name": "LOG2",
											"source": 17
										},
										{
											"begin": 6071,
											"end": 6075,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6085,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6063,
											"end": 6085,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "PUSH",
											"source": 17,
											"value": "8FC"
										},
										{
											"begin": 6086,
											"end": 6097,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "235"
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "tag",
											"source": 17,
											"value": "235"
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6098,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6152,
											"end": 6171,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "236"
										},
										{
											"begin": 6166,
											"end": 6170,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 6152,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "164"
										},
										{
											"begin": 6152,
											"end": 6171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6152,
											"end": 6171,
											"name": "tag",
											"source": 17,
											"value": "236"
										},
										{
											"begin": 6152,
											"end": 6171,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4633,
											"end": 6177,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4633,
											"end": 6177,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4633,
											"end": 6177,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4633,
											"end": 6177,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4633,
											"end": 6177,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4633,
											"end": 6177,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4633,
											"end": 6177,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4633,
											"end": 6177,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4633,
											"end": 6177,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 6177,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 6177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "tag",
											"source": 17,
											"value": "111"
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4044,
											"end": 4212,
											"name": "tag",
											"source": 17,
											"value": "115"
										},
										{
											"begin": 4044,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4112,
											"end": 4113,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4086,
											"end": 4091,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4086,
											"end": 4103,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4102,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 4086,
											"end": 4103,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4086,
											"end": 4103,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4086,
											"end": 4103,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4086,
											"end": 4103,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4086,
											"end": 4103,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4086,
											"end": 4103,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4086,
											"end": 4103,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4086,
											"end": 4103,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4086,
											"end": 4103,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4086,
											"end": 4103,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4086,
											"end": 4103,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4086,
											"end": 4103,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4086,
											"end": 4103,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4086,
											"end": 4103,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4086,
											"end": 4103,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4086,
											"end": 4109,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4086,
											"end": 4109,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4086,
											"end": 4109,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4086,
											"end": 4113,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 4078,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "238"
										},
										{
											"begin": 4078,
											"end": 4135,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4078,
											"end": 4135,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4078,
											"end": 4135,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4078,
											"end": 4135,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4078,
											"end": 4135,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4078,
											"end": 4135,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4078,
											"end": 4135,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4078,
											"end": 4135,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4078,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "239"
										},
										{
											"begin": 4078,
											"end": 4135,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4078,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "156"
										},
										{
											"begin": 4078,
											"end": 4135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4078,
											"end": 4135,
											"name": "tag",
											"source": 17,
											"value": "239"
										},
										{
											"begin": 4078,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4078,
											"end": 4135,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4078,
											"end": 4135,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4078,
											"end": 4135,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4078,
											"end": 4135,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4078,
											"end": 4135,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4078,
											"end": 4135,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4078,
											"end": 4135,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4078,
											"end": 4135,
											"name": "tag",
											"source": 17,
											"value": "238"
										},
										{
											"begin": 4078,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4171,
											"end": 4172,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4144,
											"end": 4149,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4144,
											"end": 4161,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4150,
											"end": 4160,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 4144,
											"end": 4161,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4144,
											"end": 4161,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4144,
											"end": 4161,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4144,
											"end": 4161,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4144,
											"end": 4161,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4144,
											"end": 4161,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4144,
											"end": 4161,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4144,
											"end": 4161,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4144,
											"end": 4161,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4144,
											"end": 4161,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4144,
											"end": 4161,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4144,
											"end": 4161,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4144,
											"end": 4161,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4144,
											"end": 4161,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4144,
											"end": 4161,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4144,
											"end": 4168,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 4144,
											"end": 4168,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4144,
											"end": 4172,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4144,
											"end": 4172,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4144,
											"end": 4172,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4144,
											"end": 4172,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4205,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 4184,
											"end": 4206,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4184,
											"end": 4206,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4184,
											"end": 4206,
											"name": "PUSH",
											"source": 17,
											"value": "F222ABD4EE7AFB02F9450183B95D07AAAB2EA2F2D6748F55525C7E875FDD58A1"
										},
										{
											"begin": 4184,
											"end": 4206,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4184,
											"end": 4206,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4184,
											"end": 4206,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4184,
											"end": 4206,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4184,
											"end": 4206,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4184,
											"end": 4206,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4184,
											"end": 4206,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4184,
											"end": 4206,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4184,
											"end": 4206,
											"name": "LOG2",
											"source": 17
										},
										{
											"begin": 4044,
											"end": 4212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "tag",
											"source": 17,
											"value": "119"
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2530,
											"end": 2537,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2567,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2553,
											"end": 2567,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2567,
											"name": "PUSH",
											"source": 17,
											"value": "DD62ED3E"
										},
										{
											"begin": 2568,
											"end": 2572,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2582,
											"end": 2586,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "241"
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "136"
										},
										{
											"begin": 2553,
											"end": 2588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "tag",
											"source": 17,
											"value": "241"
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "243"
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "tag",
											"source": 17,
											"value": "243"
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "244"
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "245"
										},
										{
											"begin": 2553,
											"end": 2588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "tag",
											"source": 17,
											"value": "244"
										},
										{
											"begin": 2553,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2546,
											"end": 2588,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2546,
											"end": 2588,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2473,
											"end": 2594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6241,
											"end": 6539,
											"name": "tag",
											"source": 17,
											"value": "138"
										},
										{
											"begin": 6241,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6347,
											"end": 6359,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6362,
											"end": 6381,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6382,
											"end": 6392,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6347,
											"end": 6393,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6347,
											"end": 6393,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6511,
											"end": 6516,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6511,
											"end": 6522,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6517,
											"end": 6521,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6511,
											"end": 6522,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6511,
											"end": 6522,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6511,
											"end": 6522,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6511,
											"end": 6522,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6511,
											"end": 6522,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6511,
											"end": 6522,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6511,
											"end": 6522,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6511,
											"end": 6522,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6511,
											"end": 6522,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6511,
											"end": 6522,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6511,
											"end": 6522,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6511,
											"end": 6522,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6511,
											"end": 6522,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6511,
											"end": 6522,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6511,
											"end": 6522,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6511,
											"end": 6532,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 6511,
											"end": 6532,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6511,
											"end": 6532,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6493,
											"end": 6505,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6506,
											"end": 6507,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6493,
											"end": 6508,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6493,
											"end": 6508,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6493,
											"end": 6508,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6493,
											"end": 6508,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 6493,
											"end": 6508,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "247"
										},
										{
											"begin": 6493,
											"end": 6508,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6493,
											"end": 6508,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "248"
										},
										{
											"begin": 6493,
											"end": 6508,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "216"
										},
										{
											"begin": 6493,
											"end": 6508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6493,
											"end": 6508,
											"name": "tag",
											"source": 17,
											"value": "248"
										},
										{
											"begin": 6493,
											"end": 6508,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6493,
											"end": 6508,
											"name": "tag",
											"source": 17,
											"value": "247"
										},
										{
											"begin": 6493,
											"end": 6508,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6493,
											"end": 6508,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6493,
											"end": 6508,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 6493,
											"end": 6508,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6493,
											"end": 6508,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6493,
											"end": 6508,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6493,
											"end": 6508,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6493,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "249"
										},
										{
											"begin": 6493,
											"end": 6532,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6493,
											"end": 6532,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6493,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "147"
										},
										{
											"begin": 6493,
											"end": 6532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6493,
											"end": 6532,
											"name": "tag",
											"source": 17,
											"value": "249"
										},
										{
											"begin": 6493,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6468,
											"end": 6473,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6468,
											"end": 6479,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6474,
											"end": 6478,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6468,
											"end": 6479,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6468,
											"end": 6479,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6468,
											"end": 6479,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6468,
											"end": 6479,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6468,
											"end": 6479,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6468,
											"end": 6479,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6468,
											"end": 6479,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6468,
											"end": 6479,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6468,
											"end": 6479,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6468,
											"end": 6479,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6468,
											"end": 6479,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6468,
											"end": 6479,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6468,
											"end": 6479,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6468,
											"end": 6479,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6468,
											"end": 6479,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6468,
											"end": 6489,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 6468,
											"end": 6489,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6468,
											"end": 6489,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6448,
											"end": 6453,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6448,
											"end": 6459,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6454,
											"end": 6458,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6448,
											"end": 6459,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6448,
											"end": 6459,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6448,
											"end": 6459,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6448,
											"end": 6459,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6448,
											"end": 6459,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6448,
											"end": 6459,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6448,
											"end": 6459,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6448,
											"end": 6459,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6448,
											"end": 6459,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6448,
											"end": 6459,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6448,
											"end": 6459,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6448,
											"end": 6459,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6448,
											"end": 6459,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6448,
											"end": 6459,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6448,
											"end": 6459,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6448,
											"end": 6465,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6448,
											"end": 6465,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6448,
											"end": 6465,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6448,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 6448,
											"end": 6489,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6448,
											"end": 6489,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6448,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "199"
										},
										{
											"begin": 6448,
											"end": 6489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6448,
											"end": 6489,
											"name": "tag",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 6448,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6426,
											"end": 6431,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6426,
											"end": 6437,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6432,
											"end": 6436,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6426,
											"end": 6437,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6426,
											"end": 6437,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6426,
											"end": 6437,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6426,
											"end": 6437,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6426,
											"end": 6437,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6426,
											"end": 6437,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6426,
											"end": 6437,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6426,
											"end": 6437,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6426,
											"end": 6437,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6426,
											"end": 6437,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6426,
											"end": 6437,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6426,
											"end": 6437,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6426,
											"end": 6437,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6426,
											"end": 6437,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6426,
											"end": 6437,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6426,
											"end": 6445,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 6426,
											"end": 6445,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6426,
											"end": 6445,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6426,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "251"
										},
										{
											"begin": 6426,
											"end": 6489,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6426,
											"end": 6489,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6426,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "149"
										},
										{
											"begin": 6426,
											"end": 6489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6426,
											"end": 6489,
											"name": "tag",
											"source": 17,
											"value": "251"
										},
										{
											"begin": 6426,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6426,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "252"
										},
										{
											"begin": 6426,
											"end": 6533,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6426,
											"end": 6533,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6426,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "149"
										},
										{
											"begin": 6426,
											"end": 6533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6426,
											"end": 6533,
											"name": "tag",
											"source": 17,
											"value": "252"
										},
										{
											"begin": 6426,
											"end": 6533,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6417,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6418,
											"end": 6422,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6402,
											"end": 6423,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6533,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6533,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6533,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6533,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6338,
											"end": 6539,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6241,
											"end": 6539,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6241,
											"end": 6539,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6241,
											"end": 6539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4218,
											"end": 4585,
											"name": "tag",
											"source": 17,
											"value": "164"
										},
										{
											"begin": 4218,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4391,
											"end": 4408,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4411,
											"end": 4422,
											"name": "PUSH",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 4411,
											"end": 4422,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4411,
											"end": 4422,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4422,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4422,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4422,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 4411,
											"end": 4422,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4422,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4422,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4422,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4411,
											"end": 4422,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4441,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4411,
											"end": 4441,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4441,
											"name": "PUSH",
											"source": 17,
											"value": "5D3B1D30"
										},
										{
											"begin": 4452,
											"end": 4459,
											"name": "PUSH",
											"source": 17,
											"value": "A"
										},
										{
											"begin": 4452,
											"end": 4459,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4470,
											"end": 4484,
											"name": "PUSH",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 4470,
											"end": 4484,
											"name": "PUSH",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 4470,
											"end": 4484,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4470,
											"end": 4484,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4470,
											"end": 4484,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4470,
											"end": 4484,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 4470,
											"end": 4484,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 4470,
											"end": 4484,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4470,
											"end": 4484,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 4470,
											"end": 4484,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4470,
											"end": 4484,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4495,
											"end": 4496,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 4507,
											"end": 4513,
											"name": "PUSH",
											"source": 17,
											"value": "55730"
										},
										{
											"begin": 4524,
											"end": 4525,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "254"
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "255"
										},
										{
											"begin": 4411,
											"end": 4535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "tag",
											"source": 17,
											"value": "254"
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "257"
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "tag",
											"source": 17,
											"value": "257"
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "245"
										},
										{
											"begin": 4411,
											"end": 4535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "tag",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 4411,
											"end": 4535,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4391,
											"end": 4535,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4391,
											"end": 4535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4575,
											"end": 4579,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4542,
											"end": 4561,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 4542,
											"end": 4572,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4571,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4542,
											"end": 4572,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4542,
											"end": 4572,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4542,
											"end": 4572,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4542,
											"end": 4572,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4542,
											"end": 4572,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4542,
											"end": 4572,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4542,
											"end": 4572,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4542,
											"end": 4572,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4542,
											"end": 4572,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4542,
											"end": 4572,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4542,
											"end": 4572,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4542,
											"end": 4572,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4542,
											"end": 4579,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 4542,
											"end": 4579,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 4542,
											"end": 4579,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4542,
											"end": 4579,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4542,
											"end": 4579,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4542,
											"end": 4579,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4542,
											"end": 4579,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 4542,
											"end": 4579,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 4542,
											"end": 4579,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4542,
											"end": 4579,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4542,
											"end": 4579,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4542,
											"end": 4579,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4542,
											"end": 4579,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4542,
											"end": 4579,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 4542,
											"end": 4579,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 4542,
											"end": 4579,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4542,
											"end": 4579,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4542,
											"end": 4579,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4263,
											"end": 4585,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4218,
											"end": 4585,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4218,
											"end": 4585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2306,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 2081,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2177,
											"end": 2197,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2215,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2200,
											"end": 2215,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2215,
											"name": "PUSH",
											"source": 12,
											"value": "DD62ED3E"
										},
										{
											"begin": 2224,
											"end": 2228,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 2231,
											"end": 2238,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 2200,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 2200,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2177,
											"end": 2239,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2177,
											"end": 2239,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2249,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 2262,
											"end": 2267,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2269,
											"end": 2276,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2293,
											"end": 2298,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 2278,
											"end": 2298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2249,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 2249,
											"end": 2299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2249,
											"end": 2299,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 2249,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2167,
											"end": 2306,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2306,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2306,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2306,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 12,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3296,
											"end": 3676,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 3296,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3431,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3426,
											"end": 3439,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3426,
											"end": 3439,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3426,
											"end": 3439,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 3442,
											"end": 3449,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3451,
											"end": 3456,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 3411,
											"end": 3458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3383,
											"end": 3458,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3383,
											"end": 3458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3474,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 3498,
											"end": 3503,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3505,
											"end": 3517,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3474,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 3474,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3474,
											"end": 3518,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 3474,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3469,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 3469,
											"end": 3670,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3534,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 3554,
											"end": 3559,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3576,
											"end": 3581,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3576,
											"end": 3589,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3576,
											"end": 3589,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3576,
											"end": 3589,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 3592,
											"end": 3599,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3601,
											"end": 3602,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 3561,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3534,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 3534,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3534,
											"end": 3605,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 3534,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3619,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 3639,
											"end": 3644,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3646,
											"end": 3658,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 3619,
											"end": 3659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3619,
											"end": 3659,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 3619,
											"end": 3659,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3469,
											"end": 3670,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 3469,
											"end": 3670,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3373,
											"end": 3676,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3296,
											"end": 3676,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3296,
											"end": 3676,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3296,
											"end": 3676,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3296,
											"end": 3676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5189,
											"end": 5767,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 5189,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5574,
											"end": 5586,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5588,
											"end": 5611,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5628,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5634,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5615,
											"end": 5634,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5635,
											"end": 5639,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 5615,
											"end": 5640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5573,
											"end": 5640,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5573,
											"end": 5640,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5573,
											"end": 5640,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5573,
											"end": 5640,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5657,
											"end": 5664,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5690,
											"end": 5691,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5669,
											"end": 5679,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5669,
											"end": 5686,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5669,
											"end": 5691,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5669,
											"end": 5725,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5669,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 5669,
											"end": 5725,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5669,
											"end": 5725,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5706,
											"end": 5716,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 5695,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5669,
											"end": 5725,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 5669,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5657,
											"end": 5760,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5657,
											"end": 5760,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5657,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 5657,
											"end": 5760,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5657,
											"end": 5760,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5759,
											"end": 5760,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5738,
											"end": 5743,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5730,
											"end": 5756,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5730,
											"end": 5756,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5730,
											"end": 5756,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 5730,
											"end": 5760,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5657,
											"end": 5760,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 5657,
											"end": 5760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5650,
											"end": 5760,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5650,
											"end": 5760,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5650,
											"end": 5760,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5650,
											"end": 5760,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5189,
											"end": 5767,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5189,
											"end": 5767,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5189,
											"end": 5767,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5189,
											"end": 5767,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5189,
											"end": 5767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 13
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 13,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 13,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 13,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 18,
											"value": "323"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 18,
											"value": "324"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 18,
											"value": "325"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 18,
											"value": "327"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "437"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 18,
											"value": "437"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "438"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 18,
											"value": "438"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 18,
											"value": "328"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "440"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "327"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 18,
											"value": "440"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "tag",
											"source": 18,
											"value": "30"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 758,
											"end": 764,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 815,
											"end": 817,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 812,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 794,
											"end": 801,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 786,
											"end": 818,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 783,
											"end": 902,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 783,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "442"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "443"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "324"
										},
										{
											"begin": 821,
											"end": 900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 821,
											"end": 900,
											"name": "tag",
											"source": 18,
											"value": "443"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 783,
											"end": 902,
											"name": "tag",
											"source": 18,
											"value": "442"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 941,
											"end": 942,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "444"
										},
										{
											"begin": 1011,
											"end": 1018,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1002,
											"end": 1008,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 991,
											"end": 1000,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 987,
											"end": 1009,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "328"
										},
										{
											"begin": 966,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "tag",
											"source": 18,
											"value": "444"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 912,
											"end": 1029,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "445"
										},
										{
											"begin": 1139,
											"end": 1146,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1119,
											"end": 1128,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "328"
										},
										{
											"begin": 1094,
											"end": 1147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "tag",
											"source": 18,
											"value": "445"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1039,
											"end": 1157,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 690,
											"end": 1164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1170,
											"end": 1296,
											"name": "tag",
											"source": 18,
											"value": "329"
										},
										{
											"begin": 1170,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1207,
											"end": 1214,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1289,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1240,
											"end": 1245,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1236,
											"end": 1290,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1290,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1290,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1170,
											"end": 1296,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1170,
											"end": 1296,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1170,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1170,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1362,
											"name": "tag",
											"source": 18,
											"value": "330"
										},
										{
											"begin": 1302,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1330,
											"end": 1333,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1362,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1362,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1362,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1368,
											"end": 1510,
											"name": "tag",
											"source": 18,
											"value": "331"
										},
										{
											"begin": 1368,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1418,
											"end": 1427,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1451,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "449"
										},
										{
											"begin": 1469,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "450"
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "451"
										},
										{
											"begin": 1496,
											"end": 1501,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "329"
										},
										{
											"begin": 1478,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "tag",
											"source": 18,
											"value": "451"
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1469,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "330"
										},
										{
											"begin": 1469,
											"end": 1503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1469,
											"end": 1503,
											"name": "tag",
											"source": 18,
											"value": "450"
										},
										{
											"begin": 1469,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1451,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "329"
										},
										{
											"begin": 1451,
											"end": 1504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1451,
											"end": 1504,
											"name": "tag",
											"source": 18,
											"value": "449"
										},
										{
											"begin": 1451,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1504,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1504,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1368,
											"end": 1510,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1368,
											"end": 1510,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1368,
											"end": 1510,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1368,
											"end": 1510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1516,
											"end": 1642,
											"name": "tag",
											"source": 18,
											"value": "332"
										},
										{
											"begin": 1516,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "453"
										},
										{
											"begin": 1630,
											"end": 1635,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1599,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "331"
										},
										{
											"begin": 1599,
											"end": 1636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1599,
											"end": 1636,
											"name": "tag",
											"source": 18,
											"value": "453"
										},
										{
											"begin": 1599,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1586,
											"end": 1636,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1586,
											"end": 1636,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1516,
											"end": 1642,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1516,
											"end": 1642,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1516,
											"end": 1642,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1516,
											"end": 1642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1648,
											"end": 1807,
											"name": "tag",
											"source": 18,
											"value": "333"
										},
										{
											"begin": 1648,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1731,
											"end": 1740,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1764,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "455"
										},
										{
											"begin": 1795,
											"end": 1800,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1764,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "332"
										},
										{
											"begin": 1764,
											"end": 1801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1764,
											"end": 1801,
											"name": "tag",
											"source": 18,
											"value": "455"
										},
										{
											"begin": 1764,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1751,
											"end": 1801,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1751,
											"end": 1801,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1648,
											"end": 1807,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1648,
											"end": 1807,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1648,
											"end": 1807,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1648,
											"end": 1807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 2010,
											"name": "tag",
											"source": 18,
											"value": "334"
										},
										{
											"begin": 1813,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1933,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "457"
										},
										{
											"begin": 1997,
											"end": 2002,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1933,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "333"
										},
										{
											"begin": 1933,
											"end": 2003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1933,
											"end": 2003,
											"name": "tag",
											"source": 18,
											"value": "457"
										},
										{
											"begin": 1933,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1928,
											"end": 1931,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1921,
											"end": 2004,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 2010,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 2010,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 2010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2016,
											"end": 2304,
											"name": "tag",
											"source": 18,
											"value": "36"
										},
										{
											"begin": 2016,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2182,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2178,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2165,
											"end": 2183,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2157,
											"end": 2183,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2157,
											"end": 2183,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2193,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "459"
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2283,
											"end": 2292,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2270,
											"end": 2276,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2193,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "334"
										},
										{
											"begin": 2193,
											"end": 2297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2193,
											"end": 2297,
											"name": "tag",
											"source": 18,
											"value": "459"
										},
										{
											"begin": 2193,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2016,
											"end": 2304,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2016,
											"end": 2304,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2016,
											"end": 2304,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2016,
											"end": 2304,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2016,
											"end": 2304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2310,
											"end": 2462,
											"name": "tag",
											"source": 18,
											"value": "335"
										},
										{
											"begin": 2310,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2386,
											"end": 2395,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "461"
										},
										{
											"begin": 2450,
											"end": 2455,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2419,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "332"
										},
										{
											"begin": 2419,
											"end": 2456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2419,
											"end": 2456,
											"name": "tag",
											"source": 18,
											"value": "461"
										},
										{
											"begin": 2419,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2406,
											"end": 2456,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2406,
											"end": 2456,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2310,
											"end": 2462,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2310,
											"end": 2462,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2310,
											"end": 2462,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2310,
											"end": 2462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2468,
											"end": 2651,
											"name": "tag",
											"source": 18,
											"value": "336"
										},
										{
											"begin": 2468,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2581,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "463"
										},
										{
											"begin": 2638,
											"end": 2643,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2581,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "335"
										},
										{
											"begin": 2581,
											"end": 2644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2581,
											"end": 2644,
											"name": "tag",
											"source": 18,
											"value": "463"
										},
										{
											"begin": 2581,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2576,
											"end": 2579,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2569,
											"end": 2645,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2468,
											"end": 2651,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2468,
											"end": 2651,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2468,
											"end": 2651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2657,
											"end": 2931,
											"name": "tag",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 2657,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2776,
											"end": 2780,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2814,
											"end": 2816,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2803,
											"end": 2812,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2799,
											"end": 2817,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2791,
											"end": 2817,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2791,
											"end": 2817,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2827,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "465"
										},
										{
											"begin": 2921,
											"end": 2922,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2910,
											"end": 2919,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2906,
											"end": 2923,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2897,
											"end": 2903,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2827,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "336"
										},
										{
											"begin": 2827,
											"end": 2924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2827,
											"end": 2924,
											"name": "tag",
											"source": 18,
											"value": "465"
										},
										{
											"begin": 2827,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2657,
											"end": 2931,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2657,
											"end": 2931,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2657,
											"end": 2931,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2657,
											"end": 2931,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2657,
											"end": 2931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2937,
											"end": 3054,
											"name": "tag",
											"source": 18,
											"value": "337"
										},
										{
											"begin": 2937,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3046,
											"end": 3047,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3043,
											"end": 3044,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3036,
											"end": 3048,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3060,
											"end": 3162,
											"name": "tag",
											"source": 18,
											"value": "338"
										},
										{
											"begin": 3060,
											"end": 3162,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3152,
											"end": 3154,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 3148,
											"end": 3155,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 3143,
											"end": 3145,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 3136,
											"end": 3141,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3132,
											"end": 3146,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3128,
											"end": 3156,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3118,
											"end": 3156,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3118,
											"end": 3156,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3060,
											"end": 3162,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3060,
											"end": 3162,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3060,
											"end": 3162,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3060,
											"end": 3162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3168,
											"end": 3348,
											"name": "tag",
											"source": 18,
											"value": "212"
										},
										{
											"begin": 3168,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3293,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3213,
											"end": 3214,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3294,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "PUSH",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 3310,
											"end": 3311,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3337,
											"end": 3341,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 3334,
											"end": 3335,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3354,
											"end": 3635,
											"name": "tag",
											"source": 18,
											"value": "339"
										},
										{
											"begin": 3354,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3437,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "470"
										},
										{
											"begin": 3459,
											"end": 3463,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3437,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "338"
										},
										{
											"begin": 3437,
											"end": 3464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3437,
											"end": 3464,
											"name": "tag",
											"source": 18,
											"value": "470"
										},
										{
											"begin": 3437,
											"end": 3464,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3429,
											"end": 3435,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3425,
											"end": 3465,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3567,
											"end": 3573,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3555,
											"end": 3565,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3552,
											"end": 3574,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 3531,
											"end": 3549,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3519,
											"end": 3529,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3516,
											"end": 3550,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 3513,
											"end": 3575,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 3510,
											"end": 3598,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3510,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "471"
										},
										{
											"begin": 3510,
											"end": 3598,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3578,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "472"
										},
										{
											"begin": 3578,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "212"
										},
										{
											"begin": 3578,
											"end": 3596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3578,
											"end": 3596,
											"name": "tag",
											"source": 18,
											"value": "472"
										},
										{
											"begin": 3578,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3510,
											"end": 3598,
											"name": "tag",
											"source": 18,
											"value": "471"
										},
										{
											"begin": 3510,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3618,
											"end": 3628,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3614,
											"end": 3616,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3607,
											"end": 3629,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3397,
											"end": 3635,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3354,
											"end": 3635,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3354,
											"end": 3635,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3354,
											"end": 3635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3641,
											"end": 3770,
											"name": "tag",
											"source": 18,
											"value": "340"
										},
										{
											"begin": 3641,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3675,
											"end": 3681,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3702,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "474"
										},
										{
											"begin": 3702,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "323"
										},
										{
											"begin": 3702,
											"end": 3722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3702,
											"end": 3722,
											"name": "tag",
											"source": 18,
											"value": "474"
										},
										{
											"begin": 3702,
											"end": 3722,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3731,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "475"
										},
										{
											"begin": 3759,
											"end": 3763,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3751,
											"end": 3757,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3731,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "339"
										},
										{
											"begin": 3731,
											"end": 3764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3731,
											"end": 3764,
											"name": "tag",
											"source": 18,
											"value": "475"
										},
										{
											"begin": 3731,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3641,
											"end": 3770,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3641,
											"end": 3770,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3641,
											"end": 3770,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3641,
											"end": 3770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3776,
											"end": 4087,
											"name": "tag",
											"source": 18,
											"value": "341"
										},
										{
											"begin": 3776,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3853,
											"end": 3857,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 3961,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3935,
											"end": 3941,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3932,
											"end": 3962,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 3929,
											"end": 3985,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3929,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "477"
										},
										{
											"begin": 3929,
											"end": 3985,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3965,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "478"
										},
										{
											"begin": 3965,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "212"
										},
										{
											"begin": 3965,
											"end": 3983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3965,
											"end": 3983,
											"name": "tag",
											"source": 18,
											"value": "478"
										},
										{
											"begin": 3965,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3929,
											"end": 3985,
											"name": "tag",
											"source": 18,
											"value": "477"
										},
										{
											"begin": 3929,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4015,
											"end": 4019,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4007,
											"end": 4013,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4003,
											"end": 4020,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 3995,
											"end": 4020,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3995,
											"end": 4020,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4075,
											"end": 4079,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4069,
											"end": 4073,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4065,
											"end": 4080,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3776,
											"end": 4087,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3776,
											"end": 4087,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3776,
											"end": 4087,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3776,
											"end": 4087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4093,
											"end": 4210,
											"name": "tag",
											"source": 18,
											"value": "342"
										},
										{
											"begin": 4093,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4202,
											"end": 4203,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4199,
											"end": 4200,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4192,
											"end": 4204,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4233,
											"end": 4943,
											"name": "tag",
											"source": 18,
											"value": "343"
										},
										{
											"begin": 4233,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4329,
											"end": 4334,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4354,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "481"
										},
										{
											"begin": 4370,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "482"
										},
										{
											"begin": 4427,
											"end": 4433,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4370,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "341"
										},
										{
											"begin": 4370,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4370,
											"end": 4434,
											"name": "tag",
											"source": 18,
											"value": "482"
										},
										{
											"begin": 4370,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4354,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "340"
										},
										{
											"begin": 4354,
											"end": 4435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4354,
											"end": 4435,
											"name": "tag",
											"source": 18,
											"value": "481"
										},
										{
											"begin": 4354,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4345,
											"end": 4435,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4345,
											"end": 4435,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4455,
											"end": 4460,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4484,
											"end": 4490,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4477,
											"end": 4482,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4470,
											"end": 4491,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4518,
											"end": 4522,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4511,
											"end": 4516,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4507,
											"end": 4523,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4500,
											"end": 4523,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4500,
											"end": 4523,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4571,
											"end": 4575,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4563,
											"end": 4569,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4559,
											"end": 4576,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 4551,
											"end": 4557,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4547,
											"end": 4577,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4600,
											"end": 4603,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4592,
											"end": 4598,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4589,
											"end": 4604,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 4586,
											"end": 4708,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4586,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "483"
										},
										{
											"begin": 4586,
											"end": 4708,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4619,
											"end": 4698,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "484"
										},
										{
											"begin": 4619,
											"end": 4698,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "342"
										},
										{
											"begin": 4619,
											"end": 4698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4619,
											"end": 4698,
											"name": "tag",
											"source": 18,
											"value": "484"
										},
										{
											"begin": 4619,
											"end": 4698,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4586,
											"end": 4708,
											"name": "tag",
											"source": 18,
											"value": "483"
										},
										{
											"begin": 4586,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4734,
											"end": 4740,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4717,
											"end": 4937,
											"name": "tag",
											"source": 18,
											"value": "485"
										},
										{
											"begin": 4717,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4751,
											"end": 4757,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4746,
											"end": 4749,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4743,
											"end": 4758,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 4717,
											"end": 4937,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4717,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "487"
										},
										{
											"begin": 4717,
											"end": 4937,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4826,
											"end": 4829,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4855,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "488"
										},
										{
											"begin": 4888,
											"end": 4891,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 4876,
											"end": 4886,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4855,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "328"
										},
										{
											"begin": 4855,
											"end": 4892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4855,
											"end": 4892,
											"name": "tag",
											"source": 18,
											"value": "488"
										},
										{
											"begin": 4855,
											"end": 4892,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4850,
											"end": 4853,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4843,
											"end": 4893,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4922,
											"end": 4926,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4917,
											"end": 4920,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4913,
											"end": 4927,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4906,
											"end": 4927,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 4906,
											"end": 4927,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4793,
											"end": 4937,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4772,
											"end": 4775,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4761,
											"end": 4782,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4761,
											"end": 4782,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4717,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "485"
										},
										{
											"begin": 4717,
											"end": 4937,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4717,
											"end": 4937,
											"name": "tag",
											"source": 18,
											"value": "487"
										},
										{
											"begin": 4717,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4721,
											"end": 4742,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4335,
											"end": 4943,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4335,
											"end": 4943,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4233,
											"end": 4943,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 4233,
											"end": 4943,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4233,
											"end": 4943,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4233,
											"end": 4943,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4233,
											"end": 4943,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4233,
											"end": 4943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4966,
											"end": 5336,
											"name": "tag",
											"source": 18,
											"value": "344"
										},
										{
											"begin": 4966,
											"end": 5336,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5037,
											"end": 5042,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5086,
											"end": 5089,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5079,
											"end": 5083,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5067,
											"end": 5084,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5063,
											"end": 5090,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 5053,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "490"
										},
										{
											"begin": 5053,
											"end": 5175,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5094,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "491"
										},
										{
											"begin": 5094,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "337"
										},
										{
											"begin": 5094,
											"end": 5173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5094,
											"end": 5173,
											"name": "tag",
											"source": 18,
											"value": "491"
										},
										{
											"begin": 5094,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5053,
											"end": 5175,
											"name": "tag",
											"source": 18,
											"value": "490"
										},
										{
											"begin": 5053,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5211,
											"end": 5217,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5198,
											"end": 5218,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 5236,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "492"
										},
										{
											"begin": 5326,
											"end": 5329,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5318,
											"end": 5324,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5311,
											"end": 5315,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5303,
											"end": 5309,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5299,
											"end": 5316,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5236,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "343"
										},
										{
											"begin": 5236,
											"end": 5330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5236,
											"end": 5330,
											"name": "tag",
											"source": 18,
											"value": "492"
										},
										{
											"begin": 5236,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5227,
											"end": 5330,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5227,
											"end": 5330,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5043,
											"end": 5336,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4966,
											"end": 5336,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4966,
											"end": 5336,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4966,
											"end": 5336,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4966,
											"end": 5336,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4966,
											"end": 5336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5342,
											"end": 6026,
											"name": "tag",
											"source": 18,
											"value": "45"
										},
										{
											"begin": 5342,
											"end": 6026,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5435,
											"end": 5441,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5492,
											"end": 5494,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5480,
											"end": 5489,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5471,
											"end": 5478,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5467,
											"end": 5490,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5463,
											"end": 5495,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 5460,
											"end": 5579,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5460,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "494"
										},
										{
											"begin": 5460,
											"end": 5579,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5498,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "495"
										},
										{
											"begin": 5498,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "324"
										},
										{
											"begin": 5498,
											"end": 5577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5498,
											"end": 5577,
											"name": "tag",
											"source": 18,
											"value": "495"
										},
										{
											"begin": 5498,
											"end": 5577,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5460,
											"end": 5579,
											"name": "tag",
											"source": 18,
											"value": "494"
										},
										{
											"begin": 5460,
											"end": 5579,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5618,
											"end": 5619,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5643,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "496"
										},
										{
											"begin": 5688,
											"end": 5695,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5679,
											"end": 5685,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5668,
											"end": 5677,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5664,
											"end": 5686,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5643,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "328"
										},
										{
											"begin": 5643,
											"end": 5696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5643,
											"end": 5696,
											"name": "tag",
											"source": 18,
											"value": "496"
										},
										{
											"begin": 5643,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5633,
											"end": 5696,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5633,
											"end": 5696,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5589,
											"end": 5706,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5773,
											"end": 5775,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5762,
											"end": 5771,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5758,
											"end": 5776,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5745,
											"end": 5777,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 5804,
											"end": 5822,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5796,
											"end": 5802,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5793,
											"end": 5823,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 5790,
											"end": 5907,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5790,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "497"
										},
										{
											"begin": 5790,
											"end": 5907,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5826,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "498"
										},
										{
											"begin": 5826,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "325"
										},
										{
											"begin": 5826,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5826,
											"end": 5905,
											"name": "tag",
											"source": 18,
											"value": "498"
										},
										{
											"begin": 5826,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5790,
											"end": 5907,
											"name": "tag",
											"source": 18,
											"value": "497"
										},
										{
											"begin": 5790,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5931,
											"end": 6009,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "499"
										},
										{
											"begin": 6001,
											"end": 6008,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5992,
											"end": 5998,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5981,
											"end": 5990,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5931,
											"end": 6009,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "344"
										},
										{
											"begin": 5931,
											"end": 6009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5931,
											"end": 6009,
											"name": "tag",
											"source": 18,
											"value": "499"
										},
										{
											"begin": 5931,
											"end": 6009,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5921,
											"end": 6009,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5921,
											"end": 6009,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5716,
											"end": 6019,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5342,
											"end": 6026,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5342,
											"end": 6026,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5342,
											"end": 6026,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5342,
											"end": 6026,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5342,
											"end": 6026,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5342,
											"end": 6026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6032,
											"end": 6172,
											"name": "tag",
											"source": 18,
											"value": "345"
										},
										{
											"begin": 6032,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6096,
											"end": 6105,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6129,
											"end": 6166,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "501"
										},
										{
											"begin": 6160,
											"end": 6165,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6129,
											"end": 6166,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "332"
										},
										{
											"begin": 6129,
											"end": 6166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6129,
											"end": 6166,
											"name": "tag",
											"source": 18,
											"value": "501"
										},
										{
											"begin": 6129,
											"end": 6166,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6116,
											"end": 6166,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6116,
											"end": 6166,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6032,
											"end": 6172,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6032,
											"end": 6172,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6032,
											"end": 6172,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6032,
											"end": 6172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6178,
											"end": 6337,
											"name": "tag",
											"source": 18,
											"value": "346"
										},
										{
											"begin": 6178,
											"end": 6337,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6279,
											"end": 6330,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "503"
										},
										{
											"begin": 6324,
											"end": 6329,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6279,
											"end": 6330,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "345"
										},
										{
											"begin": 6279,
											"end": 6330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6279,
											"end": 6330,
											"name": "tag",
											"source": 18,
											"value": "503"
										},
										{
											"begin": 6279,
											"end": 6330,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6274,
											"end": 6277,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6267,
											"end": 6331,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6178,
											"end": 6337,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6178,
											"end": 6337,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6178,
											"end": 6337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6343,
											"end": 6593,
											"name": "tag",
											"source": 18,
											"value": "51"
										},
										{
											"begin": 6343,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6450,
											"end": 6454,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6488,
											"end": 6490,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6477,
											"end": 6486,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6473,
											"end": 6491,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6465,
											"end": 6491,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6465,
											"end": 6491,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6501,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "505"
										},
										{
											"begin": 6583,
											"end": 6584,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6572,
											"end": 6581,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6568,
											"end": 6585,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6559,
											"end": 6565,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6501,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "346"
										},
										{
											"begin": 6501,
											"end": 6586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6501,
											"end": 6586,
											"name": "tag",
											"source": 18,
											"value": "505"
										},
										{
											"begin": 6501,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6343,
											"end": 6593,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6343,
											"end": 6593,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6343,
											"end": 6593,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6343,
											"end": 6593,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6343,
											"end": 6593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6599,
											"end": 6928,
											"name": "tag",
											"source": 18,
											"value": "55"
										},
										{
											"begin": 6599,
											"end": 6928,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6658,
											"end": 6664,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6707,
											"end": 6709,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6695,
											"end": 6704,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6686,
											"end": 6693,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6682,
											"end": 6705,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 6678,
											"end": 6710,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 6675,
											"end": 6794,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6675,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "507"
										},
										{
											"begin": 6675,
											"end": 6794,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6713,
											"end": 6792,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "508"
										},
										{
											"begin": 6713,
											"end": 6792,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "324"
										},
										{
											"begin": 6713,
											"end": 6792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6713,
											"end": 6792,
											"name": "tag",
											"source": 18,
											"value": "508"
										},
										{
											"begin": 6713,
											"end": 6792,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6675,
											"end": 6794,
											"name": "tag",
											"source": 18,
											"value": "507"
										},
										{
											"begin": 6675,
											"end": 6794,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6833,
											"end": 6834,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6858,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "509"
										},
										{
											"begin": 6903,
											"end": 6910,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6894,
											"end": 6900,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6883,
											"end": 6892,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6879,
											"end": 6901,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6858,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "328"
										},
										{
											"begin": 6858,
											"end": 6911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6858,
											"end": 6911,
											"name": "tag",
											"source": 18,
											"value": "509"
										},
										{
											"begin": 6858,
											"end": 6911,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6848,
											"end": 6911,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6848,
											"end": 6911,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6804,
											"end": 6921,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6599,
											"end": 6928,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6599,
											"end": 6928,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6599,
											"end": 6928,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6599,
											"end": 6928,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6599,
											"end": 6928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6934,
											"end": 7030,
											"name": "tag",
											"source": 18,
											"value": "347"
										},
										{
											"begin": 6934,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6971,
											"end": 6978,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7000,
											"end": 7024,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "511"
										},
										{
											"begin": 7018,
											"end": 7023,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7000,
											"end": 7024,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "329"
										},
										{
											"begin": 7000,
											"end": 7024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7000,
											"end": 7024,
											"name": "tag",
											"source": 18,
											"value": "511"
										},
										{
											"begin": 7000,
											"end": 7024,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6989,
											"end": 7024,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6989,
											"end": 7024,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6934,
											"end": 7030,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6934,
											"end": 7030,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6934,
											"end": 7030,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6934,
											"end": 7030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7036,
											"end": 7154,
											"name": "tag",
											"source": 18,
											"value": "348"
										},
										{
											"begin": 7036,
											"end": 7154,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7123,
											"end": 7147,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "513"
										},
										{
											"begin": 7141,
											"end": 7146,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7123,
											"end": 7147,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "347"
										},
										{
											"begin": 7123,
											"end": 7147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7123,
											"end": 7147,
											"name": "tag",
											"source": 18,
											"value": "513"
										},
										{
											"begin": 7123,
											"end": 7147,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7118,
											"end": 7121,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7111,
											"end": 7148,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7036,
											"end": 7154,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7036,
											"end": 7154,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7036,
											"end": 7154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7160,
											"end": 7382,
											"name": "tag",
											"source": 18,
											"value": "58"
										},
										{
											"begin": 7160,
											"end": 7382,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7253,
											"end": 7257,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7291,
											"end": 7293,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7280,
											"end": 7289,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7276,
											"end": 7294,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7268,
											"end": 7294,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7268,
											"end": 7294,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7304,
											"end": 7375,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "515"
										},
										{
											"begin": 7372,
											"end": 7373,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7361,
											"end": 7370,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7357,
											"end": 7374,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7348,
											"end": 7354,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7304,
											"end": 7375,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "348"
										},
										{
											"begin": 7304,
											"end": 7375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7304,
											"end": 7375,
											"name": "tag",
											"source": 18,
											"value": "515"
										},
										{
											"begin": 7304,
											"end": 7375,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7160,
											"end": 7382,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7160,
											"end": 7382,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7160,
											"end": 7382,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7160,
											"end": 7382,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7160,
											"end": 7382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7388,
											"end": 7505,
											"name": "tag",
											"source": 18,
											"value": "349"
										},
										{
											"begin": 7388,
											"end": 7505,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7497,
											"end": 7498,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7494,
											"end": 7495,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7487,
											"end": 7499,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 7524,
											"end": 8076,
											"name": "tag",
											"source": 18,
											"value": "350"
										},
										{
											"begin": 7524,
											"end": 8076,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7581,
											"end": 7589,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7591,
											"end": 7597,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7641,
											"end": 7644,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7634,
											"end": 7638,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 7626,
											"end": 7632,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7622,
											"end": 7639,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7618,
											"end": 7645,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 7608,
											"end": 7730,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "518"
										},
										{
											"begin": 7608,
											"end": 7730,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7649,
											"end": 7728,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "519"
										},
										{
											"begin": 7649,
											"end": 7728,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "337"
										},
										{
											"begin": 7649,
											"end": 7728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7649,
											"end": 7728,
											"name": "tag",
											"source": 18,
											"value": "519"
										},
										{
											"begin": 7649,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7608,
											"end": 7730,
											"name": "tag",
											"source": 18,
											"value": "518"
										},
										{
											"begin": 7608,
											"end": 7730,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7762,
											"end": 7768,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7749,
											"end": 7769,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 7739,
											"end": 7769,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7739,
											"end": 7769,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7792,
											"end": 7810,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7784,
											"end": 7790,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7781,
											"end": 7811,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 7778,
											"end": 7895,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7778,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "520"
										},
										{
											"begin": 7778,
											"end": 7895,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7814,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "521"
										},
										{
											"begin": 7814,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "349"
										},
										{
											"begin": 7814,
											"end": 7893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7814,
											"end": 7893,
											"name": "tag",
											"source": 18,
											"value": "521"
										},
										{
											"begin": 7814,
											"end": 7893,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7778,
											"end": 7895,
											"name": "tag",
											"source": 18,
											"value": "520"
										},
										{
											"begin": 7778,
											"end": 7895,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7928,
											"end": 7932,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7920,
											"end": 7926,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7916,
											"end": 7933,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7904,
											"end": 7933,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7904,
											"end": 7933,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7982,
											"end": 7985,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7974,
											"end": 7978,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 7966,
											"end": 7972,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7962,
											"end": 7979,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 7952,
											"end": 7960,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7948,
											"end": 7980,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7945,
											"end": 7986,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 7942,
											"end": 8070,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7942,
											"end": 8070,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "522"
										},
										{
											"begin": 7942,
											"end": 8070,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7989,
											"end": 8068,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "523"
										},
										{
											"begin": 7989,
											"end": 8068,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "342"
										},
										{
											"begin": 7989,
											"end": 8068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7989,
											"end": 8068,
											"name": "tag",
											"source": 18,
											"value": "523"
										},
										{
											"begin": 7989,
											"end": 8068,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7942,
											"end": 8070,
											"name": "tag",
											"source": 18,
											"value": "522"
										},
										{
											"begin": 7942,
											"end": 8070,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7524,
											"end": 8076,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7524,
											"end": 8076,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7524,
											"end": 8076,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7524,
											"end": 8076,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7524,
											"end": 8076,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7524,
											"end": 8076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8082,
											"end": 8609,
											"name": "tag",
											"source": 18,
											"value": "62"
										},
										{
											"begin": 8082,
											"end": 8609,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8152,
											"end": 8158,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8160,
											"end": 8166,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8209,
											"end": 8211,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8197,
											"end": 8206,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8188,
											"end": 8195,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8184,
											"end": 8207,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8180,
											"end": 8212,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 8177,
											"end": 8296,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8177,
											"end": 8296,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "525"
										},
										{
											"begin": 8177,
											"end": 8296,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8215,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "526"
										},
										{
											"begin": 8215,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "324"
										},
										{
											"begin": 8215,
											"end": 8294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8215,
											"end": 8294,
											"name": "tag",
											"source": 18,
											"value": "526"
										},
										{
											"begin": 8215,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8177,
											"end": 8296,
											"name": "tag",
											"source": 18,
											"value": "525"
										},
										{
											"begin": 8177,
											"end": 8296,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8363,
											"end": 8364,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8352,
											"end": 8361,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8348,
											"end": 8365,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8335,
											"end": 8366,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 8393,
											"end": 8411,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8385,
											"end": 8391,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8382,
											"end": 8412,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 8379,
											"end": 8496,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8379,
											"end": 8496,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "527"
										},
										{
											"begin": 8379,
											"end": 8496,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8415,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 8415,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "325"
										},
										{
											"begin": 8415,
											"end": 8494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8415,
											"end": 8494,
											"name": "tag",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 8415,
											"end": 8494,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8379,
											"end": 8496,
											"name": "tag",
											"source": 18,
											"value": "527"
										},
										{
											"begin": 8379,
											"end": 8496,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8528,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 8584,
											"end": 8591,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8575,
											"end": 8581,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8564,
											"end": 8573,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8560,
											"end": 8582,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8528,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "350"
										},
										{
											"begin": 8528,
											"end": 8592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8528,
											"end": 8592,
											"name": "tag",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 8528,
											"end": 8592,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8510,
											"end": 8592,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8510,
											"end": 8592,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8510,
											"end": 8592,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8510,
											"end": 8592,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8306,
											"end": 8602,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8082,
											"end": 8609,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8082,
											"end": 8609,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8082,
											"end": 8609,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8082,
											"end": 8609,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8082,
											"end": 8609,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8082,
											"end": 8609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8615,
											"end": 8705,
											"name": "tag",
											"source": 18,
											"value": "351"
										},
										{
											"begin": 8615,
											"end": 8705,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8649,
											"end": 8656,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8692,
											"end": 8697,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8685,
											"end": 8698,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8678,
											"end": 8699,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8667,
											"end": 8699,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8667,
											"end": 8699,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8615,
											"end": 8705,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8615,
											"end": 8705,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8615,
											"end": 8705,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8615,
											"end": 8705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8711,
											"end": 8820,
											"name": "tag",
											"source": 18,
											"value": "352"
										},
										{
											"begin": 8711,
											"end": 8820,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8792,
											"end": 8813,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "532"
										},
										{
											"begin": 8807,
											"end": 8812,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8792,
											"end": 8813,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "351"
										},
										{
											"begin": 8792,
											"end": 8813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8792,
											"end": 8813,
											"name": "tag",
											"source": 18,
											"value": "532"
										},
										{
											"begin": 8792,
											"end": 8813,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8787,
											"end": 8790,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8780,
											"end": 8814,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8711,
											"end": 8820,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8711,
											"end": 8820,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8711,
											"end": 8820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8826,
											"end": 8924,
											"name": "tag",
											"source": 18,
											"value": "353"
										},
										{
											"begin": 8826,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8911,
											"end": 8916,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8905,
											"end": 8917,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8895,
											"end": 8917,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8895,
											"end": 8917,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8826,
											"end": 8924,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8826,
											"end": 8924,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8826,
											"end": 8924,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8826,
											"end": 8924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8930,
											"end": 9098,
											"name": "tag",
											"source": 18,
											"value": "354"
										},
										{
											"begin": 8930,
											"end": 9098,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9013,
											"end": 9024,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9047,
											"end": 9053,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9042,
											"end": 9045,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9035,
											"end": 9054,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9087,
											"end": 9091,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9082,
											"end": 9085,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9078,
											"end": 9092,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9063,
											"end": 9092,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9063,
											"end": 9092,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8930,
											"end": 9098,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8930,
											"end": 9098,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8930,
											"end": 9098,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8930,
											"end": 9098,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8930,
											"end": 9098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9104,
											"end": 9350,
											"name": "tag",
											"source": 18,
											"value": "355"
										},
										{
											"begin": 9104,
											"end": 9350,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9185,
											"end": 9186,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9195,
											"end": 9308,
											"name": "tag",
											"source": 18,
											"value": "536"
										},
										{
											"begin": 9195,
											"end": 9308,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9209,
											"end": 9215,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9206,
											"end": 9207,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9203,
											"end": 9216,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 9195,
											"end": 9308,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9195,
											"end": 9308,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "538"
										},
										{
											"begin": 9195,
											"end": 9308,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9289,
											"end": 9292,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9285,
											"end": 9296,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 9275,
											"end": 9276,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9270,
											"end": 9273,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9266,
											"end": 9277,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9259,
											"end": 9298,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9231,
											"end": 9233,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9228,
											"end": 9229,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9224,
											"end": 9234,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9219,
											"end": 9234,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9219,
											"end": 9234,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9195,
											"end": 9308,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "536"
										},
										{
											"begin": 9195,
											"end": 9308,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9195,
											"end": 9308,
											"name": "tag",
											"source": 18,
											"value": "538"
										},
										{
											"begin": 9195,
											"end": 9308,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9342,
											"end": 9343,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9333,
											"end": 9339,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9328,
											"end": 9331,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9324,
											"end": 9340,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9317,
											"end": 9344,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9166,
											"end": 9350,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9104,
											"end": 9350,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9104,
											"end": 9350,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9104,
											"end": 9350,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9104,
											"end": 9350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9356,
											"end": 9729,
											"name": "tag",
											"source": 18,
											"value": "356"
										},
										{
											"begin": 9356,
											"end": 9729,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9442,
											"end": 9445,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9470,
											"end": 9508,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 9502,
											"end": 9507,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9470,
											"end": 9508,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "353"
										},
										{
											"begin": 9470,
											"end": 9508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9470,
											"end": 9508,
											"name": "tag",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 9470,
											"end": 9508,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9524,
											"end": 9594,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 9587,
											"end": 9593,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9582,
											"end": 9585,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 9524,
											"end": 9594,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "354"
										},
										{
											"begin": 9524,
											"end": 9594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9524,
											"end": 9594,
											"name": "tag",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 9524,
											"end": 9594,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9517,
											"end": 9594,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 9517,
											"end": 9594,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9603,
											"end": 9668,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "542"
										},
										{
											"begin": 9661,
											"end": 9667,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9656,
											"end": 9659,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 9649,
											"end": 9653,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9642,
											"end": 9647,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 9638,
											"end": 9654,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9603,
											"end": 9668,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "355"
										},
										{
											"begin": 9603,
											"end": 9668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9603,
											"end": 9668,
											"name": "tag",
											"source": 18,
											"value": "542"
										},
										{
											"begin": 9603,
											"end": 9668,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9693,
											"end": 9722,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 9715,
											"end": 9721,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9693,
											"end": 9722,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "338"
										},
										{
											"begin": 9693,
											"end": 9722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9693,
											"end": 9722,
											"name": "tag",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 9693,
											"end": 9722,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9688,
											"end": 9691,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9684,
											"end": 9723,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9677,
											"end": 9723,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9677,
											"end": 9723,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9446,
											"end": 9729,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9356,
											"end": 9729,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9356,
											"end": 9729,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9356,
											"end": 9729,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9356,
											"end": 9729,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9356,
											"end": 9729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9735,
											"end": 10142,
											"name": "tag",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 9735,
											"end": 10142,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9868,
											"end": 9872,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9906,
											"end": 9908,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 9895,
											"end": 9904,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9891,
											"end": 9909,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9883,
											"end": 9909,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9883,
											"end": 9909,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9919,
											"end": 9984,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "545"
										},
										{
											"begin": 9981,
											"end": 9982,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9970,
											"end": 9979,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9966,
											"end": 9983,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9957,
											"end": 9963,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 9919,
											"end": 9984,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "352"
										},
										{
											"begin": 9919,
											"end": 9984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9919,
											"end": 9984,
											"name": "tag",
											"source": 18,
											"value": "545"
										},
										{
											"begin": 9919,
											"end": 9984,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10031,
											"end": 10040,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10025,
											"end": 10029,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10021,
											"end": 10041,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 10016,
											"end": 10018,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10005,
											"end": 10014,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10001,
											"end": 10019,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9994,
											"end": 10042,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10059,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 10130,
											"end": 10134,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10121,
											"end": 10127,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10059,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "356"
										},
										{
											"begin": 10059,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10059,
											"end": 10135,
											"name": "tag",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 10059,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10051,
											"end": 10135,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10051,
											"end": 10135,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9735,
											"end": 10142,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 9735,
											"end": 10142,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9735,
											"end": 10142,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9735,
											"end": 10142,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9735,
											"end": 10142,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9735,
											"end": 10142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10148,
											"end": 10301,
											"name": "tag",
											"source": 18,
											"value": "357"
										},
										{
											"begin": 10148,
											"end": 10301,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10225,
											"end": 10234,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10258,
											"end": 10295,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "548"
										},
										{
											"begin": 10289,
											"end": 10294,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10258,
											"end": 10295,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "332"
										},
										{
											"begin": 10258,
											"end": 10295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10258,
											"end": 10295,
											"name": "tag",
											"source": 18,
											"value": "548"
										},
										{
											"begin": 10258,
											"end": 10295,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10245,
											"end": 10295,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10245,
											"end": 10295,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10148,
											"end": 10301,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10148,
											"end": 10301,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10148,
											"end": 10301,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10148,
											"end": 10301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10307,
											"end": 10492,
											"name": "tag",
											"source": 18,
											"value": "358"
										},
										{
											"begin": 10307,
											"end": 10492,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 10479,
											"end": 10484,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "357"
										},
										{
											"begin": 10421,
											"end": 10485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10421,
											"end": 10485,
											"name": "tag",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 10421,
											"end": 10485,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10416,
											"end": 10419,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10409,
											"end": 10486,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10307,
											"end": 10492,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10307,
											"end": 10492,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10307,
											"end": 10492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10498,
											"end": 10774,
											"name": "tag",
											"source": 18,
											"value": "74"
										},
										{
											"begin": 10498,
											"end": 10774,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10618,
											"end": 10622,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10656,
											"end": 10658,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10645,
											"end": 10654,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10641,
											"end": 10659,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10633,
											"end": 10659,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10633,
											"end": 10659,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10669,
											"end": 10767,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 10764,
											"end": 10765,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10753,
											"end": 10762,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10749,
											"end": 10766,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10740,
											"end": 10746,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10669,
											"end": 10767,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "358"
										},
										{
											"begin": 10669,
											"end": 10767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10669,
											"end": 10767,
											"name": "tag",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 10669,
											"end": 10767,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10498,
											"end": 10774,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10498,
											"end": 10774,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10498,
											"end": 10774,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10498,
											"end": 10774,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10498,
											"end": 10774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10780,
											"end": 10936,
											"name": "tag",
											"source": 18,
											"value": "359"
										},
										{
											"begin": 10780,
											"end": 10936,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10860,
											"end": 10869,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10893,
											"end": 10930,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 10924,
											"end": 10929,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10893,
											"end": 10930,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "332"
										},
										{
											"begin": 10893,
											"end": 10930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10893,
											"end": 10930,
											"name": "tag",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 10893,
											"end": 10930,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10880,
											"end": 10930,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10880,
											"end": 10930,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10780,
											"end": 10936,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10780,
											"end": 10936,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10780,
											"end": 10936,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10780,
											"end": 10936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10942,
											"end": 11133,
											"name": "tag",
											"source": 18,
											"value": "360"
										},
										{
											"begin": 10942,
											"end": 11133,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11059,
											"end": 11126,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "556"
										},
										{
											"begin": 11120,
											"end": 11125,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11059,
											"end": 11126,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "359"
										},
										{
											"begin": 11059,
											"end": 11126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11059,
											"end": 11126,
											"name": "tag",
											"source": 18,
											"value": "556"
										},
										{
											"begin": 11059,
											"end": 11126,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11054,
											"end": 11057,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11047,
											"end": 11127,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10942,
											"end": 11133,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10942,
											"end": 11133,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10942,
											"end": 11133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11139,
											"end": 11421,
											"name": "tag",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 11139,
											"end": 11421,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11262,
											"end": 11266,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11300,
											"end": 11302,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11289,
											"end": 11298,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11285,
											"end": 11303,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11277,
											"end": 11303,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11277,
											"end": 11303,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11313,
											"end": 11414,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "558"
										},
										{
											"begin": 11411,
											"end": 11412,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11400,
											"end": 11409,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 11396,
											"end": 11413,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11387,
											"end": 11393,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11313,
											"end": 11414,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "360"
										},
										{
											"begin": 11313,
											"end": 11414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11313,
											"end": 11414,
											"name": "tag",
											"source": 18,
											"value": "558"
										},
										{
											"begin": 11313,
											"end": 11414,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11139,
											"end": 11421,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11139,
											"end": 11421,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11139,
											"end": 11421,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11139,
											"end": 11421,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11139,
											"end": 11421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11427,
											"end": 11549,
											"name": "tag",
											"source": 18,
											"value": "361"
										},
										{
											"begin": 11427,
											"end": 11549,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11500,
											"end": 11524,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "560"
										},
										{
											"begin": 11518,
											"end": 11523,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11500,
											"end": 11524,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "347"
										},
										{
											"begin": 11500,
											"end": 11524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11500,
											"end": 11524,
											"name": "tag",
											"source": 18,
											"value": "560"
										},
										{
											"begin": 11500,
											"end": 11524,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11493,
											"end": 11498,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11490,
											"end": 11525,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 11480,
											"end": 11543,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "561"
										},
										{
											"begin": 11480,
											"end": 11543,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11539,
											"end": 11540,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11536,
											"end": 11537,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 11529,
											"end": 11541,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 11480,
											"end": 11543,
											"name": "tag",
											"source": 18,
											"value": "561"
										},
										{
											"begin": 11480,
											"end": 11543,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11427,
											"end": 11549,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11427,
											"end": 11549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11555,
											"end": 11694,
											"name": "tag",
											"source": 18,
											"value": "362"
										},
										{
											"begin": 11555,
											"end": 11694,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11601,
											"end": 11606,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11639,
											"end": 11645,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11626,
											"end": 11646,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 11617,
											"end": 11646,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11617,
											"end": 11646,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11655,
											"end": 11688,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "563"
										},
										{
											"begin": 11682,
											"end": 11687,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11655,
											"end": 11688,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "361"
										},
										{
											"begin": 11655,
											"end": 11688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11655,
											"end": 11688,
											"name": "tag",
											"source": 18,
											"value": "563"
										},
										{
											"begin": 11655,
											"end": 11688,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11555,
											"end": 11694,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11555,
											"end": 11694,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11555,
											"end": 11694,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11555,
											"end": 11694,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11555,
											"end": 11694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11700,
											"end": 12029,
											"name": "tag",
											"source": 18,
											"value": "83"
										},
										{
											"begin": 11700,
											"end": 12029,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11759,
											"end": 11765,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11808,
											"end": 11810,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11796,
											"end": 11805,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11787,
											"end": 11794,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11783,
											"end": 11806,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 11779,
											"end": 11811,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 11776,
											"end": 11895,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 11776,
											"end": 11895,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "565"
										},
										{
											"begin": 11776,
											"end": 11895,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11814,
											"end": 11893,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "566"
										},
										{
											"begin": 11814,
											"end": 11893,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "324"
										},
										{
											"begin": 11814,
											"end": 11893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11814,
											"end": 11893,
											"name": "tag",
											"source": 18,
											"value": "566"
										},
										{
											"begin": 11814,
											"end": 11893,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11776,
											"end": 11895,
											"name": "tag",
											"source": 18,
											"value": "565"
										},
										{
											"begin": 11776,
											"end": 11895,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11934,
											"end": 11935,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11959,
											"end": 12012,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "567"
										},
										{
											"begin": 12004,
											"end": 12011,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11995,
											"end": 12001,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11984,
											"end": 11993,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 11980,
											"end": 12002,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11959,
											"end": 12012,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "362"
										},
										{
											"begin": 11959,
											"end": 12012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11959,
											"end": 12012,
											"name": "tag",
											"source": 18,
											"value": "567"
										},
										{
											"begin": 11959,
											"end": 12012,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11949,
											"end": 12012,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11949,
											"end": 12012,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11905,
											"end": 12022,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11700,
											"end": 12029,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11700,
											"end": 12029,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11700,
											"end": 12029,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11700,
											"end": 12029,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11700,
											"end": 12029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12035,
											"end": 12153,
											"name": "tag",
											"source": 18,
											"value": "363"
										},
										{
											"begin": 12035,
											"end": 12153,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12122,
											"end": 12146,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "569"
										},
										{
											"begin": 12140,
											"end": 12145,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12122,
											"end": 12146,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 12122,
											"end": 12146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12122,
											"end": 12146,
											"name": "tag",
											"source": 18,
											"value": "569"
										},
										{
											"begin": 12122,
											"end": 12146,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12117,
											"end": 12120,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12110,
											"end": 12147,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12035,
											"end": 12153,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12035,
											"end": 12153,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12035,
											"end": 12153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12159,
											"end": 12381,
											"name": "tag",
											"source": 18,
											"value": "86"
										},
										{
											"begin": 12159,
											"end": 12381,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12252,
											"end": 12256,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12290,
											"end": 12292,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12279,
											"end": 12288,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12275,
											"end": 12293,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12267,
											"end": 12293,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12267,
											"end": 12293,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12303,
											"end": 12374,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "571"
										},
										{
											"begin": 12371,
											"end": 12372,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12360,
											"end": 12369,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12356,
											"end": 12373,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12347,
											"end": 12353,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12303,
											"end": 12374,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "363"
										},
										{
											"begin": 12303,
											"end": 12374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12303,
											"end": 12374,
											"name": "tag",
											"source": 18,
											"value": "571"
										},
										{
											"begin": 12303,
											"end": 12374,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12159,
											"end": 12381,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12159,
											"end": 12381,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12159,
											"end": 12381,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12159,
											"end": 12381,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12159,
											"end": 12381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12387,
											"end": 13162,
											"name": "tag",
											"source": 18,
											"value": "92"
										},
										{
											"begin": 12387,
											"end": 13162,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12620,
											"end": 12624,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12658,
											"end": 12661,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 12647,
											"end": 12656,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12643,
											"end": 12662,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12635,
											"end": 12662,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12635,
											"end": 12662,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12672,
											"end": 12743,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "573"
										},
										{
											"begin": 12740,
											"end": 12741,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12729,
											"end": 12738,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12725,
											"end": 12742,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12716,
											"end": 12722,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 12672,
											"end": 12743,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "363"
										},
										{
											"begin": 12672,
											"end": 12743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12672,
											"end": 12743,
											"name": "tag",
											"source": 18,
											"value": "573"
										},
										{
											"begin": 12672,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12753,
											"end": 12825,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "574"
										},
										{
											"begin": 12821,
											"end": 12823,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12810,
											"end": 12819,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12806,
											"end": 12824,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12797,
											"end": 12803,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 12753,
											"end": 12825,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "363"
										},
										{
											"begin": 12753,
											"end": 12825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12753,
											"end": 12825,
											"name": "tag",
											"source": 18,
											"value": "574"
										},
										{
											"begin": 12753,
											"end": 12825,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12835,
											"end": 12907,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "575"
										},
										{
											"begin": 12903,
											"end": 12905,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 12892,
											"end": 12901,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12888,
											"end": 12906,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12879,
											"end": 12885,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 12835,
											"end": 12907,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "363"
										},
										{
											"begin": 12835,
											"end": 12907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12835,
											"end": 12907,
											"name": "tag",
											"source": 18,
											"value": "575"
										},
										{
											"begin": 12835,
											"end": 12907,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12917,
											"end": 12989,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "576"
										},
										{
											"begin": 12985,
											"end": 12987,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 12974,
											"end": 12983,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12970,
											"end": 12988,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12961,
											"end": 12967,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 12917,
											"end": 12989,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "363"
										},
										{
											"begin": 12917,
											"end": 12989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12917,
											"end": 12989,
											"name": "tag",
											"source": 18,
											"value": "576"
										},
										{
											"begin": 12917,
											"end": 12989,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12999,
											"end": 13072,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "577"
										},
										{
											"begin": 13067,
											"end": 13070,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 13056,
											"end": 13065,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13052,
											"end": 13071,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13043,
											"end": 13049,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12999,
											"end": 13072,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "363"
										},
										{
											"begin": 12999,
											"end": 13072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12999,
											"end": 13072,
											"name": "tag",
											"source": 18,
											"value": "577"
										},
										{
											"begin": 12999,
											"end": 13072,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13082,
											"end": 13155,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 13150,
											"end": 13153,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 13139,
											"end": 13148,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13135,
											"end": 13154,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13126,
											"end": 13132,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13082,
											"end": 13155,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "363"
										},
										{
											"begin": 13082,
											"end": 13155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13082,
											"end": 13155,
											"name": "tag",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 13082,
											"end": 13155,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12387,
											"end": 13162,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": 12387,
											"end": 13162,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 12387,
											"end": 13162,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12387,
											"end": 13162,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12387,
											"end": 13162,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12387,
											"end": 13162,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12387,
											"end": 13162,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12387,
											"end": 13162,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12387,
											"end": 13162,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12387,
											"end": 13162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13168,
											"end": 13337,
											"name": "tag",
											"source": 18,
											"value": "364"
										},
										{
											"begin": 13168,
											"end": 13337,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13252,
											"end": 13263,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13286,
											"end": 13292,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13281,
											"end": 13284,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13274,
											"end": 13293,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13326,
											"end": 13330,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 13321,
											"end": 13324,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13317,
											"end": 13331,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13302,
											"end": 13331,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13302,
											"end": 13331,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13168,
											"end": 13337,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13168,
											"end": 13337,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13168,
											"end": 13337,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13168,
											"end": 13337,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13168,
											"end": 13337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13343,
											"end": 13506,
											"name": "tag",
											"source": 18,
											"value": "365"
										},
										{
											"begin": 13343,
											"end": 13506,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13483,
											"end": 13498,
											"name": "PUSH",
											"source": 18,
											"value": "506C616E20697320657869737400000000000000000000000000000000000000"
										},
										{
											"begin": 13479,
											"end": 13480,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13471,
											"end": 13477,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13467,
											"end": 13481,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13460,
											"end": 13499,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13343,
											"end": 13506,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13343,
											"end": 13506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13512,
											"end": 13878,
											"name": "tag",
											"source": 18,
											"value": "366"
										},
										{
											"begin": 13512,
											"end": 13878,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13654,
											"end": 13657,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13675,
											"end": 13742,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "582"
										},
										{
											"begin": 13739,
											"end": 13741,
											"name": "PUSH",
											"source": 18,
											"value": "D"
										},
										{
											"begin": 13734,
											"end": 13737,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13675,
											"end": 13742,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "364"
										},
										{
											"begin": 13675,
											"end": 13742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13675,
											"end": 13742,
											"name": "tag",
											"source": 18,
											"value": "582"
										},
										{
											"begin": 13675,
											"end": 13742,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13668,
											"end": 13742,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13668,
											"end": 13742,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13751,
											"end": 13844,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "583"
										},
										{
											"begin": 13840,
											"end": 13843,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13751,
											"end": 13844,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "365"
										},
										{
											"begin": 13751,
											"end": 13844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13751,
											"end": 13844,
											"name": "tag",
											"source": 18,
											"value": "583"
										},
										{
											"begin": 13751,
											"end": 13844,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13869,
											"end": 13871,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 13864,
											"end": 13867,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13860,
											"end": 13872,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13853,
											"end": 13872,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13853,
											"end": 13872,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13512,
											"end": 13878,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13512,
											"end": 13878,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13512,
											"end": 13878,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13512,
											"end": 13878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13884,
											"end": 14303,
											"name": "tag",
											"source": 18,
											"value": "124"
										},
										{
											"begin": 13884,
											"end": 14303,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14050,
											"end": 14054,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14088,
											"end": 14090,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14077,
											"end": 14086,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14073,
											"end": 14091,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14065,
											"end": 14091,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14065,
											"end": 14091,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14137,
											"end": 14146,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14131,
											"end": 14135,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14127,
											"end": 14147,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 14123,
											"end": 14124,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14112,
											"end": 14121,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14108,
											"end": 14125,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14101,
											"end": 14148,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14165,
											"end": 14296,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "585"
										},
										{
											"begin": 14291,
											"end": 14295,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14165,
											"end": 14296,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "366"
										},
										{
											"begin": 14165,
											"end": 14296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14165,
											"end": 14296,
											"name": "tag",
											"source": 18,
											"value": "585"
										},
										{
											"begin": 14165,
											"end": 14296,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14157,
											"end": 14296,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14157,
											"end": 14296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13884,
											"end": 14303,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13884,
											"end": 14303,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13884,
											"end": 14303,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13884,
											"end": 14303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14309,
											"end": 14491,
											"name": "tag",
											"source": 18,
											"value": "367"
										},
										{
											"begin": 14309,
											"end": 14491,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14449,
											"end": 14483,
											"name": "PUSH",
											"source": 18,
											"value": "4672657175656E6379206D7573742062652067726561746572207468616E2030"
										},
										{
											"begin": 14445,
											"end": 14446,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14437,
											"end": 14443,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14433,
											"end": 14447,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14426,
											"end": 14484,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14309,
											"end": 14491,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14309,
											"end": 14491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14497,
											"end": 14863,
											"name": "tag",
											"source": 18,
											"value": "368"
										},
										{
											"begin": 14497,
											"end": 14863,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14639,
											"end": 14642,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14660,
											"end": 14727,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "588"
										},
										{
											"begin": 14724,
											"end": 14726,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14719,
											"end": 14722,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14660,
											"end": 14727,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "364"
										},
										{
											"begin": 14660,
											"end": 14727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14660,
											"end": 14727,
											"name": "tag",
											"source": 18,
											"value": "588"
										},
										{
											"begin": 14660,
											"end": 14727,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14653,
											"end": 14727,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14653,
											"end": 14727,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14736,
											"end": 14829,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 14825,
											"end": 14828,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14736,
											"end": 14829,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "367"
										},
										{
											"begin": 14736,
											"end": 14829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14736,
											"end": 14829,
											"name": "tag",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 14736,
											"end": 14829,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14854,
											"end": 14856,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14849,
											"end": 14852,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14845,
											"end": 14857,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14838,
											"end": 14857,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14838,
											"end": 14857,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14497,
											"end": 14863,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14497,
											"end": 14863,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14497,
											"end": 14863,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14497,
											"end": 14863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14869,
											"end": 15288,
											"name": "tag",
											"source": 18,
											"value": "127"
										},
										{
											"begin": 14869,
											"end": 15288,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15035,
											"end": 15039,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15073,
											"end": 15075,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 15062,
											"end": 15071,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15058,
											"end": 15076,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15050,
											"end": 15076,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15050,
											"end": 15076,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15122,
											"end": 15131,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15116,
											"end": 15120,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15112,
											"end": 15132,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 15108,
											"end": 15109,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15097,
											"end": 15106,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 15093,
											"end": 15110,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15086,
											"end": 15133,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15150,
											"end": 15281,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "591"
										},
										{
											"begin": 15276,
											"end": 15280,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15150,
											"end": 15281,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "368"
										},
										{
											"begin": 15150,
											"end": 15281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15150,
											"end": 15281,
											"name": "tag",
											"source": 18,
											"value": "591"
										},
										{
											"begin": 15150,
											"end": 15281,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15142,
											"end": 15281,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15142,
											"end": 15281,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14869,
											"end": 15288,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14869,
											"end": 15288,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14869,
											"end": 15288,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14869,
											"end": 15288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15294,
											"end": 15473,
											"name": "tag",
											"source": 18,
											"value": "369"
										},
										{
											"begin": 15294,
											"end": 15473,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15434,
											"end": 15465,
											"name": "PUSH",
											"source": 18,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 15430,
											"end": 15431,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15422,
											"end": 15428,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15418,
											"end": 15432,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15411,
											"end": 15466,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15294,
											"end": 15473,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15294,
											"end": 15473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15479,
											"end": 15845,
											"name": "tag",
											"source": 18,
											"value": "370"
										},
										{
											"begin": 15479,
											"end": 15845,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15621,
											"end": 15624,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15642,
											"end": 15709,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "594"
										},
										{
											"begin": 15706,
											"end": 15708,
											"name": "PUSH",
											"source": 18,
											"value": "1D"
										},
										{
											"begin": 15701,
											"end": 15704,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 15642,
											"end": 15709,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "364"
										},
										{
											"begin": 15642,
											"end": 15709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15642,
											"end": 15709,
											"name": "tag",
											"source": 18,
											"value": "594"
										},
										{
											"begin": 15642,
											"end": 15709,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15635,
											"end": 15709,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15635,
											"end": 15709,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15718,
											"end": 15811,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "595"
										},
										{
											"begin": 15807,
											"end": 15810,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15718,
											"end": 15811,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "369"
										},
										{
											"begin": 15718,
											"end": 15811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15718,
											"end": 15811,
											"name": "tag",
											"source": 18,
											"value": "595"
										},
										{
											"begin": 15718,
											"end": 15811,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15836,
											"end": 15838,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 15831,
											"end": 15834,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15827,
											"end": 15839,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15820,
											"end": 15839,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15820,
											"end": 15839,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15479,
											"end": 15845,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15479,
											"end": 15845,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15479,
											"end": 15845,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15479,
											"end": 15845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15851,
											"end": 16270,
											"name": "tag",
											"source": 18,
											"value": "130"
										},
										{
											"begin": 15851,
											"end": 16270,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16017,
											"end": 16021,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16055,
											"end": 16057,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 16044,
											"end": 16053,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16040,
											"end": 16058,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16032,
											"end": 16058,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16032,
											"end": 16058,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16104,
											"end": 16113,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16098,
											"end": 16102,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16094,
											"end": 16114,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 16090,
											"end": 16091,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16079,
											"end": 16088,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 16075,
											"end": 16092,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16068,
											"end": 16115,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 16132,
											"end": 16263,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "597"
										},
										{
											"begin": 16258,
											"end": 16262,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16132,
											"end": 16263,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "370"
										},
										{
											"begin": 16132,
											"end": 16263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16132,
											"end": 16263,
											"name": "tag",
											"source": 18,
											"value": "597"
										},
										{
											"begin": 16132,
											"end": 16263,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16124,
											"end": 16263,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16124,
											"end": 16263,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15851,
											"end": 16270,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15851,
											"end": 16270,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15851,
											"end": 16270,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15851,
											"end": 16270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16276,
											"end": 16608,
											"name": "tag",
											"source": 18,
											"value": "132"
										},
										{
											"begin": 16276,
											"end": 16608,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16397,
											"end": 16401,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16435,
											"end": 16437,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 16424,
											"end": 16433,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16420,
											"end": 16438,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16412,
											"end": 16438,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16412,
											"end": 16438,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16448,
											"end": 16519,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "599"
										},
										{
											"begin": 16516,
											"end": 16517,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16505,
											"end": 16514,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 16501,
											"end": 16518,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16492,
											"end": 16498,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 16448,
											"end": 16519,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "363"
										},
										{
											"begin": 16448,
											"end": 16519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16448,
											"end": 16519,
											"name": "tag",
											"source": 18,
											"value": "599"
										},
										{
											"begin": 16448,
											"end": 16519,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16529,
											"end": 16601,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "600"
										},
										{
											"begin": 16597,
											"end": 16599,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 16586,
											"end": 16595,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 16582,
											"end": 16600,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16573,
											"end": 16579,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 16529,
											"end": 16601,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "363"
										},
										{
											"begin": 16529,
											"end": 16601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16529,
											"end": 16601,
											"name": "tag",
											"source": 18,
											"value": "600"
										},
										{
											"begin": 16529,
											"end": 16601,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16276,
											"end": 16608,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 16276,
											"end": 16608,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 16276,
											"end": 16608,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16276,
											"end": 16608,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16276,
											"end": 16608,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16276,
											"end": 16608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16614,
											"end": 16946,
											"name": "tag",
											"source": 18,
											"value": "136"
										},
										{
											"begin": 16614,
											"end": 16946,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16735,
											"end": 16739,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16773,
											"end": 16775,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 16762,
											"end": 16771,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16758,
											"end": 16776,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16750,
											"end": 16776,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16750,
											"end": 16776,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16786,
											"end": 16857,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "602"
										},
										{
											"begin": 16854,
											"end": 16855,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16843,
											"end": 16852,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 16839,
											"end": 16856,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16830,
											"end": 16836,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 16786,
											"end": 16857,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "348"
										},
										{
											"begin": 16786,
											"end": 16857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16786,
											"end": 16857,
											"name": "tag",
											"source": 18,
											"value": "602"
										},
										{
											"begin": 16786,
											"end": 16857,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16867,
											"end": 16939,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "603"
										},
										{
											"begin": 16935,
											"end": 16937,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 16924,
											"end": 16933,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 16920,
											"end": 16938,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16911,
											"end": 16917,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 16867,
											"end": 16939,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "348"
										},
										{
											"begin": 16867,
											"end": 16939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16867,
											"end": 16939,
											"name": "tag",
											"source": 18,
											"value": "603"
										},
										{
											"begin": 16867,
											"end": 16939,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16614,
											"end": 16946,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 16614,
											"end": 16946,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 16614,
											"end": 16946,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16614,
											"end": 16946,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16614,
											"end": 16946,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16614,
											"end": 16946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16952,
											"end": 17056,
											"name": "tag",
											"source": 18,
											"value": "371"
										},
										{
											"begin": 16952,
											"end": 17056,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16997,
											"end": 17004,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17026,
											"end": 17050,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "605"
										},
										{
											"begin": 17044,
											"end": 17049,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17026,
											"end": 17050,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "329"
										},
										{
											"begin": 17026,
											"end": 17050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17026,
											"end": 17050,
											"name": "tag",
											"source": 18,
											"value": "605"
										},
										{
											"begin": 17026,
											"end": 17050,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17015,
											"end": 17050,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17015,
											"end": 17050,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16952,
											"end": 17056,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16952,
											"end": 17056,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16952,
											"end": 17056,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16952,
											"end": 17056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17062,
											"end": 17200,
											"name": "tag",
											"source": 18,
											"value": "372"
										},
										{
											"begin": 17062,
											"end": 17200,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17143,
											"end": 17175,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "607"
										},
										{
											"begin": 17169,
											"end": 17174,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17143,
											"end": 17175,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "371"
										},
										{
											"begin": 17143,
											"end": 17175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17143,
											"end": 17175,
											"name": "tag",
											"source": 18,
											"value": "607"
										},
										{
											"begin": 17143,
											"end": 17175,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17136,
											"end": 17141,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17133,
											"end": 17176,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 17123,
											"end": 17194,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "608"
										},
										{
											"begin": 17123,
											"end": 17194,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 17190,
											"end": 17191,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17187,
											"end": 17188,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 17180,
											"end": 17192,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 17123,
											"end": 17194,
											"name": "tag",
											"source": 18,
											"value": "608"
										},
										{
											"begin": 17123,
											"end": 17194,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17062,
											"end": 17200,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17062,
											"end": 17200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17206,
											"end": 17361,
											"name": "tag",
											"source": 18,
											"value": "373"
										},
										{
											"begin": 17206,
											"end": 17361,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17260,
											"end": 17265,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17298,
											"end": 17304,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17285,
											"end": 17305,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 17276,
											"end": 17305,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17276,
											"end": 17305,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17314,
											"end": 17355,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "610"
										},
										{
											"begin": 17349,
											"end": 17354,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17314,
											"end": 17355,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "372"
										},
										{
											"begin": 17314,
											"end": 17355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17314,
											"end": 17355,
											"name": "tag",
											"source": 18,
											"value": "610"
										},
										{
											"begin": 17314,
											"end": 17355,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17206,
											"end": 17361,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 17206,
											"end": 17361,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17206,
											"end": 17361,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17206,
											"end": 17361,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17206,
											"end": 17361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17367,
											"end": 17712,
											"name": "tag",
											"source": 18,
											"value": "141"
										},
										{
											"begin": 17367,
											"end": 17712,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17434,
											"end": 17440,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17483,
											"end": 17485,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 17471,
											"end": 17480,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17462,
											"end": 17469,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 17458,
											"end": 17481,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 17454,
											"end": 17486,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 17451,
											"end": 17570,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 17451,
											"end": 17570,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "612"
										},
										{
											"begin": 17451,
											"end": 17570,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 17489,
											"end": 17568,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "613"
										},
										{
											"begin": 17489,
											"end": 17568,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "324"
										},
										{
											"begin": 17489,
											"end": 17568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17489,
											"end": 17568,
											"name": "tag",
											"source": 18,
											"value": "613"
										},
										{
											"begin": 17489,
											"end": 17568,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17451,
											"end": 17570,
											"name": "tag",
											"source": 18,
											"value": "612"
										},
										{
											"begin": 17451,
											"end": 17570,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17609,
											"end": 17610,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17634,
											"end": 17695,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "614"
										},
										{
											"begin": 17687,
											"end": 17694,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 17678,
											"end": 17684,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17667,
											"end": 17676,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 17663,
											"end": 17685,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17634,
											"end": 17695,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "373"
										},
										{
											"begin": 17634,
											"end": 17695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17634,
											"end": 17695,
											"name": "tag",
											"source": 18,
											"value": "614"
										},
										{
											"begin": 17634,
											"end": 17695,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17624,
											"end": 17695,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17624,
											"end": 17695,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17580,
											"end": 17705,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17367,
											"end": 17712,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 17367,
											"end": 17712,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17367,
											"end": 17712,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17367,
											"end": 17712,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17367,
											"end": 17712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17718,
											"end": 17898,
											"name": "tag",
											"source": 18,
											"value": "374"
										},
										{
											"begin": 17718,
											"end": 17898,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17766,
											"end": 17843,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17763,
											"end": 17764,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17756,
											"end": 17844,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 17863,
											"end": 17867,
											"name": "PUSH",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 17860,
											"end": 17861,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 17853,
											"end": 17868,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 17887,
											"end": 17891,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 17884,
											"end": 17885,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17877,
											"end": 17892,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 17904,
											"end": 18098,
											"name": "tag",
											"source": 18,
											"value": "145"
										},
										{
											"begin": 17904,
											"end": 18098,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17944,
											"end": 17948,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17964,
											"end": 17984,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "617"
										},
										{
											"begin": 17982,
											"end": 17983,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17964,
											"end": 17984,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 17964,
											"end": 17984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17964,
											"end": 17984,
											"name": "tag",
											"source": 18,
											"value": "617"
										},
										{
											"begin": 17964,
											"end": 17984,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17959,
											"end": 17984,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17959,
											"end": 17984,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17998,
											"end": 18018,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "618"
										},
										{
											"begin": 18016,
											"end": 18017,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 17998,
											"end": 18018,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 17998,
											"end": 18018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17998,
											"end": 18018,
											"name": "tag",
											"source": 18,
											"value": "618"
										},
										{
											"begin": 17998,
											"end": 18018,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17993,
											"end": 18018,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 17993,
											"end": 18018,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18042,
											"end": 18043,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18039,
											"end": 18040,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18035,
											"end": 18044,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 18027,
											"end": 18044,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18027,
											"end": 18044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18066,
											"end": 18067,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18060,
											"end": 18064,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18057,
											"end": 18068,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 18054,
											"end": 18091,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 18054,
											"end": 18091,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "619"
										},
										{
											"begin": 18054,
											"end": 18091,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 18071,
											"end": 18089,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "620"
										},
										{
											"begin": 18071,
											"end": 18089,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "374"
										},
										{
											"begin": 18071,
											"end": 18089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18071,
											"end": 18089,
											"name": "tag",
											"source": 18,
											"value": "620"
										},
										{
											"begin": 18071,
											"end": 18089,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18054,
											"end": 18091,
											"name": "tag",
											"source": 18,
											"value": "619"
										},
										{
											"begin": 18054,
											"end": 18091,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17904,
											"end": 18098,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 17904,
											"end": 18098,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17904,
											"end": 18098,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17904,
											"end": 18098,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17904,
											"end": 18098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18104,
											"end": 18284,
											"name": "tag",
											"source": 18,
											"value": "375"
										},
										{
											"begin": 18104,
											"end": 18284,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18152,
											"end": 18229,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18149,
											"end": 18150,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18142,
											"end": 18230,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 18249,
											"end": 18253,
											"name": "PUSH",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 18246,
											"end": 18247,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 18239,
											"end": 18254,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 18273,
											"end": 18277,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 18270,
											"end": 18271,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18263,
											"end": 18278,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 18290,
											"end": 18466,
											"name": "tag",
											"source": 18,
											"value": "147"
										},
										{
											"begin": 18290,
											"end": 18466,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18322,
											"end": 18323,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18339,
											"end": 18359,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "623"
										},
										{
											"begin": 18357,
											"end": 18358,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18339,
											"end": 18359,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 18339,
											"end": 18359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18339,
											"end": 18359,
											"name": "tag",
											"source": 18,
											"value": "623"
										},
										{
											"begin": 18339,
											"end": 18359,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18334,
											"end": 18359,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18334,
											"end": 18359,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18373,
											"end": 18393,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "624"
										},
										{
											"begin": 18391,
											"end": 18392,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18373,
											"end": 18393,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 18373,
											"end": 18393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18373,
											"end": 18393,
											"name": "tag",
											"source": 18,
											"value": "624"
										},
										{
											"begin": 18373,
											"end": 18393,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18368,
											"end": 18393,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 18368,
											"end": 18393,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18412,
											"end": 18413,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18402,
											"end": 18437,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "625"
										},
										{
											"begin": 18402,
											"end": 18437,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 18417,
											"end": 18435,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "626"
										},
										{
											"begin": 18417,
											"end": 18435,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "375"
										},
										{
											"begin": 18417,
											"end": 18435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18417,
											"end": 18435,
											"name": "tag",
											"source": 18,
											"value": "626"
										},
										{
											"begin": 18417,
											"end": 18435,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18402,
											"end": 18437,
											"name": "tag",
											"source": 18,
											"value": "625"
										},
										{
											"begin": 18402,
											"end": 18437,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18458,
											"end": 18459,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18455,
											"end": 18456,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18451,
											"end": 18460,
											"name": "MOD",
											"source": 18
										},
										{
											"begin": 18446,
											"end": 18460,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18446,
											"end": 18460,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18290,
											"end": 18466,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 18290,
											"end": 18466,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18290,
											"end": 18466,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18290,
											"end": 18466,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18290,
											"end": 18466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18472,
											"end": 18663,
											"name": "tag",
											"source": 18,
											"value": "149"
										},
										{
											"begin": 18472,
											"end": 18663,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18512,
											"end": 18515,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18531,
											"end": 18551,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "628"
										},
										{
											"begin": 18549,
											"end": 18550,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18531,
											"end": 18551,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 18531,
											"end": 18551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18531,
											"end": 18551,
											"name": "tag",
											"source": 18,
											"value": "628"
										},
										{
											"begin": 18531,
											"end": 18551,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18526,
											"end": 18551,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18526,
											"end": 18551,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18565,
											"end": 18585,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "629"
										},
										{
											"begin": 18583,
											"end": 18584,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18565,
											"end": 18585,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 18565,
											"end": 18585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18565,
											"end": 18585,
											"name": "tag",
											"source": 18,
											"value": "629"
										},
										{
											"begin": 18565,
											"end": 18585,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18560,
											"end": 18585,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 18560,
											"end": 18585,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18608,
											"end": 18609,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18605,
											"end": 18606,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18601,
											"end": 18610,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18594,
											"end": 18610,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18594,
											"end": 18610,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18629,
											"end": 18632,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 18626,
											"end": 18627,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18623,
											"end": 18633,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 18620,
											"end": 18656,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 18620,
											"end": 18656,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "630"
										},
										{
											"begin": 18620,
											"end": 18656,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 18636,
											"end": 18654,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "631"
										},
										{
											"begin": 18636,
											"end": 18654,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "374"
										},
										{
											"begin": 18636,
											"end": 18654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18636,
											"end": 18654,
											"name": "tag",
											"source": 18,
											"value": "631"
										},
										{
											"begin": 18636,
											"end": 18654,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18620,
											"end": 18656,
											"name": "tag",
											"source": 18,
											"value": "630"
										},
										{
											"begin": 18620,
											"end": 18656,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18472,
											"end": 18663,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 18472,
											"end": 18663,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18472,
											"end": 18663,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18472,
											"end": 18663,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18472,
											"end": 18663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18669,
											"end": 18836,
											"name": "tag",
											"source": 18,
											"value": "376"
										},
										{
											"begin": 18669,
											"end": 18836,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18809,
											"end": 18828,
											"name": "PUSH",
											"source": 18,
											"value": "506C616E206973206E6F74206578697374000000000000000000000000000000"
										},
										{
											"begin": 18805,
											"end": 18806,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18797,
											"end": 18803,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18793,
											"end": 18807,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18786,
											"end": 18829,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 18669,
											"end": 18836,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18669,
											"end": 18836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18842,
											"end": 19208,
											"name": "tag",
											"source": 18,
											"value": "377"
										},
										{
											"begin": 18842,
											"end": 19208,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18984,
											"end": 18987,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19005,
											"end": 19072,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "634"
										},
										{
											"begin": 19069,
											"end": 19071,
											"name": "PUSH",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 19064,
											"end": 19067,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 19005,
											"end": 19072,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "364"
										},
										{
											"begin": 19005,
											"end": 19072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19005,
											"end": 19072,
											"name": "tag",
											"source": 18,
											"value": "634"
										},
										{
											"begin": 19005,
											"end": 19072,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18998,
											"end": 19072,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18998,
											"end": 19072,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19081,
											"end": 19174,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "635"
										},
										{
											"begin": 19170,
											"end": 19173,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19081,
											"end": 19174,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "376"
										},
										{
											"begin": 19081,
											"end": 19174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19081,
											"end": 19174,
											"name": "tag",
											"source": 18,
											"value": "635"
										},
										{
											"begin": 19081,
											"end": 19174,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19199,
											"end": 19201,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 19194,
											"end": 19197,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19190,
											"end": 19202,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19183,
											"end": 19202,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19183,
											"end": 19202,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18842,
											"end": 19208,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18842,
											"end": 19208,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18842,
											"end": 19208,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18842,
											"end": 19208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19214,
											"end": 19633,
											"name": "tag",
											"source": 18,
											"value": "156"
										},
										{
											"begin": 19214,
											"end": 19633,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19380,
											"end": 19384,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19418,
											"end": 19420,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 19407,
											"end": 19416,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19403,
											"end": 19421,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19395,
											"end": 19421,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19395,
											"end": 19421,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19467,
											"end": 19476,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19461,
											"end": 19465,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19457,
											"end": 19477,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 19453,
											"end": 19454,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19442,
											"end": 19451,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 19438,
											"end": 19455,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19431,
											"end": 19478,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 19495,
											"end": 19626,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "637"
										},
										{
											"begin": 19621,
											"end": 19625,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19495,
											"end": 19626,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "377"
										},
										{
											"begin": 19495,
											"end": 19626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19495,
											"end": 19626,
											"name": "tag",
											"source": 18,
											"value": "637"
										},
										{
											"begin": 19495,
											"end": 19626,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19487,
											"end": 19626,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19487,
											"end": 19626,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19214,
											"end": 19633,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19214,
											"end": 19633,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19214,
											"end": 19633,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19214,
											"end": 19633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19639,
											"end": 19859,
											"name": "tag",
											"source": 18,
											"value": "378"
										},
										{
											"begin": 19639,
											"end": 19859,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19779,
											"end": 19813,
											"name": "PUSH",
											"source": 18,
											"value": "546F74616C206D7573742062652067726561746572207468616E20616D6F756E"
										},
										{
											"begin": 19775,
											"end": 19776,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19767,
											"end": 19773,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19763,
											"end": 19777,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19756,
											"end": 19814,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 19848,
											"end": 19851,
											"name": "PUSH",
											"source": 18,
											"value": "7400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19843,
											"end": 19845,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 19835,
											"end": 19841,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19831,
											"end": 19846,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19824,
											"end": 19852,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 19639,
											"end": 19859,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19639,
											"end": 19859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19865,
											"end": 20231,
											"name": "tag",
											"source": 18,
											"value": "379"
										},
										{
											"begin": 19865,
											"end": 20231,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20007,
											"end": 20010,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20028,
											"end": 20095,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "640"
										},
										{
											"begin": 20092,
											"end": 20094,
											"name": "PUSH",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 20087,
											"end": 20090,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 20028,
											"end": 20095,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "364"
										},
										{
											"begin": 20028,
											"end": 20095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20028,
											"end": 20095,
											"name": "tag",
											"source": 18,
											"value": "640"
										},
										{
											"begin": 20028,
											"end": 20095,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20021,
											"end": 20095,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20021,
											"end": 20095,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20104,
											"end": 20197,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "641"
										},
										{
											"begin": 20193,
											"end": 20196,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20104,
											"end": 20197,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "378"
										},
										{
											"begin": 20104,
											"end": 20197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20104,
											"end": 20197,
											"name": "tag",
											"source": 18,
											"value": "641"
										},
										{
											"begin": 20104,
											"end": 20197,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20222,
											"end": 20224,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 20217,
											"end": 20220,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20213,
											"end": 20225,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20206,
											"end": 20225,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20206,
											"end": 20225,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19865,
											"end": 20231,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19865,
											"end": 20231,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19865,
											"end": 20231,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19865,
											"end": 20231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20237,
											"end": 20656,
											"name": "tag",
											"source": 18,
											"value": "162"
										},
										{
											"begin": 20237,
											"end": 20656,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20403,
											"end": 20407,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20441,
											"end": 20443,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 20430,
											"end": 20439,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20426,
											"end": 20444,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20418,
											"end": 20444,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20418,
											"end": 20444,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20490,
											"end": 20499,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20484,
											"end": 20488,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20480,
											"end": 20500,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 20476,
											"end": 20477,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20465,
											"end": 20474,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 20461,
											"end": 20478,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20454,
											"end": 20501,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 20518,
											"end": 20649,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "643"
										},
										{
											"begin": 20644,
											"end": 20648,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20518,
											"end": 20649,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "379"
										},
										{
											"begin": 20518,
											"end": 20649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20518,
											"end": 20649,
											"name": "tag",
											"source": 18,
											"value": "643"
										},
										{
											"begin": 20518,
											"end": 20649,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20510,
											"end": 20649,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20510,
											"end": 20649,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20237,
											"end": 20656,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20237,
											"end": 20656,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20237,
											"end": 20656,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20237,
											"end": 20656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20662,
											"end": 20895,
											"name": "tag",
											"source": 18,
											"value": "173"
										},
										{
											"begin": 20662,
											"end": 20895,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20701,
											"end": 20704,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20724,
											"end": 20748,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "645"
										},
										{
											"begin": 20742,
											"end": 20747,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20724,
											"end": 20748,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 20724,
											"end": 20748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20724,
											"end": 20748,
											"name": "tag",
											"source": 18,
											"value": "645"
										},
										{
											"begin": 20724,
											"end": 20748,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20715,
											"end": 20748,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20715,
											"end": 20748,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20770,
											"end": 20836,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20763,
											"end": 20768,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20760,
											"end": 20837,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 20757,
											"end": 20860,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "646"
										},
										{
											"begin": 20757,
											"end": 20860,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 20840,
											"end": 20858,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "647"
										},
										{
											"begin": 20840,
											"end": 20858,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "374"
										},
										{
											"begin": 20840,
											"end": 20858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20840,
											"end": 20858,
											"name": "tag",
											"source": 18,
											"value": "647"
										},
										{
											"begin": 20840,
											"end": 20858,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20757,
											"end": 20860,
											"name": "tag",
											"source": 18,
											"value": "646"
										},
										{
											"begin": 20757,
											"end": 20860,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20887,
											"end": 20888,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 20880,
											"end": 20885,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20876,
											"end": 20889,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20869,
											"end": 20889,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20869,
											"end": 20889,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20662,
											"end": 20895,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20662,
											"end": 20895,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20662,
											"end": 20895,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20662,
											"end": 20895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20901,
											"end": 21069,
											"name": "tag",
											"source": 18,
											"value": "380"
										},
										{
											"begin": 20901,
											"end": 21069,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21041,
											"end": 21061,
											"name": "PUSH",
											"source": 18,
											"value": "506C616E206973206E6F74206163746976650000000000000000000000000000"
										},
										{
											"begin": 21037,
											"end": 21038,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21029,
											"end": 21035,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21025,
											"end": 21039,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21018,
											"end": 21062,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 20901,
											"end": 21069,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20901,
											"end": 21069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21075,
											"end": 21441,
											"name": "tag",
											"source": 18,
											"value": "381"
										},
										{
											"begin": 21075,
											"end": 21441,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21217,
											"end": 21220,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21238,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "650"
										},
										{
											"begin": 21302,
											"end": 21304,
											"name": "PUSH",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 21297,
											"end": 21300,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 21238,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "364"
										},
										{
											"begin": 21238,
											"end": 21305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21238,
											"end": 21305,
											"name": "tag",
											"source": 18,
											"value": "650"
										},
										{
											"begin": 21238,
											"end": 21305,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21231,
											"end": 21305,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21231,
											"end": 21305,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21314,
											"end": 21407,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "651"
										},
										{
											"begin": 21403,
											"end": 21406,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21314,
											"end": 21407,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "380"
										},
										{
											"begin": 21314,
											"end": 21407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21314,
											"end": 21407,
											"name": "tag",
											"source": 18,
											"value": "651"
										},
										{
											"begin": 21314,
											"end": 21407,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21432,
											"end": 21434,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 21427,
											"end": 21430,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21423,
											"end": 21435,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21416,
											"end": 21435,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21416,
											"end": 21435,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21075,
											"end": 21441,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21075,
											"end": 21441,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21075,
											"end": 21441,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21075,
											"end": 21441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21447,
											"end": 21866,
											"name": "tag",
											"source": 18,
											"value": "179"
										},
										{
											"begin": 21447,
											"end": 21866,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21613,
											"end": 21617,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21651,
											"end": 21653,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 21640,
											"end": 21649,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21636,
											"end": 21654,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21628,
											"end": 21654,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21628,
											"end": 21654,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21700,
											"end": 21709,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21694,
											"end": 21698,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21690,
											"end": 21710,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 21686,
											"end": 21687,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21675,
											"end": 21684,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 21671,
											"end": 21688,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21664,
											"end": 21711,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 21728,
											"end": 21859,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "653"
										},
										{
											"begin": 21854,
											"end": 21858,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21728,
											"end": 21859,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "381"
										},
										{
											"begin": 21728,
											"end": 21859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21728,
											"end": 21859,
											"name": "tag",
											"source": 18,
											"value": "653"
										},
										{
											"begin": 21728,
											"end": 21859,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21720,
											"end": 21859,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21720,
											"end": 21859,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21447,
											"end": 21866,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21447,
											"end": 21866,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21447,
											"end": 21866,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21447,
											"end": 21866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21872,
											"end": 22100,
											"name": "tag",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 21872,
											"end": 22100,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22012,
											"end": 22046,
											"name": "PUSH",
											"source": 18,
											"value": "43616E6E6F742074726967676572206D6F7265207468616E2072656D61696E69"
										},
										{
											"begin": 22008,
											"end": 22009,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22000,
											"end": 22006,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21996,
											"end": 22010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21989,
											"end": 22047,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 22081,
											"end": 22092,
											"name": "PUSH",
											"source": 18,
											"value": "6E6720616D6F756E740000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22076,
											"end": 22078,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 22068,
											"end": 22074,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22064,
											"end": 22079,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 22057,
											"end": 22093,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 21872,
											"end": 22100,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21872,
											"end": 22100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22106,
											"end": 22472,
											"name": "tag",
											"source": 18,
											"value": "383"
										},
										{
											"begin": 22106,
											"end": 22472,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22248,
											"end": 22251,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22269,
											"end": 22336,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "656"
										},
										{
											"begin": 22333,
											"end": 22335,
											"name": "PUSH",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 22328,
											"end": 22331,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 22269,
											"end": 22336,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "364"
										},
										{
											"begin": 22269,
											"end": 22336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22269,
											"end": 22336,
											"name": "tag",
											"source": 18,
											"value": "656"
										},
										{
											"begin": 22269,
											"end": 22336,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22262,
											"end": 22336,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22262,
											"end": 22336,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22345,
											"end": 22438,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "657"
										},
										{
											"begin": 22434,
											"end": 22437,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22345,
											"end": 22438,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 22345,
											"end": 22438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22345,
											"end": 22438,
											"name": "tag",
											"source": 18,
											"value": "657"
										},
										{
											"begin": 22345,
											"end": 22438,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22463,
											"end": 22465,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 22458,
											"end": 22461,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22454,
											"end": 22466,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 22447,
											"end": 22466,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22447,
											"end": 22466,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22106,
											"end": 22472,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22106,
											"end": 22472,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22106,
											"end": 22472,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22106,
											"end": 22472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22478,
											"end": 22897,
											"name": "tag",
											"source": 18,
											"value": "183"
										},
										{
											"begin": 22478,
											"end": 22897,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22644,
											"end": 22648,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22682,
											"end": 22684,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 22671,
											"end": 22680,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22667,
											"end": 22685,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 22659,
											"end": 22685,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22659,
											"end": 22685,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22731,
											"end": 22740,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22725,
											"end": 22729,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22721,
											"end": 22741,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 22717,
											"end": 22718,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22706,
											"end": 22715,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 22702,
											"end": 22719,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 22695,
											"end": 22742,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 22759,
											"end": 22890,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "659"
										},
										{
											"begin": 22885,
											"end": 22889,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22759,
											"end": 22890,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "383"
										},
										{
											"begin": 22759,
											"end": 22890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22759,
											"end": 22890,
											"name": "tag",
											"source": 18,
											"value": "659"
										},
										{
											"begin": 22759,
											"end": 22890,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22751,
											"end": 22890,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22751,
											"end": 22890,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22478,
											"end": 22897,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22478,
											"end": 22897,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22478,
											"end": 22897,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22478,
											"end": 22897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22903,
											"end": 23129,
											"name": "tag",
											"source": 18,
											"value": "384"
										},
										{
											"begin": 22903,
											"end": 23129,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23043,
											"end": 23077,
											"name": "PUSH",
											"source": 18,
											"value": "43616E6E6F742074726967676572206265666F7265206E657874207472696767"
										},
										{
											"begin": 23039,
											"end": 23040,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23031,
											"end": 23037,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23027,
											"end": 23041,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23020,
											"end": 23078,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 23112,
											"end": 23121,
											"name": "PUSH",
											"source": 18,
											"value": "65722074696D6500000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23107,
											"end": 23109,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 23099,
											"end": 23105,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23095,
											"end": 23110,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23088,
											"end": 23122,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 22903,
											"end": 23129,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22903,
											"end": 23129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23135,
											"end": 23501,
											"name": "tag",
											"source": 18,
											"value": "385"
										},
										{
											"begin": 23135,
											"end": 23501,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23277,
											"end": 23280,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23298,
											"end": 23365,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "662"
										},
										{
											"begin": 23362,
											"end": 23364,
											"name": "PUSH",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 23357,
											"end": 23360,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 23298,
											"end": 23365,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "364"
										},
										{
											"begin": 23298,
											"end": 23365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23298,
											"end": 23365,
											"name": "tag",
											"source": 18,
											"value": "662"
										},
										{
											"begin": 23298,
											"end": 23365,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23291,
											"end": 23365,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23291,
											"end": 23365,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23374,
											"end": 23467,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "663"
										},
										{
											"begin": 23463,
											"end": 23466,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23374,
											"end": 23467,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "384"
										},
										{
											"begin": 23374,
											"end": 23467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23374,
											"end": 23467,
											"name": "tag",
											"source": 18,
											"value": "663"
										},
										{
											"begin": 23374,
											"end": 23467,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23492,
											"end": 23494,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 23487,
											"end": 23490,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23483,
											"end": 23495,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23476,
											"end": 23495,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23476,
											"end": 23495,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23135,
											"end": 23501,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23135,
											"end": 23501,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23135,
											"end": 23501,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23135,
											"end": 23501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23507,
											"end": 23926,
											"name": "tag",
											"source": 18,
											"value": "186"
										},
										{
											"begin": 23507,
											"end": 23926,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23673,
											"end": 23677,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23711,
											"end": 23713,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 23700,
											"end": 23709,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23696,
											"end": 23714,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23688,
											"end": 23714,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23688,
											"end": 23714,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23760,
											"end": 23769,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 23754,
											"end": 23758,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 23750,
											"end": 23770,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 23746,
											"end": 23747,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23735,
											"end": 23744,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 23731,
											"end": 23748,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23724,
											"end": 23771,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 23788,
											"end": 23919,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "665"
										},
										{
											"begin": 23914,
											"end": 23918,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 23788,
											"end": 23919,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "385"
										},
										{
											"begin": 23788,
											"end": 23919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23788,
											"end": 23919,
											"name": "tag",
											"source": 18,
											"value": "665"
										},
										{
											"begin": 23788,
											"end": 23919,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23780,
											"end": 23919,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23780,
											"end": 23919,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23507,
											"end": 23926,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23507,
											"end": 23926,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23507,
											"end": 23926,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23507,
											"end": 23926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23932,
											"end": 24037,
											"name": "tag",
											"source": 18,
											"value": "386"
										},
										{
											"begin": 23932,
											"end": 24037,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23968,
											"end": 23975,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24008,
											"end": 24030,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24001,
											"end": 24006,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23997,
											"end": 24031,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 23986,
											"end": 24031,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23986,
											"end": 24031,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23932,
											"end": 24037,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23932,
											"end": 24037,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23932,
											"end": 24037,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23932,
											"end": 24037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24043,
											"end": 24163,
											"name": "tag",
											"source": 18,
											"value": "387"
										},
										{
											"begin": 24043,
											"end": 24163,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24115,
											"end": 24138,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "668"
										},
										{
											"begin": 24132,
											"end": 24137,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 24115,
											"end": 24138,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "386"
										},
										{
											"begin": 24115,
											"end": 24138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24115,
											"end": 24138,
											"name": "tag",
											"source": 18,
											"value": "668"
										},
										{
											"begin": 24115,
											"end": 24138,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24108,
											"end": 24113,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 24105,
											"end": 24139,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 24095,
											"end": 24157,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "669"
										},
										{
											"begin": 24095,
											"end": 24157,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 24153,
											"end": 24154,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24150,
											"end": 24151,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 24143,
											"end": 24155,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 24095,
											"end": 24157,
											"name": "tag",
											"source": 18,
											"value": "669"
										},
										{
											"begin": 24095,
											"end": 24157,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24043,
											"end": 24163,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24043,
											"end": 24163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24169,
											"end": 24310,
											"name": "tag",
											"source": 18,
											"value": "388"
										},
										{
											"begin": 24169,
											"end": 24310,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24225,
											"end": 24230,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24256,
											"end": 24262,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 24250,
											"end": 24263,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 24241,
											"end": 24263,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24241,
											"end": 24263,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24272,
											"end": 24304,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "671"
										},
										{
											"begin": 24298,
											"end": 24303,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 24272,
											"end": 24304,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "387"
										},
										{
											"begin": 24272,
											"end": 24304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24272,
											"end": 24304,
											"name": "tag",
											"source": 18,
											"value": "671"
										},
										{
											"begin": 24272,
											"end": 24304,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24169,
											"end": 24310,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 24169,
											"end": 24310,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 24169,
											"end": 24310,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24169,
											"end": 24310,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24169,
											"end": 24310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24316,
											"end": 24392,
											"name": "tag",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 24316,
											"end": 24392,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24352,
											"end": 24359,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24381,
											"end": 24386,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 24370,
											"end": 24386,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24370,
											"end": 24386,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24316,
											"end": 24392,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 24316,
											"end": 24392,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24316,
											"end": 24392,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24316,
											"end": 24392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24398,
											"end": 24518,
											"name": "tag",
											"source": 18,
											"value": "390"
										},
										{
											"begin": 24398,
											"end": 24518,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24470,
											"end": 24493,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "674"
										},
										{
											"begin": 24487,
											"end": 24492,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 24470,
											"end": 24493,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 24470,
											"end": 24493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24470,
											"end": 24493,
											"name": "tag",
											"source": 18,
											"value": "674"
										},
										{
											"begin": 24470,
											"end": 24493,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24463,
											"end": 24468,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 24460,
											"end": 24494,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 24450,
											"end": 24512,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "675"
										},
										{
											"begin": 24450,
											"end": 24512,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 24508,
											"end": 24509,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24505,
											"end": 24506,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 24498,
											"end": 24510,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 24450,
											"end": 24512,
											"name": "tag",
											"source": 18,
											"value": "675"
										},
										{
											"begin": 24450,
											"end": 24512,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24398,
											"end": 24518,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24398,
											"end": 24518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24524,
											"end": 24665,
											"name": "tag",
											"source": 18,
											"value": "391"
										},
										{
											"begin": 24524,
											"end": 24665,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24580,
											"end": 24585,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24611,
											"end": 24617,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 24605,
											"end": 24618,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 24596,
											"end": 24618,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24596,
											"end": 24618,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24627,
											"end": 24659,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "677"
										},
										{
											"begin": 24653,
											"end": 24658,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 24627,
											"end": 24659,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "390"
										},
										{
											"begin": 24627,
											"end": 24659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24627,
											"end": 24659,
											"name": "tag",
											"source": 18,
											"value": "677"
										},
										{
											"begin": 24627,
											"end": 24659,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24524,
											"end": 24665,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 24524,
											"end": 24665,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 24524,
											"end": 24665,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24524,
											"end": 24665,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24524,
											"end": 24665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24671,
											"end": 24814,
											"name": "tag",
											"source": 18,
											"value": "392"
										},
										{
											"begin": 24671,
											"end": 24814,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24728,
											"end": 24733,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24759,
											"end": 24765,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 24753,
											"end": 24766,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 24744,
											"end": 24766,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24744,
											"end": 24766,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24775,
											"end": 24808,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "679"
										},
										{
											"begin": 24802,
											"end": 24807,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 24775,
											"end": 24808,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "327"
										},
										{
											"begin": 24775,
											"end": 24808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24775,
											"end": 24808,
											"name": "tag",
											"source": 18,
											"value": "679"
										},
										{
											"begin": 24775,
											"end": 24808,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24671,
											"end": 24814,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 24671,
											"end": 24814,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 24671,
											"end": 24814,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24671,
											"end": 24814,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24671,
											"end": 24814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24820,
											"end": 25791,
											"name": "tag",
											"source": 18,
											"value": "190"
										},
										{
											"begin": 24820,
											"end": 25791,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24923,
											"end": 24929,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24931,
											"end": 24937,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 24939,
											"end": 24945,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24947,
											"end": 24953,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 24955,
											"end": 24961,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25004,
											"end": 25007,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 24992,
											"end": 25001,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 24983,
											"end": 24990,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 24979,
											"end": 25002,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 24975,
											"end": 25008,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 24972,
											"end": 25092,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 24972,
											"end": 25092,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "681"
										},
										{
											"begin": 24972,
											"end": 25092,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 25011,
											"end": 25090,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "682"
										},
										{
											"begin": 25011,
											"end": 25090,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "324"
										},
										{
											"begin": 25011,
											"end": 25090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25011,
											"end": 25090,
											"name": "tag",
											"source": 18,
											"value": "682"
										},
										{
											"begin": 25011,
											"end": 25090,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24972,
											"end": 25092,
											"name": "tag",
											"source": 18,
											"value": "681"
										},
										{
											"begin": 24972,
											"end": 25092,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25131,
											"end": 25132,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25156,
											"end": 25219,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "683"
										},
										{
											"begin": 25211,
											"end": 25218,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 25202,
											"end": 25208,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25191,
											"end": 25200,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 25187,
											"end": 25209,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25156,
											"end": 25219,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "388"
										},
										{
											"begin": 25156,
											"end": 25219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25156,
											"end": 25219,
											"name": "tag",
											"source": 18,
											"value": "683"
										},
										{
											"begin": 25156,
											"end": 25219,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25146,
											"end": 25219,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 25146,
											"end": 25219,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25102,
											"end": 25229,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25268,
											"end": 25270,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 25294,
											"end": 25357,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "684"
										},
										{
											"begin": 25349,
											"end": 25356,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 25340,
											"end": 25346,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25329,
											"end": 25338,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 25325,
											"end": 25347,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25294,
											"end": 25357,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "391"
										},
										{
											"begin": 25294,
											"end": 25357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25294,
											"end": 25357,
											"name": "tag",
											"source": 18,
											"value": "684"
										},
										{
											"begin": 25294,
											"end": 25357,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25284,
											"end": 25357,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 25284,
											"end": 25357,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25239,
											"end": 25367,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25406,
											"end": 25408,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 25432,
											"end": 25496,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "685"
										},
										{
											"begin": 25488,
											"end": 25495,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 25479,
											"end": 25485,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25468,
											"end": 25477,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 25464,
											"end": 25486,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25432,
											"end": 25496,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "392"
										},
										{
											"begin": 25432,
											"end": 25496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25432,
											"end": 25496,
											"name": "tag",
											"source": 18,
											"value": "685"
										},
										{
											"begin": 25432,
											"end": 25496,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25422,
											"end": 25496,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 25422,
											"end": 25496,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25377,
											"end": 25506,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25545,
											"end": 25547,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 25571,
											"end": 25635,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "686"
										},
										{
											"begin": 25627,
											"end": 25634,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 25618,
											"end": 25624,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25607,
											"end": 25616,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 25603,
											"end": 25625,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25571,
											"end": 25635,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "392"
										},
										{
											"begin": 25571,
											"end": 25635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25571,
											"end": 25635,
											"name": "tag",
											"source": 18,
											"value": "686"
										},
										{
											"begin": 25571,
											"end": 25635,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25561,
											"end": 25635,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 25561,
											"end": 25635,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25516,
											"end": 25645,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25684,
											"end": 25687,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 25711,
											"end": 25774,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "687"
										},
										{
											"begin": 25766,
											"end": 25773,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 25757,
											"end": 25763,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25746,
											"end": 25755,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 25742,
											"end": 25764,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25711,
											"end": 25774,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "388"
										},
										{
											"begin": 25711,
											"end": 25774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25711,
											"end": 25774,
											"name": "tag",
											"source": 18,
											"value": "687"
										},
										{
											"begin": 25711,
											"end": 25774,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25701,
											"end": 25774,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 25701,
											"end": 25774,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25655,
											"end": 25784,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24820,
											"end": 25791,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 24820,
											"end": 25791,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 24820,
											"end": 25791,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24820,
											"end": 25791,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 24820,
											"end": 25791,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 24820,
											"end": 25791,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24820,
											"end": 25791,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 24820,
											"end": 25791,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24820,
											"end": 25791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25797,
											"end": 25883,
											"name": "tag",
											"source": 18,
											"value": "393"
										},
										{
											"begin": 25797,
											"end": 25883,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25832,
											"end": 25839,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25872,
											"end": 25876,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 25865,
											"end": 25870,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25861,
											"end": 25877,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 25850,
											"end": 25877,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 25850,
											"end": 25877,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25797,
											"end": 25883,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 25797,
											"end": 25883,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 25797,
											"end": 25883,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25797,
											"end": 25883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25889,
											"end": 26007,
											"name": "tag",
											"source": 18,
											"value": "394"
										},
										{
											"begin": 25889,
											"end": 26007,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25960,
											"end": 25982,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "690"
										},
										{
											"begin": 25976,
											"end": 25981,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 25960,
											"end": 25982,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "393"
										},
										{
											"begin": 25960,
											"end": 25982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25960,
											"end": 25982,
											"name": "tag",
											"source": 18,
											"value": "690"
										},
										{
											"begin": 25960,
											"end": 25982,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25953,
											"end": 25958,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 25950,
											"end": 25983,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 25940,
											"end": 26001,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "691"
										},
										{
											"begin": 25940,
											"end": 26001,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 25997,
											"end": 25998,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25994,
											"end": 25995,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 25987,
											"end": 25999,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 25940,
											"end": 26001,
											"name": "tag",
											"source": 18,
											"value": "691"
										},
										{
											"begin": 25940,
											"end": 26001,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25889,
											"end": 26007,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25889,
											"end": 26007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26013,
											"end": 26152,
											"name": "tag",
											"source": 18,
											"value": "395"
										},
										{
											"begin": 26013,
											"end": 26152,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26068,
											"end": 26073,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26099,
											"end": 26105,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 26093,
											"end": 26106,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 26084,
											"end": 26106,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26084,
											"end": 26106,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26115,
											"end": 26146,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "693"
										},
										{
											"begin": 26140,
											"end": 26145,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 26115,
											"end": 26146,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "394"
										},
										{
											"begin": 26115,
											"end": 26146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26115,
											"end": 26146,
											"name": "tag",
											"source": 18,
											"value": "693"
										},
										{
											"begin": 26115,
											"end": 26146,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26013,
											"end": 26152,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 26013,
											"end": 26152,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 26013,
											"end": 26152,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26013,
											"end": 26152,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26013,
											"end": 26152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26158,
											"end": 26505,
											"name": "tag",
											"source": 18,
											"value": "194"
										},
										{
											"begin": 26158,
											"end": 26505,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26226,
											"end": 26232,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26275,
											"end": 26277,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 26263,
											"end": 26272,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 26254,
											"end": 26261,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 26250,
											"end": 26273,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 26246,
											"end": 26278,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 26243,
											"end": 26362,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 26243,
											"end": 26362,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "695"
										},
										{
											"begin": 26243,
											"end": 26362,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 26281,
											"end": 26360,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "696"
										},
										{
											"begin": 26281,
											"end": 26360,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "324"
										},
										{
											"begin": 26281,
											"end": 26360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26281,
											"end": 26360,
											"name": "tag",
											"source": 18,
											"value": "696"
										},
										{
											"begin": 26281,
											"end": 26360,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26243,
											"end": 26362,
											"name": "tag",
											"source": 18,
											"value": "695"
										},
										{
											"begin": 26243,
											"end": 26362,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26401,
											"end": 26402,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26426,
											"end": 26488,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "697"
										},
										{
											"begin": 26480,
											"end": 26487,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 26471,
											"end": 26477,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 26460,
											"end": 26469,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 26456,
											"end": 26478,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26426,
											"end": 26488,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "395"
										},
										{
											"begin": 26426,
											"end": 26488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26426,
											"end": 26488,
											"name": "tag",
											"source": 18,
											"value": "697"
										},
										{
											"begin": 26426,
											"end": 26488,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26416,
											"end": 26488,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 26416,
											"end": 26488,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26372,
											"end": 26498,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26158,
											"end": 26505,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 26158,
											"end": 26505,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 26158,
											"end": 26505,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26158,
											"end": 26505,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26158,
											"end": 26505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26511,
											"end": 26613,
											"name": "tag",
											"source": 18,
											"value": "396"
										},
										{
											"begin": 26511,
											"end": 26613,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26553,
											"end": 26561,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26600,
											"end": 26605,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 26597,
											"end": 26598,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 26593,
											"end": 26606,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 26572,
											"end": 26606,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26572,
											"end": 26606,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26511,
											"end": 26613,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 26511,
											"end": 26613,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26511,
											"end": 26613,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26511,
											"end": 26613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26619,
											"end": 27467,
											"name": "tag",
											"source": 18,
											"value": "397"
										},
										{
											"begin": 26619,
											"end": 27467,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26680,
											"end": 26685,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26687,
											"end": 26691,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 26711,
											"end": 26717,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 26702,
											"end": 26717,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 26702,
											"end": 26717,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26735,
											"end": 26740,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 26726,
											"end": 26740,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26726,
											"end": 26740,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26749,
											"end": 27461,
											"name": "tag",
											"source": 18,
											"value": "700"
										},
										{
											"begin": 26749,
											"end": 27461,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26770,
											"end": 26771,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 26760,
											"end": 26768,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 26757,
											"end": 26772,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 26749,
											"end": 27461,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 26749,
											"end": 27461,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "702"
										},
										{
											"begin": 26749,
											"end": 27461,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 26865,
											"end": 26869,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 26860,
											"end": 26863,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 26856,
											"end": 26870,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 26850,
											"end": 26854,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 26847,
											"end": 26871,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 26844,
											"end": 26894,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 26844,
											"end": 26894,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "703"
										},
										{
											"begin": 26844,
											"end": 26894,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 26874,
											"end": 26892,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "704"
										},
										{
											"begin": 26874,
											"end": 26892,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "374"
										},
										{
											"begin": 26874,
											"end": 26892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26874,
											"end": 26892,
											"name": "tag",
											"source": 18,
											"value": "704"
										},
										{
											"begin": 26874,
											"end": 26892,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26844,
											"end": 26894,
											"name": "tag",
											"source": 18,
											"value": "703"
										},
										{
											"begin": 26844,
											"end": 26894,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26924,
											"end": 26925,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 26914,
											"end": 26922,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 26910,
											"end": 26926,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 26907,
											"end": 27358,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 26907,
											"end": 27358,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "705"
										},
										{
											"begin": 26907,
											"end": 27358,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 27339,
											"end": 27343,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 27332,
											"end": 27337,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 27328,
											"end": 27344,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 27319,
											"end": 27344,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 27319,
											"end": 27344,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26907,
											"end": 27358,
											"name": "tag",
											"source": 18,
											"value": "705"
										},
										{
											"begin": 26907,
											"end": 27358,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27389,
											"end": 27393,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 27383,
											"end": 27387,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 27379,
											"end": 27394,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 27371,
											"end": 27394,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 27371,
											"end": 27394,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27419,
											"end": 27451,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "706"
										},
										{
											"begin": 27442,
											"end": 27450,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 27419,
											"end": 27451,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "396"
										},
										{
											"begin": 27419,
											"end": 27451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27419,
											"end": 27451,
											"name": "tag",
											"source": 18,
											"value": "706"
										},
										{
											"begin": 27419,
											"end": 27451,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27407,
											"end": 27451,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 27407,
											"end": 27451,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26749,
											"end": 27461,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "700"
										},
										{
											"begin": 26749,
											"end": 27461,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26749,
											"end": 27461,
											"name": "tag",
											"source": 18,
											"value": "702"
										},
										{
											"begin": 26749,
											"end": 27461,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26619,
											"end": 27467,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 26619,
											"end": 27467,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26619,
											"end": 27467,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 26619,
											"end": 27467,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 26619,
											"end": 27467,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26619,
											"end": 27467,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26619,
											"end": 27467,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26619,
											"end": 27467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27473,
											"end": 28546,
											"name": "tag",
											"source": 18,
											"value": "398"
										},
										{
											"begin": 27473,
											"end": 28546,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27527,
											"end": 27532,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 27718,
											"end": 27726,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 27708,
											"end": 27748,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "708"
										},
										{
											"begin": 27708,
											"end": 27748,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 27739,
											"end": 27740,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 27730,
											"end": 27740,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 27730,
											"end": 27740,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27741,
											"end": 27746,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "707"
										},
										{
											"begin": 27741,
											"end": 27746,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27708,
											"end": 27748,
											"name": "tag",
											"source": 18,
											"value": "708"
										},
										{
											"begin": 27708,
											"end": 27748,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27767,
											"end": 27771,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 27757,
											"end": 27793,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "709"
										},
										{
											"begin": 27757,
											"end": 27793,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 27784,
											"end": 27785,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 27775,
											"end": 27785,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 27775,
											"end": 27785,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27786,
											"end": 27791,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "707"
										},
										{
											"begin": 27786,
											"end": 27791,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27757,
											"end": 27793,
											"name": "tag",
											"source": 18,
											"value": "709"
										},
										{
											"begin": 27757,
											"end": 27793,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27853,
											"end": 27857,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 27901,
											"end": 27902,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 27896,
											"end": 27923,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 27896,
											"end": 27923,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 27896,
											"end": 27923,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "711"
										},
										{
											"begin": 27896,
											"end": 27923,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 27937,
											"end": 27938,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 27932,
											"end": 28123,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 27932,
											"end": 28123,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 27932,
											"end": 28123,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "712"
										},
										{
											"begin": 27932,
											"end": 28123,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 27846,
											"end": 28123,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "710"
										},
										{
											"begin": 27846,
											"end": 28123,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27896,
											"end": 27923,
											"name": "tag",
											"source": 18,
											"value": "711"
										},
										{
											"begin": 27896,
											"end": 27923,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27914,
											"end": 27915,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 27905,
											"end": 27915,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 27905,
											"end": 27915,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27916,
											"end": 27921,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27916,
											"end": 27921,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "707"
										},
										{
											"begin": 27916,
											"end": 27921,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27932,
											"end": 28123,
											"name": "tag",
											"source": 18,
											"value": "712"
										},
										{
											"begin": 27932,
											"end": 28123,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27977,
											"end": 27980,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 27967,
											"end": 27975,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 27964,
											"end": 27981,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 27961,
											"end": 28004,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 27961,
											"end": 28004,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "713"
										},
										{
											"begin": 27961,
											"end": 28004,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 27984,
											"end": 28002,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "714"
										},
										{
											"begin": 27984,
											"end": 28002,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "374"
										},
										{
											"begin": 27984,
											"end": 28002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27984,
											"end": 28002,
											"name": "tag",
											"source": 18,
											"value": "714"
										},
										{
											"begin": 27984,
											"end": 28002,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27961,
											"end": 28004,
											"name": "tag",
											"source": 18,
											"value": "713"
										},
										{
											"begin": 27961,
											"end": 28004,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28033,
											"end": 28041,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 28030,
											"end": 28031,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 28026,
											"end": 28042,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 28017,
											"end": 28042,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 28017,
											"end": 28042,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28068,
											"end": 28071,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 28061,
											"end": 28066,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 28058,
											"end": 28072,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 28055,
											"end": 28095,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 28055,
											"end": 28095,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "715"
										},
										{
											"begin": 28055,
											"end": 28095,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 28075,
											"end": 28093,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "716"
										},
										{
											"begin": 28075,
											"end": 28093,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "374"
										},
										{
											"begin": 28075,
											"end": 28093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28075,
											"end": 28093,
											"name": "tag",
											"source": 18,
											"value": "716"
										},
										{
											"begin": 28075,
											"end": 28093,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28055,
											"end": 28095,
											"name": "tag",
											"source": 18,
											"value": "715"
										},
										{
											"begin": 28055,
											"end": 28095,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28108,
											"end": 28113,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28108,
											"end": 28113,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "707"
										},
										{
											"begin": 28108,
											"end": 28113,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27846,
											"end": 28123,
											"name": "tag",
											"source": 18,
											"value": "710"
										},
										{
											"begin": 27846,
											"end": 28123,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27846,
											"end": 28123,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28232,
											"end": 28234,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 28222,
											"end": 28230,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 28219,
											"end": 28235,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 28213,
											"end": 28216,
											"name": "PUSH",
											"source": 18,
											"value": "133"
										},
										{
											"begin": 28207,
											"end": 28211,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 28204,
											"end": 28217,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 28200,
											"end": 28236,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 28182,
											"end": 28184,
											"name": "PUSH",
											"source": 18,
											"value": "4E"
										},
										{
											"begin": 28172,
											"end": 28180,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 28169,
											"end": 28185,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 28164,
											"end": 28166,
											"name": "PUSH",
											"source": 18,
											"value": "B"
										},
										{
											"begin": 28158,
											"end": 28162,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 28155,
											"end": 28167,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 28151,
											"end": 28186,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 28135,
											"end": 28246,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 28132,
											"end": 28378,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 28132,
											"end": 28378,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "717"
										},
										{
											"begin": 28132,
											"end": 28378,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 28288,
											"end": 28296,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 28282,
											"end": 28286,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 28278,
											"end": 28297,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 28269,
											"end": 28297,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 28269,
											"end": 28297,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28323,
											"end": 28326,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 28316,
											"end": 28321,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 28313,
											"end": 28327,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 28310,
											"end": 28350,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 28310,
											"end": 28350,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "718"
										},
										{
											"begin": 28310,
											"end": 28350,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 28330,
											"end": 28348,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "719"
										},
										{
											"begin": 28330,
											"end": 28348,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "374"
										},
										{
											"begin": 28330,
											"end": 28348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28330,
											"end": 28348,
											"name": "tag",
											"source": 18,
											"value": "719"
										},
										{
											"begin": 28330,
											"end": 28348,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28310,
											"end": 28350,
											"name": "tag",
											"source": 18,
											"value": "718"
										},
										{
											"begin": 28310,
											"end": 28350,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28363,
											"end": 28368,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "707"
										},
										{
											"begin": 28363,
											"end": 28368,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28132,
											"end": 28378,
											"name": "tag",
											"source": 18,
											"value": "717"
										},
										{
											"begin": 28132,
											"end": 28378,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28403,
											"end": 28445,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "720"
										},
										{
											"begin": 28441,
											"end": 28444,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 28431,
											"end": 28439,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 28425,
											"end": 28429,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 28422,
											"end": 28423,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 28403,
											"end": 28445,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "397"
										},
										{
											"begin": 28403,
											"end": 28445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28403,
											"end": 28445,
											"name": "tag",
											"source": 18,
											"value": "720"
										},
										{
											"begin": 28403,
											"end": 28445,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28388,
											"end": 28445,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 28388,
											"end": 28445,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28388,
											"end": 28445,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 28388,
											"end": 28445,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28477,
											"end": 28481,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 28472,
											"end": 28475,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 28468,
											"end": 28482,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 28461,
											"end": 28466,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 28458,
											"end": 28483,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 28455,
											"end": 28506,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 28455,
											"end": 28506,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "721"
										},
										{
											"begin": 28455,
											"end": 28506,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 28486,
											"end": 28504,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "722"
										},
										{
											"begin": 28486,
											"end": 28504,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "374"
										},
										{
											"begin": 28486,
											"end": 28504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28486,
											"end": 28504,
											"name": "tag",
											"source": 18,
											"value": "722"
										},
										{
											"begin": 28486,
											"end": 28504,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28455,
											"end": 28506,
											"name": "tag",
											"source": 18,
											"value": "721"
										},
										{
											"begin": 28455,
											"end": 28506,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28535,
											"end": 28539,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 28528,
											"end": 28533,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 28524,
											"end": 28540,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 28515,
											"end": 28540,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 28515,
											"end": 28540,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27473,
											"end": 28546,
											"name": "tag",
											"source": 18,
											"value": "707"
										},
										{
											"begin": 27473,
											"end": 28546,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27473,
											"end": 28546,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 27473,
											"end": 28546,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 27473,
											"end": 28546,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27473,
											"end": 28546,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27473,
											"end": 28546,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27473,
											"end": 28546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28552,
											"end": 28837,
											"name": "tag",
											"source": 18,
											"value": "197"
										},
										{
											"begin": 28552,
											"end": 28837,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28612,
											"end": 28617,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 28636,
											"end": 28659,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "724"
										},
										{
											"begin": 28654,
											"end": 28658,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 28636,
											"end": 28659,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 28636,
											"end": 28659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28636,
											"end": 28659,
											"name": "tag",
											"source": 18,
											"value": "724"
										},
										{
											"begin": 28636,
											"end": 28659,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28628,
											"end": 28659,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 28628,
											"end": 28659,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28680,
											"end": 28707,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "725"
										},
										{
											"begin": 28698,
											"end": 28706,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 28680,
											"end": 28707,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 28680,
											"end": 28707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28680,
											"end": 28707,
											"name": "tag",
											"source": 18,
											"value": "725"
										},
										{
											"begin": 28680,
											"end": 28707,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28668,
											"end": 28707,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 28668,
											"end": 28707,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28726,
											"end": 28830,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "726"
										},
										{
											"begin": 28763,
											"end": 28829,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28753,
											"end": 28761,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 28747,
											"end": 28751,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 28726,
											"end": 28830,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "398"
										},
										{
											"begin": 28726,
											"end": 28830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28726,
											"end": 28830,
											"name": "tag",
											"source": 18,
											"value": "726"
										},
										{
											"begin": 28726,
											"end": 28830,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28717,
											"end": 28830,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 28717,
											"end": 28830,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28552,
											"end": 28837,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 28552,
											"end": 28837,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 28552,
											"end": 28837,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28552,
											"end": 28837,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28552,
											"end": 28837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28843,
											"end": 29253,
											"name": "tag",
											"source": 18,
											"value": "199"
										},
										{
											"begin": 28843,
											"end": 29253,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28883,
											"end": 28890,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 28906,
											"end": 28926,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "728"
										},
										{
											"begin": 28924,
											"end": 28925,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 28906,
											"end": 28926,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 28906,
											"end": 28926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28906,
											"end": 28926,
											"name": "tag",
											"source": 18,
											"value": "728"
										},
										{
											"begin": 28906,
											"end": 28926,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28901,
											"end": 28926,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 28901,
											"end": 28926,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28940,
											"end": 28960,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "729"
										},
										{
											"begin": 28958,
											"end": 28959,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 28940,
											"end": 28960,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 28940,
											"end": 28960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28940,
											"end": 28960,
											"name": "tag",
											"source": 18,
											"value": "729"
										},
										{
											"begin": 28940,
											"end": 28960,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28935,
											"end": 28960,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 28935,
											"end": 28960,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28995,
											"end": 28996,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 28992,
											"end": 28993,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 28988,
											"end": 28997,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 29017,
											"end": 29047,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "730"
										},
										{
											"begin": 29035,
											"end": 29046,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 29017,
											"end": 29047,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 29017,
											"end": 29047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29017,
											"end": 29047,
											"name": "tag",
											"source": 18,
											"value": "730"
										},
										{
											"begin": 29017,
											"end": 29047,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29006,
											"end": 29047,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 29006,
											"end": 29047,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29196,
											"end": 29197,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 29187,
											"end": 29194,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 29183,
											"end": 29198,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 29180,
											"end": 29181,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 29177,
											"end": 29199,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 29157,
											"end": 29158,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 29150,
											"end": 29159,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 29130,
											"end": 29213,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 29107,
											"end": 29246,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "731"
										},
										{
											"begin": 29107,
											"end": 29246,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 29226,
											"end": 29244,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "732"
										},
										{
											"begin": 29226,
											"end": 29244,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "374"
										},
										{
											"begin": 29226,
											"end": 29244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29226,
											"end": 29244,
											"name": "tag",
											"source": 18,
											"value": "732"
										},
										{
											"begin": 29226,
											"end": 29244,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29107,
											"end": 29246,
											"name": "tag",
											"source": 18,
											"value": "731"
										},
										{
											"begin": 29107,
											"end": 29246,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28891,
											"end": 29253,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28843,
											"end": 29253,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 28843,
											"end": 29253,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 28843,
											"end": 29253,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28843,
											"end": 29253,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28843,
											"end": 29253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29259,
											"end": 29444,
											"name": "tag",
											"source": 18,
											"value": "201"
										},
										{
											"begin": 29259,
											"end": 29444,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29299,
											"end": 29300,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 29316,
											"end": 29336,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "734"
										},
										{
											"begin": 29334,
											"end": 29335,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 29316,
											"end": 29336,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 29316,
											"end": 29336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29316,
											"end": 29336,
											"name": "tag",
											"source": 18,
											"value": "734"
										},
										{
											"begin": 29316,
											"end": 29336,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29311,
											"end": 29336,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 29311,
											"end": 29336,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29350,
											"end": 29370,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "735"
										},
										{
											"begin": 29368,
											"end": 29369,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 29350,
											"end": 29370,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 29350,
											"end": 29370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29350,
											"end": 29370,
											"name": "tag",
											"source": 18,
											"value": "735"
										},
										{
											"begin": 29350,
											"end": 29370,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29389,
											"end": 29390,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 29379,
											"end": 29414,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "736"
										},
										{
											"begin": 29379,
											"end": 29414,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 29394,
											"end": 29412,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "737"
										},
										{
											"begin": 29394,
											"end": 29412,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "375"
										},
										{
											"begin": 29394,
											"end": 29412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29394,
											"end": 29412,
											"name": "tag",
											"source": 18,
											"value": "737"
										},
										{
											"begin": 29394,
											"end": 29412,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29379,
											"end": 29414,
											"name": "tag",
											"source": 18,
											"value": "736"
										},
										{
											"begin": 29379,
											"end": 29414,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29436,
											"end": 29437,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 29433,
											"end": 29434,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 29429,
											"end": 29438,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 29424,
											"end": 29438,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 29424,
											"end": 29438,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29259,
											"end": 29444,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 29259,
											"end": 29444,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 29259,
											"end": 29444,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29259,
											"end": 29444,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29259,
											"end": 29444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29450,
											"end": 29630,
											"name": "tag",
											"source": 18,
											"value": "216"
										},
										{
											"begin": 29450,
											"end": 29630,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29498,
											"end": 29575,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29495,
											"end": 29496,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 29488,
											"end": 29576,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 29595,
											"end": 29599,
											"name": "PUSH",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 29592,
											"end": 29593,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 29585,
											"end": 29600,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 29619,
											"end": 29623,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 29616,
											"end": 29617,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 29609,
											"end": 29624,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 29636,
											"end": 29779,
											"name": "tag",
											"source": 18,
											"value": "399"
										},
										{
											"begin": 29636,
											"end": 29779,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29693,
											"end": 29698,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 29724,
											"end": 29730,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 29718,
											"end": 29731,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 29709,
											"end": 29731,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 29709,
											"end": 29731,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29740,
											"end": 29773,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "740"
										},
										{
											"begin": 29767,
											"end": 29772,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 29740,
											"end": 29773,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "361"
										},
										{
											"begin": 29740,
											"end": 29773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29740,
											"end": 29773,
											"name": "tag",
											"source": 18,
											"value": "740"
										},
										{
											"begin": 29740,
											"end": 29773,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29636,
											"end": 29779,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 29636,
											"end": 29779,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 29636,
											"end": 29779,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29636,
											"end": 29779,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29636,
											"end": 29779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29785,
											"end": 30136,
											"name": "tag",
											"source": 18,
											"value": "220"
										},
										{
											"begin": 29785,
											"end": 30136,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29855,
											"end": 29861,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 29904,
											"end": 29906,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 29892,
											"end": 29901,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 29883,
											"end": 29890,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 29879,
											"end": 29902,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 29875,
											"end": 29907,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 29872,
											"end": 29991,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 29872,
											"end": 29991,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "742"
										},
										{
											"begin": 29872,
											"end": 29991,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 29910,
											"end": 29989,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "743"
										},
										{
											"begin": 29910,
											"end": 29989,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "324"
										},
										{
											"begin": 29910,
											"end": 29989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29910,
											"end": 29989,
											"name": "tag",
											"source": 18,
											"value": "743"
										},
										{
											"begin": 29910,
											"end": 29989,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29872,
											"end": 29991,
											"name": "tag",
											"source": 18,
											"value": "742"
										},
										{
											"begin": 29872,
											"end": 29991,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30030,
											"end": 30031,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 30055,
											"end": 30119,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "744"
										},
										{
											"begin": 30111,
											"end": 30118,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 30102,
											"end": 30108,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 30091,
											"end": 30100,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 30087,
											"end": 30109,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 30055,
											"end": 30119,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "399"
										},
										{
											"begin": 30055,
											"end": 30119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30055,
											"end": 30119,
											"name": "tag",
											"source": 18,
											"value": "744"
										},
										{
											"begin": 30055,
											"end": 30119,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30045,
											"end": 30119,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 30045,
											"end": 30119,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30001,
											"end": 30129,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29785,
											"end": 30136,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 29785,
											"end": 30136,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 29785,
											"end": 30136,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29785,
											"end": 30136,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29785,
											"end": 30136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30142,
											"end": 30256,
											"name": "tag",
											"source": 18,
											"value": "400"
										},
										{
											"begin": 30142,
											"end": 30256,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30209,
											"end": 30215,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 30243,
											"end": 30248,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 30237,
											"end": 30249,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 30227,
											"end": 30249,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 30227,
											"end": 30249,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30142,
											"end": 30256,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 30142,
											"end": 30256,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 30142,
											"end": 30256,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30142,
											"end": 30256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30262,
											"end": 30446,
											"name": "tag",
											"source": 18,
											"value": "401"
										},
										{
											"begin": 30262,
											"end": 30446,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30361,
											"end": 30372,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 30395,
											"end": 30401,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 30390,
											"end": 30393,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 30383,
											"end": 30402,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 30435,
											"end": 30439,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 30430,
											"end": 30433,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 30426,
											"end": 30440,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 30411,
											"end": 30440,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 30411,
											"end": 30440,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30262,
											"end": 30446,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 30262,
											"end": 30446,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 30262,
											"end": 30446,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30262,
											"end": 30446,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30262,
											"end": 30446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30452,
											"end": 30584,
											"name": "tag",
											"source": 18,
											"value": "402"
										},
										{
											"begin": 30452,
											"end": 30584,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30519,
											"end": 30523,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 30542,
											"end": 30545,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 30534,
											"end": 30545,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 30534,
											"end": 30545,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30572,
											"end": 30576,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 30567,
											"end": 30570,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 30563,
											"end": 30577,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 30555,
											"end": 30577,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 30555,
											"end": 30577,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30452,
											"end": 30584,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 30452,
											"end": 30584,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 30452,
											"end": 30584,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30452,
											"end": 30584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30590,
											"end": 30698,
											"name": "tag",
											"source": 18,
											"value": "403"
										},
										{
											"begin": 30590,
											"end": 30698,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30667,
											"end": 30691,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "749"
										},
										{
											"begin": 30685,
											"end": 30690,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 30667,
											"end": 30691,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "347"
										},
										{
											"begin": 30667,
											"end": 30691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30667,
											"end": 30691,
											"name": "tag",
											"source": 18,
											"value": "749"
										},
										{
											"begin": 30667,
											"end": 30691,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30662,
											"end": 30665,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 30655,
											"end": 30692,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 30590,
											"end": 30698,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30590,
											"end": 30698,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30590,
											"end": 30698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30704,
											"end": 30883,
											"name": "tag",
											"source": 18,
											"value": "404"
										},
										{
											"begin": 30704,
											"end": 30883,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30773,
											"end": 30783,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 30794,
											"end": 30840,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "751"
										},
										{
											"begin": 30836,
											"end": 30839,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 30828,
											"end": 30834,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 30794,
											"end": 30840,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "403"
										},
										{
											"begin": 30794,
											"end": 30840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30794,
											"end": 30840,
											"name": "tag",
											"source": 18,
											"value": "751"
										},
										{
											"begin": 30794,
											"end": 30840,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30872,
											"end": 30876,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 30867,
											"end": 30870,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 30863,
											"end": 30877,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 30849,
											"end": 30877,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 30849,
											"end": 30877,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30704,
											"end": 30883,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 30704,
											"end": 30883,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 30704,
											"end": 30883,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30704,
											"end": 30883,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30704,
											"end": 30883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30889,
											"end": 31002,
											"name": "tag",
											"source": 18,
											"value": "405"
										},
										{
											"begin": 30889,
											"end": 31002,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30959,
											"end": 30963,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 30991,
											"end": 30995,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 30986,
											"end": 30989,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 30982,
											"end": 30996,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 30974,
											"end": 30996,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 30974,
											"end": 30996,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30889,
											"end": 31002,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 30889,
											"end": 31002,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 30889,
											"end": 31002,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30889,
											"end": 31002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31038,
											"end": 31770,
											"name": "tag",
											"source": 18,
											"value": "406"
										},
										{
											"begin": 31038,
											"end": 31770,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31157,
											"end": 31160,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 31186,
											"end": 31240,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "754"
										},
										{
											"begin": 31234,
											"end": 31239,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 31186,
											"end": 31240,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "400"
										},
										{
											"begin": 31186,
											"end": 31240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31186,
											"end": 31240,
											"name": "tag",
											"source": 18,
											"value": "754"
										},
										{
											"begin": 31186,
											"end": 31240,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31256,
											"end": 31342,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "755"
										},
										{
											"begin": 31335,
											"end": 31341,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 31330,
											"end": 31333,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 31256,
											"end": 31342,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "401"
										},
										{
											"begin": 31256,
											"end": 31342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31256,
											"end": 31342,
											"name": "tag",
											"source": 18,
											"value": "755"
										},
										{
											"begin": 31256,
											"end": 31342,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31249,
											"end": 31342,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 31249,
											"end": 31342,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31366,
											"end": 31422,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "756"
										},
										{
											"begin": 31416,
											"end": 31421,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 31366,
											"end": 31422,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "402"
										},
										{
											"begin": 31366,
											"end": 31422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31366,
											"end": 31422,
											"name": "tag",
											"source": 18,
											"value": "756"
										},
										{
											"begin": 31366,
											"end": 31422,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31445,
											"end": 31452,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 31476,
											"end": 31477,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 31461,
											"end": 31745,
											"name": "tag",
											"source": 18,
											"value": "757"
										},
										{
											"begin": 31461,
											"end": 31745,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31486,
											"end": 31492,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 31483,
											"end": 31484,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 31480,
											"end": 31493,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 31461,
											"end": 31745,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 31461,
											"end": 31745,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "759"
										},
										{
											"begin": 31461,
											"end": 31745,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 31562,
											"end": 31568,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 31556,
											"end": 31569,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 31589,
											"end": 31652,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "760"
										},
										{
											"begin": 31648,
											"end": 31651,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 31633,
											"end": 31646,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 31589,
											"end": 31652,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "404"
										},
										{
											"begin": 31589,
											"end": 31652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31589,
											"end": 31652,
											"name": "tag",
											"source": 18,
											"value": "760"
										},
										{
											"begin": 31589,
											"end": 31652,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31582,
											"end": 31652,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": 31582,
											"end": 31652,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31675,
											"end": 31735,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "761"
										},
										{
											"begin": 31728,
											"end": 31734,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 31675,
											"end": 31735,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "405"
										},
										{
											"begin": 31675,
											"end": 31735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31675,
											"end": 31735,
											"name": "tag",
											"source": 18,
											"value": "761"
										},
										{
											"begin": 31675,
											"end": 31735,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31665,
											"end": 31735,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 31665,
											"end": 31735,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31521,
											"end": 31745,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31508,
											"end": 31509,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 31505,
											"end": 31506,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 31501,
											"end": 31510,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 31496,
											"end": 31510,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 31496,
											"end": 31510,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31461,
											"end": 31745,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "757"
										},
										{
											"begin": 31461,
											"end": 31745,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31461,
											"end": 31745,
											"name": "tag",
											"source": 18,
											"value": "759"
										},
										{
											"begin": 31461,
											"end": 31745,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31465,
											"end": 31479,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31761,
											"end": 31764,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 31754,
											"end": 31764,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 31754,
											"end": 31764,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31162,
											"end": 31770,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31162,
											"end": 31770,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31162,
											"end": 31770,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31038,
											"end": 31770,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 31038,
											"end": 31770,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 31038,
											"end": 31770,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31038,
											"end": 31770,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31038,
											"end": 31770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31776,
											"end": 32591,
											"name": "tag",
											"source": 18,
											"value": "225"
										},
										{
											"begin": 31776,
											"end": 32591,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32031,
											"end": 32035,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 32069,
											"end": 32072,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 32058,
											"end": 32067,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 32054,
											"end": 32073,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 32046,
											"end": 32073,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 32046,
											"end": 32073,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32083,
											"end": 32154,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "763"
										},
										{
											"begin": 32151,
											"end": 32152,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 32140,
											"end": 32149,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 32136,
											"end": 32153,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 32127,
											"end": 32133,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 32083,
											"end": 32154,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "363"
										},
										{
											"begin": 32083,
											"end": 32154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 32083,
											"end": 32154,
											"name": "tag",
											"source": 18,
											"value": "763"
										},
										{
											"begin": 32083,
											"end": 32154,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32164,
											"end": 32236,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "764"
										},
										{
											"begin": 32232,
											"end": 32234,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 32221,
											"end": 32230,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 32217,
											"end": 32235,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 32208,
											"end": 32214,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 32164,
											"end": 32236,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "363"
										},
										{
											"begin": 32164,
											"end": 32236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 32164,
											"end": 32236,
											"name": "tag",
											"source": 18,
											"value": "764"
										},
										{
											"begin": 32164,
											"end": 32236,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32283,
											"end": 32292,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 32277,
											"end": 32281,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 32273,
											"end": 32293,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 32268,
											"end": 32270,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 32257,
											"end": 32266,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 32253,
											"end": 32271,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 32246,
											"end": 32294,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 32311,
											"end": 32419,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "765"
										},
										{
											"begin": 32414,
											"end": 32418,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 32405,
											"end": 32411,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 32311,
											"end": 32419,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "406"
										},
										{
											"begin": 32311,
											"end": 32419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 32311,
											"end": 32419,
											"name": "tag",
											"source": 18,
											"value": "765"
										},
										{
											"begin": 32311,
											"end": 32419,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32303,
											"end": 32419,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 32303,
											"end": 32419,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32429,
											"end": 32501,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "766"
										},
										{
											"begin": 32497,
											"end": 32499,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 32486,
											"end": 32495,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 32482,
											"end": 32500,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 32473,
											"end": 32479,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 32429,
											"end": 32501,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "348"
										},
										{
											"begin": 32429,
											"end": 32501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 32429,
											"end": 32501,
											"name": "tag",
											"source": 18,
											"value": "766"
										},
										{
											"begin": 32429,
											"end": 32501,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32511,
											"end": 32584,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "767"
										},
										{
											"begin": 32579,
											"end": 32582,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 32568,
											"end": 32577,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 32564,
											"end": 32583,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 32555,
											"end": 32561,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 32511,
											"end": 32584,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "363"
										},
										{
											"begin": 32511,
											"end": 32584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 32511,
											"end": 32584,
											"name": "tag",
											"source": 18,
											"value": "767"
										},
										{
											"begin": 32511,
											"end": 32584,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31776,
											"end": 32591,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 31776,
											"end": 32591,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 31776,
											"end": 32591,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31776,
											"end": 32591,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31776,
											"end": 32591,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31776,
											"end": 32591,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31776,
											"end": 32591,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31776,
											"end": 32591,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31776,
											"end": 32591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 32614,
											"end": 33346,
											"name": "tag",
											"source": 18,
											"value": "407"
										},
										{
											"begin": 32614,
											"end": 33346,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32721,
											"end": 32726,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 32746,
											"end": 32827,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "769"
										},
										{
											"begin": 32762,
											"end": 32826,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "770"
										},
										{
											"begin": 32819,
											"end": 32825,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 32762,
											"end": 32826,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "341"
										},
										{
											"begin": 32762,
											"end": 32826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 32762,
											"end": 32826,
											"name": "tag",
											"source": 18,
											"value": "770"
										},
										{
											"begin": 32762,
											"end": 32826,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32746,
											"end": 32827,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "340"
										},
										{
											"begin": 32746,
											"end": 32827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 32746,
											"end": 32827,
											"name": "tag",
											"source": 18,
											"value": "769"
										},
										{
											"begin": 32746,
											"end": 32827,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32737,
											"end": 32827,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 32737,
											"end": 32827,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32847,
											"end": 32852,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 32876,
											"end": 32882,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 32869,
											"end": 32874,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 32862,
											"end": 32883,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 32910,
											"end": 32914,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 32903,
											"end": 32908,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 32899,
											"end": 32915,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 32892,
											"end": 32915,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 32892,
											"end": 32915,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32963,
											"end": 32967,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 32955,
											"end": 32961,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 32951,
											"end": 32968,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 32943,
											"end": 32949,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 32939,
											"end": 32969,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 32992,
											"end": 32995,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 32984,
											"end": 32990,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 32981,
											"end": 32996,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 32978,
											"end": 33100,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 32978,
											"end": 33100,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "771"
										},
										{
											"begin": 32978,
											"end": 33100,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 33011,
											"end": 33090,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "772"
										},
										{
											"begin": 33011,
											"end": 33090,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "342"
										},
										{
											"begin": 33011,
											"end": 33090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 33011,
											"end": 33090,
											"name": "tag",
											"source": 18,
											"value": "772"
										},
										{
											"begin": 33011,
											"end": 33090,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32978,
											"end": 33100,
											"name": "tag",
											"source": 18,
											"value": "771"
										},
										{
											"begin": 32978,
											"end": 33100,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33126,
											"end": 33132,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 33109,
											"end": 33340,
											"name": "tag",
											"source": 18,
											"value": "773"
										},
										{
											"begin": 33109,
											"end": 33340,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33143,
											"end": 33149,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 33138,
											"end": 33141,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 33135,
											"end": 33150,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 33109,
											"end": 33340,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 33109,
											"end": 33340,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "775"
										},
										{
											"begin": 33109,
											"end": 33340,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 33218,
											"end": 33221,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 33247,
											"end": 33295,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "776"
										},
										{
											"begin": 33291,
											"end": 33294,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 33279,
											"end": 33289,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 33247,
											"end": 33295,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "392"
										},
										{
											"begin": 33247,
											"end": 33295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 33247,
											"end": 33295,
											"name": "tag",
											"source": 18,
											"value": "776"
										},
										{
											"begin": 33247,
											"end": 33295,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33242,
											"end": 33245,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 33235,
											"end": 33296,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 33325,
											"end": 33329,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 33320,
											"end": 33323,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 33316,
											"end": 33330,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 33309,
											"end": 33330,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 33309,
											"end": 33330,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33185,
											"end": 33340,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33169,
											"end": 33173,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 33164,
											"end": 33167,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 33160,
											"end": 33174,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 33153,
											"end": 33174,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 33153,
											"end": 33174,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33109,
											"end": 33340,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "773"
										},
										{
											"begin": 33109,
											"end": 33340,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 33109,
											"end": 33340,
											"name": "tag",
											"source": 18,
											"value": "775"
										},
										{
											"begin": 33109,
											"end": 33340,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33113,
											"end": 33134,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32727,
											"end": 33346,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32727,
											"end": 33346,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32614,
											"end": 33346,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 32614,
											"end": 33346,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 32614,
											"end": 33346,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32614,
											"end": 33346,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32614,
											"end": 33346,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32614,
											"end": 33346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 33369,
											"end": 33754,
											"name": "tag",
											"source": 18,
											"value": "408"
										},
										{
											"begin": 33369,
											"end": 33754,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33451,
											"end": 33456,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 33500,
											"end": 33503,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 33493,
											"end": 33497,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 33485,
											"end": 33491,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 33481,
											"end": 33498,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 33477,
											"end": 33504,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 33467,
											"end": 33589,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "778"
										},
										{
											"begin": 33467,
											"end": 33589,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 33508,
											"end": 33587,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "779"
										},
										{
											"begin": 33508,
											"end": 33587,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "337"
										},
										{
											"begin": 33508,
											"end": 33587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 33508,
											"end": 33587,
											"name": "tag",
											"source": 18,
											"value": "779"
										},
										{
											"begin": 33508,
											"end": 33587,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33467,
											"end": 33589,
											"name": "tag",
											"source": 18,
											"value": "778"
										},
										{
											"begin": 33467,
											"end": 33589,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33618,
											"end": 33624,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 33612,
											"end": 33625,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 33643,
											"end": 33748,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "780"
										},
										{
											"begin": 33744,
											"end": 33747,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 33736,
											"end": 33742,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 33729,
											"end": 33733,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 33721,
											"end": 33727,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 33717,
											"end": 33734,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 33643,
											"end": 33748,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "407"
										},
										{
											"begin": 33643,
											"end": 33748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 33643,
											"end": 33748,
											"name": "tag",
											"source": 18,
											"value": "780"
										},
										{
											"begin": 33643,
											"end": 33748,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33634,
											"end": 33748,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 33634,
											"end": 33748,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33457,
											"end": 33754,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33369,
											"end": 33754,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 33369,
											"end": 33754,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 33369,
											"end": 33754,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33369,
											"end": 33754,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33369,
											"end": 33754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 33760,
											"end": 34314,
											"name": "tag",
											"source": 18,
											"value": "229"
										},
										{
											"begin": 33760,
											"end": 34314,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33855,
											"end": 33861,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 33904,
											"end": 33906,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 33892,
											"end": 33901,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 33883,
											"end": 33890,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 33879,
											"end": 33902,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 33875,
											"end": 33907,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 33872,
											"end": 33991,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 33872,
											"end": 33991,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "782"
										},
										{
											"begin": 33872,
											"end": 33991,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 33910,
											"end": 33989,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "783"
										},
										{
											"begin": 33910,
											"end": 33989,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "324"
										},
										{
											"begin": 33910,
											"end": 33989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 33910,
											"end": 33989,
											"name": "tag",
											"source": 18,
											"value": "783"
										},
										{
											"begin": 33910,
											"end": 33989,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33872,
											"end": 33991,
											"name": "tag",
											"source": 18,
											"value": "782"
										},
										{
											"begin": 33872,
											"end": 33991,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 34051,
											"end": 34052,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 34040,
											"end": 34049,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 34036,
											"end": 34053,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 34030,
											"end": 34054,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 34081,
											"end": 34099,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34073,
											"end": 34079,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 34070,
											"end": 34100,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 34067,
											"end": 34184,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 34067,
											"end": 34184,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "784"
										},
										{
											"begin": 34067,
											"end": 34184,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 34103,
											"end": 34182,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "785"
										},
										{
											"begin": 34103,
											"end": 34182,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "325"
										},
										{
											"begin": 34103,
											"end": 34182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 34103,
											"end": 34182,
											"name": "tag",
											"source": 18,
											"value": "785"
										},
										{
											"begin": 34103,
											"end": 34182,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 34067,
											"end": 34184,
											"name": "tag",
											"source": 18,
											"value": "784"
										},
										{
											"begin": 34067,
											"end": 34184,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 34208,
											"end": 34297,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "786"
										},
										{
											"begin": 34289,
											"end": 34296,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 34280,
											"end": 34286,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 34269,
											"end": 34278,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 34265,
											"end": 34287,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 34208,
											"end": 34297,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "408"
										},
										{
											"begin": 34208,
											"end": 34297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 34208,
											"end": 34297,
											"name": "tag",
											"source": 18,
											"value": "786"
										},
										{
											"begin": 34208,
											"end": 34297,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 34198,
											"end": 34297,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 34198,
											"end": 34297,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 34001,
											"end": 34307,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33760,
											"end": 34314,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 33760,
											"end": 34314,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 33760,
											"end": 34314,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33760,
											"end": 34314,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33760,
											"end": 34314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 34320,
											"end": 34671,
											"name": "tag",
											"source": 18,
											"value": "245"
										},
										{
											"begin": 34320,
											"end": 34671,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 34390,
											"end": 34396,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 34439,
											"end": 34441,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 34427,
											"end": 34436,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 34418,
											"end": 34425,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 34414,
											"end": 34437,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 34410,
											"end": 34442,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 34407,
											"end": 34526,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 34407,
											"end": 34526,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "788"
										},
										{
											"begin": 34407,
											"end": 34526,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 34445,
											"end": 34524,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "789"
										},
										{
											"begin": 34445,
											"end": 34524,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "324"
										},
										{
											"begin": 34445,
											"end": 34524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 34445,
											"end": 34524,
											"name": "tag",
											"source": 18,
											"value": "789"
										},
										{
											"begin": 34445,
											"end": 34524,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 34407,
											"end": 34526,
											"name": "tag",
											"source": 18,
											"value": "788"
										},
										{
											"begin": 34407,
											"end": 34526,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 34565,
											"end": 34566,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 34590,
											"end": 34654,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "790"
										},
										{
											"begin": 34646,
											"end": 34653,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 34637,
											"end": 34643,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 34626,
											"end": 34635,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 34622,
											"end": 34644,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 34590,
											"end": 34654,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "392"
										},
										{
											"begin": 34590,
											"end": 34654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 34590,
											"end": 34654,
											"name": "tag",
											"source": 18,
											"value": "790"
										},
										{
											"begin": 34590,
											"end": 34654,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 34580,
											"end": 34654,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 34580,
											"end": 34654,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 34536,
											"end": 34664,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 34320,
											"end": 34671,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 34320,
											"end": 34671,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 34320,
											"end": 34671,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 34320,
											"end": 34671,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 34320,
											"end": 34671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 34677,
											"end": 34754,
											"name": "tag",
											"source": 18,
											"value": "409"
										},
										{
											"begin": 34677,
											"end": 34754,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 34714,
											"end": 34721,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 34743,
											"end": 34748,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 34732,
											"end": 34748,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 34732,
											"end": 34748,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 34677,
											"end": 34754,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 34677,
											"end": 34754,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 34677,
											"end": 34754,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 34677,
											"end": 34754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 34760,
											"end": 34878,
											"name": "tag",
											"source": 18,
											"value": "410"
										},
										{
											"begin": 34760,
											"end": 34878,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 34847,
											"end": 34871,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "793"
										},
										{
											"begin": 34865,
											"end": 34870,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 34847,
											"end": 34871,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "409"
										},
										{
											"begin": 34847,
											"end": 34871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 34847,
											"end": 34871,
											"name": "tag",
											"source": 18,
											"value": "793"
										},
										{
											"begin": 34847,
											"end": 34871,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 34842,
											"end": 34845,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 34835,
											"end": 34872,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 34760,
											"end": 34878,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 34760,
											"end": 34878,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 34760,
											"end": 34878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 34884,
											"end": 34985,
											"name": "tag",
											"source": 18,
											"value": "411"
										},
										{
											"begin": 34884,
											"end": 34985,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 34920,
											"end": 34927,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 34960,
											"end": 34978,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34953,
											"end": 34958,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 34949,
											"end": 34979,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 34938,
											"end": 34979,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 34938,
											"end": 34979,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 34884,
											"end": 34985,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 34884,
											"end": 34985,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 34884,
											"end": 34985,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 34884,
											"end": 34985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 34991,
											"end": 35106,
											"name": "tag",
											"source": 18,
											"value": "412"
										},
										{
											"begin": 34991,
											"end": 35106,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 35076,
											"end": 35099,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "796"
										},
										{
											"begin": 35093,
											"end": 35098,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 35076,
											"end": 35099,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "411"
										},
										{
											"begin": 35076,
											"end": 35099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 35076,
											"end": 35099,
											"name": "tag",
											"source": 18,
											"value": "796"
										},
										{
											"begin": 35076,
											"end": 35099,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 35071,
											"end": 35074,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 35064,
											"end": 35100,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 34991,
											"end": 35106,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 34991,
											"end": 35106,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 34991,
											"end": 35106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 35112,
											"end": 35197,
											"name": "tag",
											"source": 18,
											"value": "413"
										},
										{
											"begin": 35112,
											"end": 35197,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 35157,
											"end": 35164,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 35186,
											"end": 35191,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 35175,
											"end": 35191,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 35175,
											"end": 35191,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 35112,
											"end": 35197,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 35112,
											"end": 35197,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 35112,
											"end": 35197,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 35112,
											"end": 35197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 35203,
											"end": 35292,
											"name": "tag",
											"source": 18,
											"value": "414"
										},
										{
											"begin": 35203,
											"end": 35292,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 35239,
											"end": 35246,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 35279,
											"end": 35285,
											"name": "PUSH",
											"source": 18,
											"value": "FFFF"
										},
										{
											"begin": 35272,
											"end": 35277,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 35268,
											"end": 35286,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 35257,
											"end": 35286,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 35257,
											"end": 35286,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 35203,
											"end": 35292,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 35203,
											"end": 35292,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 35203,
											"end": 35292,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 35203,
											"end": 35292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 35298,
											"end": 35454,
											"name": "tag",
											"source": 18,
											"value": "415"
										},
										{
											"begin": 35298,
											"end": 35454,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 35355,
											"end": 35364,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 35388,
											"end": 35448,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "800"
										},
										{
											"begin": 35405,
											"end": 35447,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "801"
										},
										{
											"begin": 35414,
											"end": 35446,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "802"
										},
										{
											"begin": 35440,
											"end": 35445,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 35414,
											"end": 35446,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "413"
										},
										{
											"begin": 35414,
											"end": 35446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 35414,
											"end": 35446,
											"name": "tag",
											"source": 18,
											"value": "802"
										},
										{
											"begin": 35414,
											"end": 35446,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 35405,
											"end": 35447,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "330"
										},
										{
											"begin": 35405,
											"end": 35447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 35405,
											"end": 35447,
											"name": "tag",
											"source": 18,
											"value": "801"
										},
										{
											"begin": 35405,
											"end": 35447,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 35388,
											"end": 35448,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "414"
										},
										{
											"begin": 35388,
											"end": 35448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 35388,
											"end": 35448,
											"name": "tag",
											"source": 18,
											"value": "800"
										},
										{
											"begin": 35388,
											"end": 35448,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 35375,
											"end": 35448,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 35375,
											"end": 35448,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 35298,
											"end": 35454,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 35298,
											"end": 35454,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 35298,
											"end": 35454,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 35298,
											"end": 35454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 35460,
											"end": 35605,
											"name": "tag",
											"source": 18,
											"value": "416"
										},
										{
											"begin": 35460,
											"end": 35605,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 35554,
											"end": 35598,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "804"
										},
										{
											"begin": 35592,
											"end": 35597,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 35554,
											"end": 35598,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "415"
										},
										{
											"begin": 35554,
											"end": 35598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 35554,
											"end": 35598,
											"name": "tag",
											"source": 18,
											"value": "804"
										},
										{
											"begin": 35554,
											"end": 35598,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 35549,
											"end": 35552,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 35542,
											"end": 35599,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 35460,
											"end": 35605,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 35460,
											"end": 35605,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 35460,
											"end": 35605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 35611,
											"end": 35701,
											"name": "tag",
											"source": 18,
											"value": "417"
										},
										{
											"begin": 35611,
											"end": 35701,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 35661,
											"end": 35668,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 35690,
											"end": 35695,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 35679,
											"end": 35695,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 35679,
											"end": 35695,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 35611,
											"end": 35701,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 35611,
											"end": 35701,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 35611,
											"end": 35701,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 35611,
											"end": 35701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 35707,
											"end": 35800,
											"name": "tag",
											"source": 18,
											"value": "418"
										},
										{
											"begin": 35707,
											"end": 35800,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 35743,
											"end": 35750,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 35783,
											"end": 35793,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35776,
											"end": 35781,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 35772,
											"end": 35794,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 35761,
											"end": 35794,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 35761,
											"end": 35794,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 35707,
											"end": 35800,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 35707,
											"end": 35800,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 35707,
											"end": 35800,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 35707,
											"end": 35800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 35806,
											"end": 35972,
											"name": "tag",
											"source": 18,
											"value": "419"
										},
										{
											"begin": 35806,
											"end": 35972,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 35868,
											"end": 35877,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 35901,
											"end": 35966,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "808"
										},
										{
											"begin": 35918,
											"end": 35965,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "809"
										},
										{
											"begin": 35927,
											"end": 35964,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "810"
										},
										{
											"begin": 35958,
											"end": 35963,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 35927,
											"end": 35964,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "417"
										},
										{
											"begin": 35927,
											"end": 35964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 35927,
											"end": 35964,
											"name": "tag",
											"source": 18,
											"value": "810"
										},
										{
											"begin": 35927,
											"end": 35964,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 35918,
											"end": 35965,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "330"
										},
										{
											"begin": 35918,
											"end": 35965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 35918,
											"end": 35965,
											"name": "tag",
											"source": 18,
											"value": "809"
										},
										{
											"begin": 35918,
											"end": 35965,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 35901,
											"end": 35966,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "418"
										},
										{
											"begin": 35901,
											"end": 35966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 35901,
											"end": 35966,
											"name": "tag",
											"source": 18,
											"value": "808"
										},
										{
											"begin": 35901,
											"end": 35966,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 35888,
											"end": 35966,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 35888,
											"end": 35966,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 35806,
											"end": 35972,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 35806,
											"end": 35972,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 35806,
											"end": 35972,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 35806,
											"end": 35972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 35978,
											"end": 36133,
											"name": "tag",
											"source": 18,
											"value": "420"
										},
										{
											"begin": 35978,
											"end": 36133,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 36077,
											"end": 36126,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "812"
										},
										{
											"begin": 36120,
											"end": 36125,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 36077,
											"end": 36126,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "419"
										},
										{
											"begin": 36077,
											"end": 36126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 36077,
											"end": 36126,
											"name": "tag",
											"source": 18,
											"value": "812"
										},
										{
											"begin": 36077,
											"end": 36126,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 36072,
											"end": 36075,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 36065,
											"end": 36127,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 35978,
											"end": 36133,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 35978,
											"end": 36133,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 35978,
											"end": 36133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 36139,
											"end": 36224,
											"name": "tag",
											"source": 18,
											"value": "421"
										},
										{
											"begin": 36139,
											"end": 36224,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 36184,
											"end": 36191,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 36213,
											"end": 36218,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 36202,
											"end": 36218,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 36202,
											"end": 36218,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 36139,
											"end": 36224,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 36139,
											"end": 36224,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 36139,
											"end": 36224,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 36139,
											"end": 36224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 36230,
											"end": 36386,
											"name": "tag",
											"source": 18,
											"value": "422"
										},
										{
											"begin": 36230,
											"end": 36386,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 36287,
											"end": 36296,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 36320,
											"end": 36380,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "815"
										},
										{
											"begin": 36337,
											"end": 36379,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "816"
										},
										{
											"begin": 36346,
											"end": 36378,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "817"
										},
										{
											"begin": 36372,
											"end": 36377,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 36346,
											"end": 36378,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "421"
										},
										{
											"begin": 36346,
											"end": 36378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 36346,
											"end": 36378,
											"name": "tag",
											"source": 18,
											"value": "817"
										},
										{
											"begin": 36346,
											"end": 36378,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 36337,
											"end": 36379,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "330"
										},
										{
											"begin": 36337,
											"end": 36379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 36337,
											"end": 36379,
											"name": "tag",
											"source": 18,
											"value": "816"
										},
										{
											"begin": 36337,
											"end": 36379,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 36320,
											"end": 36380,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "418"
										},
										{
											"begin": 36320,
											"end": 36380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 36320,
											"end": 36380,
											"name": "tag",
											"source": 18,
											"value": "815"
										},
										{
											"begin": 36320,
											"end": 36380,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 36307,
											"end": 36380,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 36307,
											"end": 36380,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 36230,
											"end": 36386,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 36230,
											"end": 36386,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 36230,
											"end": 36386,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 36230,
											"end": 36386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 36392,
											"end": 36537,
											"name": "tag",
											"source": 18,
											"value": "423"
										},
										{
											"begin": 36392,
											"end": 36537,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 36486,
											"end": 36530,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "819"
										},
										{
											"begin": 36524,
											"end": 36529,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 36486,
											"end": 36530,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "422"
										},
										{
											"begin": 36486,
											"end": 36530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 36486,
											"end": 36530,
											"name": "tag",
											"source": 18,
											"value": "819"
										},
										{
											"begin": 36486,
											"end": 36530,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 36481,
											"end": 36484,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 36474,
											"end": 36531,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 36392,
											"end": 36537,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 36392,
											"end": 36537,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 36392,
											"end": 36537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 36543,
											"end": 37255,
											"name": "tag",
											"source": 18,
											"value": "255"
										},
										{
											"begin": 36543,
											"end": 37255,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 36772,
											"end": 36776,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 36810,
											"end": 36813,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 36799,
											"end": 36808,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 36795,
											"end": 36814,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 36787,
											"end": 36814,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 36787,
											"end": 36814,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 36824,
											"end": 36895,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "821"
										},
										{
											"begin": 36892,
											"end": 36893,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 36881,
											"end": 36890,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 36877,
											"end": 36894,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 36868,
											"end": 36874,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 36824,
											"end": 36895,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "410"
										},
										{
											"begin": 36824,
											"end": 36895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 36824,
											"end": 36895,
											"name": "tag",
											"source": 18,
											"value": "821"
										},
										{
											"begin": 36824,
											"end": 36895,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 36905,
											"end": 36975,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "822"
										},
										{
											"begin": 36971,
											"end": 36973,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 36960,
											"end": 36969,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 36956,
											"end": 36974,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 36947,
											"end": 36953,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 36905,
											"end": 36975,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "412"
										},
										{
											"begin": 36905,
											"end": 36975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 36905,
											"end": 36975,
											"name": "tag",
											"source": 18,
											"value": "822"
										},
										{
											"begin": 36905,
											"end": 36975,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 36985,
											"end": 37064,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "823"
										},
										{
											"begin": 37060,
											"end": 37062,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 37049,
											"end": 37058,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 37045,
											"end": 37063,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 37036,
											"end": 37042,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 36985,
											"end": 37064,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "416"
										},
										{
											"begin": 36985,
											"end": 37064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 36985,
											"end": 37064,
											"name": "tag",
											"source": 18,
											"value": "823"
										},
										{
											"begin": 36985,
											"end": 37064,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 37074,
											"end": 37158,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "824"
										},
										{
											"begin": 37154,
											"end": 37156,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 37143,
											"end": 37152,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 37139,
											"end": 37157,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 37130,
											"end": 37136,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 37074,
											"end": 37158,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "420"
										},
										{
											"begin": 37074,
											"end": 37158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 37074,
											"end": 37158,
											"name": "tag",
											"source": 18,
											"value": "824"
										},
										{
											"begin": 37074,
											"end": 37158,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 37168,
											"end": 37248,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "825"
										},
										{
											"begin": 37243,
											"end": 37246,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 37232,
											"end": 37241,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 37228,
											"end": 37247,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 37219,
											"end": 37225,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 37168,
											"end": 37248,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "423"
										},
										{
											"begin": 37168,
											"end": 37248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 37168,
											"end": 37248,
											"name": "tag",
											"source": 18,
											"value": "825"
										},
										{
											"begin": 37168,
											"end": 37248,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 36543,
											"end": 37255,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 36543,
											"end": 37255,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 36543,
											"end": 37255,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 36543,
											"end": 37255,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 36543,
											"end": 37255,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 36543,
											"end": 37255,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 36543,
											"end": 37255,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 36543,
											"end": 37255,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 36543,
											"end": 37255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 37261,
											"end": 37703,
											"name": "tag",
											"source": 18,
											"value": "262"
										},
										{
											"begin": 37261,
											"end": 37703,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 37410,
											"end": 37414,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 37448,
											"end": 37450,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 37437,
											"end": 37446,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 37433,
											"end": 37451,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 37425,
											"end": 37451,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 37425,
											"end": 37451,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 37461,
											"end": 37532,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "827"
										},
										{
											"begin": 37529,
											"end": 37530,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 37518,
											"end": 37527,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 37514,
											"end": 37531,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 37505,
											"end": 37511,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 37461,
											"end": 37532,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "348"
										},
										{
											"begin": 37461,
											"end": 37532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 37461,
											"end": 37532,
											"name": "tag",
											"source": 18,
											"value": "827"
										},
										{
											"begin": 37461,
											"end": 37532,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 37542,
											"end": 37614,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "828"
										},
										{
											"begin": 37610,
											"end": 37612,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 37599,
											"end": 37608,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 37595,
											"end": 37613,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 37586,
											"end": 37592,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 37542,
											"end": 37614,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "348"
										},
										{
											"begin": 37542,
											"end": 37614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 37542,
											"end": 37614,
											"name": "tag",
											"source": 18,
											"value": "828"
										},
										{
											"begin": 37542,
											"end": 37614,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 37624,
											"end": 37696,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "829"
										},
										{
											"begin": 37692,
											"end": 37694,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 37681,
											"end": 37690,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 37677,
											"end": 37695,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 37668,
											"end": 37674,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 37624,
											"end": 37696,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "363"
										},
										{
											"begin": 37624,
											"end": 37696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 37624,
											"end": 37696,
											"name": "tag",
											"source": 18,
											"value": "829"
										},
										{
											"begin": 37624,
											"end": 37696,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 37261,
											"end": 37703,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 37261,
											"end": 37703,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 37261,
											"end": 37703,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 37261,
											"end": 37703,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 37261,
											"end": 37703,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 37261,
											"end": 37703,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 37261,
											"end": 37703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 37709,
											"end": 37825,
											"name": "tag",
											"source": 18,
											"value": "424"
										},
										{
											"begin": 37709,
											"end": 37825,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 37779,
											"end": 37800,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "831"
										},
										{
											"begin": 37794,
											"end": 37799,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 37779,
											"end": 37800,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "351"
										},
										{
											"begin": 37779,
											"end": 37800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 37779,
											"end": 37800,
											"name": "tag",
											"source": 18,
											"value": "831"
										},
										{
											"begin": 37779,
											"end": 37800,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 37772,
											"end": 37777,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 37769,
											"end": 37801,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 37759,
											"end": 37819,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "832"
										},
										{
											"begin": 37759,
											"end": 37819,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 37815,
											"end": 37816,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 37812,
											"end": 37813,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 37805,
											"end": 37817,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 37759,
											"end": 37819,
											"name": "tag",
											"source": 18,
											"value": "832"
										},
										{
											"begin": 37759,
											"end": 37819,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 37709,
											"end": 37825,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 37709,
											"end": 37825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 37831,
											"end": 37968,
											"name": "tag",
											"source": 18,
											"value": "425"
										},
										{
											"begin": 37831,
											"end": 37968,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 37885,
											"end": 37890,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 37916,
											"end": 37922,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 37910,
											"end": 37923,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 37901,
											"end": 37923,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 37901,
											"end": 37923,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 37932,
											"end": 37962,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "834"
										},
										{
											"begin": 37956,
											"end": 37961,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 37932,
											"end": 37962,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "424"
										},
										{
											"begin": 37932,
											"end": 37962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 37932,
											"end": 37962,
											"name": "tag",
											"source": 18,
											"value": "834"
										},
										{
											"begin": 37932,
											"end": 37962,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 37831,
											"end": 37968,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 37831,
											"end": 37968,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 37831,
											"end": 37968,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 37831,
											"end": 37968,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 37831,
											"end": 37968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 37974,
											"end": 38319,
											"name": "tag",
											"source": 18,
											"value": "277"
										},
										{
											"begin": 37974,
											"end": 38319,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 38041,
											"end": 38047,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 38090,
											"end": 38092,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 38078,
											"end": 38087,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 38069,
											"end": 38076,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 38065,
											"end": 38088,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 38061,
											"end": 38093,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 38058,
											"end": 38177,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 38058,
											"end": 38177,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "836"
										},
										{
											"begin": 38058,
											"end": 38177,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 38096,
											"end": 38175,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "837"
										},
										{
											"begin": 38096,
											"end": 38175,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "324"
										},
										{
											"begin": 38096,
											"end": 38175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 38096,
											"end": 38175,
											"name": "tag",
											"source": 18,
											"value": "837"
										},
										{
											"begin": 38096,
											"end": 38175,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 38058,
											"end": 38177,
											"name": "tag",
											"source": 18,
											"value": "836"
										},
										{
											"begin": 38058,
											"end": 38177,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 38216,
											"end": 38217,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 38241,
											"end": 38302,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "838"
										},
										{
											"begin": 38294,
											"end": 38301,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 38285,
											"end": 38291,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 38274,
											"end": 38283,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 38270,
											"end": 38292,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 38241,
											"end": 38302,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "425"
										},
										{
											"begin": 38241,
											"end": 38302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 38241,
											"end": 38302,
											"name": "tag",
											"source": 18,
											"value": "838"
										},
										{
											"begin": 38241,
											"end": 38302,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 38231,
											"end": 38302,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 38231,
											"end": 38302,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 38187,
											"end": 38312,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 37974,
											"end": 38319,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 37974,
											"end": 38319,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 37974,
											"end": 38319,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 37974,
											"end": 38319,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 37974,
											"end": 38319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 38325,
											"end": 38657,
											"name": "tag",
											"source": 18,
											"value": "282"
										},
										{
											"begin": 38325,
											"end": 38657,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 38446,
											"end": 38450,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 38484,
											"end": 38486,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 38473,
											"end": 38482,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 38469,
											"end": 38487,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 38461,
											"end": 38487,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 38461,
											"end": 38487,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 38497,
											"end": 38568,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "840"
										},
										{
											"begin": 38565,
											"end": 38566,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 38554,
											"end": 38563,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 38550,
											"end": 38567,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 38541,
											"end": 38547,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 38497,
											"end": 38568,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "348"
										},
										{
											"begin": 38497,
											"end": 38568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 38497,
											"end": 38568,
											"name": "tag",
											"source": 18,
											"value": "840"
										},
										{
											"begin": 38497,
											"end": 38568,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 38578,
											"end": 38650,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "841"
										},
										{
											"begin": 38646,
											"end": 38648,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 38635,
											"end": 38644,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 38631,
											"end": 38649,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 38622,
											"end": 38628,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 38578,
											"end": 38650,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "363"
										},
										{
											"begin": 38578,
											"end": 38650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 38578,
											"end": 38650,
											"name": "tag",
											"source": 18,
											"value": "841"
										},
										{
											"begin": 38578,
											"end": 38650,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 38325,
											"end": 38657,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 38325,
											"end": 38657,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 38325,
											"end": 38657,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 38325,
											"end": 38657,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 38325,
											"end": 38657,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 38325,
											"end": 38657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 38663,
											"end": 38748,
											"name": "tag",
											"source": 18,
											"value": "426"
										},
										{
											"begin": 38663,
											"end": 38748,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 38708,
											"end": 38715,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 38737,
											"end": 38742,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 38726,
											"end": 38742,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 38726,
											"end": 38742,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 38663,
											"end": 38748,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 38663,
											"end": 38748,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 38663,
											"end": 38748,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 38663,
											"end": 38748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 38754,
											"end": 38912,
											"name": "tag",
											"source": 18,
											"value": "427"
										},
										{
											"begin": 38754,
											"end": 38912,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 38812,
											"end": 38821,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 38845,
											"end": 38906,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "844"
										},
										{
											"begin": 38863,
											"end": 38905,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "845"
										},
										{
											"begin": 38872,
											"end": 38904,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "846"
										},
										{
											"begin": 38898,
											"end": 38903,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 38872,
											"end": 38904,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "426"
										},
										{
											"begin": 38872,
											"end": 38904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 38872,
											"end": 38904,
											"name": "tag",
											"source": 18,
											"value": "846"
										},
										{
											"begin": 38872,
											"end": 38904,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 38863,
											"end": 38905,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "330"
										},
										{
											"begin": 38863,
											"end": 38905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 38863,
											"end": 38905,
											"name": "tag",
											"source": 18,
											"value": "845"
										},
										{
											"begin": 38863,
											"end": 38905,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 38845,
											"end": 38906,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 38845,
											"end": 38906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 38845,
											"end": 38906,
											"name": "tag",
											"source": 18,
											"value": "844"
										},
										{
											"begin": 38845,
											"end": 38906,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 38832,
											"end": 38906,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 38832,
											"end": 38906,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 38754,
											"end": 38912,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 38754,
											"end": 38912,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 38754,
											"end": 38912,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 38754,
											"end": 38912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 38918,
											"end": 39065,
											"name": "tag",
											"source": 18,
											"value": "428"
										},
										{
											"begin": 38918,
											"end": 39065,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 39013,
											"end": 39058,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "848"
										},
										{
											"begin": 39052,
											"end": 39057,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 39013,
											"end": 39058,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "427"
										},
										{
											"begin": 39013,
											"end": 39058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 39013,
											"end": 39058,
											"name": "tag",
											"source": 18,
											"value": "848"
										},
										{
											"begin": 39013,
											"end": 39058,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 39008,
											"end": 39011,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 39001,
											"end": 39059,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 38918,
											"end": 39065,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 38918,
											"end": 39065,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 38918,
											"end": 39065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 39071,
											"end": 39419,
											"name": "tag",
											"source": 18,
											"value": "288"
										},
										{
											"begin": 39071,
											"end": 39419,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 39200,
											"end": 39204,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 39238,
											"end": 39240,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 39227,
											"end": 39236,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 39223,
											"end": 39241,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 39215,
											"end": 39241,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 39215,
											"end": 39241,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 39251,
											"end": 39322,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "850"
										},
										{
											"begin": 39319,
											"end": 39320,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 39308,
											"end": 39317,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 39304,
											"end": 39321,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 39295,
											"end": 39301,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 39251,
											"end": 39322,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "348"
										},
										{
											"begin": 39251,
											"end": 39322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 39251,
											"end": 39322,
											"name": "tag",
											"source": 18,
											"value": "850"
										},
										{
											"begin": 39251,
											"end": 39322,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 39332,
											"end": 39412,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "851"
										},
										{
											"begin": 39408,
											"end": 39410,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 39397,
											"end": 39406,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 39393,
											"end": 39411,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 39384,
											"end": 39390,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 39332,
											"end": 39412,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "428"
										},
										{
											"begin": 39332,
											"end": 39412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 39332,
											"end": 39412,
											"name": "tag",
											"source": 18,
											"value": "851"
										},
										{
											"begin": 39332,
											"end": 39412,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 39071,
											"end": 39419,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 39071,
											"end": 39419,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 39071,
											"end": 39419,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 39071,
											"end": 39419,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 39071,
											"end": 39419,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 39071,
											"end": 39419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 39425,
											"end": 39572,
											"name": "tag",
											"source": 18,
											"value": "429"
										},
										{
											"begin": 39425,
											"end": 39572,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 39526,
											"end": 39537,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 39563,
											"end": 39566,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 39548,
											"end": 39566,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 39548,
											"end": 39566,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 39425,
											"end": 39572,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 39425,
											"end": 39572,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 39425,
											"end": 39572,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 39425,
											"end": 39572,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 39425,
											"end": 39572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 39578,
											"end": 39964,
											"name": "tag",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 39578,
											"end": 39964,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 39682,
											"end": 39685,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 39710,
											"end": 39748,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "854"
										},
										{
											"begin": 39742,
											"end": 39747,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 39710,
											"end": 39748,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "353"
										},
										{
											"begin": 39710,
											"end": 39748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 39710,
											"end": 39748,
											"name": "tag",
											"source": 18,
											"value": "854"
										},
										{
											"begin": 39710,
											"end": 39748,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 39764,
											"end": 39852,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "855"
										},
										{
											"begin": 39845,
											"end": 39851,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 39840,
											"end": 39843,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 39764,
											"end": 39852,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "429"
										},
										{
											"begin": 39764,
											"end": 39852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 39764,
											"end": 39852,
											"name": "tag",
											"source": 18,
											"value": "855"
										},
										{
											"begin": 39764,
											"end": 39852,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 39757,
											"end": 39852,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 39757,
											"end": 39852,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 39861,
											"end": 39926,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "856"
										},
										{
											"begin": 39919,
											"end": 39925,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 39914,
											"end": 39917,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 39907,
											"end": 39911,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 39900,
											"end": 39905,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 39896,
											"end": 39912,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 39861,
											"end": 39926,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "355"
										},
										{
											"begin": 39861,
											"end": 39926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 39861,
											"end": 39926,
											"name": "tag",
											"source": 18,
											"value": "856"
										},
										{
											"begin": 39861,
											"end": 39926,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 39951,
											"end": 39957,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 39946,
											"end": 39949,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 39942,
											"end": 39958,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 39935,
											"end": 39958,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 39935,
											"end": 39958,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 39686,
											"end": 39964,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 39578,
											"end": 39964,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 39578,
											"end": 39964,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 39578,
											"end": 39964,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 39578,
											"end": 39964,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 39578,
											"end": 39964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 39970,
											"end": 40241,
											"name": "tag",
											"source": 18,
											"value": "295"
										},
										{
											"begin": 39970,
											"end": 40241,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 40100,
											"end": 40103,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 40122,
											"end": 40215,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "858"
										},
										{
											"begin": 40211,
											"end": 40214,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 40202,
											"end": 40208,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 40122,
											"end": 40215,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 40122,
											"end": 40215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 40122,
											"end": 40215,
											"name": "tag",
											"source": 18,
											"value": "858"
										},
										{
											"begin": 40122,
											"end": 40215,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 40115,
											"end": 40215,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 40115,
											"end": 40215,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 40232,
											"end": 40235,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 40225,
											"end": 40235,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 40225,
											"end": 40235,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 39970,
											"end": 40241,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 39970,
											"end": 40241,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 39970,
											"end": 40241,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 39970,
											"end": 40241,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 39970,
											"end": 40241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
								"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
								"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
								"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
								"src/DollarCostAveraging.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"checkUpkeep(bytes)": "6e04ff0d",
							"coordinator()": "0a009097",
							"createPlan(uint256,uint256)": "b197df54",
							"getAllowance(address)": "eb5a662e",
							"link()": "1c4695f4",
							"nextTriggerTime(address)": "83ceae8d",
							"nonce()": "affed0e0",
							"oracle()": "7dc0d1d0",
							"performUpkeep(bytes)": "4585e33b",
							"plans(address)": "86d86d84",
							"rawFulfillRandomWords(uint256,uint256[])": "1fe543e3",
							"startPlan()": "a63661a5",
							"stopPlan()": "d930da60",
							"triggerPlan(address)": "c440fa0f",
							"uniswapRouter()": "735de9f7",
							"updatePlan(uint256,uint256)": "00e1801c",
							"usdt()": "2f48ab7d",
							"userRandomRequestId(uint256)": "c966494e",
							"users(uint256)": "365b98b2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_link\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"frequency\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PlanCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"PlanStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"PlanStoped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethReceived\",\"type\":\"uint256\"}],\"name\":\"PlanTriggered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"frequency\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PlanUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coordinator\",\"outputs\":[{\"internalType\":\"contract VRFCoordinatorV2Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"frequency\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"createPlan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"link\",\"outputs\":[{\"internalType\":\"contract LinkTokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nextTriggerTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract AggregatorV2V3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"plans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"frequency\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"times\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPlan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopPlan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"triggerPlan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapRouter\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"frequency\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"updatePlan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userRandomRequestId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/DollarCostAveraging.sol\":\"DollarCostAveraging\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b738dba680a6fbc4afc85819743f13f5b7f4790ec8634c9894e1160327b11b6e\",\"dweb:/ipfs/Qmbv3euvQppeBm2g61khcJSRMZWi78xUWzbnjKAvDBnka4\"]},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465\",\"dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a\"]},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b\",\"dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG\"]},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d66b2096987616cda4611c109d9904863872ca5852d736b30f0e19e49afde35f\",\"dweb:/ipfs/Qmc6jpm3k3YuJG7U2s3FWr81Vk2rdQBhdqD9sA6b8Cr9BE\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xac02fbc0c7d194e525a71f524d1f7c472df73e19c2b527d7b529badaeaf0ec51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://301fa881df623882941bdc7a807807df436c5c7da499fa1a4bbe490738109845\",\"dweb:/ipfs/QmV2W4NYpe6uk4s34sCyrFJHfPEjYAkvHUposWkXrRNtbj\"]},\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://038eef992d813c20737fbe94e3a36e5d541d1aa736158dd2a43dd5b840b8c360\",\"dweb:/ipfs/QmZWJ25Yr1sUSAsfJRKvTMDmGkmy63hHhB495CUL1bpNz4\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]},\"src/DollarCostAveraging.sol\":{\"keccak256\":\"0xff0221acb78660cdf4497a8422b669811343760e11df970339bfa075c5fc6887\",\"urls\":[\"bzz-raw://ffd3f6a6979810115a0e07880178db502ddb35ef4952110fe0718e0acd2b5991\",\"dweb:/ipfs/QmUqKhpget7bEqaV5VY1LyxewivQbvMmE4EmsMSi46Vsac\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2187,
								"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
								"label": "plans",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(Plan)2182_storage)"
							},
							{
								"astId": 2191,
								"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
								"label": "users",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 2195,
								"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
								"label": "userRandomRequestId",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 2199,
								"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
								"label": "nextTriggerTime",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2202,
								"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
								"label": "usdt",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(ERC20)1022"
							},
							{
								"astId": 2205,
								"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
								"label": "link",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(LinkTokenInterface)312"
							},
							{
								"astId": 2208,
								"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
								"label": "coordinator",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(VRFCoordinatorV2Interface)217"
							},
							{
								"astId": 2210,
								"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
								"label": "subscriptionId",
								"offset": 20,
								"slot": "6",
								"type": "t_uint64"
							},
							{
								"astId": 2213,
								"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
								"label": "uniswapRouter",
								"offset": 0,
								"slot": "7",
								"type": "t_contract(IUniswapV2Router02)2123"
							},
							{
								"astId": 2216,
								"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
								"label": "oracle",
								"offset": 0,
								"slot": "8",
								"type": "t_contract(AggregatorV2V3Interface)75"
							},
							{
								"astId": 2218,
								"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
								"label": "nonce",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 2220,
								"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
								"label": "keyHash",
								"offset": 0,
								"slot": "10",
								"type": "t_bytes32"
							},
							{
								"astId": 2222,
								"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
								"label": "fee",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(AggregatorV2V3Interface)75": {
								"encoding": "inplace",
								"label": "contract AggregatorV2V3Interface",
								"numberOfBytes": "20"
							},
							"t_contract(ERC20)1022": {
								"encoding": "inplace",
								"label": "contract ERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IUniswapV2Router02)2123": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_contract(LinkTokenInterface)312": {
								"encoding": "inplace",
								"label": "contract LinkTokenInterface",
								"numberOfBytes": "20"
							},
							"t_contract(VRFCoordinatorV2Interface)217": {
								"encoding": "inplace",
								"label": "contract VRFCoordinatorV2Interface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Plan)2182_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DollarCostAveraging.Plan)",
								"numberOfBytes": "32",
								"value": "t_struct(Plan)2182_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_struct(Plan)2182_storage": {
								"encoding": "inplace",
								"label": "struct DollarCostAveraging.Plan",
								"members": [
									{
										"astId": 2171,
										"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
										"label": "index",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2173,
										"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
										"label": "frequency",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2175,
										"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
										"label": "amount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2177,
										"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
										"label": "startAt",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2179,
										"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
										"label": "times",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2181,
										"contract": "src/DollarCostAveraging.sol:DollarCostAveraging",
										"label": "status",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"performUpkeep(bytes)": {
								"notice": "method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."
							}
						},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> src/DollarCostAveraging.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "src/DollarCostAveraging.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
					"exportedSymbols": {
						"AutomationCompatibleInterface": [
							18
						]
					},
					"id": 19,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AutomationCompatibleInterface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 18,
							"linearizedBaseContracts": [
								18
							],
							"name": "AutomationCompatibleInterface",
							"nameLocation": "67:29:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "101:985:0",
										"text": " @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."
									},
									"functionSelector": "6e04ff0d",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkUpkeep",
									"nameLocation": "1098:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "checkData",
												"nameLocation": "1125:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "1110:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1110:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1109:26:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "upkeepNeeded",
												"nameLocation": "1159:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "1154:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "1186:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "1173:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 8,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1173:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1153:45:0"
									},
									"scope": 18,
									"src": "1089:110:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "1203:1003:0",
										"text": " @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."
									},
									"functionSelector": "4585e33b",
									"id": 17,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "performUpkeep",
									"nameLocation": "2218:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "2247:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "2232:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2232:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2231:28:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2268:0:0"
									},
									"scope": 18,
									"src": "2209:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 19,
							"src": "57:2214:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2240:0"
				},
				"id": 0
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol",
					"exportedSymbols": {
						"AggregatorInterface": [
							66
						]
					},
					"id": 67,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 20,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorInterface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 66,
							"linearizedBaseContracts": [
								66
							],
							"name": "AggregatorInterface",
							"nameLocation": "67:19:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "50d25bcd",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestAnswer",
									"nameLocation": "100:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "112:2:1"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "138:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "138:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "137:8:1"
									},
									"scope": 66,
									"src": "91:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8205bf6a",
									"id": 30,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestTimestamp",
									"nameLocation": "159:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "174:2:1"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "200:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "200:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "199:9:1"
									},
									"scope": 66,
									"src": "150:59:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "668a0f02",
									"id": 35,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRound",
									"nameLocation": "222:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "233:2:1"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "259:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "259:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "258:9:1"
									},
									"scope": 66,
									"src": "213:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b5ab58dc",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAnswer",
									"nameLocation": "281:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "291:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "290:17:1"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "331:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 39,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "331:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "330:8:1"
									},
									"scope": 66,
									"src": "272:67:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b633620c",
									"id": 49,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTimestamp",
									"nameLocation": "352:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "373:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "365:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "365:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "364:17:1"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "405:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:9:1"
									},
									"scope": 66,
									"src": "343:71:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f",
									"id": 57,
									"name": "AnswerUpdated",
									"nameLocation": "424:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"indexed": true,
												"mutability": "mutable",
												"name": "current",
												"nameLocation": "453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "438:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 50,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "438:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"indexed": true,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "478:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "462:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "462:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"indexed": false,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "495:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "487:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:68:1"
									},
									"src": "418:88:1"
								},
								{
									"anonymous": false,
									"eventSelector": "0109fc6f55cf40689f02fbaad7af7fe7bbac8a3d2186600afc7d3e10cac60271",
									"id": 65,
									"name": "NewRound",
									"nameLocation": "516:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"indexed": true,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "541:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "525:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "startedBy",
												"nameLocation": "566:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "550:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "550:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": false,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "585:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "577:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "577:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:71:1"
									},
									"src": "510:86:1"
								}
							],
							"scope": 67,
							"src": "57:541:1",
							"usedErrors": [],
							"usedEvents": [
								57,
								65
							]
						}
					],
					"src": "32:567:1"
				},
				"id": 1
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol",
					"exportedSymbols": {
						"AggregatorInterface": [
							66
						],
						"AggregatorV2V3Interface": [
							75
						],
						"AggregatorV3Interface": [
							121
						]
					},
					"id": 76,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 68,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol",
							"file": "./AggregatorInterface.sol",
							"id": 69,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 76,
							"sourceUnit": 67,
							"src": "57:35:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "./AggregatorV3Interface.sol",
							"id": 70,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 76,
							"sourceUnit": 122,
							"src": "93:37:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 71,
										"name": "AggregatorInterface",
										"nameLocations": [
											"169:19:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 66,
										"src": "169:19:2"
									},
									"id": 72,
									"nodeType": "InheritanceSpecifier",
									"src": "169:19:2"
								},
								{
									"baseName": {
										"id": 73,
										"name": "AggregatorV3Interface",
										"nameLocations": [
											"190:21:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "190:21:2"
									},
									"id": 74,
									"nodeType": "InheritanceSpecifier",
									"src": "190:21:2"
								}
							],
							"canonicalName": "AggregatorV2V3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 75,
							"linearizedBaseContracts": [
								75,
								121,
								66
							],
							"name": "AggregatorV2V3Interface",
							"nameLocation": "142:23:2",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 76,
							"src": "132:82:2",
							"usedErrors": [],
							"usedEvents": [
								57,
								65
							]
						}
					],
					"src": "32:183:2"
				},
				"id": 2
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							121
						]
					},
					"id": 122,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 77,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 121,
							"linearizedBaseContracts": [
								121
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 82,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:3"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "136:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 79,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:3"
									},
									"scope": 121,
									"src": "93:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:3"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "193:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:3"
									},
									"scope": 121,
									"src": "147:61:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 92,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:3"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "254:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:3"
									},
									"scope": 121,
									"src": "212:51:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "294:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 93,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:3"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "337:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 96,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "353:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 98,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "368:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "387:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "406:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 104,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:3"
									},
									"scope": 121,
									"src": "267:163:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:3"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "496:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 109,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "512:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 111,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "527:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "546:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "565:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 117,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:3"
									},
									"scope": 121,
									"src": "434:155:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 122,
							"src": "57:534:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:3"
				},
				"id": 3
			},
			"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
					"exportedSymbols": {
						"VRFCoordinatorV2Interface": [
							217
						]
					},
					"id": 218,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 123,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "VRFCoordinatorV2Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 217,
							"linearizedBaseContracts": [
								217
							],
							"name": "VRFCoordinatorV2Interface",
							"nameLocation": "67:25:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "97:267:4",
										"text": " @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"
									},
									"functionSelector": "00012291",
									"id": 134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRequestConfig",
									"nameLocation": "376:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "392:2:4"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "418:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 126,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "418:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "426:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 128,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "426:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "434:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 130,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "434:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 131,
													"nodeType": "ArrayTypeName",
													"src": "434:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:34:4"
									},
									"scope": 217,
									"src": "367:85:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "456:1511:4",
										"text": " @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."
									},
									"functionSelector": "5d3b1d30",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "requestRandomWords",
									"nameLocation": "1979:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "keyHash",
												"nameLocation": "2011:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "2003:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 136,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2003:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "2031:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "2024:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 138,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2024:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "minimumRequestConfirmations",
												"nameLocation": "2049:27:4",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "2042:34:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 140,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2042:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "callbackGasLimit",
												"nameLocation": "2089:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "2082:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 142,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2082:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "numWords",
												"nameLocation": "2118:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "2111:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 144,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2111:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1997:133:4"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "2157:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "2149:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:19:4"
									},
									"scope": 217,
									"src": "1970:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "2172:384:4",
										"text": " @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"
									},
									"functionSelector": "a21a23e4",
									"id": 156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createSubscription",
									"nameLocation": "2568:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2586:2:4"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "2614:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2607:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 153,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2607:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2606:14:4"
									},
									"scope": 217,
									"src": "2559:62:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "2625:381:4",
										"text": " @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."
									},
									"functionSelector": "a47c7696",
									"id": 171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSubscription",
									"nameLocation": "3018:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "3046:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3039:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 158,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3039:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3033:22:4"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "3086:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3079:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 161,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3079:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "reqCount",
												"nameLocation": "3102:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3095:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 163,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3095:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3120:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3112:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3112:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "consumers",
												"nameLocation": "3144:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3127:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 167,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3127:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 168,
													"nodeType": "ArrayTypeName",
													"src": "3127:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3078:76:4"
									},
									"scope": 217,
									"src": "3009:146:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "3159:164:4",
										"text": " @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"
									},
									"functionSelector": "04c357cb",
									"id": 179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "requestSubscriptionOwnerTransfer",
									"nameLocation": "3335:32:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "3375:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "3368:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 173,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3368:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3390:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "3382:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3382:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3367:32:4"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3408:0:4"
									},
									"scope": 217,
									"src": "3326:83:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "3413:212:4",
										"text": " @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."
									},
									"functionSelector": "82359740",
									"id": 185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "acceptSubscriptionOwnerTransfer",
									"nameLocation": "3637:31:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "3676:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "3669:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 181,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3669:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3668:14:4"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3691:0:4"
									},
									"scope": 217,
									"src": "3628:64:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "3696:170:4",
										"text": " @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"
									},
									"functionSelector": "7341c10c",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addConsumer",
									"nameLocation": "3878:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "3897:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3890:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 187,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3890:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "consumer",
												"nameLocation": "3912:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3904:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3889:32:4"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3930:0:4"
									},
									"scope": 217,
									"src": "3869:62:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "3935:172:4",
										"text": " @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"
									},
									"functionSelector": "9f87fad7",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeConsumer",
									"nameLocation": "4119:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "4141:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "4134:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 195,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4134:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "consumer",
												"nameLocation": "4156:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "4148:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4148:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4133:32:4"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4174:0:4"
									},
									"scope": 217,
									"src": "4110:65:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "4179:140:4",
										"text": " @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"
									},
									"functionSelector": "d7ae1d30",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "cancelSubscription",
									"nameLocation": "4331:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "4357:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "4350:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 203,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4350:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4372:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "4364:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4364:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4349:26:4"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4384:0:4"
									},
									"scope": 217,
									"src": "4322:63:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e82ad7d4",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingRequestExists",
									"nameLocation": "4690:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "4718:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "4711:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 210,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4711:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4710:14:4"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "4748:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4748:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4747:6:4"
									},
									"scope": 217,
									"src": "4681:73:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 218,
							"src": "57:4699:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:4725:4"
				},
				"id": 4
			},
			"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
					"exportedSymbols": {
						"LinkTokenInterface": [
							312
						]
					},
					"id": 313,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 219,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LinkTokenInterface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 312,
							"linearizedBaseContracts": [
								312
							],
							"name": "LinkTokenInterface",
							"nameLocation": "67:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "dd62ed3e",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "99:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "117:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "109:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "109:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "132:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "124:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "124:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:32:5"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "remaining",
												"nameLocation": "172:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "164:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "164:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "163:19:5"
									},
									"scope": 312,
									"src": "90:93:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "196:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "212:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "204:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "229:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "221:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "221:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:32:5"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "259:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "254:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 234,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "254:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:14:5"
									},
									"scope": 312,
									"src": "187:81:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "281:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "299:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "291:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "291:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "290:15:5"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "337:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "329:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "328:17:5"
									},
									"scope": 312,
									"src": "272:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "359:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "367:2:5"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "decimalPlaces",
												"nameLocation": "399:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "393:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 246,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "393:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:21:5"
									},
									"scope": 312,
									"src": "350:64:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "66188463",
									"id": 258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseApproval",
									"nameLocation": "427:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "452:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "444:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "469:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "461:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "443:37:5"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "504:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "499:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 255,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "499:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:14:5"
									},
									"scope": 312,
									"src": "418:95:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d73dd623",
									"id": 265,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseApproval",
									"nameLocation": "526:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "551:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "543:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "568:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "560:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "542:42:5"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "593:0:5"
									},
									"scope": 312,
									"src": "517:77:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "06fdde03",
									"id": 270,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "607:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "611:2:5"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "tokenName",
												"nameLocation": "651:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "637:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 267,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "637:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:25:5"
									},
									"scope": 312,
									"src": "598:64:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "675:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "681:2:5"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "tokenSymbol",
												"nameLocation": "721:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "707:25:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 272,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "707:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "706:27:5"
									},
									"scope": 312,
									"src": "666:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "747:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "758:2:5"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "totalTokensIssued",
												"nameLocation": "792:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "784:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "783:27:5"
									},
									"scope": 312,
									"src": "738:73:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "824:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "841:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "833:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "853:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "845:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "845:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "832:27:5"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "883:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "878:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "878:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:14:5"
									},
									"scope": 312,
									"src": "815:77:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4000aea0",
									"id": 300,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "905:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "929:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "921:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "921:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "941:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "933:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "933:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "963:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "948:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 294,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "948:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "920:48:5"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "992:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "987:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 297,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "987:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "986:14:5"
									},
									"scope": 312,
									"src": "896:105:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1014:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1035:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1027:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1049:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1041:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1061:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1053:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:41:5"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1091:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1086:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 308,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1086:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1085:14:5"
									},
									"scope": 312,
									"src": "1005:95:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 313,
							"src": "57:1045:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1071:5"
				},
				"id": 5
			},
			"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol",
					"exportedSymbols": {
						"VRFConsumerBaseV2": [
							370
						]
					},
					"id": 371,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 314,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "VRFConsumerBaseV2",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 315,
								"nodeType": "StructuredDocumentation",
								"src": "57:5275:6",
								"text": "****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."
							},
							"fullyImplemented": false,
							"id": 370,
							"linearizedBaseContracts": [
								370
							],
							"name": "VRFConsumerBaseV2",
							"nameLocation": "5351:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "1cf993f4",
									"id": 321,
									"name": "OnlyCoordinatorCanFulfill",
									"nameLocation": "5379:25:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "have",
												"nameLocation": "5413:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "5405:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5405:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "want",
												"nameLocation": "5427:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "5419:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5404:28:6"
									},
									"src": "5373:60:6"
								},
								{
									"constant": false,
									"id": 323,
									"mutability": "immutable",
									"name": "vrfCoordinator",
									"nameLocation": "5462:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 370,
									"src": "5436:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 322,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5436:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5593:43:6",
										"statements": [
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 329,
														"name": "vrfCoordinator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "5599:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 330,
														"name": "_vrfCoordinator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "5616:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5599:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "5599:32:6"
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "5481:72:6",
										"text": " @param _vrfCoordinator address of VRFCoordinator contract"
									},
									"id": 334,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "_vrfCoordinator",
												"nameLocation": "5576:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5568:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5568:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5567:25:6"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5593:0:6"
									},
									"scope": 370,
									"src": "5556:80:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5640:686:6",
										"text": " @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"
									},
									"id": 343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fulfillRandomWords",
									"nameLocation": "6338:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "6365:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "6357:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6357:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "randomWords",
												"nameLocation": "6393:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "6376:28:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 338,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6376:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 339,
													"nodeType": "ArrayTypeName",
													"src": "6376:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6356:49:6"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6422:0:6"
									},
									"scope": 370,
									"src": "6329:94:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "6707:167:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 351,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6717:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6721:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6717:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 353,
														"name": "vrfCoordinator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "6731:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6717:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 362,
												"nodeType": "IfStatement",
												"src": "6713:109:6",
												"trueBody": {
													"id": 361,
													"nodeType": "Block",
													"src": "6747:75:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 356,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6788:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6792:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6788:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 358,
																		"name": "vrfCoordinator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 323,
																		"src": "6800:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 355,
																	"name": "OnlyCoordinatorCanFulfill",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "6762:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6762:53:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 360,
															"nodeType": "RevertStatement",
															"src": "6755:60:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 364,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "6846:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 365,
															"name": "randomWords",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "6857:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 363,
														"name": "fulfillRandomWords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "6827:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint256[] memory)"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6827:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "6827:42:6"
											}
										]
									},
									"functionSelector": "1fe543e3",
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rawFulfillRandomWords",
									"nameLocation": "6627:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "6657:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "6649:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6649:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "randomWords",
												"nameLocation": "6685:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "6668:28:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 346,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6668:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 347,
													"nodeType": "ArrayTypeName",
													"src": "6668:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6648:49:6"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6707:0:6"
									},
									"scope": 370,
									"src": "6618:256:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 371,
							"src": "5333:1543:6",
							"usedErrors": [
								321
							],
							"usedEvents": []
						}
					],
					"src": "32:6845:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							507
						],
						"IERC20Errors": [
							412
						],
						"IERC721Errors": [
							460
						]
					},
					"id": 508,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 372,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 373,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:7",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 412,
							"linearizedBaseContracts": [
								412
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:7",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 382,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "652:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "668:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "685:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:7"
									},
									"src": "621:80:7"
								},
								{
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:7",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 387,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "889:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:7"
									},
									"src": "864:41:7"
								},
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:7",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 392,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1102:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:7"
									},
									"src": "1075:45:7"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:7",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 401,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1509:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1526:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1545:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:7"
									},
									"src": "1476:85:7"
								},
								{
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:7",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 406,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "1773:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:7"
									},
									"src": "1746:45:7"
								},
								{
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:7",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 411,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "2023:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:7"
									},
									"src": "1997:43:7"
								}
							],
							"scope": 508,
							"src": "278:1764:7",
							"usedErrors": [
								382,
								387,
								392,
								401,
								406,
								411
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 413,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:7",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 460,
							"linearizedBaseContracts": [
								460
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:7",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 418,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "2465:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:7"
									},
									"src": "2440:40:7"
								},
								{
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:7",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 423,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2652:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:7"
									},
									"src": "2623:46:7"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:7",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 432,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "2996:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "3012:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "3029:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:7"
									},
									"src": "2969:75:7"
								},
								{
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:7",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 437,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3233:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:7"
									},
									"src": "3207:42:7"
								},
								{
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:7",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 442,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "3447:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:7"
									},
									"src": "3419:46:7"
								},
								{
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:7",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 449,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "3756:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "3774:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:7"
									},
									"src": "3723:68:7"
								},
								{
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:7",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 454,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "4004:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:7"
									},
									"src": "3976:46:7"
								},
								{
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:7",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 459,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "4258:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:7"
									},
									"src": "4230:46:7"
								}
							],
							"scope": 508,
							"src": "2186:2092:7",
							"usedErrors": [
								418,
								423,
								432,
								437,
								442,
								449,
								454,
								459
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 461,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:7",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 507,
							"linearizedBaseContracts": [
								507
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:7",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 472,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "4854:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "4870:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "4887:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "4903:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:7"
									},
									"src": "4821:99:7"
								},
								{
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:7",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 477,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "5110:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:7"
									},
									"src": "5083:43:7"
								},
								{
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:7",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 482,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5325:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:7"
									},
									"src": "5296:47:7"
								},
								{
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:7",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 489,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5645:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5663:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:7"
									},
									"src": "5610:68:7"
								},
								{
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:7",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 494,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "5892:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:7"
									},
									"src": "5863:47:7"
								},
								{
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:7",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 499,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "6147:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:7"
									},
									"src": "6118:47:7"
								},
								{
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:7",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 506,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "6488:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "6507:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:7"
									},
									"src": "6456:73:7"
								}
							],
							"scope": 508,
							"src": "4424:2107:7",
							"usedErrors": [
								472,
								477,
								482,
								489,
								494,
								499,
								506
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1727
						],
						"ERC20": [
							1022
						],
						"IERC20": [
							1100
						],
						"IERC20Errors": [
							412
						],
						"IERC20Metadata": [
							1126
						]
					},
					"id": 1023,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 509,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 511,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1023,
							"sourceUnit": 1101,
							"src": "131:36:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 510,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1100,
										"src": "139:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 513,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1023,
							"sourceUnit": 1127,
							"src": "168:63:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 512,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1126,
										"src": "176:14:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 515,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1023,
							"sourceUnit": 1728,
							"src": "232:48:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 514,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1727,
										"src": "240:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 517,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1023,
							"sourceUnit": 508,
							"src": "281:65:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 516,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 412,
										"src": "289:12:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 519,
										"name": "Context",
										"nameLocations": [
											"1428:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1727,
										"src": "1428:7:8"
									},
									"id": 520,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:8"
								},
								{
									"baseName": {
										"id": 521,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1100,
										"src": "1437:6:8"
									},
									"id": 522,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:8"
								},
								{
									"baseName": {
										"id": 523,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1126,
										"src": "1445:14:8"
									},
									"id": 524,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:8"
								},
								{
									"baseName": {
										"id": 525,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 412,
										"src": "1461:12:8"
									},
									"id": 526,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:8"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 518,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:8",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1022,
							"linearizedBaseContracts": [
								1022,
								412,
								1126,
								1100,
								1727
							],
							"name": "ERC20",
							"nameLocation": "1419:5:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 530,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 1022,
									"src": "1480:53:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 529,
										"keyName": "account",
										"keyNameLocation": "1496:7:8",
										"keyType": {
											"id": 527,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 528,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 536,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1022,
									"src": "1540:83:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 535,
										"keyName": "account",
										"keyNameLocation": "1556:7:8",
										"keyType": {
											"id": 531,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 534,
											"keyName": "spender",
											"keyNameLocation": "1583:7:8",
											"keyType": {
												"id": 532,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 533,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 538,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1022,
									"src": "1630:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 537,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 540,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1022,
									"src": "1665:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 539,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 542,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1022,
									"src": "1691:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 541,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "1952:57:8",
										"statements": [
											{
												"expression": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 550,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "1962:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 551,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "1970:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:8"
											},
											{
												"expression": {
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 554,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "1985:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 555,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "1995:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:8"
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:8",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 559,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "1908:19:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 544,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "1929:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 546,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:8"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:8"
									},
									"scope": 1022,
									"src": "1896:113:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1113
									],
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "2134:29:8",
										"statements": [
											{
												"expression": {
													"id": 565,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 540,
													"src": "2151:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 564,
												"id": 566,
												"nodeType": "Return",
												"src": "2144:12:8"
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:8",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:8"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2119:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 562,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:8"
									},
									"scope": 1022,
									"src": "2074:89:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1119
									],
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "2338:31:8",
										"statements": [
											{
												"expression": {
													"id": 574,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 542,
													"src": "2355:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 573,
												"id": 575,
												"nodeType": "Return",
												"src": "2348:14:8"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:8",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:8"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "2323:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 571,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:8"
									},
									"scope": 1022,
									"src": "2276:93:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1125
									],
									"body": {
										"id": 585,
										"nodeType": "Block",
										"src": "3058:26:8",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 582,
												"id": 584,
												"nodeType": "Return",
												"src": "3068:9:8"
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:8",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:8"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "3051:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 580,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:8"
									},
									"scope": 1022,
									"src": "3002:82:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1049
									],
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "3205:36:8",
										"statements": [
											{
												"expression": {
													"id": 592,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 538,
													"src": "3222:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 591,
												"id": 593,
												"nodeType": "Return",
												"src": "3215:19:8"
											}
										]
									},
									"documentation": {
										"id": 587,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:8",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:8"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "3196:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:8"
									},
									"scope": 1022,
									"src": "3144:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1057
									],
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "3373:42:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 603,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "3390:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 605,
													"indexExpression": {
														"id": 604,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "3400:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 602,
												"id": 606,
												"nodeType": "Return",
												"src": "3383:25:8"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:8",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "3318:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:8"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "3364:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:8"
									},
									"scope": 1022,
									"src": "3299:116:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1067
									],
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "3685:103:8",
										"statements": [
											{
												"assignments": [
													619
												],
												"declarations": [
													{
														"constant": false,
														"id": 619,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 631,
														"src": "3695:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 618,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 622,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 620,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "3711:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 624,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "3743:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 625,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "3750:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 626,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "3754:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 623,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "3733:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 617,
												"id": 630,
												"nodeType": "Return",
												"src": "3770:11:8"
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:8",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3628:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3640:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:8"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3679:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 615,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:8"
									},
									"scope": 1022,
									"src": "3610:178:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1077
									],
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "3935:51:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 642,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "3952:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 644,
														"indexExpression": {
															"id": 643,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "3964:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 646,
													"indexExpression": {
														"id": 645,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "3971:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 641,
												"id": 647,
												"nodeType": "Return",
												"src": "3945:34:8"
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:8",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "3865:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "3880:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:8"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "3926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:8"
									},
									"scope": 1022,
									"src": "3846:140:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1087
									],
									"body": {
										"id": 672,
										"nodeType": "Block",
										"src": "4372:107:8",
										"statements": [
											{
												"assignments": [
													660
												],
												"declarations": [
													{
														"constant": false,
														"id": 660,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 672,
														"src": "4382:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 659,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 663,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 661,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "4398:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 665,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "4429:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "4436:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "4445:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 664,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															913,
															973
														],
														"referencedDeclaration": 913,
														"src": "4420:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 658,
												"id": 671,
												"nodeType": "Return",
												"src": "4461:11:8"
											}
										]
									},
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:8",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "4310:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "4327:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:8"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "4366:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 656,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:8"
									},
									"scope": 1022,
									"src": "4293:186:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1099
									],
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "5132:151:8",
										"statements": [
											{
												"assignments": [
													686
												],
												"declarations": [
													{
														"constant": false,
														"id": 686,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 704,
														"src": "5142:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 685,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 689,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 687,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "5160:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 691,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "5198:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "5204:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 693,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "5213:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 690,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "5182:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 697,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "5239:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 698,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "5245:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "5249:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 696,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "5229:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 684,
												"id": 703,
												"nodeType": "Return",
												"src": "5265:11:8"
											}
										]
									},
									"documentation": {
										"id": 674,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:8",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "5061:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "5075:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "5087:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:8"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "5126:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 682,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:8"
									},
									"scope": 1022,
									"src": "5039:244:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "5725:231:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 715,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "5739:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 716,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 719,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 729,
												"nodeType": "IfStatement",
												"src": "5735:86:8",
												"trueBody": {
													"id": 728,
													"nodeType": "Block",
													"src": "5759:62:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 724,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 722,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 721,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "5780:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 727,
															"nodeType": "RevertStatement",
															"src": "5773:37:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 730,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "5834:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 731,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 744,
												"nodeType": "IfStatement",
												"src": "5830:86:8",
												"trueBody": {
													"id": 743,
													"nodeType": "Block",
													"src": "5852:64:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 739,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 737,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 736,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "5873:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 742,
															"nodeType": "RevertStatement",
															"src": "5866:39:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 746,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "5933:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 747,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "5939:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 748,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "5943:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 745,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "5925:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 750,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:8"
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:8",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "5675:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "5689:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "5701:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:8"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:8"
									},
									"scope": 1022,
									"src": "5656:300:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "6346:1032:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 762,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "6360:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 763,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 799,
													"nodeType": "Block",
													"src": "6534:362:8",
													"statements": [
														{
															"assignments": [
																774
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 774,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 799,
																	"src": "6548:19:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 773,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 778,
															"initialValue": {
																"baseExpression": {
																	"id": 775,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 530,
																	"src": "6570:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 777,
																"indexExpression": {
																	"id": 776,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "6580:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:8"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 779,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "6603:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 780,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "6617:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 789,
															"nodeType": "IfStatement",
															"src": "6599:115:8",
															"trueBody": {
																"id": 788,
																"nodeType": "Block",
																"src": "6624:90:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 783,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "6674:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 784,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 774,
																					"src": "6680:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 785,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 759,
																					"src": "6693:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 782,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 382,
																				"src": "6649:24:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 786,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 787,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:8"
																	}
																]
															}
														},
														{
															"id": 798,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:8",
															"statements": [
																{
																	"expression": {
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 790,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 530,
																				"src": "6834:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 792,
																			"indexExpression": {
																				"id": 791,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "6844:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 793,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 774,
																				"src": "6852:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 794,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 759,
																				"src": "6866:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 797,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:8"
																}
															]
														}
													]
												},
												"id": 800,
												"nodeType": "IfStatement",
												"src": "6356:540:8",
												"trueBody": {
													"id": 772,
													"nodeType": "Block",
													"src": "6380:148:8",
													"statements": [
														{
															"expression": {
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 768,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "6496:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 769,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "6512:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 771,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 801,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "6910:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 802,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 805,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 820,
													"nodeType": "Block",
													"src": "7125:206:8",
													"statements": [
														{
															"id": 819,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:8",
															"statements": [
																{
																	"expression": {
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 813,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 530,
																				"src": "7284:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 815,
																			"indexExpression": {
																				"id": 814,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 757,
																				"src": "7294:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 816,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 759,
																			"src": "7301:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 818,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:8"
																}
															]
														}
													]
												},
												"id": 821,
												"nodeType": "IfStatement",
												"src": "6906:425:8",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "6928:191:8",
													"statements": [
														{
															"id": 811,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:8",
															"statements": [
																{
																	"expression": {
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 807,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 538,
																			"src": "7073:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 808,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 759,
																			"src": "7089:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 810,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:8"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 823,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "7355:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 824,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "7361:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 825,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "7365:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 822,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "7346:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 827,
												"nodeType": "EmitStatement",
												"src": "7341:30:8"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:8",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "6288:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "6302:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "6314:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:8"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:8"
									},
									"scope": 1022,
									"src": "6271:1107:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "7777:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 837,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "7791:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 838,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "7787:91:8",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "7814:64:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 846,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 844,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 843,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "7835:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 849,
															"nodeType": "RevertStatement",
															"src": "7828:39:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 853,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "7907:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 858,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "7916:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 852,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "7887:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:8"
											}
										]
									},
									"documentation": {
										"id": 830,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:8",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "7736:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "7753:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:8"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:8"
									},
									"scope": 1022,
									"src": "7721:208:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "8303:150:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 870,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "8317:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 871,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 884,
												"nodeType": "IfStatement",
												"src": "8313:89:8",
												"trueBody": {
													"id": 883,
													"nodeType": "Block",
													"src": "8340:62:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 879,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 877,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 876,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "8361:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 882,
															"nodeType": "RevertStatement",
															"src": "8354:37:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 886,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "8419:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 887,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 891,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "8440:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 885,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "8411:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:8"
											}
										]
									},
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:8",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "8262:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "8279:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:8"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:8"
									},
									"scope": 1022,
									"src": "8247:206:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "9063:54:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 906,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "9082:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 907,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "9089:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 908,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "9098:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 905,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															913,
															973
														],
														"referencedDeclaration": 973,
														"src": "9073:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:8"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:8",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "9007:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "9022:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "9039:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:8"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:8"
									},
									"scope": 1022,
									"src": "8989:128:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "10047:334:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 925,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "10061:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 926,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 939,
												"nodeType": "IfStatement",
												"src": "10057:89:8",
												"trueBody": {
													"id": 938,
													"nodeType": "Block",
													"src": "10082:64:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 934,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 933,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 932,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 931,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "10103:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 937,
															"nodeType": "RevertStatement",
															"src": "10096:39:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 940,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "10159:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 941,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 944,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 954,
												"nodeType": "IfStatement",
												"src": "10155:90:8",
												"trueBody": {
													"id": 953,
													"nodeType": "Block",
													"src": "10182:63:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 949,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 948,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 947,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 946,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "10203:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 952,
															"nodeType": "RevertStatement",
															"src": "10196:38:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 955,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 536,
																"src": "10254:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 958,
															"indexExpression": {
																"id": 956,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 916,
																"src": "10266:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 959,
														"indexExpression": {
															"id": 957,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "10273:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 960,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "10284:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 962,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:8"
											},
											{
												"condition": {
													"id": 963,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 922,
													"src": "10303:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 971,
												"nodeType": "IfStatement",
												"src": "10299:76:8",
												"trueBody": {
													"id": 970,
													"nodeType": "Block",
													"src": "10314:61:8",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 965,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "10342:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 966,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 918,
																		"src": "10349:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 967,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 920,
																		"src": "10358:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 964,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1043,
																	"src": "10333:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 969,
															"nodeType": "EmitStatement",
															"src": "10328:36:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:8",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "9967:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "9982:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "9999:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "10014:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 921,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:8"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:8"
									},
									"scope": 1022,
									"src": "9949:432:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "10752:388:8",
										"statements": [
											{
												"assignments": [
													984
												],
												"declarations": [
													{
														"constant": false,
														"id": 984,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 1020,
														"src": "10762:24:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 983,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 989,
												"initialValue": {
													"arguments": [
														{
															"id": 986,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "10799:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 987,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "10806:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 985,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "10789:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 990,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "10828:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 992,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 991,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 995,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1019,
												"nodeType": "IfStatement",
												"src": "10824:310:8",
												"trueBody": {
													"id": 1018,
													"nodeType": "Block",
													"src": "10867:267:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 997,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "10885:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 998,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "10904:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1007,
															"nodeType": "IfStatement",
															"src": "10881:130:8",
															"trueBody": {
																"id": 1006,
																"nodeType": "Block",
																"src": "10911:100:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1001,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 978,
																					"src": "10963:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1002,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 984,
																					"src": "10972:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1003,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 980,
																					"src": "10990:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1000,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 401,
																				"src": "10936:26:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1005,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:8"
																	}
																]
															}
														},
														{
															"id": 1017,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:8",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1009,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 976,
																				"src": "11061:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1010,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 978,
																				"src": "11068:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1013,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1011,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 984,
																					"src": "11077:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1012,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 980,
																					"src": "11096:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1014,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1008,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				913,
																				973
																			],
																			"referencedDeclaration": 973,
																			"src": "11052:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1016,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:8"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:8",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "10688:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "10703:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "10720:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:8"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:8"
									},
									"scope": 1022,
									"src": "10663:477:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1023,
							"src": "1401:9741:8",
							"usedErrors": [
								382,
								387,
								392,
								401,
								406,
								411
							],
							"usedEvents": [
								1034,
								1043
							]
						}
					],
					"src": "105:11038:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1100
						]
					},
					"id": 1101,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1024,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1025,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:9",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1100,
							"linearizedBaseContracts": [
								1100
							],
							"name": "IERC20",
							"nameLocation": "213:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:9",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1034,
									"name": "Transfer",
									"nameLocation": "395:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "404:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "426:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "446:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:9"
									},
									"src": "389:72:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:9",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1043,
									"name": "Approval",
									"nameLocation": "626:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "635:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "658:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "683:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:9"
									},
									"src": "620:78:9"
								},
								{
									"documentation": {
										"id": 1044,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:9",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1049,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:9"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "820:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:9"
									},
									"scope": 1100,
									"src": "774:55:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:9",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1057,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "930:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:9"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "970:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:9"
									},
									"scope": 1100,
									"src": "911:68:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:9",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1067,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1221:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1233:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:9"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1266:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1064,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:9"
									},
									"scope": 1100,
									"src": "1203:69:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1068,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:9",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1077,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "1566:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "1581:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:9"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "1621:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:9"
									},
									"scope": 1100,
									"src": "1547:83:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:9",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1087,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "2325:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "2342:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:9"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "2375:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1084,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:9"
									},
									"scope": 1100,
									"src": "2308:73:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1088,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:9",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1099,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "2711:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "2725:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "2737:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:9"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "2770:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1096,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:9"
									},
									"scope": 1100,
									"src": "2689:87:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1101,
							"src": "203:2575:9",
							"usedErrors": [],
							"usedEvents": [
								1034,
								1043
							]
						}
					],
					"src": "106:2673:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1100
						],
						"IERC20Metadata": [
							1126
						]
					},
					"id": 1127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1102,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1104,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1127,
							"sourceUnit": 1101,
							"src": "151:37:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1103,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1100,
										"src": "159:6:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1106,
										"name": "IERC20",
										"nameLocations": [
											"305:6:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1100,
										"src": "305:6:10"
									},
									"id": 1107,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:10"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1105,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:10",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1126,
							"linearizedBaseContracts": [
								1126,
								1100
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1108,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:10",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:10"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "416:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1110,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:10"
									},
									"scope": 1126,
									"src": "377:54:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:10",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:10"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "539:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1116,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:10"
									},
									"scope": 1126,
									"src": "498:56:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:10",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:10"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "673:5:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1122,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:10"
									},
									"scope": 1126,
									"src": "630:50:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1127,
							"src": "277:405:10",
							"usedErrors": [],
							"usedEvents": [
								1034,
								1043
							]
						}
					],
					"src": "125:558:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							1162
						]
					},
					"id": 1163,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1128,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1129,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:11",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 1162,
							"linearizedBaseContracts": [
								1162
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1130,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:11",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 1147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "3022:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "3045:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "3070:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "3093:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "3119:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1139,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "3136:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "3155:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1143,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:11"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:11"
									},
									"scope": 1162,
									"src": "2997:183:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:11",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 1155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "3501:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:11"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "3539:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:11"
									},
									"scope": 1162,
									"src": "3485:63:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:11",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 1161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:11"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "3791:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1158,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:11"
									},
									"scope": 1162,
									"src": "3740:60:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1163,
							"src": "2113:1689:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1705
						],
						"IERC20": [
							1100
						],
						"IERC20Permit": [
							1162
						],
						"SafeERC20": [
							1452
						]
					},
					"id": 1453,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1164,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1166,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1453,
							"sourceUnit": 1101,
							"src": "141:37:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1165,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1100,
										"src": "149:6:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 1168,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1453,
							"sourceUnit": 1163,
							"src": "179:60:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1167,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1162,
										"src": "187:12:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 1170,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1453,
							"sourceUnit": 1706,
							"src": "240:51:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1169,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1705,
										"src": "248:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1171,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:12",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1452,
							"linearizedBaseContracts": [
								1452
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1174,
									"libraryName": {
										"id": 1172,
										"name": "Address",
										"nameLocations": [
											"781:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1705,
										"src": "781:7:12"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:12",
									"typeName": {
										"id": 1173,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:12",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 1179,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "907:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:12"
									},
									"src": "876:46:12"
								},
								{
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:12",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 1188,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "1043:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "1060:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "1086:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:12"
									},
									"src": "1004:109:12"
								},
								{
									"body": {
										"id": 1211,
										"nodeType": "Block",
										"src": "1375:88:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1200,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "1405:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1100",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1203,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1192,
																		"src": "1427:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1100",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:12",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1067,
																	"src": "1427:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1205,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1194,
																			"src": "1444:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1206,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1196,
																			"src": "1448:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1207,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 1201,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:12",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1100",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1199,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "1385:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1100_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1210,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:12"
											}
										]
									},
									"documentation": {
										"id": 1189,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:12",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "1325:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1100",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1191,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1190,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1100,
														"src": "1325:6:12"
													},
													"referencedDeclaration": 1100,
													"src": "1325:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1100",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "1339:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "1351:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:12"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:12"
									},
									"scope": 1452,
									"src": "1303:160:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1238,
										"nodeType": "Block",
										"src": "1792:98:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1226,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "1822:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1100",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1229,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1216,
																		"src": "1844:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1100",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:12",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1099,
																	"src": "1844:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1231,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1218,
																			"src": "1865:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1232,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1220,
																			"src": "1871:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1233,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1222,
																			"src": "1875:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1234,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 1227,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:12",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1100",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1225,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "1802:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1100_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:12"
											}
										]
									},
									"documentation": {
										"id": 1213,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:12",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 1239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1728:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1100",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1215,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1214,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1100,
														"src": "1728:6:12"
													},
													"referencedDeclaration": 1100,
													"src": "1728:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1100",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1742:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1756:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1768:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:12"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:12"
									},
									"scope": 1452,
									"src": "1702:188:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "2167:139:12",
										"statements": [
											{
												"assignments": [
													1251
												],
												"declarations": [
													{
														"constant": false,
														"id": 1251,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:12",
														"nodeType": "VariableDeclaration",
														"scope": 1269,
														"src": "2177:20:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1250,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1260,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1256,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1452",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1452",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1254,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1258,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "2231:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1252,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "2200:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1100",
																"typeString": "contract IERC20"
															}
														},
														"id": 1253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:12",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1077,
														"src": "2200:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1262,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "2262:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1100",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1263,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "2269:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1264,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1251,
																"src": "2278:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1265,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "2293:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1100",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1261,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "2249:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1100_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:12"
											}
										]
									},
									"documentation": {
										"id": 1240,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:12",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "2112:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1100",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1242,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1241,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1100,
														"src": "2112:6:12"
													},
													"referencedDeclaration": 1100,
													"src": "2112:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1100",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "2126:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "2143:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:12"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:12"
									},
									"scope": 1452,
									"src": "2081:225:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1312,
										"nodeType": "Block",
										"src": "2607:370:12",
										"statements": [
											{
												"id": 1311,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:12",
												"statements": [
													{
														"assignments": [
															1282
														],
														"declarations": [
															{
																"constant": false,
																"id": 1282,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:12",
																"nodeType": "VariableDeclaration",
																"scope": 1311,
																"src": "2641:24:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1281,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1291,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1287,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1452",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1452",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1285,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1289,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1276,
																	"src": "2699:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1283,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1274,
																	"src": "2668:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1100",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:12",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1077,
																"src": "2668:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1292,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1282,
																"src": "2725:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1293,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1278,
																"src": "2744:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1302,
														"nodeType": "IfStatement",
														"src": "2721:160:12",
														"trueBody": {
															"id": 1301,
															"nodeType": "Block",
															"src": "2763:118:12",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 1296,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1276,
																				"src": "2821:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1297,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1282,
																				"src": "2830:16:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1298,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1278,
																				"src": "2848:17:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1295,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1188,
																			"src": "2788:32:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1300,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:12"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1304,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1274,
																	"src": "2907:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1100",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1305,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1276,
																	"src": "2914:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1306,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1282,
																		"src": "2923:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1307,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1278,
																		"src": "2942:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1100",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1303,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1360,
																"src": "2894:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1100_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1310,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1271,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:12",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 1313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2540:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1100",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1273,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1272,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1100,
														"src": "2540:6:12"
													},
													"referencedDeclaration": 1100,
													"src": "2540:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1100",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2554:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2571:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:12"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:12"
									},
									"scope": 1452,
									"src": "2509:468:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1359,
										"nodeType": "Block",
										"src": "3373:303:12",
										"statements": [
											{
												"assignments": [
													1325
												],
												"declarations": [
													{
														"constant": false,
														"id": 1325,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:12",
														"nodeType": "VariableDeclaration",
														"scope": 1359,
														"src": "3383:25:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1324,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1334,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1328,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1317,
																"src": "3426:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1100",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:12",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1087,
															"src": "3426:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 1330,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1319,
																	"src": "3442:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1331,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1321,
																	"src": "3451:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1332,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 1326,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:12",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:12"
											},
											{
												"condition": {
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:12",
													"subExpression": {
														"arguments": [
															{
																"id": 1336,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1317,
																"src": "3498:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1100",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1337,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1325,
																"src": "3505:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$1100",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1335,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "3474:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1100_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1358,
												"nodeType": "IfStatement",
												"src": "3469:201:12",
												"trueBody": {
													"id": 1357,
													"nodeType": "Block",
													"src": "3520:150:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1341,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1317,
																		"src": "3554:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1100",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1344,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1317,
																					"src": "3576:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1100",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1345,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:12",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1087,
																				"src": "3576:13:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1346,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1319,
																						"src": "3592:7:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 1347,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 1348,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 1342,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:12",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$1100",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1340,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1402,
																	"src": "3534:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1100_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1351,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1353,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1317,
																		"src": "3639:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1100",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 1354,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1325,
																		"src": "3646:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$1100",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1352,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1402,
																	"src": "3619:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1100_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1356,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1314,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:12",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 1360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "3318:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1100",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1316,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1315,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1100,
														"src": "3318:6:12"
													},
													"referencedDeclaration": 1100,
													"src": "3318:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1100",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "3332:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "3349:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:12"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:12"
									},
									"scope": 1452,
									"src": "3296:380:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "4129:559:12",
										"statements": [
											{
												"assignments": [
													1370
												],
												"declarations": [
													{
														"constant": false,
														"id": 1370,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1401,
														"src": "4478:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1369,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1378,
												"initialValue": {
													"arguments": [
														{
															"id": 1376,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "4532:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1373,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1364,
																	"src": "4512:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1100",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1100",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1371,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:12",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1526,
														"src": "4504:27:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1379,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1370,
																"src": "4551:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:12",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:12",
														"subExpression": {
															"arguments": [
																{
																	"id": 1385,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1370,
																	"src": "4589:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 1386,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:12",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1388,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 1383,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:12",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1400,
												"nodeType": "IfStatement",
												"src": "4547:135:12",
												"trueBody": {
													"id": 1399,
													"nodeType": "Block",
													"src": "4610:72:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1395,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1364,
																				"src": "4664:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$1100",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$1100",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1393,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1392,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "4631:24:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1398,
															"nodeType": "RevertStatement",
															"src": "4624:47:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1361,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:12",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "4088:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1100",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1363,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1362,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1100,
														"src": "4088:6:12"
													},
													"referencedDeclaration": 1100,
													"src": "4088:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1100",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "4102:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1365,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:12"
									},
									"returnParameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:12"
									},
									"scope": 1452,
									"src": "4059:629:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1450,
										"nodeType": "Block",
										"src": "5278:489:12",
										"statements": [
											{
												"assignments": [
													1414,
													1416
												],
												"declarations": [
													{
														"constant": false,
														"id": 1414,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 1450,
														"src": "5574:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1413,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1416,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1450,
														"src": "5588:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1415,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1424,
												"initialValue": {
													"arguments": [
														{
															"id": 1422,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "5635:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1419,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1406,
																	"src": "5623:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1100",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1100",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1417,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:12",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:12"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1425,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1414,
															"src": "5657:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1426,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1416,
																				"src": "5669:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:12",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1432,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1416,
																				"src": "5706:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1434,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1433,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:12",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1435,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1430,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:12",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1438,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1447,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1442,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1406,
																			"src": "5738:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1100",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$1100",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1440,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:12",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:12",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1412,
												"id": 1449,
												"nodeType": "Return",
												"src": "5650:110:12"
											}
										]
									},
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:12",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 1451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "5222:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1100",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1405,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1404,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1100,
														"src": "5222:6:12"
													},
													"referencedDeclaration": 1100,
													"src": "5222:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1100",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "5236:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1407,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:12"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "5272:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1410,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:12"
									},
									"scope": 1452,
									"src": "5189:578:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1453,
							"src": "751:5018:12",
							"usedErrors": [
								1179,
								1188
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1705
						]
					},
					"id": 1706,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1454,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1455,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:13",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1705,
							"linearizedBaseContracts": [
								1705
							],
							"name": "Address",
							"nameLocation": "203:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1456,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:13",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1460,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "349:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:13"
									},
									"src": "316:50:13"
								},
								{
									"documentation": {
										"id": 1461,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:13",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1465,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "475:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:13"
									},
									"src": "452:39:13"
								},
								{
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:13",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1468,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:13"
									},
									"src": "591:24:13"
								},
								{
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "1602:260:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1478,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1705",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1705",
																		"typeString": "library Address"
																	}
																],
																"id": 1477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1476,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:13",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1481,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1473,
														"src": "1640:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1491,
												"nodeType": "IfStatement",
												"src": "1612:109:13",
												"trueBody": {
													"id": 1490,
													"nodeType": "Block",
													"src": "1648:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1486,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1705",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1705",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1484,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1483,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1460,
																	"src": "1669:26:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1489,
															"nodeType": "RevertStatement",
															"src": "1662:48:13"
														}
													]
												}
											},
											{
												"assignments": [
													1493,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1493,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 1508,
														"src": "1732:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1492,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1500,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1494,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1471,
																"src": "1750:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:13",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1496,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1473,
																"src": "1772:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:13"
											},
											{
												"condition": {
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:13",
													"subExpression": {
														"id": 1501,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1493,
														"src": "1798:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1507,
												"nodeType": "IfStatement",
												"src": "1793:63:13",
												"trueBody": {
													"id": 1506,
													"nodeType": "Block",
													"src": "1807:49:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1503,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "1828:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1505,
															"nodeType": "RevertStatement",
															"src": "1821:24:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1469,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:13",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "1550:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:13",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "1577:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:13"
									},
									"returnParameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:13"
									},
									"scope": 1705,
									"src": "1531:331:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1525,
										"nodeType": "Block",
										"src": "2794:62:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1520,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "2833:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1521,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "2841:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1519,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1572,
														"src": "2811:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1518,
												"id": 1524,
												"nodeType": "Return",
												"src": "2804:45:13"
											}
										]
									},
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:13",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "2727:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "2743:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1513,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:13"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "2780:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1516,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:13"
									},
									"scope": 1705,
									"src": "2705:151:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1571,
										"nodeType": "Block",
										"src": "3293:279:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1540,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1705",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1705",
																		"typeString": "library Address"
																	}
																],
																"id": 1539,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1538,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:13",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1543,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "3331:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1553,
												"nodeType": "IfStatement",
												"src": "3303:108:13",
												"trueBody": {
													"id": 1552,
													"nodeType": "Block",
													"src": "3338:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1548,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1705",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1705",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1546,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1545,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1460,
																	"src": "3359:26:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1551,
															"nodeType": "RevertStatement",
															"src": "3352:48:13"
														}
													]
												}
											},
											{
												"assignments": [
													1555,
													1557
												],
												"declarations": [
													{
														"constant": false,
														"id": 1555,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 1571,
														"src": "3421:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1554,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1557,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 1571,
														"src": "3435:23:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1556,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1564,
												"initialValue": {
													"arguments": [
														{
															"id": 1562,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "3488:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1558,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1529,
																"src": "3462:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:13",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1560,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1533,
																"src": "3481:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1566,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "3537:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1567,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1555,
															"src": "3545:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1568,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1557,
															"src": "3554:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1565,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "3510:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1537,
												"id": 1570,
												"nodeType": "Return",
												"src": "3503:62:13"
											}
										]
									},
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:13",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "3211:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "3227:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "3246:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:13"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "3279:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1535,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:13"
									},
									"scope": 1705,
									"src": "3180:392:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1597,
										"nodeType": "Block",
										"src": "3811:154:13",
										"statements": [
											{
												"assignments": [
													1583,
													1585
												],
												"declarations": [
													{
														"constant": false,
														"id": 1583,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 1597,
														"src": "3822:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1582,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1585,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 1597,
														"src": "3836:23:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1584,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1590,
												"initialValue": {
													"arguments": [
														{
															"id": 1588,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1577,
															"src": "3881:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1586,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1575,
															"src": "3863:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:13",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1592,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1575,
															"src": "3930:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1593,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "3938:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1594,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "3947:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1591,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "3903:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1581,
												"id": 1596,
												"nodeType": "Return",
												"src": "3896:62:13"
											}
										]
									},
									"documentation": {
										"id": 1573,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:13",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "3739:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "3755:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1576,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:13"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "3797:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:13"
									},
									"scope": 1705,
									"src": "3711:254:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1623,
										"nodeType": "Block",
										"src": "4203:156:13",
										"statements": [
											{
												"assignments": [
													1609,
													1611
												],
												"declarations": [
													{
														"constant": false,
														"id": 1609,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 1623,
														"src": "4214:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1608,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1611,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 1623,
														"src": "4228:23:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1610,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1616,
												"initialValue": {
													"arguments": [
														{
															"id": 1614,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "4275:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1612,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1601,
															"src": "4255:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:13",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1618,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1601,
															"src": "4324:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1619,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1609,
															"src": "4332:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1620,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "4341:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1617,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "4297:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1607,
												"id": 1622,
												"nodeType": "Return",
												"src": "4290:62:13"
											}
										]
									},
									"documentation": {
										"id": 1599,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:13",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "4136:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "4152:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1602,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:13"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "4189:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1605,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:13"
									},
									"scope": 1705,
									"src": "4106:253:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1663,
										"nodeType": "Block",
										"src": "4783:424:13",
										"statements": [
											{
												"condition": {
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:13",
													"subExpression": {
														"id": 1636,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1629,
														"src": "4798:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1661,
													"nodeType": "Block",
													"src": "4857:344:13",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1643,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1631,
																			"src": "5045:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:13",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1647,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1627,
																				"src": "5071:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:13",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:13",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1658,
															"nodeType": "IfStatement",
															"src": "5041:119:13",
															"trueBody": {
																"id": 1657,
																"nodeType": "Block",
																"src": "5096:64:13",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1654,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1627,
																					"src": "5138:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1653,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1465,
																				"src": "5121:16:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1656,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:13"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1659,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1631,
																"src": "5180:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1635,
															"id": 1660,
															"nodeType": "Return",
															"src": "5173:17:13"
														}
													]
												},
												"id": 1662,
												"nodeType": "IfStatement",
												"src": "4793:408:13",
												"trueBody": {
													"id": 1642,
													"nodeType": "Block",
													"src": "4807:44:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1639,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1631,
																		"src": "4829:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1638,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1704,
																	"src": "4821:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1641,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1625,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:13",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "4670:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "4694:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1628,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "4716:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1630,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:13"
									},
									"returnParameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "4769:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1633,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:13"
									},
									"scope": 1705,
									"src": "4625:582:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1685,
										"nodeType": "Block",
										"src": "5509:122:13",
										"statements": [
											{
												"condition": {
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:13",
													"subExpression": {
														"id": 1674,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1667,
														"src": "5524:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1683,
													"nodeType": "Block",
													"src": "5583:42:13",
													"statements": [
														{
															"expression": {
																"id": 1681,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "5604:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1673,
															"id": 1682,
															"nodeType": "Return",
															"src": "5597:17:13"
														}
													]
												},
												"id": 1684,
												"nodeType": "IfStatement",
												"src": "5519:106:13",
												"trueBody": {
													"id": 1680,
													"nodeType": "Block",
													"src": "5533:44:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1677,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1669,
																		"src": "5555:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1676,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1704,
																	"src": "5547:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1679,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1665,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:13",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "5433:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1666,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "5447:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1668,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:13"
									},
									"returnParameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "5495:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1671,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:13"
									},
									"scope": 1705,
									"src": "5407:224:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "5798:461:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1692,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1689,
															"src": "5874:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1694,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1701,
													"nodeType": "Block",
													"src": "6204:49:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1698,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "6225:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1700,
															"nodeType": "RevertStatement",
															"src": "6218:24:13"
														}
													]
												},
												"id": 1702,
												"nodeType": "IfStatement",
												"src": "5870:383:13",
												"trueBody": {
													"id": 1697,
													"nodeType": "Block",
													"src": "5897:301:13",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:13",
																"nodeType": "YulBlock",
																"src": "6055:133:13",
																"statements": [
																	{
																		"nativeSrc": "6073:40:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:13"
																			},
																			"nativeSrc": "6096:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:13"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:13",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:13",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:13",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:13"
																					},
																					"nativeSrc": "6137:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:13"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:13",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:13"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:13"
																			},
																			"nativeSrc": "6130:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:13"
																		},
																		"nativeSrc": "6130:44:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:13"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1689,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:13",
																	"valueSize": 1
																},
																{
																	"declaration": 1689,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:13",
																	"valueSize": 1
																}
															],
															"id": 1696,
															"nodeType": "InlineAssembly",
															"src": "6046:142:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1687,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:13",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "5760:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1688,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:13"
									},
									"returnParameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:13"
									},
									"scope": 1705,
									"src": "5743:516:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1706,
							"src": "195:6066:13",
							"usedErrors": [
								1460,
								1465,
								1468
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1727
						]
					},
					"id": 1728,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1707,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:14"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1708,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:14",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1727,
							"linearizedBaseContracts": [
								1727
							],
							"name": "Context",
							"nameLocation": "642:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "718:34:14",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1713,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:14",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1712,
												"id": 1715,
												"nodeType": "Return",
												"src": "728:17:14"
											}
										]
									},
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:14"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "709:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:14"
									},
									"scope": 1727,
									"src": "656:96:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1725,
										"nodeType": "Block",
										"src": "825:32:14",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1722,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:14",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1721,
												"id": 1724,
												"nodeType": "Return",
												"src": "835:15:14"
											}
										]
									},
									"id": 1726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:14"
									},
									"returnParameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "809:14:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1719,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:14"
									},
									"scope": 1727,
									"src": "758:99:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1728,
							"src": "624:235:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:14"
				},
				"id": 14
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							2035
						]
					},
					"id": 2036,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1729,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Router01",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2035,
							"linearizedBaseContracts": [
								2035
							],
							"name": "IUniswapV2Router01",
							"nameLocation": "36:18:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1734,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "70:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "77:2:15"
									},
									"returnParameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "103:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "103:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "102:9:15"
									},
									"scope": 2035,
									"src": "61:51:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1739,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "126:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "130:2:15"
									},
									"returnParameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "156:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "156:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "155:9:15"
									},
									"scope": 2035,
									"src": "117:48:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 1764,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "180:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "210:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "202:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "234:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "226:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "255:14:15",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "250:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "250:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "284:14:15",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "279:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1746,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "279:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "313:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "308:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1748,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "338:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "333:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1750,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "333:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "366:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "358:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "383:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "378:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1754,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "378:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:205:15"
									},
									"returnParameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "421:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "416:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "416:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "435:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "430:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1759,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "430:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "449:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "444:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "444:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:44:15"
									},
									"scope": 2035,
									"src": "171:289:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 1785,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "474:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "507:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "499:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "527:18:15",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "522:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1767,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "522:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "560:14:15",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "555:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1769,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "589:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "584:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1771,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "584:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "619:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "611:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "636:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "631:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1775,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "631:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:161:15"
									},
									"returnParameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "682:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "677:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "677:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "700:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "695:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "695:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "716:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "711:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1782,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "711:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:50:15"
									},
									"scope": 2035,
									"src": "465:262:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 1806,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "741:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "774:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "766:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "798:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "790:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "819:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "814:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1790,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "814:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "843:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "838:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "868:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "863:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1794,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "863:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "896:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "888:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "913:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "908:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1798,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "908:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:171:15"
									},
									"returnParameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "951:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "946:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "946:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "965:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "960:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1803,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:28:15"
									},
									"scope": 2035,
									"src": "732:242:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 1825,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nameLocation": "988:18:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1024:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "1016:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1044:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "1039:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1809,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1068:14:15",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "1063:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1097:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "1092:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1813,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1092:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1127:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "1119:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1144:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "1139:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1817,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1139:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1006:152:15"
									},
									"returnParameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1182:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "1177:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1177:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1200:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "1195:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1822,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1195:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:34:15"
									},
									"scope": 2035,
									"src": "979:232:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 1854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nameLocation": "1225:25:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1268:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1260:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1292:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1284:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1313:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1308:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1830,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1308:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1337:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1332:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1832,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1332:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1362:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1357:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1834,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1357:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1390:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1382:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1407:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1402:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1402:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1430:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1425:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1840,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1425:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1448:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1442:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1842,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1442:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1459:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1451:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1844,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1470:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1462:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1846,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:227:15"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1501:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1496:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1849,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1496:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1515:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1510:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1851,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1510:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:28:15"
									},
									"scope": 2035,
									"src": "1216:308:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 1881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nameLocation": "1538:28:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1584:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "1576:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1604:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "1599:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1857,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1599:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1628:14:15",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "1623:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1859,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1623:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1657:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "1652:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1652:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1687:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "1679:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1679:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1704:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "1699:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1865,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1699:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1727:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "1722:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1867,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1722:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1745:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "1739:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1869,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1739:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1756:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "1748:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1871,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1767:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "1759:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1873,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:208:15"
									},
									"returnParameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1798:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "1793:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1876,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1793:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1816:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "1811:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1878,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1811:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1792:34:15"
									},
									"scope": 2035,
									"src": "1529:298:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 1898,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "1841:24:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1880:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "1875:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1882,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1875:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1903:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "1898:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1884,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1898:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1944:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "1925:23:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1886,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1925:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1887,
													"nodeType": "ArrayTypeName",
													"src": "1925:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1966:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "1958:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1983:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "1978:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1978:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:132:15"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2030:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "2016:21:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1894,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2016:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1895,
													"nodeType": "ArrayTypeName",
													"src": "2016:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2015:23:15"
									},
									"scope": 2035,
									"src": "1832:207:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 1915,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "2053:24:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2092:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "2087:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1899,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2087:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2116:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "2111:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1901,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2111:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2156:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "2137:23:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1903,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2137:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1904,
													"nodeType": "ArrayTypeName",
													"src": "2137:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2178:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "2170:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2195:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "2190:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1908,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2190:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2077:132:15"
									},
									"returnParameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2242:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "2228:21:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1911,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2228:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1912,
													"nodeType": "ArrayTypeName",
													"src": "2228:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:23:15"
									},
									"scope": 2035,
									"src": "2044:207:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 1930,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "2265:21:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2292:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "2287:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1916,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2287:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2325:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "2306:23:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1918,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2306:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1919,
													"nodeType": "ArrayTypeName",
													"src": "2306:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2339:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "2331:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2348:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "2343:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1923,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2343:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2286:71:15"
									},
									"returnParameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2422:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "2408:21:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1926,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2408:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1927,
													"nodeType": "ArrayTypeName",
													"src": "2408:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:23:15"
									},
									"scope": 2035,
									"src": "2256:175:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 1947,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nameLocation": "2445:21:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2472:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "2467:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1931,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2467:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2488:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "2483:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1933,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2483:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2520:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "2501:23:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1935,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2501:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1936,
													"nodeType": "ArrayTypeName",
													"src": "2501:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2534:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "2526:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2526:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2543:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "2538:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2538:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:86:15"
									},
									"returnParameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2601:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "2587:21:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1943,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2587:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1944,
													"nodeType": "ArrayTypeName",
													"src": "2587:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:23:15"
									},
									"scope": 2035,
									"src": "2436:174:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 1964,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "2624:21:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2651:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "2646:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2646:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2666:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "2661:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2661:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2699:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "2680:23:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1952,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2680:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1953,
													"nodeType": "ArrayTypeName",
													"src": "2680:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2713:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "2705:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2722:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "2717:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1957,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2717:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:86:15"
									},
									"returnParameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2780:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "2766:21:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1960,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2766:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1961,
													"nodeType": "ArrayTypeName",
													"src": "2766:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2765:23:15"
									},
									"scope": 2035,
									"src": "2615:174:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 1979,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nameLocation": "2803:21:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2830:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "2825:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1965,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2825:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2860:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "2841:23:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1967,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2841:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1968,
													"nodeType": "ArrayTypeName",
													"src": "2841:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2874:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "2866:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2866:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2883:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "2878:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1972,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2878:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2824:68:15"
									},
									"returnParameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2957:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "2943:21:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1975,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2943:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1976,
													"nodeType": "ArrayTypeName",
													"src": "2943:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2942:23:15"
									},
									"scope": 2035,
									"src": "2794:172:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 1990,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "2981:5:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1981,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "2992:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "2987:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1980,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2987:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "3006:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "3001:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1982,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3001:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "3021:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "3016:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3016:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2986:44:15"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3059:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "3054:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1987,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3054:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3053:14:15"
									},
									"scope": 2035,
									"src": "2972:96:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 2001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "3082:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3100:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "3095:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1991,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3095:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3115:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "3110:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1993,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3110:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3131:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "3126:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1995,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3126:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3094:48:15"
									},
									"returnParameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3171:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "3166:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1998,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3166:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:16:15"
									},
									"scope": 2035,
									"src": "3073:109:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 2012,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "3196:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3213:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "3208:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2002,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3208:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3229:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "3224:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2004,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3224:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3245:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "3240:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2006,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3240:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3207:49:15"
									},
									"returnParameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3285:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "3280:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3280:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3279:15:15"
									},
									"scope": 2035,
									"src": "3187:108:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 2023,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "3309:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3328:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "3323:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2013,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3323:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3357:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "3338:23:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2015,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3338:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2016,
													"nodeType": "ArrayTypeName",
													"src": "3338:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:40:15"
									},
									"returnParameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3400:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "3386:21:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2019,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3386:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2020,
													"nodeType": "ArrayTypeName",
													"src": "3386:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:23:15"
									},
									"scope": 2035,
									"src": "3300:109:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 2034,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "3423:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3441:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "3436:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2024,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3436:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3471:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "3452:23:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2026,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3452:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2027,
													"nodeType": "ArrayTypeName",
													"src": "3452:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:41:15"
									},
									"returnParameters": {
										"id": 2033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3514:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "3500:21:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2030,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3500:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2031,
													"nodeType": "ArrayTypeName",
													"src": "3500:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3499:23:15"
									},
									"scope": 2035,
									"src": "3414:109:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2036,
							"src": "26:3499:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:3526:15"
				},
				"id": 15
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							2035
						],
						"IUniswapV2Router02": [
							2123
						]
					},
					"id": 2124,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2037,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:16"
						},
						{
							"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
							"file": "./IUniswapV2Router01.sol",
							"id": 2038,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2124,
							"sourceUnit": 2036,
							"src": "26:34:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2039,
										"name": "IUniswapV2Router01",
										"nameLocations": [
											"94:18:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2035,
										"src": "94:18:16"
									},
									"id": 2040,
									"nodeType": "InheritanceSpecifier",
									"src": "94:18:16"
								}
							],
							"canonicalName": "IUniswapV2Router02",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2123,
							"linearizedBaseContracts": [
								2123,
								2035
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "72:18:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "af2979eb",
									"id": 2057,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nameLocation": "128:47:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "193:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "185:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "213:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "208:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2043,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "208:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "237:14:16",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "232:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2045,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "232:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "266:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "261:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2047,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "261:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "296:2:16",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "288:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "313:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "308:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "175:152:16"
									},
									"returnParameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "351:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "346:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2054,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "346:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:16:16"
									},
									"scope": 2123,
									"src": "119:243:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0d5984",
									"id": 2082,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nameLocation": "376:57:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "451:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "443:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "471:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "466:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2060,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "466:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "495:14:16",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "490:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2062,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "490:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "524:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "519:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2064,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "519:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "554:2:16",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "546:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "571:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "566:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2068,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "566:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "594:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "589:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2070,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "589:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "612:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "606:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2072,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "606:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "623:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "615:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2074,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "634:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "626:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2076,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "433:208:16"
									},
									"returnParameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "665:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "660:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2079,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "660:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "659:16:16"
									},
									"scope": 2123,
									"src": "367:309:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 2096,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "691:53:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "759:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "754:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2083,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "754:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "782:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "777:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2085,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "777:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "823:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "804:23:16",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2087,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "804:7:16",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2088,
													"nodeType": "ArrayTypeName",
													"src": "804:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "845:2:16",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "837:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "862:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "857:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2092,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "857:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:132:16"
									},
									"returnParameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "885:0:16"
									},
									"scope": 2123,
									"src": "682:204:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 2108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "900:50:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "965:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "960:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2097,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1006:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "987:23:16",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2099,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "987:7:16",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2100,
													"nodeType": "ArrayTypeName",
													"src": "987:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1028:2:16",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "1020:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1045:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "1040:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2104,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1040:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:109:16"
									},
									"returnParameters": {
										"id": 2107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1076:0:16"
									},
									"scope": 2123,
									"src": "891:186:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 2122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "1091:50:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1156:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "1151:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2109,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1151:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1179:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "1174:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2111,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1174:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1220:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "1201:23:16",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2113,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1201:7:16",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2114,
													"nodeType": "ArrayTypeName",
													"src": "1201:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1242:2:16",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "1234:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1259:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "1254:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2118,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1254:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:132:16"
									},
									"returnParameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1282:0:16"
									},
									"scope": 2123,
									"src": "1082:201:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2124,
							"src": "62:1223:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:1286:16"
				},
				"id": 16
			},
			"src/DollarCostAveraging.sol": {
				"ast": {
					"absolutePath": "src/DollarCostAveraging.sol",
					"exportedSymbols": {
						"Address": [
							1705
						],
						"AggregatorInterface": [
							66
						],
						"AggregatorV2V3Interface": [
							75
						],
						"AggregatorV3Interface": [
							121
						],
						"AutomationCompatibleInterface": [
							18
						],
						"Context": [
							1727
						],
						"DollarCostAveraging": [
							2877
						],
						"ERC20": [
							1022
						],
						"IERC20": [
							1100
						],
						"IERC20Errors": [
							412
						],
						"IERC20Metadata": [
							1126
						],
						"IERC20Permit": [
							1162
						],
						"IUniswapV2Router01": [
							2035
						],
						"IUniswapV2Router02": [
							2123
						],
						"LinkTokenInterface": [
							312
						],
						"SafeERC20": [
							1452
						],
						"VRFConsumerBaseV2": [
							370
						],
						"VRFCoordinatorV2Interface": [
							217
						]
					},
					"id": 2878,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2125,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:17"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2126,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2878,
							"sourceUnit": 1023,
							"src": "28:55:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 2127,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2878,
							"sourceUnit": 1453,
							"src": "85:65:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
							"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
							"id": 2128,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2878,
							"sourceUnit": 2124,
							"src": "152:75:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol",
							"id": 2129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2878,
							"sourceUnit": 76,
							"src": "231:78:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
							"file": "@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
							"id": 2130,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2878,
							"sourceUnit": 313,
							"src": "311:80:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
							"id": 2131,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2878,
							"sourceUnit": 218,
							"src": "395:80:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol",
							"file": "@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol",
							"id": 2132,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2878,
							"sourceUnit": 371,
							"src": "477:65:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
							"file": "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
							"id": 2133,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2878,
							"sourceUnit": 19,
							"src": "546:95:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2134,
										"name": "VRFConsumerBaseV2",
										"nameLocations": [
											"678:17:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 370,
										"src": "678:17:17"
									},
									"id": 2135,
									"nodeType": "InheritanceSpecifier",
									"src": "678:17:17"
								},
								{
									"baseName": {
										"id": 2136,
										"name": "AutomationCompatibleInterface",
										"nameLocations": [
											"697:29:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 18,
										"src": "697:29:17"
									},
									"id": 2137,
									"nodeType": "InheritanceSpecifier",
									"src": "697:29:17"
								}
							],
							"canonicalName": "DollarCostAveraging",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2877,
							"linearizedBaseContracts": [
								2877,
								18,
								370
							],
							"name": "DollarCostAveraging",
							"nameLocation": "654:19:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "89d3f1cdfad4e5c26535ac23dc61cf9e975667801747518f01b1b653545d736a",
									"id": 2145,
									"name": "PlanCreated",
									"nameLocation": "740:11:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2139,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "768:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "752:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2141,
												"indexed": false,
												"mutability": "mutable",
												"name": "frequency",
												"nameLocation": "782:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "774:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2143,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "801:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "793:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "751:57:17"
									},
									"src": "734:75:17"
								},
								{
									"anonymous": false,
									"eventSelector": "c8108639f5e0627bac90449607e60d516a5082452e397808a067b57f755515fc",
									"id": 2153,
									"name": "PlanUpdated",
									"nameLocation": "819:11:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "847:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "831:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2149,
												"indexed": false,
												"mutability": "mutable",
												"name": "frequency",
												"nameLocation": "861:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "853:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2151,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "880:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "872:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "872:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:57:17"
									},
									"src": "813:75:17"
								},
								{
									"anonymous": false,
									"eventSelector": "f222abd4ee7afb02f9450183b95d07aaab2ea2f2d6748f55525c7e875fdd58a1",
									"id": 2157,
									"name": "PlanStoped",
									"nameLocation": "898:10:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2155,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "925:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "909:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "909:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "908:22:17"
									},
									"src": "892:39:17"
								},
								{
									"anonymous": false,
									"eventSelector": "a806cf17be1fb3cff26c4a6a46b735ddbf2ac07c138bdedb6d2ace798a2cfd40",
									"id": 2161,
									"name": "PlanStarted",
									"nameLocation": "941:11:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2159,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "969:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "953:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:22:17"
									},
									"src": "935:40:17"
								},
								{
									"anonymous": false,
									"eventSelector": "1a3abf7e0a472651ebe2c79a31a5f4660c7ea65e3086ee1742d7502999bbf5b5",
									"id": 2169,
									"name": "PlanTriggered",
									"nameLocation": "985:13:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2163,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1015:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "999:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2165,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1029:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "1021:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1021:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2167,
												"indexed": false,
												"mutability": "mutable",
												"name": "ethReceived",
												"nameLocation": "1045:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "1037:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1037:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "998:59:17"
									},
									"src": "979:79:17"
								},
								{
									"canonicalName": "DollarCostAveraging.Plan",
									"id": 2182,
									"members": [
										{
											"constant": false,
											"id": 2171,
											"mutability": "mutable",
											"name": "index",
											"nameLocation": "1095:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2182,
											"src": "1087:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2170,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1087:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2173,
											"mutability": "mutable",
											"name": "frequency",
											"nameLocation": "1115:9:17",
											"nodeType": "VariableDeclaration",
											"scope": 2182,
											"src": "1107:17:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2172,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1107:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2175,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1139:6:17",
											"nodeType": "VariableDeclaration",
											"scope": 2182,
											"src": "1131:14:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2174,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1131:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2177,
											"mutability": "mutable",
											"name": "startAt",
											"nameLocation": "1157:7:17",
											"nodeType": "VariableDeclaration",
											"scope": 2182,
											"src": "1152:12:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2176,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1152:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2179,
											"mutability": "mutable",
											"name": "times",
											"nameLocation": "1176:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2182,
											"src": "1171:10:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2178,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1171:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2181,
											"mutability": "mutable",
											"name": "status",
											"nameLocation": "1193:6:17",
											"nodeType": "VariableDeclaration",
											"scope": 2182,
											"src": "1188:11:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2180,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1188:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Plan",
									"nameLocation": "1075:4:17",
									"nodeType": "StructDefinition",
									"scope": 2877,
									"src": "1068:137:17",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "86d86d84",
									"id": 2187,
									"mutability": "mutable",
									"name": "plans",
									"nameLocation": "1243:5:17",
									"nodeType": "VariableDeclaration",
									"scope": 2877,
									"src": "1211:37:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$2182_storage_$",
										"typeString": "mapping(address => struct DollarCostAveraging.Plan)"
									},
									"typeName": {
										"id": 2186,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2183,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1219:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1211:24:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$2182_storage_$",
											"typeString": "mapping(address => struct DollarCostAveraging.Plan)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2185,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2184,
												"name": "Plan",
												"nameLocations": [
													"1230:4:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2182,
												"src": "1230:4:17"
											},
											"referencedDeclaration": 2182,
											"src": "1230:4:17",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Plan_$2182_storage_ptr",
												"typeString": "struct DollarCostAveraging.Plan"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "365b98b2",
									"id": 2191,
									"mutability": "mutable",
									"name": "users",
									"nameLocation": "1288:5:17",
									"nodeType": "VariableDeclaration",
									"scope": 2877,
									"src": "1253:40:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 2190,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2188,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1261:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1253:27:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2189,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1272:7:17",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c966494e",
									"id": 2195,
									"mutability": "mutable",
									"name": "userRandomRequestId",
									"nameLocation": "1400:19:17",
									"nodeType": "VariableDeclaration",
									"scope": 2877,
									"src": "1365:54:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 2194,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2192,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1373:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1365:27:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2193,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1384:7:17",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "83ceae8d",
									"id": 2199,
									"mutability": "mutable",
									"name": "nextTriggerTime",
									"nameLocation": "1459:15:17",
									"nodeType": "VariableDeclaration",
									"scope": 2877,
									"src": "1424:50:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2198,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2196,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1432:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1424:27:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2197,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1443:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2f48ab7d",
									"id": 2202,
									"mutability": "mutable",
									"name": "usdt",
									"nameLocation": "1494:4:17",
									"nodeType": "VariableDeclaration",
									"scope": 2877,
									"src": "1481:17:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$1022",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 2201,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2200,
											"name": "ERC20",
											"nameLocations": [
												"1481:5:17"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1022,
											"src": "1481:5:17"
										},
										"referencedDeclaration": 1022,
										"src": "1481:5:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$1022",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1c4695f4",
									"id": 2205,
									"mutability": "mutable",
									"name": "link",
									"nameLocation": "1529:4:17",
									"nodeType": "VariableDeclaration",
									"scope": 2877,
									"src": "1503:30:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_LinkTokenInterface_$312",
										"typeString": "contract LinkTokenInterface"
									},
									"typeName": {
										"id": 2204,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2203,
											"name": "LinkTokenInterface",
											"nameLocations": [
												"1503:18:17"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 312,
											"src": "1503:18:17"
										},
										"referencedDeclaration": 312,
										"src": "1503:18:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_LinkTokenInterface_$312",
											"typeString": "contract LinkTokenInterface"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0a009097",
									"id": 2208,
									"mutability": "mutable",
									"name": "coordinator",
									"nameLocation": "1571:11:17",
									"nodeType": "VariableDeclaration",
									"scope": 2877,
									"src": "1538:44:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$217",
										"typeString": "contract VRFCoordinatorV2Interface"
									},
									"typeName": {
										"id": 2207,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2206,
											"name": "VRFCoordinatorV2Interface",
											"nameLocations": [
												"1538:25:17"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 217,
											"src": "1538:25:17"
										},
										"referencedDeclaration": 217,
										"src": "1538:25:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$217",
											"typeString": "contract VRFCoordinatorV2Interface"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2210,
									"mutability": "mutable",
									"name": "subscriptionId",
									"nameLocation": "1594:14:17",
									"nodeType": "VariableDeclaration",
									"scope": 2877,
									"src": "1587:21:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2209,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "1587:6:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "735de9f7",
									"id": 2213,
									"mutability": "mutable",
									"name": "uniswapRouter",
									"nameLocation": "1639:13:17",
									"nodeType": "VariableDeclaration",
									"scope": 2877,
									"src": "1613:39:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$2123",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 2212,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2211,
											"name": "IUniswapV2Router02",
											"nameLocations": [
												"1613:18:17"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2123,
											"src": "1613:18:17"
										},
										"referencedDeclaration": 2123,
										"src": "1613:18:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$2123",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7dc0d1d0",
									"id": 2216,
									"mutability": "mutable",
									"name": "oracle",
									"nameLocation": "1688:6:17",
									"nodeType": "VariableDeclaration",
									"scope": 2877,
									"src": "1657:37:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV2V3Interface_$75",
										"typeString": "contract AggregatorV2V3Interface"
									},
									"typeName": {
										"id": 2215,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2214,
											"name": "AggregatorV2V3Interface",
											"nameLocations": [
												"1657:23:17"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 75,
											"src": "1657:23:17"
										},
										"referencedDeclaration": 75,
										"src": "1657:23:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV2V3Interface_$75",
											"typeString": "contract AggregatorV2V3Interface"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "affed0e0",
									"id": 2218,
									"mutability": "mutable",
									"name": "nonce",
									"nameLocation": "1714:5:17",
									"nodeType": "VariableDeclaration",
									"scope": 2877,
									"src": "1699:20:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2217,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1699:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2220,
									"mutability": "mutable",
									"name": "keyHash",
									"nameLocation": "1743:7:17",
									"nodeType": "VariableDeclaration",
									"scope": 2877,
									"src": "1726:24:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2219,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1726:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2222,
									"mutability": "mutable",
									"name": "fee",
									"nameLocation": "1772:3:17",
									"nodeType": "VariableDeclaration",
									"scope": 2877,
									"src": "1755:20:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2221,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1755:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2290,
										"nodeType": "Block",
										"src": "2060:407:17",
										"statements": [
											{
												"expression": {
													"id": 2248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2244,
														"name": "usdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2202,
														"src": "2067:4:17",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$1022",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2246,
																"name": "_usdt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "2080:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2245,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "2074:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20_$1022_$",
																"typeString": "type(contract ERC20)"
															}
														},
														"id": 2247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2074:12:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$1022",
															"typeString": "contract ERC20"
														}
													},
													"src": "2067:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$1022",
														"typeString": "contract ERC20"
													}
												},
												"id": 2249,
												"nodeType": "ExpressionStatement",
												"src": "2067:19:17"
											},
											{
												"expression": {
													"id": 2254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2250,
														"name": "uniswapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "2093:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$2123",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2252,
																"name": "_uniswapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2226,
																"src": "2128:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2251,
															"name": "IUniswapV2Router02",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2123,
															"src": "2109:18:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$2123_$",
																"typeString": "type(contract IUniswapV2Router02)"
															}
														},
														"id": 2253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2109:34:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$2123",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "2093:50:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$2123",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 2255,
												"nodeType": "ExpressionStatement",
												"src": "2093:50:17"
											},
											{
												"expression": {
													"id": 2260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2256,
														"name": "oracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2216,
														"src": "2150:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV2V3Interface_$75",
															"typeString": "contract AggregatorV2V3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2258,
																"name": "_oracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2228,
																"src": "2183:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2257,
															"name": "AggregatorV2V3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "2159:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV2V3Interface_$75_$",
																"typeString": "type(contract AggregatorV2V3Interface)"
															}
														},
														"id": 2259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2159:32:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV2V3Interface_$75",
															"typeString": "contract AggregatorV2V3Interface"
														}
													},
													"src": "2150:41:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV2V3Interface_$75",
														"typeString": "contract AggregatorV2V3Interface"
													}
												},
												"id": 2261,
												"nodeType": "ExpressionStatement",
												"src": "2150:41:17"
											},
											{
												"expression": {
													"id": 2264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2262,
														"name": "nonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2218,
														"src": "2198:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 2263,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2206:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2198:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2265,
												"nodeType": "ExpressionStatement",
												"src": "2198:9:17"
											},
											{
												"expression": {
													"id": 2268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2266,
														"name": "keyHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2220,
														"src": "2214:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2267,
														"name": "_keyHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2236,
														"src": "2224:8:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2214:18:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2269,
												"nodeType": "ExpressionStatement",
												"src": "2214:18:17"
											},
											{
												"expression": {
													"id": 2272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2270,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2222,
														"src": "2239:3:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2271,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2238,
														"src": "2245:4:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2239:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2273,
												"nodeType": "ExpressionStatement",
												"src": "2239:10:17"
											},
											{
												"expression": {
													"id": 2278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2274,
														"name": "link",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2205,
														"src": "2258:4:17",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_LinkTokenInterface_$312",
															"typeString": "contract LinkTokenInterface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2276,
																"name": "_link",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "2284:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2275,
															"name": "LinkTokenInterface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "2265:18:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LinkTokenInterface_$312_$",
																"typeString": "type(contract LinkTokenInterface)"
															}
														},
														"id": 2277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2265:25:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_LinkTokenInterface_$312",
															"typeString": "contract LinkTokenInterface"
														}
													},
													"src": "2258:32:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_LinkTokenInterface_$312",
														"typeString": "contract LinkTokenInterface"
													}
												},
												"id": 2279,
												"nodeType": "ExpressionStatement",
												"src": "2258:32:17"
											},
											{
												"expression": {
													"id": 2284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2280,
														"name": "coordinator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2208,
														"src": "2297:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$217",
															"typeString": "contract VRFCoordinatorV2Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2282,
																"name": "_vrfCoordinator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2230,
																"src": "2337:15:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2281,
															"name": "VRFCoordinatorV2Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "2311:25:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_VRFCoordinatorV2Interface_$217_$",
																"typeString": "type(contract VRFCoordinatorV2Interface)"
															}
														},
														"id": 2283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2311:42:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$217",
															"typeString": "contract VRFCoordinatorV2Interface"
														}
													},
													"src": "2297:56:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$217",
														"typeString": "contract VRFCoordinatorV2Interface"
													}
												},
												"id": 2285,
												"nodeType": "ExpressionStatement",
												"src": "2297:56:17"
											},
											{
												"expression": {
													"id": 2288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2286,
														"name": "subscriptionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2210,
														"src": "2360:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2287,
														"name": "_subscriptionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2232,
														"src": "2377:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "2360:32:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 2289,
												"nodeType": "ExpressionStatement",
												"src": "2360:32:17"
											}
										]
									},
									"id": 2291,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2241,
													"name": "_vrfCoordinator",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2230,
													"src": "2043:15:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2242,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2240,
												"name": "VRFConsumerBaseV2",
												"nameLocations": [
													"2025:17:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 370,
												"src": "2025:17:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "2025:34:17"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "_usdt",
												"nameLocation": "1812:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "1804:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1804:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "_uniswapRouter",
												"nameLocation": "1836:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "1828:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1828:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "_oracle",
												"nameLocation": "1869:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "1861:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "_vrfCoordinator",
												"nameLocation": "1895:15:17",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "1887:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "_subscriptionId",
												"nameLocation": "1928:15:17",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "1921:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2231,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1921:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "_link",
												"nameLocation": "1962:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "1954:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1954:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "_keyHash",
												"nameLocation": "1986:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "1978:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2235,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1978:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "2013:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "2005:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2005:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1793:231:17"
									},
									"returnParameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2060:0:17"
									},
									"scope": 2877,
									"src": "1782:685:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2307,
										"nodeType": "Block",
										"src": "2539:55:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2300,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2293,
															"src": "2568:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2303,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2582:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DollarCostAveraging_$2877",
																		"typeString": "contract DollarCostAveraging"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DollarCostAveraging_$2877",
																		"typeString": "contract DollarCostAveraging"
																	}
																],
																"id": 2302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2574:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2301,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2574:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 2304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2574:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2298,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2202,
															"src": "2553:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$1022",
																"typeString": "contract ERC20"
															}
														},
														"id": 2299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2558:9:17",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 649,
														"src": "2553:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 2305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2553:35:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2297,
												"id": 2306,
												"nodeType": "Return",
												"src": "2546:42:17"
											}
										]
									},
									"functionSelector": "eb5a662e",
									"id": 2308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllowance",
									"nameLocation": "2482:12:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2503:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2308,
												"src": "2495:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2495:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2494:14:17"
									},
									"returnParameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2308,
												"src": "2530:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2530:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2529:9:17"
									},
									"scope": 2877,
									"src": "2473:121:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2373,
										"nodeType": "Block",
										"src": "2662:489:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2316,
																		"name": "plans",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2187,
																		"src": "2677:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$2182_storage_$",
																			"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																		}
																	},
																	"id": 2319,
																	"indexExpression": {
																		"expression": {
																			"id": 2317,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2683:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2687:6:17",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2683:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2677:17:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Plan_$2182_storage",
																		"typeString": "struct DollarCostAveraging.Plan storage ref"
																	}
																},
																"id": 2320,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2695:5:17",
																"memberName": "index",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2171,
																"src": "2677:23:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2704:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2677:28:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c616e206973206578697374",
															"id": 2323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2707:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad",
																"typeString": "literal_string \"Plan is exist\""
															},
															"value": "Plan is exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad",
																"typeString": "literal_string \"Plan is exist\""
															}
														],
														"id": 2315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2669:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2669:54:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2325,
												"nodeType": "ExpressionStatement",
												"src": "2669:54:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2327,
																"name": "frequency",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2310,
																"src": "2738:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2750:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2738:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4672657175656e6379206d7573742062652067726561746572207468616e2030",
															"id": 2330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2753:34:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016",
																"typeString": "literal_string \"Frequency must be greater than 0\""
															},
															"value": "Frequency must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016",
																"typeString": "literal_string \"Frequency must be greater than 0\""
															}
														],
														"id": 2326,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2730:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2730:58:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2332,
												"nodeType": "ExpressionStatement",
												"src": "2730:58:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2334,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2312,
																"src": "2803:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2812:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2803:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 2337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2815:31:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 2333,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2795:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2795:52:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2339,
												"nodeType": "ExpressionStatement",
												"src": "2795:52:17"
											},
											{
												"expression": {
													"id": 2345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2340,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2191,
															"src": "2856:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2342,
														"indexExpression": {
															"id": 2341,
															"name": "nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2218,
															"src": "2862:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2856:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2343,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2871:3:17",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2875:6:17",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2871:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2856:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2346,
												"nodeType": "ExpressionStatement",
												"src": "2856:25:17"
											},
											{
												"expression": {
													"id": 2361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2347,
															"name": "plans",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2187,
															"src": "2894:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$2182_storage_$",
																"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
															}
														},
														"id": 2350,
														"indexExpression": {
															"expression": {
																"id": 2348,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2900:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2904:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2900:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2894:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Plan_$2182_storage",
															"typeString": "struct DollarCostAveraging.Plan storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "2935:7:17",
																"subExpression": {
																	"id": 2352,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2218,
																	"src": "2935:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2354,
																"name": "frequency",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2310,
																"src": "2962:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2355,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2312,
																"src": "2988:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 2356,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3012:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3018:9:17",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3012:15:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 2358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3043:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 2359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3061:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2351,
															"name": "Plan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2182,
															"src": "2914:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Plan_$2182_storage_ptr_$",
																"typeString": "type(struct DollarCostAveraging.Plan storage pointer)"
															}
														},
														"id": 2360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2928:5:17",
															"2951:9:17",
															"2980:6:17",
															"3003:7:17",
															"3036:5:17",
															"3053:6:17"
														],
														"names": [
															"index",
															"frequency",
															"amount",
															"startAt",
															"times",
															"status"
														],
														"nodeType": "FunctionCall",
														"src": "2914:156:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Plan_$2182_memory_ptr",
															"typeString": "struct DollarCostAveraging.Plan memory"
														}
													},
													"src": "2894:176:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Plan_$2182_storage",
														"typeString": "struct DollarCostAveraging.Plan storage ref"
													}
												},
												"id": 2362,
												"nodeType": "ExpressionStatement",
												"src": "2894:176:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2364,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3094:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3098:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3094:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2366,
															"name": "frequency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2310,
															"src": "3106:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2367,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2312,
															"src": "3117:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2363,
														"name": "PlanCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2145,
														"src": "3082:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3082:42:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2369,
												"nodeType": "EmitStatement",
												"src": "3077:47:17"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2370,
														"name": "startPlan",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2505,
														"src": "3134:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3134:11:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2372,
												"nodeType": "ExpressionStatement",
												"src": "3134:11:17"
											}
										]
									},
									"functionSelector": "b197df54",
									"id": 2374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createPlan",
									"nameLocation": "2609:10:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2310,
												"mutability": "mutable",
												"name": "frequency",
												"nameLocation": "2628:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2374,
												"src": "2620:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2620:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2647:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2374,
												"src": "2639:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2639:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2619:35:17"
									},
									"returnParameters": {
										"id": 2314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2662:0:17"
									},
									"scope": 2877,
									"src": "2600:551:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2429,
										"nodeType": "Block",
										"src": "3219:334:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2382,
																		"name": "plans",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2187,
																		"src": "3234:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$2182_storage_$",
																			"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																		}
																	},
																	"id": 2385,
																	"indexExpression": {
																		"expression": {
																			"id": 2383,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3240:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3244:6:17",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3240:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3234:17:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Plan_$2182_storage",
																		"typeString": "struct DollarCostAveraging.Plan storage ref"
																	}
																},
																"id": 2386,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3252:5:17",
																"memberName": "index",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2171,
																"src": "3234:23:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3260:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3234:27:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c616e206973206578697374",
															"id": 2389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3263:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad",
																"typeString": "literal_string \"Plan is exist\""
															},
															"value": "Plan is exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_218d7dc13db6a3b793f0629bd9b5cc851cf3c3d6f617002bd673a8de70b80fad",
																"typeString": "literal_string \"Plan is exist\""
															}
														],
														"id": 2381,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3226:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3226:53:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2391,
												"nodeType": "ExpressionStatement",
												"src": "3226:53:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2393,
																"name": "frequency",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2376,
																"src": "3294:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3306:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3294:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4672657175656e6379206d7573742062652067726561746572207468616e2030",
															"id": 2396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3309:34:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016",
																"typeString": "literal_string \"Frequency must be greater than 0\""
															},
															"value": "Frequency must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ff0f734aae9b7beb72cf187100d35cfbb50c53ff12570ee2e988e7f0977cc016",
																"typeString": "literal_string \"Frequency must be greater than 0\""
															}
														],
														"id": 2392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3286:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3286:58:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2398,
												"nodeType": "ExpressionStatement",
												"src": "3286:58:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2400,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2378,
																"src": "3359:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3368:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3359:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 2403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3371:31:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 2399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3351:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3351:52:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2405,
												"nodeType": "ExpressionStatement",
												"src": "3351:52:17"
											},
											{
												"expression": {
													"id": 2412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2406,
																"name": "plans",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2187,
																"src": "3412:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$2182_storage_$",
																	"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																}
															},
															"id": 2409,
															"indexExpression": {
																"expression": {
																	"id": 2407,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3418:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3422:6:17",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3418:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3412:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Plan_$2182_storage",
																"typeString": "struct DollarCostAveraging.Plan storage ref"
															}
														},
														"id": 2410,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3430:6:17",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2175,
														"src": "3412:24:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2411,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2378,
														"src": "3439:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3412:33:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2413,
												"nodeType": "ExpressionStatement",
												"src": "3412:33:17"
											},
											{
												"expression": {
													"id": 2420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2414,
																"name": "plans",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2187,
																"src": "3452:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$2182_storage_$",
																	"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																}
															},
															"id": 2417,
															"indexExpression": {
																"expression": {
																	"id": 2415,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3458:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3462:6:17",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3458:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3452:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Plan_$2182_storage",
																"typeString": "struct DollarCostAveraging.Plan storage ref"
															}
														},
														"id": 2418,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3470:9:17",
														"memberName": "frequency",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2173,
														"src": "3452:27:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2419,
														"name": "frequency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2376,
														"src": "3482:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3452:39:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2421,
												"nodeType": "ExpressionStatement",
												"src": "3452:39:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2423,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3517:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3521:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3517:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2425,
															"name": "frequency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2376,
															"src": "3529:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2426,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2378,
															"src": "3540:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2422,
														"name": "PlanUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2153,
														"src": "3505:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3505:42:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2428,
												"nodeType": "EmitStatement",
												"src": "3500:47:17"
											}
										]
									},
									"functionSelector": "00e1801c",
									"id": 2430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePlan",
									"nameLocation": "3166:10:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2376,
												"mutability": "mutable",
												"name": "frequency",
												"nameLocation": "3185:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "3177:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3177:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2378,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3204:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "3196:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:35:17"
									},
									"returnParameters": {
										"id": 2380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3219:0:17"
									},
									"scope": 2877,
									"src": "3157:396:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2504,
										"nodeType": "Block",
										"src": "3587:451:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2434,
																		"name": "plans",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2187,
																		"src": "3606:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$2182_storage_$",
																			"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																		}
																	},
																	"id": 2437,
																	"indexExpression": {
																		"expression": {
																			"id": 2435,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3612:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3616:6:17",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3612:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3606:17:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Plan_$2182_storage",
																		"typeString": "struct DollarCostAveraging.Plan storage ref"
																	}
																},
																"id": 2438,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3624:5:17",
																"memberName": "index",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2171,
																"src": "3606:23:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3632:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3606:27:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c616e206973206e6f74206578697374",
															"id": 2441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3635:19:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2",
																"typeString": "literal_string \"Plan is not exist\""
															},
															"value": "Plan is not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2",
																"typeString": "literal_string \"Plan is not exist\""
															}
														],
														"id": 2433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3598:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3598:57:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2443,
												"nodeType": "ExpressionStatement",
												"src": "3598:57:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2445,
																		"name": "plans",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2187,
																		"src": "3670:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$2182_storage_$",
																			"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																		}
																	},
																	"id": 2448,
																	"indexExpression": {
																		"expression": {
																			"id": 2446,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3676:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3680:6:17",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3676:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3670:17:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Plan_$2182_storage",
																		"typeString": "struct DollarCostAveraging.Plan storage ref"
																	}
																},
																"id": 2449,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3688:6:17",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2175,
																"src": "3670:24:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3697:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3670:28:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 2452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3700:31:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 2444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3662:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3662:70:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2454,
												"nodeType": "ExpressionStatement",
												"src": "3662:70:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2457,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3760:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3764:6:17",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3760:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2456,
																	"name": "getAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2308,
																	"src": "3747:12:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 2459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3747:24:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2460,
																		"name": "plans",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2187,
																		"src": "3774:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$2182_storage_$",
																			"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																		}
																	},
																	"id": 2463,
																	"indexExpression": {
																		"expression": {
																			"id": 2461,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3780:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3784:6:17",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3780:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3774:17:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Plan_$2182_storage",
																		"typeString": "struct DollarCostAveraging.Plan storage ref"
																	}
																},
																"id": 2464,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3792:6:17",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2175,
																"src": "3774:24:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3747:51:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f74616c206d7573742062652067726561746572207468616e20616d6f756e74",
															"id": 2466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3800:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa",
																"typeString": "literal_string \"Total must be greater than amount\""
															},
															"value": "Total must be greater than amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_79175f18b627474a5963c31cf22d283fc21780305d1204aa92b461f239db32aa",
																"typeString": "literal_string \"Total must be greater than amount\""
															}
														],
														"id": 2455,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3739:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3739:97:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2468,
												"nodeType": "ExpressionStatement",
												"src": "3739:97:17"
											},
											{
												"expression": {
													"id": 2476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2469,
																"name": "plans",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2187,
																"src": "3851:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$2182_storage_$",
																	"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																}
															},
															"id": 2472,
															"indexExpression": {
																"expression": {
																	"id": 2470,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3857:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3861:6:17",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3857:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3851:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Plan_$2182_storage",
																"typeString": "struct DollarCostAveraging.Plan storage ref"
															}
														},
														"id": 2473,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3869:7:17",
														"memberName": "startAt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2177,
														"src": "3851:25:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2474,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3879:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3885:9:17",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3879:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3851:43:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2477,
												"nodeType": "ExpressionStatement",
												"src": "3851:43:17"
											},
											{
												"expression": {
													"id": 2484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2478,
																"name": "plans",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2187,
																"src": "3901:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$2182_storage_$",
																	"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																}
															},
															"id": 2481,
															"indexExpression": {
																"expression": {
																	"id": 2479,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3907:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3911:6:17",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3907:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3901:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Plan_$2182_storage",
																"typeString": "struct DollarCostAveraging.Plan storage ref"
															}
														},
														"id": 2482,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3919:5:17",
														"memberName": "times",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2179,
														"src": "3901:23:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3927:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3901:27:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2485,
												"nodeType": "ExpressionStatement",
												"src": "3901:27:17"
											},
											{
												"expression": {
													"id": 2492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2486,
																"name": "plans",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2187,
																"src": "3935:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$2182_storage_$",
																	"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																}
															},
															"id": 2489,
															"indexExpression": {
																"expression": {
																	"id": 2487,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3941:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3945:6:17",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3941:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3935:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Plan_$2182_storage",
																"typeString": "struct DollarCostAveraging.Plan storage ref"
															}
														},
														"id": 2490,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3953:6:17",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2181,
														"src": "3935:24:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 2491,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3962:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3935:28:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2493,
												"nodeType": "ExpressionStatement",
												"src": "3935:28:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2495,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3987:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3991:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3987:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2494,
														"name": "PlanStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2161,
														"src": "3975:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:23:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2498,
												"nodeType": "EmitStatement",
												"src": "3970:28:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2500,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4021:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4025:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4021:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2499,
														"name": "requestRandom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2556,
														"src": "4007:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:25:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2503,
												"nodeType": "ExpressionStatement",
												"src": "4007:25:17"
											}
										]
									},
									"functionSelector": "a63661a5",
									"id": 2505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startPlan",
									"nameLocation": "3568:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3577:2:17"
									},
									"returnParameters": {
										"id": 2432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3587:0:17"
									},
									"scope": 2877,
									"src": "3559:479:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2532,
										"nodeType": "Block",
										"src": "4071:141:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2509,
																		"name": "plans",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2187,
																		"src": "4086:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$2182_storage_$",
																			"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																		}
																	},
																	"id": 2512,
																	"indexExpression": {
																		"expression": {
																			"id": 2510,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4092:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4096:6:17",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4092:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4086:17:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Plan_$2182_storage",
																		"typeString": "struct DollarCostAveraging.Plan storage ref"
																	}
																},
																"id": 2513,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4104:5:17",
																"memberName": "index",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2171,
																"src": "4086:23:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4112:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4086:27:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c616e206973206e6f74206578697374",
															"id": 2516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4115:19:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2",
																"typeString": "literal_string \"Plan is not exist\""
															},
															"value": "Plan is not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_90f36e88ee862026dd1fa2b2d97ac3b6235ca1bb28bdc480795dbd2e646467b2",
																"typeString": "literal_string \"Plan is not exist\""
															}
														],
														"id": 2508,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4078:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4078:57:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2518,
												"nodeType": "ExpressionStatement",
												"src": "4078:57:17"
											},
											{
												"expression": {
													"id": 2525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2519,
																"name": "plans",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2187,
																"src": "4144:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$2182_storage_$",
																	"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																}
															},
															"id": 2522,
															"indexExpression": {
																"expression": {
																	"id": 2520,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4150:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4154:6:17",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4150:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4144:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Plan_$2182_storage",
																"typeString": "struct DollarCostAveraging.Plan storage ref"
															}
														},
														"id": 2523,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4162:6:17",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2181,
														"src": "4144:24:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4171:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4144:28:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2526,
												"nodeType": "ExpressionStatement",
												"src": "4144:28:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2528,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4195:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4199:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4195:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2527,
														"name": "PlanStoped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2157,
														"src": "4184:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4184:22:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2531,
												"nodeType": "EmitStatement",
												"src": "4179:27:17"
											}
										]
									},
									"functionSelector": "d930da60",
									"id": 2533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stopPlan",
									"nameLocation": "4053:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:2:17"
									},
									"returnParameters": {
										"id": 2507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4071:0:17"
									},
									"scope": 2877,
									"src": "4044:168:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2555,
										"nodeType": "Block",
										"src": "4263:322:17",
										"statements": [
											{
												"assignments": [
													2539
												],
												"declarations": [
													{
														"constant": false,
														"id": 2539,
														"mutability": "mutable",
														"name": "requestId",
														"nameLocation": "4399:9:17",
														"nodeType": "VariableDeclaration",
														"scope": 2555,
														"src": "4391:17:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2538,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4391:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2548,
												"initialValue": {
													"arguments": [
														{
															"id": 2542,
															"name": "keyHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2220,
															"src": "4452:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2543,
															"name": "subscriptionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2210,
															"src": "4470:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"hexValue": "33",
															"id": 2544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4495:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														{
															"hexValue": "333530303030",
															"id": 2545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4507:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_350000_by_1",
																"typeString": "int_const 350000"
															},
															"value": "350000"
														},
														{
															"hexValue": "31",
															"id": 2546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4524:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															{
																"typeIdentifier": "t_rational_350000_by_1",
																"typeString": "int_const 350000"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"expression": {
															"id": 2540,
															"name": "coordinator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2208,
															"src": "4411:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$217",
																"typeString": "contract VRFCoordinatorV2Interface"
															}
														},
														"id": 2541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4423:18:17",
														"memberName": "requestRandomWords",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 150,
														"src": "4411:30:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$",
															"typeString": "function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"
														}
													},
													"id": 2547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4411:124:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4391:144:17"
											},
											{
												"expression": {
													"id": 2553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2549,
															"name": "userRandomRequestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2195,
															"src": "4542:19:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2551,
														"indexExpression": {
															"id": 2550,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2539,
															"src": "4562:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4542:30:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2552,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2535,
														"src": "4575:4:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4542:37:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2554,
												"nodeType": "ExpressionStatement",
												"src": "4542:37:17"
											}
										]
									},
									"id": 2556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requestRandom",
									"nameLocation": "4227:13:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4249:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "4241:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:17"
									},
									"returnParameters": {
										"id": 2537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4263:0:17"
									},
									"scope": 2877,
									"src": "4218:367:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2747,
										"nodeType": "Block",
										"src": "4633:1544:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2562,
																		"name": "plans",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2187,
																		"src": "4648:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$2182_storage_$",
																			"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																		}
																	},
																	"id": 2564,
																	"indexExpression": {
																		"id": 2563,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2558,
																		"src": "4654:4:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4648:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Plan_$2182_storage",
																		"typeString": "struct DollarCostAveraging.Plan storage ref"
																	}
																},
																"id": 2565,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4660:6:17",
																"memberName": "status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2181,
																"src": "4648:18:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 2566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4670:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "4648:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c616e206973206e6f7420616374697665",
															"id": 2568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4673:20:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c",
																"typeString": "literal_string \"Plan is not active\""
															},
															"value": "Plan is not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2e9384af0b0fa3fb458bb7ffc650e41b277d00ac5b234f0a8887cfcd16daaf5c",
																"typeString": "literal_string \"Plan is not active\""
															}
														],
														"id": 2561,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4640:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4640:54:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2570,
												"nodeType": "ExpressionStatement",
												"src": "4640:54:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2573,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2558,
																		"src": "4722:4:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2572,
																	"name": "getAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2308,
																	"src": "4709:12:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 2574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4709:18:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2575,
																		"name": "plans",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2187,
																		"src": "4730:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$2182_storage_$",
																			"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																		}
																	},
																	"id": 2577,
																	"indexExpression": {
																		"id": 2576,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2558,
																		"src": "4736:4:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4730:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Plan_$2182_storage",
																		"typeString": "struct DollarCostAveraging.Plan storage ref"
																	}
																},
																"id": 2578,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4742:6:17",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2175,
																"src": "4730:18:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4709:39:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742074726967676572206d6f7265207468616e2072656d61696e696e6720616d6f756e74",
															"id": 2580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4750:43:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24",
																"typeString": "literal_string \"Cannot trigger more than remaining amount\""
															},
															"value": "Cannot trigger more than remaining amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c1538448a13c777d918459f41426f95fc38d9e24dc02fff3cdae9e488ead1f24",
																"typeString": "literal_string \"Cannot trigger more than remaining amount\""
															}
														],
														"id": 2571,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4701:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4701:93:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2582,
												"nodeType": "ExpressionStatement",
												"src": "4701:93:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2584,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4809:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4815:9:17",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4809:15:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"baseExpression": {
																	"id": 2586,
																	"name": "nextTriggerTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2199,
																	"src": "4829:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2588,
																"indexExpression": {
																	"id": 2587,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2558,
																	"src": "4845:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4829:21:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4809:41:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742074726967676572206265666f7265206e65787420747269676765722074696d65",
															"id": 2590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4852:41:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f96280bb4f5b1f7479570483658bbfa7f265590669ee8baa295330b1374cab6c",
																"typeString": "literal_string \"Cannot trigger before next trigger time\""
															},
															"value": "Cannot trigger before next trigger time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f96280bb4f5b1f7479570483658bbfa7f265590669ee8baa295330b1374cab6c",
																"typeString": "literal_string \"Cannot trigger before next trigger time\""
															}
														],
														"id": 2583,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4801:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:93:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2592,
												"nodeType": "ExpressionStatement",
												"src": "4801:93:17"
											},
											{
												"assignments": [
													2594
												],
												"declarations": [
													{
														"constant": false,
														"id": 2594,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "4911:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 2747,
														"src": "4903:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2593,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4903:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2599,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 2595,
															"name": "plans",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2187,
															"src": "4920:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$2182_storage_$",
																"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
															}
														},
														"id": 2597,
														"indexExpression": {
															"id": 2596,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2558,
															"src": "4926:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4920:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Plan_$2182_storage",
															"typeString": "struct DollarCostAveraging.Plan storage ref"
														}
													},
													"id": 2598,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4932:6:17",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2175,
													"src": "4920:18:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4903:35:17"
											},
											{
												"assignments": [
													null,
													2601,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 2601,
														"mutability": "mutable",
														"name": "ethPrice",
														"nameLocation": "4957:8:17",
														"nodeType": "VariableDeclaration",
														"scope": 2747,
														"src": "4950:15:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2600,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "4950:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 2605,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2602,
															"name": "oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2216,
															"src": "4975:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV2V3Interface_$75",
																"typeString": "contract AggregatorV2V3Interface"
															}
														},
														"id": 2603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4982:15:17",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 120,
														"src": "4975:22:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 2604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4975:24:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4947:52:17"
											},
											{
												"assignments": [
													2607
												],
												"declarations": [
													{
														"constant": false,
														"id": 2607,
														"mutability": "mutable",
														"name": "ethPriceDecimals",
														"nameLocation": "5033:16:17",
														"nodeType": "VariableDeclaration",
														"scope": 2747,
														"src": "5025:24:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2606,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5025:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2611,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2608,
															"name": "oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2216,
															"src": "5052:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV2V3Interface_$75",
																"typeString": "contract AggregatorV2V3Interface"
															}
														},
														"id": 2609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5059:8:17",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 82,
														"src": "5052:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 2610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5052:17:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5025:44:17"
											},
											{
												"assignments": [
													2613
												],
												"declarations": [
													{
														"constant": false,
														"id": 2613,
														"mutability": "mutable",
														"name": "ethAmount",
														"nameLocation": "5086:9:17",
														"nodeType": "VariableDeclaration",
														"scope": 2747,
														"src": "5078:17:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5078:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2630,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2614,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2594,
																		"src": "5099:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31653138",
																		"id": 2615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5108:4:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	"src": "5099:13:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2617,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5098:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"arguments": [
																{
																	"id": 2620,
																	"name": "ethPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "5124:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5116:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2618,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5116:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 2621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5116:17:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5098:35:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 2623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5137:2:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3138",
																		"id": 2624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5144:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2625,
																		"name": "ethPriceDecimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2607,
																		"src": "5149:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5144:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2627,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5143:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5137:29:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5098:68:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5078:88:17"
											},
											{
												"assignments": [
													2632
												],
												"declarations": [
													{
														"constant": false,
														"id": 2632,
														"mutability": "mutable",
														"name": "slippage",
														"nameLocation": "5183:8:17",
														"nodeType": "VariableDeclaration",
														"scope": 2747,
														"src": "5175:16:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2631,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5175:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2639,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2633,
																	"name": "ethAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "5195:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 2634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5207:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "5195:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2636,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5194:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 2637,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5212:4:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "5194:22:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5175:41:17"
											},
											{
												"assignments": [
													2641
												],
												"declarations": [
													{
														"constant": false,
														"id": 2641,
														"mutability": "mutable",
														"name": "minEthAmount",
														"nameLocation": "5233:12:17",
														"nodeType": "VariableDeclaration",
														"scope": 2747,
														"src": "5225:20:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2640,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5225:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2645,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2642,
														"name": "ethAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2613,
														"src": "5248:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2643,
														"name": "slippage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2632,
														"src": "5260:8:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5248:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5225:43:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2649,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2202,
															"src": "5362:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$1022",
																"typeString": "contract ERC20"
															}
														},
														{
															"id": 2650,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2558,
															"src": "5368:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2653,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5382:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DollarCostAveraging_$2877",
																		"typeString": "contract DollarCostAveraging"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DollarCostAveraging_$2877",
																		"typeString": "contract DollarCostAveraging"
																	}
																],
																"id": 2652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5374:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2651,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5374:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 2654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5374:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2655,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2594,
															"src": "5389:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ERC20_$1022",
																"typeString": "contract ERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2646,
															"name": "SafeERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "5335:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeERC20_$1452_$",
																"typeString": "type(library SafeERC20)"
															}
														},
														"id": 2648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5345:16:17",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1239,
														"src": "5335:26:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1100_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 2656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5335:61:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2657,
												"nodeType": "ExpressionStatement",
												"src": "5335:61:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2661,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2202,
															"src": "5484:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$1022",
																"typeString": "contract ERC20"
															}
														},
														{
															"arguments": [
																{
																	"id": 2664,
																	"name": "uniswapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2213,
																	"src": "5498:13:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2123",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2123",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 2663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5490:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2662,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5490:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 2665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5490:22:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2666,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2594,
															"src": "5514:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ERC20_$1022",
																"typeString": "contract ERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2658,
															"name": "SafeERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "5452:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeERC20_$1452_$",
																"typeString": "type(library SafeERC20)"
															}
														},
														"id": 2660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5462:21:17",
														"memberName": "safeIncreaseAllowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1270,
														"src": "5452:31:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1100_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5452:69:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2668,
												"nodeType": "ExpressionStatement",
												"src": "5452:69:17"
											},
											{
												"assignments": [
													2673
												],
												"declarations": [
													{
														"constant": false,
														"id": 2673,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "5574:4:17",
														"nodeType": "VariableDeclaration",
														"scope": 2747,
														"src": "5557:21:17",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2671,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5557:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2672,
															"nodeType": "ArrayTypeName",
															"src": "5557:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2679,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 2677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5595:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 2676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "5581:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2674,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5585:7:17",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2675,
															"nodeType": "ArrayTypeName",
															"src": "5585:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 2678,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5581:16:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5557:40:17"
											},
											{
												"expression": {
													"id": 2687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2680,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2673,
															"src": "5604:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2682,
														"indexExpression": {
															"hexValue": "30",
															"id": 2681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5609:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5604:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2685,
																"name": "usdt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2202,
																"src": "5622:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ERC20_$1022",
																	"typeString": "contract ERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_ERC20_$1022",
																	"typeString": "contract ERC20"
																}
															],
															"id": 2684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5614:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2683,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5614:7:17",
																"typeDescriptions": {}
															}
														},
														"id": 2686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5614:13:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5604:23:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2688,
												"nodeType": "ExpressionStatement",
												"src": "5604:23:17"
											},
											{
												"expression": {
													"id": 2695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2689,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2673,
															"src": "5648:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2691,
														"indexExpression": {
															"hexValue": "31",
															"id": 2690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5653:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5648:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 2692,
																"name": "uniswapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2213,
																"src": "5658:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$2123",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 2693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5672:4:17",
															"memberName": "WETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1739,
															"src": "5658:18:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																"typeString": "function () pure external returns (address)"
															}
														},
														"id": 2694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5658:20:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5648:30:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2696,
												"nodeType": "ExpressionStatement",
												"src": "5648:30:17"
											},
											{
												"assignments": [
													2701
												],
												"declarations": [
													{
														"constant": false,
														"id": 2701,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "5751:7:17",
														"nodeType": "VariableDeclaration",
														"scope": 2747,
														"src": "5737:21:17",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2699,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "5737:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2700,
															"nodeType": "ArrayTypeName",
															"src": "5737:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2716,
												"initialValue": {
													"arguments": [
														{
															"id": 2704,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2594,
															"src": "5798:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2705,
															"name": "minEthAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2641,
															"src": "5806:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2706,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2673,
															"src": "5820:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 2709,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5834:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DollarCostAveraging_$2877",
																		"typeString": "contract DollarCostAveraging"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DollarCostAveraging_$2877",
																		"typeString": "contract DollarCostAveraging"
																	}
																],
																"id": 2708,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5826:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2707,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5826:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 2710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5826:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2711,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5841:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5847:9:17",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5841:15:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5859:7:17",
																"subdenomination": "hours",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "1"
															},
															"src": "5841:25:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2702,
															"name": "uniswapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2213,
															"src": "5762:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$2123",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"id": 2703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5776:21:17",
														"memberName": "swapExactTokensForETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1964,
														"src": "5762:35:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
														}
													},
													"id": 2715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5762:105:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5736:131:17"
											},
											{
												"assignments": [
													2718
												],
												"declarations": [
													{
														"constant": false,
														"id": 2718,
														"mutability": "mutable",
														"name": "ethReceived",
														"nameLocation": "5884:11:17",
														"nodeType": "VariableDeclaration",
														"scope": 2747,
														"src": "5876:19:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2717,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5876:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2722,
												"initialValue": {
													"baseExpression": {
														"id": 2719,
														"name": "amounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2701,
														"src": "5898:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 2721,
													"indexExpression": {
														"hexValue": "31",
														"id": 2720,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5906:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5898:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5876:32:17"
											},
											{
												"expression": {
													"id": 2727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "5949:19:17",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 2723,
																"name": "plans",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2187,
																"src": "5949:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$2182_storage_$",
																	"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																}
															},
															"id": 2725,
															"indexExpression": {
																"id": 2724,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2558,
																"src": "5955:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5949:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Plan_$2182_storage",
																"typeString": "struct DollarCostAveraging.Plan storage ref"
															}
														},
														"id": 2726,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5961:5:17",
														"memberName": "times",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2179,
														"src": "5949:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2728,
												"nodeType": "ExpressionStatement",
												"src": "5949:19:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2730,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2558,
															"src": "5996:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2731,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2594,
															"src": "6002:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2732,
															"name": "ethReceived",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2718,
															"src": "6010:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2729,
														"name": "PlanTriggered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2169,
														"src": "5982:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5982:40:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2734,
												"nodeType": "EmitStatement",
												"src": "5977:45:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2740,
															"name": "ethReceived",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2718,
															"src": "6086:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2737,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2558,
																	"src": "6071:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2736,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6063:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2735,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6063:8:17",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6063:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6077:8:17",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "6063:22:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6063:35:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2742,
												"nodeType": "ExpressionStatement",
												"src": "6063:35:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2744,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2558,
															"src": "6166:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2743,
														"name": "requestRandom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2556,
														"src": "6152:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6152:19:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2746,
												"nodeType": "ExpressionStatement",
												"src": "6152:19:17"
											}
										]
									},
									"functionSelector": "c440fa0f",
									"id": 2748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "triggerPlan",
									"nameLocation": "4600:11:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2558,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4620:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "4612:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4612:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4611:14:17"
									},
									"returnParameters": {
										"id": 2560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4633:0:17"
									},
									"scope": 2877,
									"src": "4591:1586:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										343
									],
									"body": {
										"id": 2792,
										"nodeType": "Block",
										"src": "6338:201:17",
										"statements": [
											{
												"assignments": [
													2758
												],
												"declarations": [
													{
														"constant": false,
														"id": 2758,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "6355:4:17",
														"nodeType": "VariableDeclaration",
														"scope": 2792,
														"src": "6347:12:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2757,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6347:7:17",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2762,
												"initialValue": {
													"baseExpression": {
														"id": 2759,
														"name": "userRandomRequestId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2195,
														"src": "6362:19:17",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2761,
													"indexExpression": {
														"id": 2760,
														"name": "_requestId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2750,
														"src": "6382:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6362:31:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6347:46:17"
											},
											{
												"expression": {
													"id": 2790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2763,
															"name": "nextTriggerTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2199,
															"src": "6402:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2765,
														"indexExpression": {
															"id": 2764,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2758,
															"src": "6418:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6402:21:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2766,
																		"name": "plans",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2187,
																		"src": "6426:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$2182_storage_$",
																			"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																		}
																	},
																	"id": 2768,
																	"indexExpression": {
																		"id": 2767,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2758,
																		"src": "6432:4:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6426:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Plan_$2182_storage",
																		"typeString": "struct DollarCostAveraging.Plan storage ref"
																	}
																},
																"id": 2769,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6438:7:17",
																"memberName": "startAt",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2177,
																"src": "6426:19:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2770,
																			"name": "plans",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2187,
																			"src": "6448:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$2182_storage_$",
																				"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																			}
																		},
																		"id": 2772,
																		"indexExpression": {
																			"id": 2771,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2758,
																			"src": "6454:4:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6448:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Plan_$2182_storage",
																			"typeString": "struct DollarCostAveraging.Plan storage ref"
																		}
																	},
																	"id": 2773,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6460:5:17",
																	"memberName": "times",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2179,
																	"src": "6448:17:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2774,
																			"name": "plans",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2187,
																			"src": "6468:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$2182_storage_$",
																				"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																			}
																		},
																		"id": 2776,
																		"indexExpression": {
																			"id": 2775,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2758,
																			"src": "6474:4:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6468:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Plan_$2182_storage",
																			"typeString": "struct DollarCostAveraging.Plan storage ref"
																		}
																	},
																	"id": 2777,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6480:9:17",
																	"memberName": "frequency",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2173,
																	"src": "6468:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6448:41:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6426:63:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2780,
																			"name": "_randomWords",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2753,
																			"src": "6493:12:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 2782,
																		"indexExpression": {
																			"hexValue": "30",
																			"id": 2781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6506:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6493:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2783,
																				"name": "plans",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2187,
																				"src": "6511:5:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Plan_$2182_storage_$",
																					"typeString": "mapping(address => struct DollarCostAveraging.Plan storage ref)"
																				}
																			},
																			"id": 2785,
																			"indexExpression": {
																				"id": 2784,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2758,
																				"src": "6517:4:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6511:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Plan_$2182_storage",
																				"typeString": "struct DollarCostAveraging.Plan storage ref"
																			}
																		},
																		"id": 2786,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6523:9:17",
																		"memberName": "frequency",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2173,
																		"src": "6511:21:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6493:39:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2788,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6492:41:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6426:107:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:131:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2791,
												"nodeType": "ExpressionStatement",
												"src": "6402:131:17"
											}
										]
									},
									"id": 2793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fulfillRandomWords",
									"nameLocation": "6250:18:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2755,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6329:8:17"
									},
									"parameters": {
										"id": 2754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2750,
												"mutability": "mutable",
												"name": "_requestId",
												"nameLocation": "6277:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 2793,
												"src": "6269:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6269:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2753,
												"mutability": "mutable",
												"name": "_randomWords",
												"nameLocation": "6306:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2793,
												"src": "6289:29:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2751,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6289:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2752,
													"nodeType": "ArrayTypeName",
													"src": "6289:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6268:51:17"
									},
									"returnParameters": {
										"id": 2756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6338:0:17"
									},
									"scope": 2877,
									"src": "6241:298:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										11
									],
									"body": {
										"id": 2850,
										"nodeType": "Block",
										"src": "6734:308:17",
										"statements": [
											{
												"assignments": [
													2804
												],
												"declarations": [
													{
														"constant": false,
														"id": 2804,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "6751:4:17",
														"nodeType": "VariableDeclaration",
														"scope": 2850,
														"src": "6743:12:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2803,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6743:7:17",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2816,
												"initialValue": {
													"baseExpression": {
														"id": 2805,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2191,
														"src": "6758:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2815,
													"indexExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2806,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "6764:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6770:6:17",
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "6764:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2808,
																			"name": "nonce",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2218,
																			"src": "6780:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6788:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "6780:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2811,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6779:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6764:26:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6793:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "6764:30:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6758:37:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6743:52:17"
											},
											{
												"expression": {
													"id": 2819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2817,
														"name": "upkeepNeeded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2799,
														"src": "6804:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6819:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6804:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2820,
												"nodeType": "ExpressionStatement",
												"src": "6804:20:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2826,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2821,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6836:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6842:9:17",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6836:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"baseExpression": {
																"id": 2823,
																"name": "nextTriggerTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2199,
																"src": "6854:15:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2825,
															"indexExpression": {
																"id": 2824,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2804,
																"src": "6870:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6854:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6836:39:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 2827,
																"name": "nextTriggerTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2199,
																"src": "6879:15:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2829,
															"indexExpression": {
																"id": 2828,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2804,
																"src": "6895:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6879:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6903:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6879:25:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6836:68:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2838,
												"nodeType": "IfStatement",
												"src": "6833:112:17",
												"trueBody": {
													"id": 2837,
													"nodeType": "Block",
													"src": "6905:40:17",
													"statements": [
														{
															"expression": {
																"id": 2835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2833,
																	"name": "upkeepNeeded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2799,
																	"src": "6916:12:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 2834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6931:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6916:19:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2836,
															"nodeType": "ExpressionStatement",
															"src": "6916:19:17"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2839,
														"name": "performData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2801,
														"src": "6961:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2842,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2804,
																"src": "6986:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 2840,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "6975:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 2841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6979:6:17",
															"memberName": "encode",
															"nodeType": "MemberAccess",
															"src": "6975:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																"typeString": "function () pure returns (bytes memory)"
															}
														},
														"id": 2843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6975:16:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "6961:30:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 2845,
												"nodeType": "ExpressionStatement",
												"src": "6961:30:17"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2846,
															"name": "upkeepNeeded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2799,
															"src": "7008:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2847,
															"name": "performData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2801,
															"src": "7022:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"id": 2848,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7007:27:17",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"functionReturnParameters": 2802,
												"id": 2849,
												"nodeType": "Return",
												"src": "7000:34:17"
											}
										]
									},
									"functionSelector": "6e04ff0d",
									"id": 2851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkUpkeep",
									"nameLocation": "6556:11:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2797,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6657:8:17"
									},
									"parameters": {
										"id": 2796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "6578:14:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2794,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6578:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6567:48:17"
									},
									"returnParameters": {
										"id": 2802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2799,
												"mutability": "mutable",
												"name": "upkeepNeeded",
												"nameLocation": "6689:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "6684:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2798,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6684:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2801,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "6716:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "6703:24:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2800,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6703:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6683:45:17"
									},
									"scope": 2877,
									"src": "6547:495:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										17
									],
									"body": {
										"id": 2871,
										"nodeType": "Block",
										"src": "7119:135:17",
										"statements": [
											{
												"assignments": [
													2858
												],
												"declarations": [
													{
														"constant": false,
														"id": 2858,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "7139:4:17",
														"nodeType": "VariableDeclaration",
														"scope": 2871,
														"src": "7131:12:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2857,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7131:7:17",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2866,
												"initialValue": {
													"arguments": [
														{
															"id": 2861,
															"name": "performData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2853,
															"src": "7172:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"components": [
																{
																	"id": 2863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7199:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2862,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7199:7:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 2864,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7198:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															}
														],
														"expression": {
															"id": 2859,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "7147:3:17",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 2860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7151:6:17",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "7147:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 2865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7147:71:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7130:88:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2868,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2858,
															"src": "7241:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2867,
														"name": "triggerPlan",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2748,
														"src": "7229:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7229:17:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2870,
												"nodeType": "ExpressionStatement",
												"src": "7229:17:17"
											}
										]
									},
									"functionSelector": "4585e33b",
									"id": 2872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "performUpkeep",
									"nameLocation": "7059:13:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2855,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7110:8:17"
									},
									"parameters": {
										"id": 2854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2853,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "7088:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "7073:26:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2852,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7073:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7072:28:17"
									},
									"returnParameters": {
										"id": 2856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7119:0:17"
									},
									"scope": 2877,
									"src": "7050:204:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2875,
										"nodeType": "Block",
										"src": "7287:2:17",
										"statements": []
									},
									"id": 2876,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7267:2:17"
									},
									"returnParameters": {
										"id": 2874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7287:0:17"
									},
									"scope": 2877,
									"src": "7260:29:17",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2878,
							"src": "645:6647:17",
							"usedErrors": [
								321,
								1179,
								1460,
								1465,
								1468
							],
							"usedEvents": [
								2145,
								2153,
								2157,
								2161,
								2169
							]
						}
					],
					"src": "0:7292:17"
				},
				"id": 17
			}
		}
	}
}